
benchspec/CPU/557.xz_r/exe/xz_r_base.RapModTest-llvm-m64:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 c9 1f 03 00 	mov    0x31fc9(%rip),%rax        # 33fd8 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <free@plt-0x10>:
    2020:	ff 35 e2 1f 03 00    	push   0x31fe2(%rip)        # 34008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 e4 1f 03 00    	jmp    *0x31fe4(%rip)        # 34010 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <free@plt>:
    2030:	ff 25 e2 1f 03 00    	jmp    *0x31fe2(%rip)        # 34018 <free@GLIBC_2.2.5>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <putchar@plt>:
    2040:	ff 25 da 1f 03 00    	jmp    *0x31fda(%rip)        # 34020 <putchar@GLIBC_2.2.5>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <__errno_location@plt>:
    2050:	ff 25 d2 1f 03 00    	jmp    *0x31fd2(%rip)        # 34028 <__errno_location@GLIBC_2.2.5>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <puts@plt>:
    2060:	ff 25 ca 1f 03 00    	jmp    *0x31fca(%rip)        # 34030 <puts@GLIBC_2.2.5>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <vsnprintf@plt>:
    2070:	ff 25 c2 1f 03 00    	jmp    *0x31fc2(%rip)        # 34038 <vsnprintf@GLIBC_2.2.5>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <strlen@plt>:
    2080:	ff 25 ba 1f 03 00    	jmp    *0x31fba(%rip)        # 34040 <strlen@GLIBC_2.2.5>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <strchr@plt>:
    2090:	ff 25 b2 1f 03 00    	jmp    *0x31fb2(%rip)        # 34048 <strchr@GLIBC_2.2.5>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <printf@plt>:
    20a0:	ff 25 aa 1f 03 00    	jmp    *0x31faa(%rip)        # 34050 <printf@GLIBC_2.2.5>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <snprintf@plt>:
    20b0:	ff 25 a2 1f 03 00    	jmp    *0x31fa2(%rip)        # 34058 <snprintf@GLIBC_2.2.5>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <memset@plt>:
    20c0:	ff 25 9a 1f 03 00    	jmp    *0x31f9a(%rip)        # 34060 <memset@GLIBC_2.2.5>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <close@plt>:
    20d0:	ff 25 92 1f 03 00    	jmp    *0x31f92(%rip)        # 34068 <close@GLIBC_2.2.5>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <fputc@plt>:
    20e0:	ff 25 8a 1f 03 00    	jmp    *0x31f8a(%rip)        # 34070 <fputc@GLIBC_2.2.5>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <read@plt>:
    20f0:	ff 25 82 1f 03 00    	jmp    *0x31f82(%rip)        # 34078 <read@GLIBC_2.2.5>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <calloc@plt>:
    2100:	ff 25 7a 1f 03 00    	jmp    *0x31f7a(%rip)        # 34080 <calloc@GLIBC_2.2.5>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <strcmp@plt>:
    2110:	ff 25 72 1f 03 00    	jmp    *0x31f72(%rip)        # 34088 <strcmp@GLIBC_2.2.5>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <putc@plt>:
    2120:	ff 25 6a 1f 03 00    	jmp    *0x31f6a(%rip)        # 34090 <putc@GLIBC_2.2.5>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <fprintf@plt>:
    2130:	ff 25 62 1f 03 00    	jmp    *0x31f62(%rip)        # 34098 <fprintf@GLIBC_2.2.5>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <strtol@plt>:
    2140:	ff 25 5a 1f 03 00    	jmp    *0x31f5a(%rip)        # 340a0 <strtol@GLIBC_2.2.5>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <memcpy@plt>:
    2150:	ff 25 52 1f 03 00    	jmp    *0x31f52(%rip)        # 340a8 <memcpy@GLIBC_2.14>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <malloc@plt>:
    2160:	ff 25 4a 1f 03 00    	jmp    *0x31f4a(%rip)        # 340b0 <malloc@GLIBC_2.2.5>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <fflush@plt>:
    2170:	ff 25 42 1f 03 00    	jmp    *0x31f42(%rip)        # 340b8 <fflush@GLIBC_2.2.5>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <bcmp@plt>:
    2180:	ff 25 3a 1f 03 00    	jmp    *0x31f3a(%rip)        # 340c0 <bcmp@GLIBC_2.2.5>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <realloc@plt>:
    2190:	ff 25 32 1f 03 00    	jmp    *0x31f32(%rip)        # 340c8 <realloc@GLIBC_2.2.5>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <memmove@plt>:
    21a0:	ff 25 2a 1f 03 00    	jmp    *0x31f2a(%rip)        # 340d0 <memmove@GLIBC_2.2.5>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <open@plt>:
    21b0:	ff 25 22 1f 03 00    	jmp    *0x31f22(%rip)        # 340d8 <open@GLIBC_2.2.5>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <exit@plt>:
    21c0:	ff 25 1a 1f 03 00    	jmp    *0x31f1a(%rip)        # 340e0 <exit@GLIBC_2.2.5>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <fwrite@plt>:
    21d0:	ff 25 12 1f 03 00    	jmp    *0x31f12(%rip)        # 340e8 <fwrite@GLIBC_2.2.5>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <strerror@plt>:
    21e0:	ff 25 0a 1f 03 00    	jmp    *0x31f0a(%rip)        # 340f0 <strerror@GLIBC_2.2.5>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <__ctype_tolower_loc@plt>:
    21f0:	ff 25 02 1f 03 00    	jmp    *0x31f02(%rip)        # 340f8 <__ctype_tolower_loc@GLIBC_2.3>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002200 <__cxa_finalize@plt>:
    2200:	ff 25 ea 1d 03 00    	jmp    *0x31dea(%rip)        # 33ff0 <__cxa_finalize@GLIBC_2.2.5>
    2206:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002210 <_start>:
    2210:	f3 0f 1e fa          	endbr64 
    2214:	31 ed                	xor    %ebp,%ebp
    2216:	49 89 d1             	mov    %rdx,%r9
    2219:	5e                   	pop    %rsi
    221a:	48 89 e2             	mov    %rsp,%rdx
    221d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2221:	50                   	push   %rax
    2222:	54                   	push   %rsp
    2223:	45 31 c0             	xor    %r8d,%r8d
    2226:	31 c9                	xor    %ecx,%ecx
    2228:	48 8d 3d d1 00 00 00 	lea    0xd1(%rip),%rdi        # 2300 <main>
    222f:	ff 15 8b 1d 03 00    	call   *0x31d8b(%rip)        # 33fc0 <__libc_start_main@GLIBC_2.34>
    2235:	f4                   	hlt    
    2236:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223d:	00 00 00 

0000000000002240 <deregister_tm_clones>:
    2240:	48 8d 3d e9 1e 03 00 	lea    0x31ee9(%rip),%rdi        # 34130 <__TMC_END__>
    2247:	48 8d 05 e2 1e 03 00 	lea    0x31ee2(%rip),%rax        # 34130 <__TMC_END__>
    224e:	48 39 f8             	cmp    %rdi,%rax
    2251:	74 15                	je     2268 <deregister_tm_clones+0x28>
    2253:	48 8b 05 6e 1d 03 00 	mov    0x31d6e(%rip),%rax        # 33fc8 <_ITM_deregisterTMCloneTable@Base>
    225a:	48 85 c0             	test   %rax,%rax
    225d:	74 09                	je     2268 <deregister_tm_clones+0x28>
    225f:	ff e0                	jmp    *%rax
    2261:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2268:	c3                   	ret    
    2269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002270 <register_tm_clones>:
    2270:	48 8d 3d b9 1e 03 00 	lea    0x31eb9(%rip),%rdi        # 34130 <__TMC_END__>
    2277:	48 8d 35 b2 1e 03 00 	lea    0x31eb2(%rip),%rsi        # 34130 <__TMC_END__>
    227e:	48 29 fe             	sub    %rdi,%rsi
    2281:	48 89 f0             	mov    %rsi,%rax
    2284:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2288:	48 c1 f8 03          	sar    $0x3,%rax
    228c:	48 01 c6             	add    %rax,%rsi
    228f:	48 d1 fe             	sar    %rsi
    2292:	74 14                	je     22a8 <register_tm_clones+0x38>
    2294:	48 8b 05 4d 1d 03 00 	mov    0x31d4d(%rip),%rax        # 33fe8 <_ITM_registerTMCloneTable@Base>
    229b:	48 85 c0             	test   %rax,%rax
    229e:	74 08                	je     22a8 <register_tm_clones+0x38>
    22a0:	ff e0                	jmp    *%rax
    22a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    22a8:	c3                   	ret    
    22a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000022b0 <__do_global_dtors_aux>:
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	80 3d 75 1e 03 00 00 	cmpb   $0x0,0x31e75(%rip)        # 34130 <__TMC_END__>
    22bb:	75 2b                	jne    22e8 <__do_global_dtors_aux+0x38>
    22bd:	55                   	push   %rbp
    22be:	48 83 3d 2a 1d 03 00 	cmpq   $0x0,0x31d2a(%rip)        # 33ff0 <__cxa_finalize@GLIBC_2.2.5>
    22c5:	00 
    22c6:	48 89 e5             	mov    %rsp,%rbp
    22c9:	74 0c                	je     22d7 <__do_global_dtors_aux+0x27>
    22cb:	48 8b 3d 36 1e 03 00 	mov    0x31e36(%rip),%rdi        # 34108 <__dso_handle>
    22d2:	e8 29 ff ff ff       	call   2200 <__cxa_finalize@plt>
    22d7:	e8 64 ff ff ff       	call   2240 <deregister_tm_clones>
    22dc:	c6 05 4d 1e 03 00 01 	movb   $0x1,0x31e4d(%rip)        # 34130 <__TMC_END__>
    22e3:	5d                   	pop    %rbp
    22e4:	c3                   	ret    
    22e5:	0f 1f 00             	nopl   (%rax)
    22e8:	c3                   	ret    
    22e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000022f0 <frame_dummy>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	e9 77 ff ff ff       	jmp    2270 <register_tm_clones>
    22f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002300 <main>:
    2300:	55                   	push   %rbp
    2301:	41 57                	push   %r15
    2303:	41 56                	push   %r14
    2305:	41 55                	push   %r13
    2307:	41 54                	push   %r12
    2309:	53                   	push   %rbx
    230a:	48 83 ec 38          	sub    $0x38,%rsp
    230e:	49 89 f5             	mov    %rsi,%r13
    2311:	41 89 fe             	mov    %edi,%r14d
    2314:	bf 40 00 00 00       	mov    $0x40,%edi
    2319:	e8 42 fe ff ff       	call   2160 <malloc@plt>
    231e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2323:	48 85 c0             	test   %rax,%rax
    2326:	0f 84 bd 04 00 00    	je     27e9 <main+0x4e9>
    232c:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
    2333:	31 db                	xor    %ebx,%ebx
    2335:	41 83 fe 02          	cmp    $0x2,%r14d
    2339:	0f 8c ad 00 00 00    	jl     23ec <main+0xec>
    233f:	49 8b 6d 08          	mov    0x8(%r13),%rbp
    2343:	31 db                	xor    %ebx,%ebx
    2345:	41 83 fe 02          	cmp    $0x2,%r14d
    2349:	0f 84 9f 00 00 00    	je     23ee <main+0xee>
    234f:	49 8b 7d 10          	mov    0x10(%r13),%rdi
    2353:	31 db                	xor    %ebx,%ebx
    2355:	31 f6                	xor    %esi,%esi
    2357:	ba 0a 00 00 00       	mov    $0xa,%edx
    235c:	e8 df fd ff ff       	call   2140 <strtol@plt>
    2361:	49 89 c4             	mov    %rax,%r12
    2364:	41 83 fe 04          	cmp    $0x4,%r14d
    2368:	0f 82 83 00 00 00    	jb     23f1 <main+0xf1>
    236e:	49 8b 5d 18          	mov    0x18(%r13),%rbx
    2372:	48 89 df             	mov    %rbx,%rdi
    2375:	e8 06 fd ff ff       	call   2080 <strlen@plt>
    237a:	48 b9 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rcx
    2381:	ff ff 3f 
    2384:	48 21 c1             	and    %rax,%rcx
    2387:	48 81 f9 80 00 00 00 	cmp    $0x80,%rcx
    238e:	0f 85 9c 04 00 00    	jne    2830 <main+0x530>
    2394:	48 89 df             	mov    %rbx,%rdi
    2397:	be 00 02 00 00       	mov    $0x200,%esi
    239c:	e8 3f fe 01 00       	call   221e0 <sum_str_to_hex>
    23a1:	48 89 c3             	mov    %rax,%rbx
    23a4:	41 83 fe 04          	cmp    $0x4,%r14d
    23a8:	74 47                	je     23f1 <main+0xf1>
    23aa:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    23ae:	31 f6                	xor    %esi,%esi
    23b0:	ba 0a 00 00 00       	mov    $0xa,%edx
    23b5:	e8 86 fd ff ff       	call   2140 <strtol@plt>
    23ba:	49 89 c7             	mov    %rax,%r15
    23bd:	41 83 fe 06          	cmp    $0x6,%r14d
    23c1:	0f 82 67 03 00 00    	jb     272e <main+0x42e>
    23c7:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    23cb:	31 f6                	xor    %esi,%esi
    23cd:	ba 0a 00 00 00       	mov    $0xa,%edx
    23d2:	e8 69 fd ff ff       	call   2140 <strtol@plt>
    23d7:	48 85 c0             	test   %rax,%rax
    23da:	4c 89 f9             	mov    %r15,%rcx
    23dd:	48 0f 49 c8          	cmovns %rax,%rcx
    23e1:	41 83 fe 06          	cmp    $0x6,%r14d
    23e5:	7d 1b                	jge    2402 <main+0x102>
    23e7:	e9 4f 03 00 00       	jmp    273b <main+0x43b>
    23ec:	31 ed                	xor    %ebp,%ebp
    23ee:	45 31 e4             	xor    %r12d,%r12d
    23f1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    23f8:	41 83 fe 06          	cmp    $0x6,%r14d
    23fc:	0f 8c 39 03 00 00    	jl     273b <main+0x43b>
    2402:	48 85 ed             	test   %rbp,%rbp
    2405:	0f 84 30 03 00 00    	je     273b <main+0x43b>
    240b:	4d 85 e4             	test   %r12,%r12
    240e:	0f 8e 27 03 00 00    	jle    273b <main+0x43b>
    2414:	48 85 db             	test   %rbx,%rbx
    2417:	0f 84 1e 03 00 00    	je     273b <main+0x43b>
    241d:	4d 85 ff             	test   %r15,%r15
    2420:	0f 84 15 03 00 00    	je     273b <main+0x43b>
    2426:	48 85 c9             	test   %rcx,%rcx
    2429:	0f 84 0c 03 00 00    	je     273b <main+0x43b>
    242f:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    2434:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
    2439:	48 8d 3d bd 0c 02 00 	lea    0x20cbd(%rip),%rdi        # 230fd <_IO_stdin_used+0xfd>
    2440:	48 89 ee             	mov    %rbp,%rsi
    2443:	4c 89 e2             	mov    %r12,%rdx
    2446:	31 c0                	xor    %eax,%eax
    2448:	e8 53 fc ff ff       	call   20a0 <printf@plt>
    244d:	bf 03 00 00 00       	mov    $0x3,%edi
    2452:	e8 89 fe 01 00       	call   222e0 <spec_mem_alloc_fds>
    2457:	4c 8d 3d a2 61 03 00 	lea    0x361a2(%rip),%r15        # 38600 <spec_fd>
    245e:	49 89 07             	mov    %rax,(%r15)
    2461:	48 85 c0             	test   %rax,%rax
    2464:	0f 84 9c 03 00 00    	je     2806 <main+0x506>
    246a:	4c 89 24 24          	mov    %r12,(%rsp)
    246e:	4c 8b 24 24          	mov    (%rsp),%r12
    2472:	49 c1 e4 14          	shl    $0x14,%r12
    2476:	48 81 3c 24 fe 00 00 	cmpq   $0xfe,(%rsp)
    247d:	00 
    247e:	b9 00 00 e0 0f       	mov    $0xfe00000,%ecx
    2483:	49 0f 43 cc          	cmovae %r12,%rcx
    2487:	48 89 48 28          	mov    %rcx,0x28(%rax)
    248b:	48 89 08             	mov    %rcx,(%rax)
    248e:	49 8b 3f             	mov    (%r15),%rdi
    2491:	be 03 00 00 00       	mov    $0x3,%esi
    2496:	ba 01 00 00 00       	mov    $0x1,%edx
    249b:	e8 90 de 01 00       	call   20330 <spec_mem_init>
    24a0:	e8 2b fd 01 00       	call   221d0 <debug_time>
    24a5:	48 8d 3d df 0e 02 00 	lea    0x20edf(%rip),%rdi        # 2338b <_IO_stdin_used+0x38b>
    24ac:	e8 af fb ff ff       	call   2060 <puts@plt>
    24b1:	49 8b 3f             	mov    (%r15),%rdi
    24b4:	be 03 00 00 00       	mov    $0x3,%esi
    24b9:	31 d2                	xor    %edx,%edx
    24bb:	48 89 e9             	mov    %rbp,%rcx
    24be:	4d 89 e0             	mov    %r12,%r8
    24c1:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    24c7:	68 00 02 00 00       	push   $0x200
    24cc:	53                   	push   %rbx
    24cd:	e8 2e e1 01 00       	call   20600 <spec_mem_load>
    24d2:	48 83 c4 10          	add    $0x10,%rsp
    24d6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    24db:	49 8b 07             	mov    (%r15),%rax
    24de:	48 8b 70 08          	mov    0x8(%rax),%rsi
    24e2:	48 8d 3d 6a 0c 02 00 	lea    0x20c6a(%rip),%rdi        # 23153 <_IO_stdin_used+0x153>
    24e9:	31 c0                	xor    %eax,%eax
    24eb:	e8 b0 fb ff ff       	call   20a0 <printf@plt>
    24f0:	49 8b 07             	mov    (%r15),%rax
    24f3:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%rax)
    24fa:	c7 40 40 01 00 00 00 	movl   $0x1,0x40(%rax)
    2501:	c7 40 18 01 00 00 00 	movl   $0x1,0x18(%rax)
    2508:	31 c0                	xor    %eax,%eax
    250a:	e8 31 fc 01 00       	call   22140 <spec_initbufs>
    250f:	41 83 fe 07          	cmp    $0x7,%r14d
    2513:	0f 82 04 02 00 00    	jb     271d <main+0x41d>
    2519:	44 89 f0             	mov    %r14d,%eax
    251c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2521:	41 be 06 00 00 00    	mov    $0x6,%r14d
    2527:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    252c:	4b 8b 74 f5 00       	mov    0x0(%r13,%r14,8),%rsi
    2531:	0f b6 2e             	movzbl (%rsi),%ebp
    2534:	8d 45 c6             	lea    -0x3a(%rbp),%eax
    2537:	3c f5                	cmp    $0xf5,%al
    2539:	0f 86 02 02 00 00    	jbe    2741 <main+0x441>
    253f:	45 31 ed             	xor    %r13d,%r13d
    2542:	80 7e 01 65          	cmpb   $0x65,0x1(%rsi)
    2546:	41 0f 94 c5          	sete   %r13b
    254a:	48 8d 1d 1e 89 02 00 	lea    0x2891e(%rip),%rbx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
    2551:	48 8d 05 6b 0c 02 00 	lea    0x20c6b(%rip),%rax        # 231c3 <_IO_stdin_used+0x1c3>
    2558:	48 0f 44 d8          	cmove  %rax,%rbx
    255c:	41 c1 e5 1f          	shl    $0x1f,%r13d
    2560:	44 8d 65 d0          	lea    -0x30(%rbp),%r12d
    2564:	e8 67 fc 01 00       	call   221d0 <debug_time>
    2569:	48 8d 3d 2f 0c 02 00 	lea    0x20c2f(%rip),%rdi        # 2319f <_IO_stdin_used+0x19f>
    2570:	44 89 e6             	mov    %r12d,%esi
    2573:	48 89 da             	mov    %rbx,%rdx
    2576:	31 c0                	xor    %eax,%eax
    2578:	e8 23 fb ff ff       	call   20a0 <printf@plt>
    257d:	41 8d 54 2d d0       	lea    -0x30(%r13,%rbp,1),%edx
    2582:	31 ff                	xor    %edi,%edi
    2584:	be 01 00 00 00       	mov    $0x1,%esi
    2589:	e8 c2 fb 01 00       	call   22150 <spec_compress>
    258e:	e8 3d fc 01 00       	call   221d0 <debug_time>
    2593:	48 8b 05 5e 1a 03 00 	mov    0x31a5e(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
    259a:	48 8b 38             	mov    (%rax),%rdi
    259d:	49 8b 07             	mov    (%r15),%rax
    25a0:	48 8b 50 30          	mov    0x30(%rax),%rdx
    25a4:	48 8d 35 23 0c 02 00 	lea    0x20c23(%rip),%rsi        # 231ce <_IO_stdin_used+0x1ce>
    25ab:	31 c0                	xor    %eax,%eax
    25ad:	e8 7e fb ff ff       	call   2130 <fprintf@plt>
    25b2:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    25b7:	48 85 d2             	test   %rdx,%rdx
    25ba:	4c 8b 24 24          	mov    (%rsp),%r12
    25be:	7e 65                	jle    2625 <main+0x325>
    25c0:	49 8b 07             	mov    (%r15),%rax
    25c3:	48 8b 70 30          	mov    0x30(%rax),%rsi
    25c7:	48 39 d6             	cmp    %rdx,%rsi
    25ca:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    25cf:	7c 1f                	jl     25f0 <main+0x2f0>
    25d1:	48 39 c6             	cmp    %rax,%rsi
    25d4:	7f 1a                	jg     25f0 <main+0x2f0>
    25d6:	48 39 c2             	cmp    %rax,%rdx
    25d9:	75 36                	jne    2611 <main+0x311>
    25db:	48 8d 3d 11 0c 02 00 	lea    0x20c11(%rip),%rdi        # 231f3 <_IO_stdin_used+0x1f3>
    25e2:	48 89 d6             	mov    %rdx,%rsi
    25e5:	31 c0                	xor    %eax,%eax
    25e7:	e8 b4 fa ff ff       	call   20a0 <printf@plt>
    25ec:	eb 37                	jmp    2625 <main+0x325>
    25ee:	66 90                	xchg   %ax,%ax
    25f0:	48 39 c2             	cmp    %rax,%rdx
    25f3:	75 09                	jne    25fe <main+0x2fe>
    25f5:	48 8d 3d 5e 0c 02 00 	lea    0x20c5e(%rip),%rdi        # 2325a <_IO_stdin_used+0x25a>
    25fc:	eb 20                	jmp    261e <main+0x31e>
    25fe:	48 8d 3d a0 0c 02 00 	lea    0x20ca0(%rip),%rdi        # 232a5 <_IO_stdin_used+0x2a5>
    2605:	48 89 c1             	mov    %rax,%rcx
    2608:	31 c0                	xor    %eax,%eax
    260a:	e8 91 fa ff ff       	call   20a0 <printf@plt>
    260f:	eb 14                	jmp    2625 <main+0x325>
    2611:	48 8d 3d 0a 0c 02 00 	lea    0x20c0a(%rip),%rdi        # 23222 <_IO_stdin_used+0x222>
    2618:	48 89 d6             	mov    %rdx,%rsi
    261b:	48 89 c2             	mov    %rax,%rdx
    261e:	31 c0                	xor    %eax,%eax
    2620:	e8 7b fa ff ff       	call   20a0 <printf@plt>
    2625:	48 8d 3d 72 0d 02 00 	lea    0x20d72(%rip),%rdi        # 2339e <_IO_stdin_used+0x39e>
    262c:	e8 2f fa ff ff       	call   2060 <puts@plt>
    2631:	49 8b 3f             	mov    (%r15),%rdi
    2634:	be 03 00 00 00       	mov    $0x3,%esi
    2639:	31 d2                	xor    %edx,%edx
    263b:	e8 10 f1 01 00       	call   21750 <spec_mem_reset>
    2640:	49 8b 3f             	mov    (%r15),%rdi
    2643:	be 03 00 00 00       	mov    $0x3,%esi
    2648:	ba 01 00 00 00       	mov    $0x1,%edx
    264d:	e8 ae f0 01 00       	call   21700 <spec_mem_rewind>
    2652:	e8 79 fb 01 00       	call   221d0 <debug_time>
    2657:	48 8d 3d 5a 0d 02 00 	lea    0x20d5a(%rip),%rdi        # 233b8 <_IO_stdin_used+0x3b8>
    265e:	e8 fd f9 ff ff       	call   2060 <puts@plt>
    2663:	bf 01 00 00 00       	mov    $0x1,%edi
    2668:	31 f6                	xor    %esi,%esi
    266a:	e8 f1 e6 01 00       	call   20d60 <spec_uncompress>
    266f:	e8 5c fb 01 00       	call   221d0 <debug_time>
    2674:	49 8b 07             	mov    (%r15),%rax
    2677:	48 8b 70 08          	mov    0x8(%rax),%rsi
    267b:	48 8d 3d 75 0c 02 00 	lea    0x20c75(%rip),%rdi        # 232f7 <_IO_stdin_used+0x2f7>
    2682:	31 c0                	xor    %eax,%eax
    2684:	e8 17 fa ff ff       	call   20a0 <printf@plt>
    2689:	49 8b 3f             	mov    (%r15),%rdi
    268c:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    2691:	48 89 de             	mov    %rbx,%rsi
    2694:	ba 00 02 00 00       	mov    $0x200,%edx
    2699:	e8 a2 de 01 00       	call   20540 <spec_mem_sum>
    269e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    26a3:	48 89 de             	mov    %rbx,%rsi
    26a6:	ba 00 02 00 00       	mov    $0x200,%edx
    26ab:	e8 30 e7 01 00       	call   20de0 <compare_sum>
    26b0:	85 c0                	test   %eax,%eax
    26b2:	0f 85 bc 00 00 00    	jne    2774 <main+0x474>
    26b8:	e8 13 fb 01 00       	call   221d0 <debug_time>
    26bd:	48 8d 3d 1d 0d 02 00 	lea    0x20d1d(%rip),%rdi        # 233e1 <_IO_stdin_used+0x3e1>
    26c4:	e8 97 f9 ff ff       	call   2060 <puts@plt>
    26c9:	49 8b 3f             	mov    (%r15),%rdi
    26cc:	be 03 00 00 00       	mov    $0x3,%esi
    26d1:	ba 01 00 00 00       	mov    $0x1,%edx
    26d6:	e8 75 f0 01 00       	call   21750 <spec_mem_reset>
    26db:	49 8b 3f             	mov    (%r15),%rdi
    26de:	be 03 00 00 00       	mov    $0x3,%esi
    26e3:	31 d2                	xor    %edx,%edx
    26e5:	e8 16 f0 01 00       	call   21700 <spec_mem_rewind>
    26ea:	48 8d 3d 7e 0c 02 00 	lea    0x20c7e(%rip),%rdi        # 2336f <_IO_stdin_used+0x36f>
    26f1:	4c 89 e6             	mov    %r12,%rsi
    26f4:	31 c0                	xor    %eax,%eax
    26f6:	e8 a5 f9 ff ff       	call   20a0 <printf@plt>
    26fb:	48 8b 05 ce 18 03 00 	mov    0x318ce(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
    2702:	48 8b 38             	mov    (%rax),%rdi
    2705:	e8 66 fa ff ff       	call   2170 <fflush@plt>
    270a:	49 ff c6             	inc    %r14
    270d:	4c 39 74 24 28       	cmp    %r14,0x28(%rsp)
    2712:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    2717:	0f 85 0f fe ff ff    	jne    252c <main+0x22c>
    271d:	31 c0                	xor    %eax,%eax
    271f:	48 83 c4 38          	add    $0x38,%rsp
    2723:	5b                   	pop    %rbx
    2724:	41 5c                	pop    %r12
    2726:	41 5d                	pop    %r13
    2728:	41 5e                	pop    %r14
    272a:	41 5f                	pop    %r15
    272c:	5d                   	pop    %rbp
    272d:	c3                   	ret    
    272e:	4c 89 f9             	mov    %r15,%rcx
    2731:	41 83 fe 06          	cmp    $0x6,%r14d
    2735:	0f 8d c7 fc ff ff    	jge    2402 <main+0x102>
    273b:	49 8b 75 00          	mov    0x0(%r13),%rsi
    273f:	eb 16                	jmp    2757 <main+0x457>
    2741:	48 8d 3d 2b 0a 02 00 	lea    0x20a2b(%rip),%rdi        # 23173 <_IO_stdin_used+0x173>
    2748:	31 c0                	xor    %eax,%eax
    274a:	e8 51 f9 ff ff       	call   20a0 <printf@plt>
    274f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    2754:	48 8b 30             	mov    (%rax),%rsi
    2757:	48 8d 3d 20 09 02 00 	lea    0x20920(%rip),%rdi        # 2307e <_IO_stdin_used+0x7e>
    275e:	ba 00 02 00 00       	mov    $0x200,%edx
    2763:	31 c0                	xor    %eax,%eax
    2765:	e8 36 f9 ff ff       	call   20a0 <printf@plt>
    276a:	bf 01 00 00 00       	mov    $0x1,%edi
    276f:	e8 4c fa ff ff       	call   21c0 <exit@plt>
    2774:	48 8d 3d a3 0b 02 00 	lea    0x20ba3(%rip),%rdi        # 2331e <_IO_stdin_used+0x31e>
    277b:	be 00 02 00 00       	mov    $0x200,%esi
    2780:	31 c0                	xor    %eax,%eax
    2782:	e8 19 f9 ff ff       	call   20a0 <printf@plt>
    2787:	48 8d 3d d3 0b 02 00 	lea    0x20bd3(%rip),%rdi        # 23361 <_IO_stdin_used+0x361>
    278e:	31 c0                	xor    %eax,%eax
    2790:	e8 0b f9 ff ff       	call   20a0 <printf@plt>
    2795:	48 8b 1d 34 18 03 00 	mov    0x31834(%rip),%rbx        # 33fd0 <stdout@GLIBC_2.2.5>
    279c:	48 8b 3b             	mov    (%rbx),%rdi
    279f:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    27a4:	ba 00 02 00 00       	mov    $0x200,%edx
    27a9:	e8 b2 e6 01 00       	call   20e60 <print_sum>
    27ae:	bf 0a 00 00 00       	mov    $0xa,%edi
    27b3:	e8 88 f8 ff ff       	call   2040 <putchar@plt>
    27b8:	48 8d 3d 45 9d 02 00 	lea    0x29d45(%rip),%rdi        # 2c504 <uint64_to_nicestr.suffix+0x2a4>
    27bf:	31 c0                	xor    %eax,%eax
    27c1:	e8 da f8 ff ff       	call   20a0 <printf@plt>
    27c6:	48 8b 3b             	mov    (%rbx),%rdi
    27c9:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    27ce:	ba 00 02 00 00       	mov    $0x200,%edx
    27d3:	e8 88 e6 01 00       	call   20e60 <print_sum>
    27d8:	bf 0a 00 00 00       	mov    $0xa,%edi
    27dd:	e8 5e f8 ff ff       	call   2040 <putchar@plt>
    27e2:	31 ff                	xor    %edi,%edi
    27e4:	e8 d7 f9 ff ff       	call   21c0 <exit@plt>
    27e9:	48 8d 3d 14 08 02 00 	lea    0x20814(%rip),%rdi        # 23004 <_IO_stdin_used+0x4>
    27f0:	be 00 02 00 00       	mov    $0x200,%esi
    27f5:	31 c0                	xor    %eax,%eax
    27f7:	e8 a4 f8 ff ff       	call   20a0 <printf@plt>
    27fc:	bf 01 00 00 00       	mov    $0x1,%edi
    2801:	e8 ba f9 ff ff       	call   21c0 <exit@plt>
    2806:	48 8b 05 eb 17 03 00 	mov    0x317eb(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
    280d:	48 8b 08             	mov    (%rax),%rcx
    2810:	48 8d 3d 0f 09 02 00 	lea    0x2090f(%rip),%rdi        # 23126 <_IO_stdin_used+0x126>
    2817:	be 2c 00 00 00       	mov    $0x2c,%esi
    281c:	ba 01 00 00 00       	mov    $0x1,%edx
    2821:	e8 aa f9 ff ff       	call   21d0 <fwrite@plt>
    2826:	bf 01 00 00 00       	mov    $0x1,%edi
    282b:	e8 90 f9 ff ff       	call   21c0 <exit@plt>
    2830:	48 8b 05 c1 17 03 00 	mov    0x317c1(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
    2837:	48 8b 38             	mov    (%rax),%rdi
    283a:	48 8d 35 f1 07 02 00 	lea    0x207f1(%rip),%rsi        # 23032 <_IO_stdin_used+0x32>
    2841:	ba 00 02 00 00       	mov    $0x200,%edx
    2846:	31 c0                	xor    %eax,%eax
    2848:	e8 e3 f8 ff ff       	call   2130 <fprintf@plt>
    284d:	bf 01 00 00 00       	mov    $0x1,%edi
    2852:	e8 69 f9 ff ff       	call   21c0 <exit@plt>
    2857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    285e:	00 00 

0000000000002860 <init_encoder>:
    2860:	55                   	push   %rbp
    2861:	41 57                	push   %r15
    2863:	41 56                	push   %r14
    2865:	53                   	push   %rbx
    2866:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    286d:	89 d3                	mov    %edx,%ebx
    286f:	49 89 fe             	mov    %rdi,%r14
    2872:	48 85 f6             	test   %rsi,%rsi
    2875:	4c 8d 7c 24 58       	lea    0x58(%rsp),%r15
    287a:	4c 0f 45 fe          	cmovne %rsi,%r15
    287e:	83 f9 10             	cmp    $0x10,%ecx
    2881:	bd 04 00 00 00       	mov    $0x4,%ebp
    2886:	0f 42 e9             	cmovb  %ecx,%ebp
    2889:	4c 89 ff             	mov    %r15,%rdi
    288c:	89 d6                	mov    %edx,%esi
    288e:	e8 ed f3 00 00       	call   11c80 <lzma_lzma_preset>
    2893:	48 c7 04 24 21 00 00 	movq   $0x21,(%rsp)
    289a:	00 
    289b:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    28a0:	48 c7 44 24 10 ff ff 	movq   $0xffffffffffffffff,0x10(%rsp)
    28a7:	ff ff 
    28a9:	48 89 e6             	mov    %rsp,%rsi
    28ac:	4c 89 f7             	mov    %r14,%rdi
    28af:	89 ea                	mov    %ebp,%edx
    28b1:	e8 ea 50 00 00       	call   79a0 <lzma_stream_encoder>
    28b6:	83 f8 08             	cmp    $0x8,%eax
    28b9:	77 3d                	ja     28f8 <init_encoder+0x98>
    28bb:	48 8d 0d 06 0c 02 00 	lea    0x20c06(%rip),%rcx        # 234c8 <_IO_stdin_used+0x4c8>
    28c2:	89 c2                	mov    %eax,%edx
    28c4:	48 8d 35 3d 0b 02 00 	lea    0x20b3d(%rip),%rsi        # 23408 <_IO_stdin_used+0x408>
    28cb:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    28cf:	48 01 f2             	add    %rsi,%rdx
    28d2:	ff e2                	jmp    *%rdx
    28d4:	41 b6 01             	mov    $0x1,%r14b
    28d7:	eb 3e                	jmp    2917 <init_encoder+0xb7>
    28d9:	4c 89 f7             	mov    %r14,%rdi
    28dc:	41 89 c6             	mov    %eax,%r14d
    28df:	49 89 cf             	mov    %rcx,%r15
    28e2:	e8 e9 0b 00 00       	call   34d0 <lzma_get_check>
    28e7:	4c 89 f9             	mov    %r15,%rcx
    28ea:	44 89 f0             	mov    %r14d,%eax
    28ed:	eb 10                	jmp    28ff <init_encoder+0x9f>
    28ef:	48 8d 0d eb 0b 02 00 	lea    0x20beb(%rip),%rcx        # 234e1 <_IO_stdin_used+0x4e1>
    28f6:	eb 07                	jmp    28ff <init_encoder+0x9f>
    28f8:	48 8d 0d 04 0c 02 00 	lea    0x20c04(%rip),%rcx        # 23503 <_IO_stdin_used+0x503>
    28ff:	48 8d 3d 0b 0c 02 00 	lea    0x20c0b(%rip),%rdi        # 23511 <_IO_stdin_used+0x511>
    2906:	45 31 f6             	xor    %r14d,%r14d
    2909:	89 de                	mov    %ebx,%esi
    290b:	89 ea                	mov    %ebp,%edx
    290d:	41 89 c0             	mov    %eax,%r8d
    2910:	31 c0                	xor    %eax,%eax
    2912:	e8 89 f7 ff ff       	call   20a0 <printf@plt>
    2917:	44 89 f0             	mov    %r14d,%eax
    291a:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    2921:	5b                   	pop    %rbx
    2922:	41 5e                	pop    %r14
    2924:	41 5f                	pop    %r15
    2926:	5d                   	pop    %rbp
    2927:	c3                   	ret    
    2928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    292f:	00 

0000000000002930 <uncompressStream>:
    2930:	55                   	push   %rbp
    2931:	41 57                	push   %r15
    2933:	41 56                	push   %r14
    2935:	41 55                	push   %r13
    2937:	41 54                	push   %r12
    2939:	53                   	push   %rbx
    293a:	48 81 ec a8 40 00 00 	sub    $0x40a8,%rsp
    2941:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    2945:	89 fd                	mov    %edi,%ebp
    2947:	0f 57 c0             	xorps  %xmm0,%xmm0
    294a:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    2951:	00 
    2952:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    2957:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    295c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    2961:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    2966:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    296b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    2970:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    2975:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    297c:	00 00 00 00 00 
    2981:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2986:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    298d:	ba 0a 00 00 00       	mov    $0xa,%edx
    2992:	e8 a9 7c 00 00       	call   a640 <lzma_stream_decoder>
    2997:	83 f8 08             	cmp    $0x8,%eax
    299a:	77 5c                	ja     29f8 <uncompressStream+0xc8>
    299c:	89 c1                	mov    %eax,%ecx
    299e:	48 8d 15 87 0a 02 00 	lea    0x20a87(%rip),%rdx        # 2342c <_IO_stdin_used+0x42c>
    29a5:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
    29a9:	48 01 d1             	add    %rdx,%rcx
    29ac:	ff e1                	jmp    *%rcx
    29ae:	48 8d 3d e6 0c 02 00 	lea    0x20ce6(%rip),%rdi        # 2369b <_IO_stdin_used+0x69b>
    29b5:	31 c0                	xor    %eax,%eax
    29b7:	e8 e4 f6 ff ff       	call   20a0 <printf@plt>
    29bc:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    29c1:	e8 0a 0b 00 00       	call   34d0 <lzma_get_check>
    29c6:	83 f8 0a             	cmp    $0xa,%eax
    29c9:	77 5d                	ja     2a28 <uncompressStream+0xf8>
    29cb:	89 c0                	mov    %eax,%eax
    29cd:	48 8d 0d 7c 0a 02 00 	lea    0x20a7c(%rip),%rcx        # 23450 <_IO_stdin_used+0x450>
    29d4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    29d8:	48 01 c8             	add    %rcx,%rax
    29db:	ff e0                	jmp    *%rax
    29dd:	48 8d 3d 4e 0d 02 00 	lea    0x20d4e(%rip),%rdi        # 23732 <_IO_stdin_used+0x732>
    29e4:	eb 49                	jmp    2a2f <uncompressStream+0xff>
    29e6:	48 8d 35 db 0a 02 00 	lea    0x20adb(%rip),%rsi        # 234c8 <_IO_stdin_used+0x4c8>
    29ed:	eb 10                	jmp    29ff <uncompressStream+0xcf>
    29ef:	48 8d 35 df 0c 02 00 	lea    0x20cdf(%rip),%rsi        # 236d5 <_IO_stdin_used+0x6d5>
    29f6:	eb 07                	jmp    29ff <uncompressStream+0xcf>
    29f8:	48 8d 35 fa 0b 02 00 	lea    0x20bfa(%rip),%rsi        # 235f9 <_IO_stdin_used+0x5f9>
    29ff:	48 8d 3d ef 0c 02 00 	lea    0x20cef(%rip),%rdi        # 236f5 <_IO_stdin_used+0x6f5>
    2a06:	89 c2                	mov    %eax,%edx
    2a08:	e9 a1 01 00 00       	jmp    2bae <uncompressStream+0x27e>
    2a0d:	48 8d 3d 12 0d 02 00 	lea    0x20d12(%rip),%rdi        # 23726 <_IO_stdin_used+0x726>
    2a14:	eb 19                	jmp    2a2f <uncompressStream+0xff>
    2a16:	48 8d 3d 0f 0d 02 00 	lea    0x20d0f(%rip),%rdi        # 2372c <_IO_stdin_used+0x72c>
    2a1d:	eb 10                	jmp    2a2f <uncompressStream+0xff>
    2a1f:	48 8d 3d f9 0c 02 00 	lea    0x20cf9(%rip),%rdi        # 2371f <_IO_stdin_used+0x71f>
    2a26:	eb 07                	jmp    2a2f <uncompressStream+0xff>
    2a28:	48 8d 3d 08 0d 02 00 	lea    0x20d08(%rip),%rdi        # 23737 <_IO_stdin_used+0x737>
    2a2f:	e8 2c f6 ff ff       	call   2060 <puts@plt>
    2a34:	0f 57 c0             	xorps  %xmm0,%xmm0
    2a37:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    2a3c:	4c 8d a4 24 a0 00 00 	lea    0xa0(%rsp),%r12
    2a43:	00 
    2a44:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    2a49:	48 c7 44 24 30 00 20 	movq   $0x2000,0x30(%rsp)
    2a50:	00 00 
    2a52:	31 c0                	xor    %eax,%eax
    2a54:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    2a59:	45 31 ed             	xor    %r13d,%r13d
    2a5c:	48 85 c0             	test   %rax,%rax
    2a5f:	75 6f                	jne    2ad0 <uncompressStream+0x1a0>
    2a61:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2a68:	0f 1f 84 00 00 00 00 
    2a6f:	00 
    2a70:	4c 8d 3d 89 5b 03 00 	lea    0x35b89(%rip),%r15        # 38600 <spec_fd>
    2a77:	49 8b 3f             	mov    (%r15),%rdi
    2a7a:	be 03 00 00 00       	mov    $0x3,%esi
    2a7f:	89 ea                	mov    %ebp,%edx
    2a81:	e8 6a f5 01 00       	call   21ff0 <spec_mem_feof>
    2a86:	85 c0                	test   %eax,%eax
    2a88:	75 46                	jne    2ad0 <uncompressStream+0x1a0>
    2a8a:	48 8d 94 24 a0 20 00 	lea    0x20a0(%rsp),%rdx
    2a91:	00 
    2a92:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    2a97:	49 8b 3f             	mov    (%r15),%rdi
    2a9a:	b9 01 00 00 00       	mov    $0x1,%ecx
    2a9f:	be 03 00 00 00       	mov    $0x3,%esi
    2aa4:	41 b8 00 20 00 00    	mov    $0x2000,%r8d
    2aaa:	41 89 e9             	mov    %ebp,%r9d
    2aad:	e8 ae e5 01 00       	call   21060 <spec_mem_fread>
    2ab2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2ab7:	49 8b 3f             	mov    (%r15),%rdi
    2aba:	be 03 00 00 00       	mov    $0x3,%esi
    2abf:	89 ea                	mov    %ebp,%edx
    2ac1:	e8 2a f5 01 00       	call   21ff0 <spec_mem_feof>
    2ac6:	85 c0                	test   %eax,%eax
    2ac8:	74 06                	je     2ad0 <uncompressStream+0x1a0>
    2aca:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    2ad0:	48 89 df             	mov    %rbx,%rdi
    2ad3:	44 89 ee             	mov    %r13d,%esi
    2ad6:	e8 d5 06 00 00       	call   31b0 <lzma_code>
    2adb:	41 89 c7             	mov    %eax,%r15d
    2ade:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2ae3:	48 85 c0             	test   %rax,%rax
    2ae6:	74 06                	je     2aee <uncompressStream+0x1be>
    2ae8:	41 83 ff 01          	cmp    $0x1,%r15d
    2aec:	75 49                	jne    2b37 <uncompressStream+0x207>
    2aee:	49 89 de             	mov    %rbx,%r14
    2af1:	bb 00 20 00 00       	mov    $0x2000,%ebx
    2af6:	48 29 c3             	sub    %rax,%rbx
    2af9:	48 8d 05 00 5b 03 00 	lea    0x35b00(%rip),%rax        # 38600 <spec_fd>
    2b00:	48 8b 38             	mov    (%rax),%rdi
    2b03:	b9 01 00 00 00       	mov    $0x1,%ecx
    2b08:	be 03 00 00 00       	mov    $0x3,%esi
    2b0d:	4c 89 e2             	mov    %r12,%rdx
    2b10:	41 89 d8             	mov    %ebx,%r8d
    2b13:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
    2b18:	e8 e3 f1 01 00       	call   21d00 <spec_mem_fwrite>
    2b1d:	48 39 d8             	cmp    %rbx,%rax
    2b20:	0f 85 a1 00 00 00    	jne    2bc7 <uncompressStream+0x297>
    2b26:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    2b2b:	48 c7 44 24 30 00 20 	movq   $0x2000,0x30(%rsp)
    2b32:	00 00 
    2b34:	4c 89 f3             	mov    %r14,%rbx
    2b37:	45 85 ff             	test   %r15d,%r15d
    2b3a:	75 0f                	jne    2b4b <uncompressStream+0x21b>
    2b3c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2b41:	48 85 c0             	test   %rax,%rax
    2b44:	75 8a                	jne    2ad0 <uncompressStream+0x1a0>
    2b46:	e9 25 ff ff ff       	jmp    2a70 <uncompressStream+0x140>
    2b4b:	41 8d 47 ff          	lea    -0x1(%r15),%eax
    2b4f:	83 f8 09             	cmp    $0x9,%eax
    2b52:	77 49                	ja     2b9d <uncompressStream+0x26d>
    2b54:	48 8d 0d 21 09 02 00 	lea    0x20921(%rip),%rcx        # 2347c <_IO_stdin_used+0x47c>
    2b5b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    2b5f:	48 01 c8             	add    %rcx,%rax
    2b62:	ff e0                	jmp    *%rax
    2b64:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2b69:	e8 a2 08 00 00       	call   3410 <lzma_end>
    2b6e:	eb 45                	jmp    2bb5 <uncompressStream+0x285>
    2b70:	48 8d 35 51 09 02 00 	lea    0x20951(%rip),%rsi        # 234c8 <_IO_stdin_used+0x4c8>
    2b77:	eb 2b                	jmp    2ba4 <uncompressStream+0x274>
    2b79:	48 8d 35 0c 0a 02 00 	lea    0x20a0c(%rip),%rsi        # 2358c <_IO_stdin_used+0x58c>
    2b80:	eb 22                	jmp    2ba4 <uncompressStream+0x274>
    2b82:	48 8d 35 ec 09 02 00 	lea    0x209ec(%rip),%rsi        # 23575 <_IO_stdin_used+0x575>
    2b89:	eb 19                	jmp    2ba4 <uncompressStream+0x274>
    2b8b:	48 8d 35 35 0a 02 00 	lea    0x20a35(%rip),%rsi        # 235c7 <_IO_stdin_used+0x5c7>
    2b92:	eb 10                	jmp    2ba4 <uncompressStream+0x274>
    2b94:	48 8d 35 11 0a 02 00 	lea    0x20a11(%rip),%rsi        # 235ac <_IO_stdin_used+0x5ac>
    2b9b:	eb 07                	jmp    2ba4 <uncompressStream+0x274>
    2b9d:	48 8d 35 55 0a 02 00 	lea    0x20a55(%rip),%rsi        # 235f9 <_IO_stdin_used+0x5f9>
    2ba4:	48 8d 3d 62 0a 02 00 	lea    0x20a62(%rip),%rdi        # 2360d <_IO_stdin_used+0x60d>
    2bab:	44 89 fa             	mov    %r15d,%edx
    2bae:	31 c0                	xor    %eax,%eax
    2bb0:	e8 eb f4 ff ff       	call   20a0 <printf@plt>
    2bb5:	48 81 c4 a8 40 00 00 	add    $0x40a8,%rsp
    2bbc:	5b                   	pop    %rbx
    2bbd:	41 5c                	pop    %r12
    2bbf:	41 5d                	pop    %r13
    2bc1:	41 5e                	pop    %r14
    2bc3:	41 5f                	pop    %r15
    2bc5:	5d                   	pop    %rbp
    2bc6:	c3                   	ret    
    2bc7:	e8 84 f4 ff ff       	call   2050 <__errno_location@plt>
    2bcc:	8b 38                	mov    (%rax),%edi
    2bce:	e8 0d f6 ff ff       	call   21e0 <strerror@plt>
    2bd3:	48 8d 3d 79 09 02 00 	lea    0x20979(%rip),%rdi        # 23553 <_IO_stdin_used+0x553>
    2bda:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    2bde:	48 89 c2             	mov    %rax,%rdx
    2be1:	31 c0                	xor    %eax,%eax
    2be3:	e8 b8 f4 ff ff       	call   20a0 <printf@plt>
    2be8:	eb cb                	jmp    2bb5 <uncompressStream+0x285>
    2bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002bf0 <compressStream>:
    2bf0:	55                   	push   %rbp
    2bf1:	41 57                	push   %r15
    2bf3:	41 56                	push   %r14
    2bf5:	41 55                	push   %r13
    2bf7:	41 54                	push   %r12
    2bf9:	53                   	push   %rbx
    2bfa:	48 81 ec a8 40 00 00 	sub    $0x40a8,%rsp
    2c01:	41 89 d4             	mov    %edx,%r12d
    2c04:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    2c08:	89 fd                	mov    %edi,%ebp
    2c0a:	0f 57 c0             	xorps  %xmm0,%xmm0
    2c0d:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    2c14:	00 
    2c15:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    2c1a:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    2c1f:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    2c24:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    2c29:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    2c2e:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    2c33:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    2c38:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    2c3f:	00 00 00 00 00 
    2c44:	85 d2                	test   %edx,%edx
    2c46:	b8 04 00 00 00       	mov    $0x4,%eax
    2c4b:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
    2c51:	44 0f 49 e8          	cmovns %eax,%r13d
    2c55:	48 8d 9c 24 a0 20 00 	lea    0x20a0(%rsp),%rbx
    2c5c:	00 
    2c5d:	48 89 df             	mov    %rbx,%rdi
    2c60:	89 d6                	mov    %edx,%esi
    2c62:	e8 19 f0 00 00       	call   11c80 <lzma_lzma_preset>
    2c67:	48 c7 84 24 a0 00 00 	movq   $0x21,0xa0(%rsp)
    2c6e:	00 21 00 00 00 
    2c73:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
    2c7a:	00 
    2c7b:	48 c7 84 24 b0 00 00 	movq   $0xffffffffffffffff,0xb0(%rsp)
    2c82:	00 ff ff ff ff 
    2c87:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2c8c:	4c 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%r15
    2c93:	00 
    2c94:	4c 89 fe             	mov    %r15,%rsi
    2c97:	44 89 ea             	mov    %r13d,%edx
    2c9a:	e8 01 4d 00 00       	call   79a0 <lzma_stream_encoder>
    2c9f:	89 c3                	mov    %eax,%ebx
    2ca1:	83 f8 08             	cmp    $0x8,%eax
    2ca4:	0f 87 3d 01 00 00    	ja     2de7 <compressStream+0x1f7>
    2caa:	4c 8d 35 17 08 02 00 	lea    0x20817(%rip),%r14        # 234c8 <_IO_stdin_used+0x4c8>
    2cb1:	89 d8                	mov    %ebx,%eax
    2cb3:	48 8d 0d ea 07 02 00 	lea    0x207ea(%rip),%rcx        # 234a4 <_IO_stdin_used+0x4a4>
    2cba:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    2cbe:	48 01 c8             	add    %rcx,%rax
    2cc1:	ff e0                	jmp    *%rax
    2cc3:	0f 57 c0             	xorps  %xmm0,%xmm0
    2cc6:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    2ccb:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    2cd0:	48 c7 44 24 30 00 20 	movq   $0x2000,0x30(%rsp)
    2cd7:	00 00 
    2cd9:	31 c0                	xor    %eax,%eax
    2cdb:	4c 8d 35 1e 59 03 00 	lea    0x3591e(%rip),%r14        # 38600 <spec_fd>
    2ce2:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    2ce7:	45 31 ed             	xor    %r13d,%r13d
    2cea:	48 85 c0             	test   %rax,%rax
    2ced:	75 61                	jne    2d50 <compressStream+0x160>
    2cef:	90                   	nop
    2cf0:	49 8b 3e             	mov    (%r14),%rdi
    2cf3:	be 03 00 00 00       	mov    $0x3,%esi
    2cf8:	89 ea                	mov    %ebp,%edx
    2cfa:	e8 f1 f2 01 00       	call   21ff0 <spec_mem_feof>
    2cff:	85 c0                	test   %eax,%eax
    2d01:	75 4d                	jne    2d50 <compressStream+0x160>
    2d03:	48 8d 94 24 a0 20 00 	lea    0x20a0(%rsp),%rdx
    2d0a:	00 
    2d0b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    2d10:	49 8b 3e             	mov    (%r14),%rdi
    2d13:	b9 01 00 00 00       	mov    $0x1,%ecx
    2d18:	be 03 00 00 00       	mov    $0x3,%esi
    2d1d:	41 b8 00 20 00 00    	mov    $0x2000,%r8d
    2d23:	41 89 e9             	mov    %ebp,%r9d
    2d26:	e8 35 e3 01 00       	call   21060 <spec_mem_fread>
    2d2b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2d30:	49 8b 3e             	mov    (%r14),%rdi
    2d33:	be 03 00 00 00       	mov    $0x3,%esi
    2d38:	89 ea                	mov    %ebp,%edx
    2d3a:	e8 b1 f2 01 00       	call   21ff0 <spec_mem_feof>
    2d3f:	85 c0                	test   %eax,%eax
    2d41:	74 0d                	je     2d50 <compressStream+0x160>
    2d43:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    2d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2d50:	48 89 df             	mov    %rbx,%rdi
    2d53:	44 89 ee             	mov    %r13d,%esi
    2d56:	e8 55 04 00 00       	call   31b0 <lzma_code>
    2d5b:	41 89 c4             	mov    %eax,%r12d
    2d5e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    2d63:	48 85 c0             	test   %rax,%rax
    2d66:	74 06                	je     2d6e <compressStream+0x17e>
    2d68:	41 83 fc 01          	cmp    $0x1,%r12d
    2d6c:	75 49                	jne    2db7 <compressStream+0x1c7>
    2d6e:	49 89 de             	mov    %rbx,%r14
    2d71:	bb 00 20 00 00       	mov    $0x2000,%ebx
    2d76:	48 29 c3             	sub    %rax,%rbx
    2d79:	48 8d 05 80 58 03 00 	lea    0x35880(%rip),%rax        # 38600 <spec_fd>
    2d80:	48 8b 38             	mov    (%rax),%rdi
    2d83:	b9 01 00 00 00       	mov    $0x1,%ecx
    2d88:	be 03 00 00 00       	mov    $0x3,%esi
    2d8d:	4c 89 fa             	mov    %r15,%rdx
    2d90:	41 89 d8             	mov    %ebx,%r8d
    2d93:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
    2d98:	e8 63 ef 01 00       	call   21d00 <spec_mem_fwrite>
    2d9d:	48 39 d8             	cmp    %rbx,%rax
    2da0:	0f 85 be 00 00 00    	jne    2e64 <compressStream+0x274>
    2da6:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    2dab:	48 c7 44 24 30 00 20 	movq   $0x2000,0x30(%rsp)
    2db2:	00 00 
    2db4:	4c 89 f3             	mov    %r14,%rbx
    2db7:	45 85 e4             	test   %r12d,%r12d
    2dba:	75 5e                	jne    2e1a <compressStream+0x22a>
    2dbc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2dc1:	4c 8d 35 38 58 03 00 	lea    0x35838(%rip),%r14        # 38600 <spec_fd>
    2dc8:	48 85 c0             	test   %rax,%rax
    2dcb:	75 83                	jne    2d50 <compressStream+0x160>
    2dcd:	e9 1e ff ff ff       	jmp    2cf0 <compressStream+0x100>
    2dd2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2dd7:	e8 f4 06 00 00       	call   34d0 <lzma_get_check>
    2ddc:	eb 10                	jmp    2dee <compressStream+0x1fe>
    2dde:	4c 8d 35 fc 06 02 00 	lea    0x206fc(%rip),%r14        # 234e1 <_IO_stdin_used+0x4e1>
    2de5:	eb 07                	jmp    2dee <compressStream+0x1fe>
    2de7:	4c 8d 35 15 07 02 00 	lea    0x20715(%rip),%r14        # 23503 <_IO_stdin_used+0x503>
    2dee:	48 8d 3d 1c 07 02 00 	lea    0x2071c(%rip),%rdi        # 23511 <_IO_stdin_used+0x511>
    2df5:	44 89 e6             	mov    %r12d,%esi
    2df8:	44 89 ea             	mov    %r13d,%edx
    2dfb:	4c 89 f1             	mov    %r14,%rcx
    2dfe:	41 89 d8             	mov    %ebx,%r8d
    2e01:	31 c0                	xor    %eax,%eax
    2e03:	e8 98 f2 ff ff       	call   20a0 <printf@plt>
    2e08:	48 81 c4 a8 40 00 00 	add    $0x40a8,%rsp
    2e0f:	5b                   	pop    %rbx
    2e10:	41 5c                	pop    %r12
    2e12:	41 5d                	pop    %r13
    2e14:	41 5e                	pop    %r14
    2e16:	41 5f                	pop    %r15
    2e18:	5d                   	pop    %rbp
    2e19:	c3                   	ret    
    2e1a:	41 83 fc 09          	cmp    $0x9,%r12d
    2e1e:	74 18                	je     2e38 <compressStream+0x248>
    2e20:	41 83 fc 05          	cmp    $0x5,%r12d
    2e24:	74 1b                	je     2e41 <compressStream+0x251>
    2e26:	41 83 fc 01          	cmp    $0x1,%r12d
    2e2a:	75 1e                	jne    2e4a <compressStream+0x25a>
    2e2c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2e31:	e8 da 05 00 00       	call   3410 <lzma_end>
    2e36:	eb d0                	jmp    2e08 <compressStream+0x218>
    2e38:	48 8d 35 19 08 02 00 	lea    0x20819(%rip),%rsi        # 23658 <_IO_stdin_used+0x658>
    2e3f:	eb 10                	jmp    2e51 <compressStream+0x261>
    2e41:	48 8d 35 80 06 02 00 	lea    0x20680(%rip),%rsi        # 234c8 <_IO_stdin_used+0x4c8>
    2e48:	eb 07                	jmp    2e51 <compressStream+0x261>
    2e4a:	48 8d 35 a8 07 02 00 	lea    0x207a8(%rip),%rsi        # 235f9 <_IO_stdin_used+0x5f9>
    2e51:	48 8d 3d 1a 08 02 00 	lea    0x2081a(%rip),%rdi        # 23672 <_IO_stdin_used+0x672>
    2e58:	44 89 e2             	mov    %r12d,%edx
    2e5b:	31 c0                	xor    %eax,%eax
    2e5d:	e8 3e f2 ff ff       	call   20a0 <printf@plt>
    2e62:	eb a4                	jmp    2e08 <compressStream+0x218>
    2e64:	e8 e7 f1 ff ff       	call   2050 <__errno_location@plt>
    2e69:	8b 38                	mov    (%rax),%edi
    2e6b:	e8 70 f3 ff ff       	call   21e0 <strerror@plt>
    2e70:	48 8d 3d c1 07 02 00 	lea    0x207c1(%rip),%rdi        # 23638 <_IO_stdin_used+0x638>
    2e77:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    2e7b:	48 89 c2             	mov    %rax,%rdx
    2e7e:	31 c0                	xor    %eax,%eax
    2e80:	e8 1b f2 ff ff       	call   20a0 <printf@plt>
    2e85:	eb 81                	jmp    2e08 <compressStream+0x218>
    2e87:	90                   	nop
    2e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2e8f:	00 

0000000000002e90 <tuklib_physmem>:
    2e90:	31 c0                	xor    %eax,%eax
    2e92:	c3                   	ret    
    2e93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e9a:	00 00 00 
    2e9d:	0f 1f 00             	nopl   (%rax)

0000000000002ea0 <lzma_version_number>:
    2ea0:	b8 b8 f0 fa 02       	mov    $0x2faf0b8,%eax
    2ea5:	c3                   	ret    
    2ea6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ead:	00 00 00 

0000000000002eb0 <lzma_version_string>:
    2eb0:	48 8d 05 41 91 02 00 	lea    0x29141(%rip),%rax        # 2bff8 <message_filters_to_str.bcj_names+0x13c8>
    2eb7:	c3                   	ret    
    2eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2ebf:	00 

0000000000002ec0 <lzma_alloc>:
    2ec0:	48 89 fa             	mov    %rdi,%rdx
    2ec3:	48 83 ff 01          	cmp    $0x1,%rdi
    2ec7:	48 83 d2 00          	adc    $0x0,%rdx
    2ecb:	48 85 f6             	test   %rsi,%rsi
    2ece:	74 13                	je     2ee3 <lzma_alloc+0x23>
    2ed0:	48 8b 06             	mov    (%rsi),%rax
    2ed3:	48 85 c0             	test   %rax,%rax
    2ed6:	74 0b                	je     2ee3 <lzma_alloc+0x23>
    2ed8:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    2edc:	be 01 00 00 00       	mov    $0x1,%esi
    2ee1:	ff e0                	jmp    *%rax
    2ee3:	48 89 d7             	mov    %rdx,%rdi
    2ee6:	e9 75 f2 ff ff       	jmp    2160 <malloc@plt>
    2eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002ef0 <lzma_free>:
    2ef0:	48 85 f6             	test   %rsi,%rsi
    2ef3:	0f 84 37 f1 ff ff    	je     2030 <free@plt>
    2ef9:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    2efd:	48 85 c9             	test   %rcx,%rcx
    2f00:	0f 84 2a f1 ff ff    	je     2030 <free@plt>
    2f06:	48 8b 46 10          	mov    0x10(%rsi),%rax
    2f0a:	48 89 fe             	mov    %rdi,%rsi
    2f0d:	48 89 c7             	mov    %rax,%rdi
    2f10:	ff e1                	jmp    *%rcx
    2f12:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2f19:	1f 84 00 00 00 00 00 

0000000000002f20 <lzma_bufcpy>:
    2f20:	41 57                	push   %r15
    2f22:	41 56                	push   %r14
    2f24:	41 55                	push   %r13
    2f26:	41 54                	push   %r12
    2f28:	53                   	push   %rbx
    2f29:	4c 89 cb             	mov    %r9,%rbx
    2f2c:	4d 89 c6             	mov    %r8,%r14
    2f2f:	49 89 f7             	mov    %rsi,%r15
    2f32:	4c 8b 26             	mov    (%rsi),%r12
    2f35:	4c 29 e2             	sub    %r12,%rdx
    2f38:	4d 8b 28             	mov    (%r8),%r13
    2f3b:	4c 29 eb             	sub    %r13,%rbx
    2f3e:	48 39 da             	cmp    %rbx,%rdx
    2f41:	48 0f 42 da          	cmovb  %rdx,%rbx
    2f45:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    2f49:	4a 8d 34 27          	lea    (%rdi,%r12,1),%rsi
    2f4d:	48 89 c7             	mov    %rax,%rdi
    2f50:	48 89 da             	mov    %rbx,%rdx
    2f53:	e8 f8 f1 ff ff       	call   2150 <memcpy@plt>
    2f58:	49 01 dc             	add    %rbx,%r12
    2f5b:	4d 89 27             	mov    %r12,(%r15)
    2f5e:	49 01 dd             	add    %rbx,%r13
    2f61:	4d 89 2e             	mov    %r13,(%r14)
    2f64:	48 89 d8             	mov    %rbx,%rax
    2f67:	5b                   	pop    %rbx
    2f68:	41 5c                	pop    %r12
    2f6a:	41 5d                	pop    %r13
    2f6c:	41 5e                	pop    %r14
    2f6e:	41 5f                	pop    %r15
    2f70:	c3                   	ret    
    2f71:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2f78:	0f 1f 84 00 00 00 00 
    2f7f:	00 

0000000000002f80 <lzma_next_filter_init>:
    2f80:	48 8b 42 08          	mov    0x8(%rdx),%rax
    2f84:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    2f88:	48 39 c1             	cmp    %rax,%rcx
    2f8b:	0f 84 8d 00 00 00    	je     301e <lzma_next_filter_init+0x9e>
    2f91:	48 85 c9             	test   %rcx,%rcx
    2f94:	0f 84 84 00 00 00    	je     301e <lzma_next_filter_init+0x9e>
    2f9a:	41 57                	push   %r15
    2f9c:	41 56                	push   %r14
    2f9e:	41 54                	push   %r12
    2fa0:	53                   	push   %rbx
    2fa1:	50                   	push   %rax
    2fa2:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
    2fa6:	48 8b 07             	mov    (%rdi),%rax
    2fa9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    2fad:	49 89 ff             	mov    %rdi,%r15
    2fb0:	49 89 d6             	mov    %rdx,%r14
    2fb3:	48 85 c9             	test   %rcx,%rcx
    2fb6:	74 0a                	je     2fc2 <lzma_next_filter_init+0x42>
    2fb8:	48 89 c7             	mov    %rax,%rdi
    2fbb:	49 89 f4             	mov    %rsi,%r12
    2fbe:	ff d1                	call   *%rcx
    2fc0:	eb 27                	jmp    2fe9 <lzma_next_filter_init+0x69>
    2fc2:	48 85 f6             	test   %rsi,%rsi
    2fc5:	74 17                	je     2fde <lzma_next_filter_init+0x5e>
    2fc7:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    2fcb:	48 85 c9             	test   %rcx,%rcx
    2fce:	74 0e                	je     2fde <lzma_next_filter_init+0x5e>
    2fd0:	49 89 f4             	mov    %rsi,%r12
    2fd3:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    2fd7:	48 89 c6             	mov    %rax,%rsi
    2fda:	ff d1                	call   *%rcx
    2fdc:	eb 0b                	jmp    2fe9 <lzma_next_filter_init+0x69>
    2fde:	49 89 f4             	mov    %rsi,%r12
    2fe1:	48 89 c7             	mov    %rax,%rdi
    2fe4:	e8 47 f0 ff ff       	call   2030 <free@plt>
    2fe9:	4c 89 ff             	mov    %r15,%rdi
    2fec:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    2ff3:	49 c7 47 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%r15)
    2ffa:	ff 
    2ffb:	0f 57 c0             	xorps  %xmm0,%xmm0
    2ffe:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
    3002:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    3006:	0f 11 03             	movups %xmm0,(%rbx)
    3009:	4c 89 f2             	mov    %r14,%rdx
    300c:	49 8b 46 08          	mov    0x8(%r14),%rax
    3010:	4c 89 e6             	mov    %r12,%rsi
    3013:	48 83 c4 08          	add    $0x8,%rsp
    3017:	5b                   	pop    %rbx
    3018:	41 5c                	pop    %r12
    301a:	41 5e                	pop    %r14
    301c:	41 5f                	pop    %r15
    301e:	48 89 47 10          	mov    %rax,0x10(%rdi)
    3022:	48 8b 02             	mov    (%rdx),%rax
    3025:	48 89 47 08          	mov    %rax,0x8(%rdi)
    3029:	48 8b 42 08          	mov    0x8(%rdx),%rax
    302d:	48 85 c0             	test   %rax,%rax
    3030:	74 02                	je     3034 <lzma_next_filter_init+0xb4>
    3032:	ff e0                	jmp    *%rax
    3034:	31 c0                	xor    %eax,%eax
    3036:	c3                   	ret    
    3037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    303e:	00 00 

0000000000003040 <lzma_next_end>:
    3040:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    3045:	74 63                	je     30aa <lzma_next_end+0x6a>
    3047:	41 56                	push   %r14
    3049:	53                   	push   %rbx
    304a:	50                   	push   %rax
    304b:	48 89 fb             	mov    %rdi,%rbx
    304e:	4c 8d 77 10          	lea    0x10(%rdi),%r14
    3052:	48 8b 3f             	mov    (%rdi),%rdi
    3055:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3059:	48 85 c0             	test   %rax,%rax
    305c:	74 04                	je     3062 <lzma_next_end+0x22>
    305e:	ff d0                	call   *%rax
    3060:	eb 21                	jmp    3083 <lzma_next_end+0x43>
    3062:	48 85 f6             	test   %rsi,%rsi
    3065:	74 17                	je     307e <lzma_next_end+0x3e>
    3067:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    306b:	48 85 c9             	test   %rcx,%rcx
    306e:	74 0e                	je     307e <lzma_next_end+0x3e>
    3070:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3074:	48 89 fe             	mov    %rdi,%rsi
    3077:	48 89 c7             	mov    %rax,%rdi
    307a:	ff d1                	call   *%rcx
    307c:	eb 05                	jmp    3083 <lzma_next_end+0x43>
    307e:	e8 ad ef ff ff       	call   2030 <free@plt>
    3083:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    308a:	48 c7 43 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rbx)
    3091:	ff 
    3092:	0f 57 c0             	xorps  %xmm0,%xmm0
    3095:	41 0f 11 46 20       	movups %xmm0,0x20(%r14)
    309a:	41 0f 11 46 10       	movups %xmm0,0x10(%r14)
    309f:	41 0f 11 06          	movups %xmm0,(%r14)
    30a3:	48 83 c4 08          	add    $0x8,%rsp
    30a7:	5b                   	pop    %rbx
    30a8:	41 5e                	pop    %r14
    30aa:	c3                   	ret    
    30ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000030b0 <lzma_next_filter_update>:
    30b0:	48 89 d1             	mov    %rdx,%rcx
    30b3:	48 8b 12             	mov    (%rdx),%rdx
    30b6:	b8 0b 00 00 00       	mov    $0xb,%eax
    30bb:	48 3b 57 08          	cmp    0x8(%rdi),%rdx
    30bf:	75 17                	jne    30d8 <lzma_next_filter_update+0x28>
    30c1:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    30c5:	74 0f                	je     30d6 <lzma_next_filter_update+0x26>
    30c7:	48 8b 07             	mov    (%rdi),%rax
    30ca:	4c 8b 47 38          	mov    0x38(%rdi),%r8
    30ce:	48 89 c7             	mov    %rax,%rdi
    30d1:	31 d2                	xor    %edx,%edx
    30d3:	41 ff e0             	jmp    *%r8
    30d6:	31 c0                	xor    %eax,%eax
    30d8:	c3                   	ret    
    30d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000030e0 <lzma_strm_init>:
    30e0:	48 85 ff             	test   %rdi,%rdi
    30e3:	74 3e                	je     3123 <lzma_strm_init+0x43>
    30e5:	53                   	push   %rbx
    30e6:	48 8b 47 38          	mov    0x38(%rdi),%rax
    30ea:	48 85 c0             	test   %rax,%rax
    30ed:	75 72                	jne    3161 <lzma_strm_init+0x81>
    30ef:	48 89 fb             	mov    %rdi,%rbx
    30f2:	48 8b 4f 30          	mov    0x30(%rdi),%rcx
    30f6:	48 85 c9             	test   %rcx,%rcx
    30f9:	74 2e                	je     3129 <lzma_strm_init+0x49>
    30fb:	48 8b 01             	mov    (%rcx),%rax
    30fe:	48 85 c0             	test   %rax,%rax
    3101:	74 26                	je     3129 <lzma_strm_init+0x49>
    3103:	48 8b 79 10          	mov    0x10(%rcx),%rdi
    3107:	be 01 00 00 00       	mov    $0x1,%esi
    310c:	ba 58 00 00 00       	mov    $0x58,%edx
    3111:	ff d0                	call   *%rax
    3113:	48 89 43 38          	mov    %rax,0x38(%rbx)
    3117:	48 85 c0             	test   %rax,%rax
    311a:	75 20                	jne    313c <lzma_strm_init+0x5c>
    311c:	b8 05 00 00 00       	mov    $0x5,%eax
    3121:	5b                   	pop    %rbx
    3122:	c3                   	ret    
    3123:	b8 0b 00 00 00       	mov    $0xb,%eax
    3128:	c3                   	ret    
    3129:	bf 58 00 00 00       	mov    $0x58,%edi
    312e:	e8 2d f0 ff ff       	call   2160 <malloc@plt>
    3133:	48 89 43 38          	mov    %rax,0x38(%rbx)
    3137:	48 85 c0             	test   %rax,%rax
    313a:	74 e0                	je     311c <lzma_strm_init+0x3c>
    313c:	48 89 df             	mov    %rbx,%rdi
    313f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3146:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    314d:	ff 
    314e:	0f 57 c0             	xorps  %xmm0,%xmm0
    3151:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3155:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    3159:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    315d:	48 8b 43 38          	mov    0x38(%rbx),%rax
    3161:	c6 40 50 00          	movb   $0x0,0x50(%rax)
    3165:	48 8b 47 38          	mov    0x38(%rdi),%rax
    3169:	c6 40 51 00          	movb   $0x0,0x51(%rax)
    316d:	48 8b 47 38          	mov    0x38(%rdi),%rax
    3171:	c6 40 52 00          	movb   $0x0,0x52(%rax)
    3175:	48 8b 47 38          	mov    0x38(%rdi),%rax
    3179:	c6 40 53 00          	movb   $0x0,0x53(%rax)
    317d:	48 8b 47 38          	mov    0x38(%rdi),%rax
    3181:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    3188:	48 8b 47 38          	mov    0x38(%rdi),%rax
    318c:	c6 40 54 00          	movb   $0x0,0x54(%rax)
    3190:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    3197:	00 
    3198:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    319f:	00 
    31a0:	31 c0                	xor    %eax,%eax
    31a2:	5b                   	pop    %rbx
    31a3:	c3                   	ret    
    31a4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    31ab:	00 00 00 00 00 

00000000000031b0 <lzma_code>:
    31b0:	41 89 f2             	mov    %esi,%r10d
    31b3:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    31b7:	0f 84 f0 00 00 00    	je     32ad <lzma_code+0xfd>
    31bd:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
    31c2:	0f 84 fc 00 00 00    	je     32c4 <lzma_code+0x114>
    31c8:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    31cc:	48 85 c9             	test   %rcx,%rcx
    31cf:	0f 84 e9 00 00 00    	je     32be <lzma_code+0x10e>
    31d5:	41 83 fa 03          	cmp    $0x3,%r10d
    31d9:	0f 87 df 00 00 00    	ja     32be <lzma_code+0x10e>
    31df:	41 57                	push   %r15
    31e1:	41 56                	push   %r14
    31e3:	53                   	push   %rbx
    31e4:	48 83 ec 10          	sub    $0x10,%rsp
    31e8:	48 83 79 18 00       	cmpq   $0x0,0x18(%rcx)
    31ed:	0f 84 ad 01 00 00    	je     33a0 <lzma_code+0x1f0>
    31f3:	44 89 d0             	mov    %r10d,%eax
    31f6:	80 7c 01 50 00       	cmpb   $0x0,0x50(%rcx,%rax,1)
    31fb:	0f 84 9f 01 00 00    	je     33a0 <lzma_code+0x1f0>
    3201:	b8 08 00 00 00       	mov    $0x8,%eax
    3206:	48 83 7f 40 00       	cmpq   $0x0,0x40(%rdi)
    320b:	0f 85 94 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    3211:	48 83 7f 48 00       	cmpq   $0x0,0x48(%rdi)
    3216:	0f 85 89 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    321c:	48 83 7f 50 00       	cmpq   $0x0,0x50(%rdi)
    3221:	0f 85 7e 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    3227:	48 83 7f 58 00       	cmpq   $0x0,0x58(%rdi)
    322c:	0f 85 73 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    3232:	48 83 7f 60 00       	cmpq   $0x0,0x60(%rdi)
    3237:	0f 85 68 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    323d:	48 83 7f 68 00       	cmpq   $0x0,0x68(%rdi)
    3242:	0f 85 5d 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    3248:	48 83 7f 70 00       	cmpq   $0x0,0x70(%rdi)
    324d:	0f 85 52 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    3253:	48 83 7f 78 00       	cmpq   $0x0,0x78(%rdi)
    3258:	0f 85 47 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    325e:	83 bf 80 00 00 00 00 	cmpl   $0x0,0x80(%rdi)
    3265:	0f 85 3a 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    326b:	48 89 fb             	mov    %rdi,%rbx
    326e:	48 89 fa             	mov    %rdi,%rdx
    3271:	83 bb 84 00 00 00 00 	cmpl   $0x0,0x84(%rbx)
    3278:	0f 85 27 01 00 00    	jne    33a5 <lzma_code+0x1f5>
    327e:	8b 41 40             	mov    0x40(%rcx),%eax
    3281:	48 83 f8 04          	cmp    $0x4,%rax
    3285:	0f 87 15 01 00 00    	ja     33a0 <lzma_code+0x1f0>
    328b:	48 8d 15 c6 04 02 00 	lea    0x204c6(%rip),%rdx        # 23758 <_IO_stdin_used+0x758>
    3292:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    3296:	48 01 d0             	add    %rdx,%rax
    3299:	ff e0                	jmp    *%rax
    329b:	41 8d 42 ff          	lea    -0x1(%r10),%eax
    329f:	83 f8 03             	cmp    $0x3,%eax
    32a2:	49 89 db             	mov    %rbx,%r11
    32a5:	73 58                	jae    32ff <lzma_code+0x14f>
    32a7:	44 89 51 40          	mov    %r10d,0x40(%rcx)
    32ab:	eb 52                	jmp    32ff <lzma_code+0x14f>
    32ad:	b8 0b 00 00 00       	mov    $0xb,%eax
    32b2:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    32b7:	75 1b                	jne    32d4 <lzma_code+0x124>
    32b9:	e9 ff fe ff ff       	jmp    31bd <lzma_code+0xd>
    32be:	b8 0b 00 00 00       	mov    $0xb,%eax
    32c3:	c3                   	ret    
    32c4:	b8 0b 00 00 00       	mov    $0xb,%eax
    32c9:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    32ce:	0f 84 f4 fe ff ff    	je     31c8 <lzma_code+0x18>
    32d4:	c3                   	ret    
    32d5:	b8 01 00 00 00       	mov    $0x1,%eax
    32da:	e9 c6 00 00 00       	jmp    33a5 <lzma_code+0x1f5>
    32df:	41 83 fa 02          	cmp    $0x2,%r10d
    32e3:	0f 85 b7 00 00 00    	jne    33a0 <lzma_code+0x1f0>
    32e9:	48 8b 49 48          	mov    0x48(%rcx),%rcx
    32ed:	b8 0b 00 00 00       	mov    $0xb,%eax
    32f2:	49 89 db             	mov    %rbx,%r11
    32f5:	48 3b 4b 08          	cmp    0x8(%rbx),%rcx
    32f9:	0f 85 a6 00 00 00    	jne    33a5 <lzma_code+0x1f5>
    32ff:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    3306:	00 00 
    3308:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    330f:	00 
    3310:	49 8b 43 38          	mov    0x38(%r11),%rax
    3314:	48 8b 38             	mov    (%rax),%rdi
    3317:	49 8b 73 30          	mov    0x30(%r11),%rsi
    331b:	49 8b 13             	mov    (%r11),%rdx
    331e:	4d 8b 43 08          	mov    0x8(%r11),%r8
    3322:	4d 8b 4b 18          	mov    0x18(%r11),%r9
    3326:	48 83 ec 08          	sub    $0x8,%rsp
    332a:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
    332f:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    3334:	4d 89 df             	mov    %r11,%r15
    3337:	41 52                	push   %r10
    3339:	41 ff 73 20          	push   0x20(%r11)
    333d:	41 56                	push   %r14
    333f:	ff 50 18             	call   *0x18(%rax)
    3342:	48 83 c4 20          	add    $0x20,%rsp
    3346:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    334b:	49 01 0f             	add    %rcx,(%r15)
    334e:	49 8b 77 08          	mov    0x8(%r15),%rsi
    3352:	49 8b 7f 38          	mov    0x38(%r15),%rdi
    3356:	48 29 ce             	sub    %rcx,%rsi
    3359:	49 89 77 08          	mov    %rsi,0x8(%r15)
    335d:	49 01 4f 10          	add    %rcx,0x10(%r15)
    3361:	48 8b 14 24          	mov    (%rsp),%rdx
    3365:	49 01 57 18          	add    %rdx,0x18(%r15)
    3369:	49 29 57 20          	sub    %rdx,0x20(%r15)
    336d:	49 01 57 28          	add    %rdx,0x28(%r15)
    3371:	48 89 77 48          	mov    %rsi,0x48(%rdi)
    3375:	83 f8 06             	cmp    $0x6,%eax
    3378:	77 76                	ja     33f0 <lzma_code+0x240>
    337a:	89 c6                	mov    %eax,%esi
    337c:	48 8d 3d e9 03 02 00 	lea    0x203e9(%rip),%rdi        # 2376c <_IO_stdin_used+0x76c>
    3383:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
    3387:	48 01 fe             	add    %rdi,%rsi
    338a:	ff e6                	jmp    *%rsi
    338c:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    3390:	c6 41 54 00          	movb   $0x0,0x54(%rcx)
    3394:	eb 0f                	jmp    33a5 <lzma_code+0x1f5>
    3396:	41 83 fa 03          	cmp    $0x3,%r10d
    339a:	0f 84 49 ff ff ff    	je     32e9 <lzma_code+0x139>
    33a0:	b8 0b 00 00 00       	mov    $0xb,%eax
    33a5:	48 83 c4 10          	add    $0x10,%rsp
    33a9:	5b                   	pop    %rbx
    33aa:	41 5e                	pop    %r14
    33ac:	41 5f                	pop    %r15
    33ae:	c3                   	ret    
    33af:	41 83 fa 01          	cmp    $0x1,%r10d
    33b3:	75 eb                	jne    33a0 <lzma_code+0x1f0>
    33b5:	e9 2f ff ff ff       	jmp    32e9 <lzma_code+0x139>
    33ba:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    33be:	8b 51 40             	mov    0x40(%rcx),%edx
    33c1:	ff ca                	dec    %edx
    33c3:	31 f6                	xor    %esi,%esi
    33c5:	83 fa 02             	cmp    $0x2,%edx
    33c8:	40 0f 93 c6          	setae  %sil
    33cc:	c1 e6 02             	shl    $0x2,%esi
    33cf:	89 71 40             	mov    %esi,0x40(%rcx)
    33d2:	eb b8                	jmp    338c <lzma_code+0x1dc>
    33d4:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    33d8:	48 09 ca             	or     %rcx,%rdx
    33db:	75 20                	jne    33fd <lzma_code+0x24d>
    33dd:	b8 0a 00 00 00       	mov    $0xa,%eax
    33e2:	80 7e 54 00          	cmpb   $0x0,0x54(%rsi)
    33e6:	75 bd                	jne    33a5 <lzma_code+0x1f5>
    33e8:	c6 46 54 01          	movb   $0x1,0x54(%rsi)
    33ec:	31 c0                	xor    %eax,%eax
    33ee:	eb b5                	jmp    33a5 <lzma_code+0x1f5>
    33f0:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    33f4:	c7 41 40 05 00 00 00 	movl   $0x5,0x40(%rcx)
    33fb:	eb a8                	jmp    33a5 <lzma_code+0x1f5>
    33fd:	c6 46 54 00          	movb   $0x0,0x54(%rsi)
    3401:	31 c0                	xor    %eax,%eax
    3403:	eb a0                	jmp    33a5 <lzma_code+0x1f5>
    3405:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    340c:	00 00 00 00 

0000000000003410 <lzma_end>:
    3410:	48 85 ff             	test   %rdi,%rdi
    3413:	0f 84 ab 00 00 00    	je     34c4 <lzma_end+0xb4>
    3419:	41 57                	push   %r15
    341b:	41 56                	push   %r14
    341d:	53                   	push   %rbx
    341e:	48 89 fb             	mov    %rdi,%rbx
    3421:	4c 8b 77 38          	mov    0x38(%rdi),%r14
    3425:	4d 85 f6             	test   %r14,%r14
    3428:	0f 84 91 00 00 00    	je     34bf <lzma_end+0xaf>
    342e:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    3432:	49 83 7e 10 00       	cmpq   $0x0,0x10(%r14)
    3437:	74 5d                	je     3496 <lzma_end+0x86>
    3439:	4d 8d 7e 10          	lea    0x10(%r14),%r15
    343d:	49 8b 3e             	mov    (%r14),%rdi
    3440:	49 8b 46 20          	mov    0x20(%r14),%rax
    3444:	48 85 c0             	test   %rax,%rax
    3447:	74 04                	je     344d <lzma_end+0x3d>
    3449:	ff d0                	call   *%rax
    344b:	eb 21                	jmp    346e <lzma_end+0x5e>
    344d:	48 85 f6             	test   %rsi,%rsi
    3450:	74 17                	je     3469 <lzma_end+0x59>
    3452:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    3456:	48 85 c9             	test   %rcx,%rcx
    3459:	74 0e                	je     3469 <lzma_end+0x59>
    345b:	48 8b 46 10          	mov    0x10(%rsi),%rax
    345f:	48 89 fe             	mov    %rdi,%rsi
    3462:	48 89 c7             	mov    %rax,%rdi
    3465:	ff d1                	call   *%rcx
    3467:	eb 05                	jmp    346e <lzma_end+0x5e>
    3469:	e8 c2 eb ff ff       	call   2030 <free@plt>
    346e:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    3475:	49 c7 46 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%r14)
    347c:	ff 
    347d:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480:	41 0f 11 47 20       	movups %xmm0,0x20(%r15)
    3485:	41 0f 11 47 10       	movups %xmm0,0x10(%r15)
    348a:	41 0f 11 07          	movups %xmm0,(%r15)
    348e:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    3492:	4c 8b 73 38          	mov    0x38(%rbx),%r14
    3496:	48 85 f6             	test   %rsi,%rsi
    3499:	74 14                	je     34af <lzma_end+0x9f>
    349b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    349f:	48 85 c0             	test   %rax,%rax
    34a2:	74 0b                	je     34af <lzma_end+0x9f>
    34a4:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    34a8:	4c 89 f6             	mov    %r14,%rsi
    34ab:	ff d0                	call   *%rax
    34ad:	eb 08                	jmp    34b7 <lzma_end+0xa7>
    34af:	4c 89 f7             	mov    %r14,%rdi
    34b2:	e8 79 eb ff ff       	call   2030 <free@plt>
    34b7:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    34be:	00 
    34bf:	5b                   	pop    %rbx
    34c0:	41 5e                	pop    %r14
    34c2:	41 5f                	pop    %r15
    34c4:	c3                   	ret    
    34c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    34cc:	00 00 00 00 

00000000000034d0 <lzma_get_check>:
    34d0:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    34d4:	48 8b 41 28          	mov    0x28(%rcx),%rax
    34d8:	48 85 c0             	test   %rax,%rax
    34db:	74 05                	je     34e2 <lzma_get_check+0x12>
    34dd:	48 8b 39             	mov    (%rcx),%rdi
    34e0:	ff e0                	jmp    *%rax
    34e2:	31 c0                	xor    %eax,%eax
    34e4:	c3                   	ret    
    34e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    34ec:	00 00 00 00 

00000000000034f0 <lzma_memusage>:
    34f0:	48 85 ff             	test   %rdi,%rdi
    34f3:	74 39                	je     352e <lzma_memusage+0x3e>
    34f5:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    34f9:	48 85 c9             	test   %rcx,%rcx
    34fc:	74 30                	je     352e <lzma_memusage+0x3e>
    34fe:	48 8b 41 30          	mov    0x30(%rcx),%rax
    3502:	48 85 c0             	test   %rax,%rax
    3505:	74 27                	je     352e <lzma_memusage+0x3e>
    3507:	48 83 ec 18          	sub    $0x18,%rsp
    350b:	48 8b 39             	mov    (%rcx),%rdi
    350e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    3513:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    3518:	31 c9                	xor    %ecx,%ecx
    351a:	ff d0                	call   *%rax
    351c:	89 c1                	mov    %eax,%ecx
    351e:	31 c0                	xor    %eax,%eax
    3520:	85 c9                	test   %ecx,%ecx
    3522:	75 05                	jne    3529 <lzma_memusage+0x39>
    3524:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3529:	48 83 c4 18          	add    $0x18,%rsp
    352d:	c3                   	ret    
    352e:	31 c0                	xor    %eax,%eax
    3530:	c3                   	ret    
    3531:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3538:	0f 1f 84 00 00 00 00 
    353f:	00 

0000000000003540 <lzma_memlimit_get>:
    3540:	48 85 ff             	test   %rdi,%rdi
    3543:	74 39                	je     357e <lzma_memlimit_get+0x3e>
    3545:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    3549:	48 85 c9             	test   %rcx,%rcx
    354c:	74 30                	je     357e <lzma_memlimit_get+0x3e>
    354e:	48 8b 41 30          	mov    0x30(%rcx),%rax
    3552:	48 85 c0             	test   %rax,%rax
    3555:	74 27                	je     357e <lzma_memlimit_get+0x3e>
    3557:	48 83 ec 18          	sub    $0x18,%rsp
    355b:	48 8b 39             	mov    (%rcx),%rdi
    355e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    3563:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3568:	31 c9                	xor    %ecx,%ecx
    356a:	ff d0                	call   *%rax
    356c:	89 c1                	mov    %eax,%ecx
    356e:	31 c0                	xor    %eax,%eax
    3570:	85 c9                	test   %ecx,%ecx
    3572:	75 05                	jne    3579 <lzma_memlimit_get+0x39>
    3574:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3579:	48 83 c4 18          	add    $0x18,%rsp
    357d:	c3                   	ret    
    357e:	31 c0                	xor    %eax,%eax
    3580:	c3                   	ret    
    3581:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3588:	0f 1f 84 00 00 00 00 
    358f:	00 

0000000000003590 <lzma_memlimit_set>:
    3590:	b8 0b 00 00 00       	mov    $0xb,%eax
    3595:	48 85 ff             	test   %rdi,%rdi
    3598:	74 3e                	je     35d8 <lzma_memlimit_set+0x48>
    359a:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    359e:	48 85 d2             	test   %rdx,%rdx
    35a1:	74 35                	je     35d8 <lzma_memlimit_set+0x48>
    35a3:	4c 8b 42 30          	mov    0x30(%rdx),%r8
    35a7:	4d 85 c0             	test   %r8,%r8
    35aa:	74 2c                	je     35d8 <lzma_memlimit_set+0x48>
    35ac:	48 89 f1             	mov    %rsi,%rcx
    35af:	48 ff ce             	dec    %rsi
    35b2:	b8 06 00 00 00       	mov    $0x6,%eax
    35b7:	48 81 fe ff 7f 00 00 	cmp    $0x7fff,%rsi
    35be:	72 18                	jb     35d8 <lzma_memlimit_set+0x48>
    35c0:	48 83 ec 18          	sub    $0x18,%rsp
    35c4:	48 8b 3a             	mov    (%rdx),%rdi
    35c7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    35cc:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    35d1:	41 ff d0             	call   *%r8
    35d4:	48 83 c4 18          	add    $0x18,%rsp
    35d8:	c3                   	ret    
    35d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035e0 <lzma_block_compressed_size>:
    35e0:	b8 0b 00 00 00       	mov    $0xb,%eax
    35e5:	48 85 ff             	test   %rdi,%rdi
    35e8:	74 05                	je     35ef <lzma_block_compressed_size+0xf>
    35ea:	83 3f 00             	cmpl   $0x0,(%rdi)
    35ed:	74 01                	je     35f0 <lzma_block_compressed_size+0x10>
    35ef:	c3                   	ret    
    35f0:	41 57                	push   %r15
    35f2:	41 56                	push   %r14
    35f4:	53                   	push   %rbx
    35f5:	44 8b 77 04          	mov    0x4(%rdi),%r14d
    35f9:	41 8d 4e f8          	lea    -0x8(%r14),%ecx
    35fd:	81 f9 f8 03 00 00    	cmp    $0x3f8,%ecx
    3603:	0f 87 9a 00 00 00    	ja     36a3 <lzma_block_compressed_size+0xc3>
    3609:	44 89 f1             	mov    %r14d,%ecx
    360c:	83 e1 03             	and    $0x3,%ecx
    360f:	0f 85 8e 00 00 00    	jne    36a3 <lzma_block_compressed_size+0xc3>
    3615:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    3619:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    361d:	0f 8c 80 00 00 00    	jl     36a3 <lzma_block_compressed_size+0xc3>
    3623:	4d 85 ff             	test   %r15,%r15
    3626:	74 7b                	je     36a3 <lzma_block_compressed_size+0xc3>
    3628:	48 89 f3             	mov    %rsi,%rbx
    362b:	8b 4f 08             	mov    0x8(%rdi),%ecx
    362e:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    3632:	74 39                	je     366d <lzma_block_compressed_size+0x8d>
    3634:	83 f9 0f             	cmp    $0xf,%ecx
    3637:	77 34                	ja     366d <lzma_block_compressed_size+0x8d>
    3639:	4d 01 f7             	add    %r14,%r15
    363c:	49 89 fe             	mov    %rdi,%r14
    363f:	89 cf                	mov    %ecx,%edi
    3641:	e8 0a 73 00 00       	call   a950 <lzma_check_size>
    3646:	89 c1                	mov    %eax,%ecx
    3648:	b8 0b 00 00 00       	mov    $0xb,%eax
    364d:	89 c9                	mov    %ecx,%ecx
    364f:	4c 01 f9             	add    %r15,%rcx
    3652:	48 ba fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rdx
    3659:	ff ff 7f 
    365c:	48 39 d1             	cmp    %rdx,%rcx
    365f:	77 42                	ja     36a3 <lzma_block_compressed_size+0xc3>
    3661:	4c 89 f7             	mov    %r14,%rdi
    3664:	45 8b 76 04          	mov    0x4(%r14),%r14d
    3668:	8b 4f 08             	mov    0x8(%rdi),%ecx
    366b:	eb 05                	jmp    3672 <lzma_block_compressed_size+0x92>
    366d:	83 f9 0f             	cmp    $0xf,%ecx
    3670:	77 31                	ja     36a3 <lzma_block_compressed_size+0xc3>
    3672:	49 89 ff             	mov    %rdi,%r15
    3675:	89 cf                	mov    %ecx,%edi
    3677:	e8 d4 72 00 00       	call   a950 <lzma_check_size>
    367c:	89 c1                	mov    %eax,%ecx
    367e:	44 01 f1             	add    %r14d,%ecx
    3681:	b8 09 00 00 00       	mov    $0x9,%eax
    3686:	48 29 cb             	sub    %rcx,%rbx
    3689:	76 18                	jbe    36a3 <lzma_block_compressed_size+0xc3>
    368b:	48 89 d9             	mov    %rbx,%rcx
    368e:	49 8b 57 10          	mov    0x10(%r15),%rdx
    3692:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    3696:	74 05                	je     369d <lzma_block_compressed_size+0xbd>
    3698:	48 39 ca             	cmp    %rcx,%rdx
    369b:	75 06                	jne    36a3 <lzma_block_compressed_size+0xc3>
    369d:	49 89 4f 10          	mov    %rcx,0x10(%r15)
    36a1:	31 c0                	xor    %eax,%eax
    36a3:	5b                   	pop    %rbx
    36a4:	41 5e                	pop    %r14
    36a6:	41 5f                	pop    %r15
    36a8:	c3                   	ret    
    36a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036b0 <lzma_block_unpadded_size>:
    36b0:	48 85 ff             	test   %rdi,%rdi
    36b3:	74 05                	je     36ba <lzma_block_unpadded_size+0xa>
    36b5:	83 3f 00             	cmpl   $0x0,(%rdi)
    36b8:	74 03                	je     36bd <lzma_block_unpadded_size+0xd>
    36ba:	31 c0                	xor    %eax,%eax
    36bc:	c3                   	ret    
    36bd:	8b 4f 04             	mov    0x4(%rdi),%ecx
    36c0:	8d 51 f8             	lea    -0x8(%rcx),%edx
    36c3:	31 c0                	xor    %eax,%eax
    36c5:	81 fa f8 03 00 00    	cmp    $0x3f8,%edx
    36cb:	77 ef                	ja     36bc <lzma_block_unpadded_size+0xc>
    36cd:	89 ca                	mov    %ecx,%edx
    36cf:	83 e2 03             	and    $0x3,%edx
    36d2:	75 e8                	jne    36bc <lzma_block_unpadded_size+0xc>
    36d4:	53                   	push   %rbx
    36d5:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    36d9:	31 c0                	xor    %eax,%eax
    36db:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    36df:	7c 3b                	jl     371c <lzma_block_unpadded_size+0x6c>
    36e1:	48 85 db             	test   %rbx,%rbx
    36e4:	74 36                	je     371c <lzma_block_unpadded_size+0x6c>
    36e6:	8b 7f 08             	mov    0x8(%rdi),%edi
    36e9:	31 c0                	xor    %eax,%eax
    36eb:	83 ff 10             	cmp    $0x10,%edi
    36ee:	48 19 c0             	sbb    %rax,%rax
    36f1:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    36f5:	74 25                	je     371c <lzma_block_unpadded_size+0x6c>
    36f7:	83 ff 0f             	cmp    $0xf,%edi
    36fa:	77 20                	ja     371c <lzma_block_unpadded_size+0x6c>
    36fc:	48 01 cb             	add    %rcx,%rbx
    36ff:	e8 4c 72 00 00       	call   a950 <lzma_check_size>
    3704:	89 c1                	mov    %eax,%ecx
    3706:	48 01 d9             	add    %rbx,%rcx
    3709:	31 c0                	xor    %eax,%eax
    370b:	48 ba fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rdx
    3712:	ff ff 7f 
    3715:	48 39 d1             	cmp    %rdx,%rcx
    3718:	48 0f 46 c1          	cmovbe %rcx,%rax
    371c:	5b                   	pop    %rbx
    371d:	c3                   	ret    
    371e:	66 90                	xchg   %ax,%ax

0000000000003720 <lzma_block_total_size>:
    3720:	48 85 ff             	test   %rdi,%rdi
    3723:	74 05                	je     372a <lzma_block_total_size+0xa>
    3725:	83 3f 00             	cmpl   $0x0,(%rdi)
    3728:	74 03                	je     372d <lzma_block_total_size+0xd>
    372a:	31 c0                	xor    %eax,%eax
    372c:	c3                   	ret    
    372d:	8b 4f 04             	mov    0x4(%rdi),%ecx
    3730:	8d 51 f8             	lea    -0x8(%rcx),%edx
    3733:	31 c0                	xor    %eax,%eax
    3735:	81 fa f8 03 00 00    	cmp    $0x3f8,%edx
    373b:	77 ef                	ja     372c <lzma_block_total_size+0xc>
    373d:	89 ca                	mov    %ecx,%edx
    373f:	83 e2 03             	and    $0x3,%edx
    3742:	75 e8                	jne    372c <lzma_block_total_size+0xc>
    3744:	53                   	push   %rbx
    3745:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    3749:	31 c0                	xor    %eax,%eax
    374b:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    374f:	7c 4a                	jl     379b <lzma_block_total_size+0x7b>
    3751:	48 85 db             	test   %rbx,%rbx
    3754:	74 45                	je     379b <lzma_block_total_size+0x7b>
    3756:	8b 7f 08             	mov    0x8(%rdi),%edi
    3759:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    375d:	74 34                	je     3793 <lzma_block_total_size+0x73>
    375f:	83 ff 0f             	cmp    $0xf,%edi
    3762:	77 2f                	ja     3793 <lzma_block_total_size+0x73>
    3764:	48 01 cb             	add    %rcx,%rbx
    3767:	e8 e4 71 00 00       	call   a950 <lzma_check_size>
    376c:	89 c0                	mov    %eax,%eax
    376e:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    3772:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
    3776:	48 83 c2 03          	add    $0x3,%rdx
    377a:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    377e:	31 c0                	xor    %eax,%eax
    3780:	48 be fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rsi
    3787:	ff ff 7f 
    378a:	48 39 f1             	cmp    %rsi,%rcx
    378d:	48 0f 46 c2          	cmovbe %rdx,%rax
    3791:	5b                   	pop    %rbx
    3792:	c3                   	ret    
    3793:	31 c0                	xor    %eax,%eax
    3795:	83 ff 10             	cmp    $0x10,%edi
    3798:	48 19 c0             	sbb    %rax,%rax
    379b:	5b                   	pop    %rbx
    379c:	c3                   	ret    
    379d:	0f 1f 00             	nopl   (%rax)

00000000000037a0 <lzma_easy_preset>:
    37a0:	41 56                	push   %r14
    37a2:	53                   	push   %rbx
    37a3:	50                   	push   %rax
    37a4:	48 89 fb             	mov    %rdi,%rbx
    37a7:	4c 8d 77 50          	lea    0x50(%rdi),%r14
    37ab:	4c 89 f7             	mov    %r14,%rdi
    37ae:	e8 cd e4 00 00       	call   11c80 <lzma_lzma_preset>
    37b3:	84 c0                	test   %al,%al
    37b5:	75 13                	jne    37ca <lzma_easy_preset+0x2a>
    37b7:	48 c7 03 21 00 00 00 	movq   $0x21,(%rbx)
    37be:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    37c2:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
    37c9:	ff 
    37ca:	84 c0                	test   %al,%al
    37cc:	0f 95 c0             	setne  %al
    37cf:	48 83 c4 08          	add    $0x8,%rsp
    37d3:	5b                   	pop    %rbx
    37d4:	41 5e                	pop    %r14
    37d6:	c3                   	ret    
    37d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    37de:	00 00 

00000000000037e0 <lzma_filters_copy>:
    37e0:	55                   	push   %rbp
    37e1:	41 57                	push   %r15
    37e3:	41 56                	push   %r14
    37e5:	41 55                	push   %r13
    37e7:	41 54                	push   %r12
    37e9:	53                   	push   %rbx
    37ea:	50                   	push   %rax
    37eb:	41 bf 0b 00 00 00    	mov    $0xb,%r15d
    37f1:	48 85 ff             	test   %rdi,%rdi
    37f4:	0f 84 44 04 00 00    	je     3c3e <lzma_filters_copy+0x45e>
    37fa:	48 89 f3             	mov    %rsi,%rbx
    37fd:	48 85 f6             	test   %rsi,%rsi
    3800:	0f 84 38 04 00 00    	je     3c3e <lzma_filters_copy+0x45e>
    3806:	49 89 fc             	mov    %rdi,%r12
    3809:	48 8b 07             	mov    (%rdi),%rax
    380c:	45 31 ff             	xor    %r15d,%r15d
    380f:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3813:	74 44                	je     3859 <lzma_filters_copy+0x79>
    3815:	49 89 d6             	mov    %rdx,%r14
    3818:	48 89 03             	mov    %rax,(%rbx)
    381b:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
    3821:	74 3d                	je     3860 <lzma_filters_copy+0x80>
    3823:	49 8b 04 24          	mov    (%r12),%rax
    3827:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    382d:	b2 01                	mov    $0x1,%dl
    382f:	31 ed                	xor    %ebp,%ebp
    3831:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3835:	48 83 f9 22          	cmp    $0x22,%rcx
    3839:	0f 87 db 00 00 00    	ja     391a <lzma_filters_copy+0x13a>
    383f:	48 8d 05 4a ff 01 00 	lea    0x1ff4a(%rip),%rax        # 23790 <_IO_stdin_used+0x790>
    3846:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    384a:	48 01 c1             	add    %rax,%rcx
    384d:	ff e1                	jmp    *%rcx
    384f:	bd 09 00 00 00       	mov    $0x9,%ebp
    3854:	e9 18 01 00 00       	jmp    3971 <lzma_filters_copy+0x191>
    3859:	31 ed                	xor    %ebp,%ebp
    385b:	e9 80 03 00 00       	jmp    3be0 <lzma_filters_copy+0x400>
    3860:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    3867:	00 
    3868:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    386d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3871:	0f 84 44 01 00 00    	je     39bb <lzma_filters_copy+0x1db>
    3877:	48 89 43 10          	mov    %rax,0x10(%rbx)
    387b:	49 83 7c 24 18 00    	cmpq   $0x0,0x18(%r12)
    3881:	74 3a                	je     38bd <lzma_filters_copy+0xdd>
    3883:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    3888:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    388e:	bd 01 00 00 00       	mov    $0x1,%ebp
    3893:	31 d2                	xor    %edx,%edx
    3895:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3899:	48 83 f9 22          	cmp    $0x22,%rcx
    389d:	0f 87 31 01 00 00    	ja     39d4 <lzma_filters_copy+0x1f4>
    38a3:	48 8d 05 72 ff 01 00 	lea    0x1ff72(%rip),%rax        # 2381c <_IO_stdin_used+0x81c>
    38aa:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    38ae:	48 01 c1             	add    %rax,%rcx
    38b1:	ff e1                	jmp    *%rcx
    38b3:	ba 09 00 00 00       	mov    $0x9,%edx
    38b8:	e9 61 01 00 00       	jmp    3a1e <lzma_filters_copy+0x23e>
    38bd:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    38c4:	00 
    38c5:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    38ca:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    38ce:	0f 84 91 01 00 00    	je     3a65 <lzma_filters_copy+0x285>
    38d4:	48 89 43 20          	mov    %rax,0x20(%rbx)
    38d8:	49 83 7c 24 28 00    	cmpq   $0x0,0x28(%r12)
    38de:	74 4e                	je     392e <lzma_filters_copy+0x14e>
    38e0:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    38e5:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    38eb:	bd 02 00 00 00       	mov    $0x2,%ebp
    38f0:	31 d2                	xor    %edx,%edx
    38f2:	48 8d 48 01          	lea    0x1(%rax),%rcx
    38f6:	48 83 f9 22          	cmp    $0x22,%rcx
    38fa:	0f 87 6f 01 00 00    	ja     3a6f <lzma_filters_copy+0x28f>
    3900:	48 8d 05 a1 ff 01 00 	lea    0x1ffa1(%rip),%rax        # 238a8 <_IO_stdin_used+0x8a8>
    3907:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    390b:	48 01 c1             	add    %rax,%rcx
    390e:	ff e1                	jmp    *%rcx
    3910:	ba 09 00 00 00       	mov    $0x9,%edx
    3915:	e9 9f 01 00 00       	jmp    3ab9 <lzma_filters_copy+0x2d9>
    391a:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    3921:	00 00 40 
    3924:	48 39 c8             	cmp    %rcx,%rax
    3927:	74 48                	je     3971 <lzma_filters_copy+0x191>
    3929:	e9 d0 02 00 00       	jmp    3bfe <lzma_filters_copy+0x41e>
    392e:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    3935:	00 
    3936:	e9 b6 01 00 00       	jmp    3af1 <lzma_filters_copy+0x311>
    393b:	bd 01 00 00 00       	mov    $0x1,%ebp
    3940:	eb 2f                	jmp    3971 <lzma_filters_copy+0x191>
    3942:	bd 04 00 00 00       	mov    $0x4,%ebp
    3947:	eb 28                	jmp    3971 <lzma_filters_copy+0x191>
    3949:	bd 06 00 00 00       	mov    $0x6,%ebp
    394e:	eb 21                	jmp    3971 <lzma_filters_copy+0x191>
    3950:	bd 02 00 00 00       	mov    $0x2,%ebp
    3955:	eb 1a                	jmp    3971 <lzma_filters_copy+0x191>
    3957:	bd 03 00 00 00       	mov    $0x3,%ebp
    395c:	eb 13                	jmp    3971 <lzma_filters_copy+0x191>
    395e:	bd 08 00 00 00       	mov    $0x8,%ebp
    3963:	eb 0c                	jmp    3971 <lzma_filters_copy+0x191>
    3965:	bd 05 00 00 00       	mov    $0x5,%ebp
    396a:	eb 05                	jmp    3971 <lzma_filters_copy+0x191>
    396c:	bd 07 00 00 00       	mov    $0x7,%ebp
    3971:	48 8d 04 6d 00 00 00 	lea    0x0(,%rbp,2),%rax
    3978:	00 
    3979:	48 01 e8             	add    %rbp,%rax
    397c:	48 8d 0d 3d 01 02 00 	lea    0x2013d(%rip),%rcx        # 23ac0 <features>
    3983:	4c 8b 6c c1 08       	mov    0x8(%rcx,%rax,8),%r13
    3988:	4c 89 ef             	mov    %r13,%rdi
    398b:	4c 89 f6             	mov    %r14,%rsi
    398e:	e8 2d f5 ff ff       	call   2ec0 <lzma_alloc>
    3993:	48 89 43 08          	mov    %rax,0x8(%rbx)
    3997:	48 85 c0             	test   %rax,%rax
    399a:	74 29                	je     39c5 <lzma_filters_copy+0x1e5>
    399c:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
    39a1:	48 89 c7             	mov    %rax,%rdi
    39a4:	4c 89 ea             	mov    %r13,%rdx
    39a7:	e8 a4 e7 ff ff       	call   2150 <memcpy@plt>
    39ac:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    39b1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    39b5:	0f 85 bc fe ff ff    	jne    3877 <lzma_filters_copy+0x97>
    39bb:	bd 01 00 00 00       	mov    $0x1,%ebp
    39c0:	e9 1b 02 00 00       	jmp    3be0 <lzma_filters_copy+0x400>
    39c5:	41 bd 05 00 00 00    	mov    $0x5,%r13d
    39cb:	31 ed                	xor    %ebp,%ebp
    39cd:	b2 01                	mov    $0x1,%dl
    39cf:	e9 2a 02 00 00       	jmp    3bfe <lzma_filters_copy+0x41e>
    39d4:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    39db:	00 00 40 
    39de:	48 39 c8             	cmp    %rcx,%rax
    39e1:	74 3b                	je     3a1e <lzma_filters_copy+0x23e>
    39e3:	e9 16 02 00 00       	jmp    3bfe <lzma_filters_copy+0x41e>
    39e8:	ba 01 00 00 00       	mov    $0x1,%edx
    39ed:	eb 2f                	jmp    3a1e <lzma_filters_copy+0x23e>
    39ef:	ba 04 00 00 00       	mov    $0x4,%edx
    39f4:	eb 28                	jmp    3a1e <lzma_filters_copy+0x23e>
    39f6:	ba 06 00 00 00       	mov    $0x6,%edx
    39fb:	eb 21                	jmp    3a1e <lzma_filters_copy+0x23e>
    39fd:	ba 02 00 00 00       	mov    $0x2,%edx
    3a02:	eb 1a                	jmp    3a1e <lzma_filters_copy+0x23e>
    3a04:	ba 03 00 00 00       	mov    $0x3,%edx
    3a09:	eb 13                	jmp    3a1e <lzma_filters_copy+0x23e>
    3a0b:	ba 08 00 00 00       	mov    $0x8,%edx
    3a10:	eb 0c                	jmp    3a1e <lzma_filters_copy+0x23e>
    3a12:	ba 05 00 00 00       	mov    $0x5,%edx
    3a17:	eb 05                	jmp    3a1e <lzma_filters_copy+0x23e>
    3a19:	ba 07 00 00 00       	mov    $0x7,%edx
    3a1e:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    3a22:	48 8d 0d 97 00 02 00 	lea    0x20097(%rip),%rcx        # 23ac0 <features>
    3a29:	4c 8b 6c c1 08       	mov    0x8(%rcx,%rax,8),%r13
    3a2e:	4c 89 ef             	mov    %r13,%rdi
    3a31:	4c 89 f6             	mov    %r14,%rsi
    3a34:	e8 87 f4 ff ff       	call   2ec0 <lzma_alloc>
    3a39:	48 89 43 18          	mov    %rax,0x18(%rbx)
    3a3d:	48 85 c0             	test   %rax,%rax
    3a40:	0f 84 b0 01 00 00    	je     3bf6 <lzma_filters_copy+0x416>
    3a46:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    3a4b:	48 89 c7             	mov    %rax,%rdi
    3a4e:	4c 89 ea             	mov    %r13,%rdx
    3a51:	e8 fa e6 ff ff       	call   2150 <memcpy@plt>
    3a56:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    3a5b:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3a5f:	0f 85 6f fe ff ff    	jne    38d4 <lzma_filters_copy+0xf4>
    3a65:	bd 02 00 00 00       	mov    $0x2,%ebp
    3a6a:	e9 71 01 00 00       	jmp    3be0 <lzma_filters_copy+0x400>
    3a6f:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    3a76:	00 00 40 
    3a79:	48 39 c8             	cmp    %rcx,%rax
    3a7c:	74 3b                	je     3ab9 <lzma_filters_copy+0x2d9>
    3a7e:	e9 7b 01 00 00       	jmp    3bfe <lzma_filters_copy+0x41e>
    3a83:	ba 01 00 00 00       	mov    $0x1,%edx
    3a88:	eb 2f                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3a8a:	ba 04 00 00 00       	mov    $0x4,%edx
    3a8f:	eb 28                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3a91:	ba 06 00 00 00       	mov    $0x6,%edx
    3a96:	eb 21                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3a98:	ba 02 00 00 00       	mov    $0x2,%edx
    3a9d:	eb 1a                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3a9f:	ba 03 00 00 00       	mov    $0x3,%edx
    3aa4:	eb 13                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3aa6:	ba 08 00 00 00       	mov    $0x8,%edx
    3aab:	eb 0c                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3aad:	ba 05 00 00 00       	mov    $0x5,%edx
    3ab2:	eb 05                	jmp    3ab9 <lzma_filters_copy+0x2d9>
    3ab4:	ba 07 00 00 00       	mov    $0x7,%edx
    3ab9:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    3abd:	48 8d 0d fc ff 01 00 	lea    0x1fffc(%rip),%rcx        # 23ac0 <features>
    3ac4:	4c 8b 6c c1 08       	mov    0x8(%rcx,%rax,8),%r13
    3ac9:	4c 89 ef             	mov    %r13,%rdi
    3acc:	4c 89 f6             	mov    %r14,%rsi
    3acf:	e8 ec f3 ff ff       	call   2ec0 <lzma_alloc>
    3ad4:	48 89 43 28          	mov    %rax,0x28(%rbx)
    3ad8:	48 85 c0             	test   %rax,%rax
    3adb:	0f 84 15 01 00 00    	je     3bf6 <lzma_filters_copy+0x416>
    3ae1:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
    3ae6:	48 89 c7             	mov    %rax,%rdi
    3ae9:	4c 89 ea             	mov    %r13,%rdx
    3aec:	e8 5f e6 ff ff       	call   2150 <memcpy@plt>
    3af1:	49 8b 44 24 30       	mov    0x30(%r12),%rax
    3af6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3afa:	74 3f                	je     3b3b <lzma_filters_copy+0x35b>
    3afc:	48 89 43 30          	mov    %rax,0x30(%rbx)
    3b00:	49 83 7c 24 38 00    	cmpq   $0x0,0x38(%r12)
    3b06:	74 3d                	je     3b45 <lzma_filters_copy+0x365>
    3b08:	49 8b 44 24 30       	mov    0x30(%r12),%rax
    3b0d:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    3b13:	bd 03 00 00 00       	mov    $0x3,%ebp
    3b18:	31 d2                	xor    %edx,%edx
    3b1a:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3b1e:	48 83 f9 22          	cmp    $0x22,%rcx
    3b22:	77 2b                	ja     3b4f <lzma_filters_copy+0x36f>
    3b24:	48 8d 05 09 fe 01 00 	lea    0x1fe09(%rip),%rax        # 23934 <_IO_stdin_used+0x934>
    3b2b:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    3b2f:	48 01 c1             	add    %rax,%rcx
    3b32:	ff e1                	jmp    *%rcx
    3b34:	ba 09 00 00 00       	mov    $0x9,%edx
    3b39:	eb 5e                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b3b:	bd 03 00 00 00       	mov    $0x3,%ebp
    3b40:	e9 9b 00 00 00       	jmp    3be0 <lzma_filters_copy+0x400>
    3b45:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    3b4c:	00 
    3b4d:	eb 7e                	jmp    3bcd <lzma_filters_copy+0x3ed>
    3b4f:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    3b56:	00 00 40 
    3b59:	48 39 c8             	cmp    %rcx,%rax
    3b5c:	74 3b                	je     3b99 <lzma_filters_copy+0x3b9>
    3b5e:	e9 9b 00 00 00       	jmp    3bfe <lzma_filters_copy+0x41e>
    3b63:	ba 01 00 00 00       	mov    $0x1,%edx
    3b68:	eb 2f                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b6a:	ba 04 00 00 00       	mov    $0x4,%edx
    3b6f:	eb 28                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b71:	ba 06 00 00 00       	mov    $0x6,%edx
    3b76:	eb 21                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b78:	ba 02 00 00 00       	mov    $0x2,%edx
    3b7d:	eb 1a                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b7f:	ba 03 00 00 00       	mov    $0x3,%edx
    3b84:	eb 13                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b86:	ba 08 00 00 00       	mov    $0x8,%edx
    3b8b:	eb 0c                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b8d:	ba 05 00 00 00       	mov    $0x5,%edx
    3b92:	eb 05                	jmp    3b99 <lzma_filters_copy+0x3b9>
    3b94:	ba 07 00 00 00       	mov    $0x7,%edx
    3b99:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    3b9d:	48 8d 0d 1c ff 01 00 	lea    0x1ff1c(%rip),%rcx        # 23ac0 <features>
    3ba4:	4c 8b 6c c1 08       	mov    0x8(%rcx,%rax,8),%r13
    3ba9:	4c 89 ef             	mov    %r13,%rdi
    3bac:	4c 89 f6             	mov    %r14,%rsi
    3baf:	e8 0c f3 ff ff       	call   2ec0 <lzma_alloc>
    3bb4:	48 89 43 38          	mov    %rax,0x38(%rbx)
    3bb8:	48 85 c0             	test   %rax,%rax
    3bbb:	74 39                	je     3bf6 <lzma_filters_copy+0x416>
    3bbd:	49 8b 74 24 38       	mov    0x38(%r12),%rsi
    3bc2:	48 89 c7             	mov    %rax,%rdi
    3bc5:	4c 89 ea             	mov    %r13,%rdx
    3bc8:	e8 83 e5 ff ff       	call   2150 <memcpy@plt>
    3bcd:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    3bd3:	bd 04 00 00 00       	mov    $0x4,%ebp
    3bd8:	49 83 7c 24 40 ff    	cmpq   $0xffffffffffffffff,0x40(%r12)
    3bde:	75 25                	jne    3c05 <lzma_filters_copy+0x425>
    3be0:	c1 e5 04             	shl    $0x4,%ebp
    3be3:	48 c7 04 2b ff ff ff 	movq   $0xffffffffffffffff,(%rbx,%rbp,1)
    3bea:	ff 
    3beb:	48 c7 44 2b 08 00 00 	movq   $0x0,0x8(%rbx,%rbp,1)
    3bf2:	00 00 
    3bf4:	eb 48                	jmp    3c3e <lzma_filters_copy+0x45e>
    3bf6:	41 bd 05 00 00 00    	mov    $0x5,%r13d
    3bfc:	31 d2                	xor    %edx,%edx
    3bfe:	45 89 ef             	mov    %r13d,%r15d
    3c01:	84 d2                	test   %dl,%dl
    3c03:	75 39                	jne    3c3e <lzma_filters_copy+0x45e>
    3c05:	89 e8                	mov    %ebp,%eax
    3c07:	c1 e0 04             	shl    $0x4,%eax
    3c0a:	48 01 c3             	add    %rax,%rbx
    3c0d:	48 83 c3 f8          	add    $0xfffffffffffffff8,%rbx
    3c11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3c18:	0f 1f 84 00 00 00 00 
    3c1f:	00 
    3c20:	48 8b 3b             	mov    (%rbx),%rdi
    3c23:	4c 89 f6             	mov    %r14,%rsi
    3c26:	e8 c5 f2 ff ff       	call   2ef0 <lzma_free>
    3c2b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    3c32:	48 83 c3 f0          	add    $0xfffffffffffffff0,%rbx
    3c36:	48 ff cd             	dec    %rbp
    3c39:	75 e5                	jne    3c20 <lzma_filters_copy+0x440>
    3c3b:	45 89 ef             	mov    %r13d,%r15d
    3c3e:	44 89 f8             	mov    %r15d,%eax
    3c41:	48 83 c4 08          	add    $0x8,%rsp
    3c45:	5b                   	pop    %rbx
    3c46:	41 5c                	pop    %r12
    3c48:	41 5d                	pop    %r13
    3c4a:	41 5e                	pop    %r14
    3c4c:	41 5f                	pop    %r15
    3c4e:	5d                   	pop    %rbp
    3c4f:	c3                   	ret    

0000000000003c50 <lzma_raw_coder_init>:
    3c50:	55                   	push   %rbp
    3c51:	41 57                	push   %r15
    3c53:	41 56                	push   %r14
    3c55:	41 55                	push   %r13
    3c57:	41 54                	push   %r12
    3c59:	53                   	push   %rbx
    3c5a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    3c61:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3c66:	b8 0b 00 00 00       	mov    $0xb,%eax
    3c6b:	48 85 d2             	test   %rdx,%rdx
    3c6e:	0f 84 91 01 00 00    	je     3e05 <lzma_raw_coder_init+0x1b5>
    3c74:	49 89 d6             	mov    %rdx,%r14
    3c77:	48 8b 1a             	mov    (%rdx),%rbx
    3c7a:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    3c7e:	0f 84 81 01 00 00    	je     3e05 <lzma_raw_coder_init+0x1b5>
    3c84:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
    3c89:	49 8d 56 10          	lea    0x10(%r14),%rdx
    3c8d:	41 b3 01             	mov    $0x1,%r11b
    3c90:	31 c9                	xor    %ecx,%ecx
    3c92:	4c 8d 15 27 fd 01 00 	lea    0x1fd27(%rip),%r10        # 239c0 <_IO_stdin_used+0x9c0>
    3c99:	31 ed                	xor    %ebp,%ebp
    3c9b:	b8 08 00 00 00       	mov    $0x8,%eax
    3ca0:	49 bf 01 00 00 00 00 	movabs $0x4000000000000001,%r15
    3ca7:	00 00 40 
    3caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3cb0:	45 31 e4             	xor    %r12d,%r12d
    3cb3:	4c 8d 4b fd          	lea    -0x3(%rbx),%r9
    3cb7:	49 83 f9 1e          	cmp    $0x1e,%r9
    3cbb:	77 3b                	ja     3cf8 <lzma_raw_coder_init+0xa8>
    3cbd:	4b 63 1c 8a          	movslq (%r10,%r9,4),%rbx
    3cc1:	4c 01 d3             	add    %r10,%rbx
    3cc4:	41 b1 01             	mov    $0x1,%r9b
    3cc7:	ff e3                	jmp    *%rbx
    3cc9:	41 b4 01             	mov    $0x1,%r12b
    3ccc:	45 31 c9             	xor    %r9d,%r9d
    3ccf:	45 84 db             	test   %r11b,%r11b
    3cd2:	0f 84 2d 01 00 00    	je     3e05 <lzma_raw_coder_init+0x1b5>
    3cd8:	45 0f b6 d9          	movzbl %r9b,%r11d
    3cdc:	4c 01 d9             	add    %r11,%rcx
    3cdf:	48 ff c5             	inc    %rbp
    3ce2:	48 8b 1a             	mov    (%rdx),%rbx
    3ce5:	49 83 c5 18          	add    $0x18,%r13
    3ce9:	48 83 c2 10          	add    $0x10,%rdx
    3ced:	45 89 e3             	mov    %r12d,%r11d
    3cf0:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    3cf4:	75 ba                	jne    3cb0 <lzma_raw_coder_init+0x60>
    3cf6:	eb 0d                	jmp    3d05 <lzma_raw_coder_init+0xb5>
    3cf8:	41 b1 01             	mov    $0x1,%r9b
    3cfb:	4c 39 fb             	cmp    %r15,%rbx
    3cfe:	74 cf                	je     3ccf <lzma_raw_coder_init+0x7f>
    3d00:	e9 00 01 00 00       	jmp    3e05 <lzma_raw_coder_init+0x1b5>
    3d05:	48 83 fd 05          	cmp    $0x5,%rbp
    3d09:	0f 93 c2             	setae  %dl
    3d0c:	41 80 f1 01          	xor    $0x1,%r9b
    3d10:	41 08 d1             	or     %dl,%r9b
    3d13:	0f 85 ec 00 00 00    	jne    3e05 <lzma_raw_coder_init+0x1b5>
    3d19:	48 83 f9 03          	cmp    $0x3,%rcx
    3d1d:	0f 87 e2 00 00 00    	ja     3e05 <lzma_raw_coder_init+0x1b5>
    3d23:	49 89 fc             	mov    %rdi,%r12
    3d26:	48 89 34 24          	mov    %rsi,(%rsp)
    3d2a:	45 84 c0             	test   %r8b,%r8b
    3d2d:	74 57                	je     3d86 <lzma_raw_coder_init+0x136>
    3d2f:	48 85 ed             	test   %rbp,%rbp
    3d32:	0f 84 94 00 00 00    	je     3dcc <lzma_raw_coder_init+0x17c>
    3d38:	4c 89 eb             	mov    %r13,%rbx
    3d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3d40:	49 8b 3e             	mov    (%r14),%rdi
    3d43:	ff 54 24 08          	call   *0x8(%rsp)
    3d47:	48 89 c1             	mov    %rax,%rcx
    3d4a:	b8 08 00 00 00       	mov    $0x8,%eax
    3d4f:	48 85 c9             	test   %rcx,%rcx
    3d52:	0f 84 ad 00 00 00    	je     3e05 <lzma_raw_coder_init+0x1b5>
    3d58:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    3d5c:	48 85 c9             	test   %rcx,%rcx
    3d5f:	0f 84 a0 00 00 00    	je     3e05 <lzma_raw_coder_init+0x1b5>
    3d65:	49 8b 06             	mov    (%r14),%rax
    3d68:	48 89 43 f0          	mov    %rax,-0x10(%rbx)
    3d6c:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
    3d70:	49 8b 46 08          	mov    0x8(%r14),%rax
    3d74:	48 89 03             	mov    %rax,(%rbx)
    3d77:	49 83 c6 10          	add    $0x10,%r14
    3d7b:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
    3d7f:	48 ff cd             	dec    %rbp
    3d82:	75 bc                	jne    3d40 <lzma_raw_coder_init+0xf0>
    3d84:	eb 46                	jmp    3dcc <lzma_raw_coder_init+0x17c>
    3d86:	48 85 ed             	test   %rbp,%rbp
    3d89:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    3d8e:	74 3c                	je     3dcc <lzma_raw_coder_init+0x17c>
    3d90:	49 8b 3e             	mov    (%r14),%rdi
    3d93:	ff 54 24 08          	call   *0x8(%rsp)
    3d97:	48 89 c1             	mov    %rax,%rcx
    3d9a:	b8 08 00 00 00       	mov    $0x8,%eax
    3d9f:	48 85 c9             	test   %rcx,%rcx
    3da2:	74 61                	je     3e05 <lzma_raw_coder_init+0x1b5>
    3da4:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    3da8:	48 85 c9             	test   %rcx,%rcx
    3dab:	74 58                	je     3e05 <lzma_raw_coder_init+0x1b5>
    3dad:	49 8b 06             	mov    (%r14),%rax
    3db0:	48 89 43 f0          	mov    %rax,-0x10(%rbx)
    3db4:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
    3db8:	49 8b 46 08          	mov    0x8(%r14),%rax
    3dbc:	48 89 03             	mov    %rax,(%rbx)
    3dbf:	48 83 c3 18          	add    $0x18,%rbx
    3dc3:	49 83 c6 10          	add    $0x10,%r14
    3dc7:	48 ff cd             	dec    %rbp
    3dca:	75 c4                	jne    3d90 <lzma_raw_coder_init+0x140>
    3dcc:	49 c7 45 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%r13)
    3dd3:	ff 
    3dd4:	49 c7 45 10 00 00 00 	movq   $0x0,0x10(%r13)
    3ddb:	00 
    3ddc:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    3de1:	4c 89 e7             	mov    %r12,%rdi
    3de4:	48 8b 34 24          	mov    (%rsp),%rsi
    3de8:	e8 93 f1 ff ff       	call   2f80 <lzma_next_filter_init>
    3ded:	85 c0                	test   %eax,%eax
    3def:	74 12                	je     3e03 <lzma_raw_coder_init+0x1b3>
    3df1:	4c 89 e7             	mov    %r12,%rdi
    3df4:	48 8b 34 24          	mov    (%rsp),%rsi
    3df8:	89 c3                	mov    %eax,%ebx
    3dfa:	e8 41 f2 ff ff       	call   3040 <lzma_next_end>
    3dff:	89 d8                	mov    %ebx,%eax
    3e01:	eb 02                	jmp    3e05 <lzma_raw_coder_init+0x1b5>
    3e03:	31 c0                	xor    %eax,%eax
    3e05:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3e0c:	5b                   	pop    %rbx
    3e0d:	41 5c                	pop    %r12
    3e0f:	41 5d                	pop    %r13
    3e11:	41 5e                	pop    %r14
    3e13:	41 5f                	pop    %r15
    3e15:	5d                   	pop    %rbp
    3e16:	c3                   	ret    
    3e17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3e1e:	00 00 

0000000000003e20 <lzma_raw_coder_memusage>:
    3e20:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3e27:	48 85 f6             	test   %rsi,%rsi
    3e2a:	0f 84 15 01 00 00    	je     3f45 <lzma_raw_coder_memusage+0x125>
    3e30:	55                   	push   %rbp
    3e31:	41 57                	push   %r15
    3e33:	41 56                	push   %r14
    3e35:	41 54                	push   %r12
    3e37:	53                   	push   %rbx
    3e38:	48 89 f3             	mov    %rsi,%rbx
    3e3b:	49 89 fe             	mov    %rdi,%r14
    3e3e:	48 8b 3e             	mov    (%rsi),%rdi
    3e41:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    3e45:	0f 84 f2 00 00 00    	je     3f3d <lzma_raw_coder_memusage+0x11d>
    3e4b:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    3e4f:	41 b2 01             	mov    $0x1,%r10b
    3e52:	31 c9                	xor    %ecx,%ecx
    3e54:	48 be 01 00 00 00 00 	movabs $0x4000000000000001,%rsi
    3e5b:	00 00 40 
    3e5e:	4c 8d 05 d7 fb 01 00 	lea    0x1fbd7(%rip),%r8        # 23a3c <_IO_stdin_used+0xa3c>
    3e65:	49 89 ff             	mov    %rdi,%r15
    3e68:	45 31 c9             	xor    %r9d,%r9d
    3e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e70:	45 31 db             	xor    %r11d,%r11d
    3e73:	4d 8d 67 fd          	lea    -0x3(%r15),%r12
    3e77:	49 83 fc 1e          	cmp    $0x1e,%r12
    3e7b:	77 37                	ja     3eb4 <lzma_raw_coder_memusage+0x94>
    3e7d:	4f 63 3c a0          	movslq (%r8,%r12,4),%r15
    3e81:	4d 01 c7             	add    %r8,%r15
    3e84:	40 b5 01             	mov    $0x1,%bpl
    3e87:	41 ff e7             	jmp    *%r15
    3e8a:	41 b3 01             	mov    $0x1,%r11b
    3e8d:	31 ed                	xor    %ebp,%ebp
    3e8f:	45 84 d2             	test   %r10b,%r10b
    3e92:	0f 84 a5 00 00 00    	je     3f3d <lzma_raw_coder_memusage+0x11d>
    3e98:	44 0f b6 d5          	movzbl %bpl,%r10d
    3e9c:	4c 01 d1             	add    %r10,%rcx
    3e9f:	49 ff c1             	inc    %r9
    3ea2:	4c 8b 3a             	mov    (%rdx),%r15
    3ea5:	48 83 c2 10          	add    $0x10,%rdx
    3ea9:	45 89 da             	mov    %r11d,%r10d
    3eac:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
    3eb0:	75 be                	jne    3e70 <lzma_raw_coder_memusage+0x50>
    3eb2:	eb 0d                	jmp    3ec1 <lzma_raw_coder_memusage+0xa1>
    3eb4:	40 b5 01             	mov    $0x1,%bpl
    3eb7:	49 39 f7             	cmp    %rsi,%r15
    3eba:	74 d3                	je     3e8f <lzma_raw_coder_memusage+0x6f>
    3ebc:	e9 7c 00 00 00       	jmp    3f3d <lzma_raw_coder_memusage+0x11d>
    3ec1:	49 83 f9 05          	cmp    $0x5,%r9
    3ec5:	0f 93 c2             	setae  %dl
    3ec8:	40 80 f5 01          	xor    $0x1,%bpl
    3ecc:	40 08 d5             	or     %dl,%bpl
    3ecf:	75 6c                	jne    3f3d <lzma_raw_coder_memusage+0x11d>
    3ed1:	48 83 f9 03          	cmp    $0x3,%rcx
    3ed5:	77 66                	ja     3f3d <lzma_raw_coder_memusage+0x11d>
    3ed7:	48 83 c3 10          	add    $0x10,%rbx
    3edb:	45 31 ff             	xor    %r15d,%r15d
    3ede:	eb 14                	jmp    3ef4 <lzma_raw_coder_memusage+0xd4>
    3ee0:	49 81 c7 00 04 00 00 	add    $0x400,%r15
    3ee7:	48 8b 3b             	mov    (%rbx),%rdi
    3eea:	48 83 c3 10          	add    $0x10,%rbx
    3eee:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    3ef2:	74 36                	je     3f2a <lzma_raw_coder_memusage+0x10a>
    3ef4:	41 ff d6             	call   *%r14
    3ef7:	48 85 c0             	test   %rax,%rax
    3efa:	74 3a                	je     3f36 <lzma_raw_coder_memusage+0x116>
    3efc:	48 8b 40 10          	mov    0x10(%rax),%rax
    3f00:	48 85 c0             	test   %rax,%rax
    3f03:	74 db                	je     3ee0 <lzma_raw_coder_memusage+0xc0>
    3f05:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
    3f09:	ff d0                	call   *%rax
    3f0b:	b9 00 00 00 00       	mov    $0x0,%ecx
    3f10:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3f14:	48 0f 45 c8          	cmovne %rax,%rcx
    3f18:	74 1c                	je     3f36 <lzma_raw_coder_memusage+0x116>
    3f1a:	49 01 cf             	add    %rcx,%r15
    3f1d:	48 8b 3b             	mov    (%rbx),%rdi
    3f20:	48 83 c3 10          	add    $0x10,%rbx
    3f24:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    3f28:	75 ca                	jne    3ef4 <lzma_raw_coder_memusage+0xd4>
    3f2a:	49 81 c7 00 80 00 00 	add    $0x8000,%r15
    3f31:	4c 89 f8             	mov    %r15,%rax
    3f34:	eb 07                	jmp    3f3d <lzma_raw_coder_memusage+0x11d>
    3f36:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3f3d:	5b                   	pop    %rbx
    3f3e:	41 5c                	pop    %r12
    3f40:	41 5e                	pop    %r14
    3f42:	41 5f                	pop    %r15
    3f44:	5d                   	pop    %rbp
    3f45:	c3                   	ret    
    3f46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3f4d:	00 00 00 

0000000000003f50 <lzma_physmem>:
    3f50:	e9 3b ef ff ff       	jmp    2e90 <tuklib_physmem>
    3f55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3f5c:	00 00 00 
    3f5f:	90                   	nop

0000000000003f60 <lzma_index_init>:
    3f60:	41 56                	push   %r14
    3f62:	53                   	push   %rbx
    3f63:	50                   	push   %rax
    3f64:	49 89 fe             	mov    %rdi,%r14
    3f67:	bf 50 00 00 00       	mov    $0x50,%edi
    3f6c:	4c 89 f6             	mov    %r14,%rsi
    3f6f:	e8 4c ef ff ff       	call   2ec0 <lzma_alloc>
    3f74:	48 85 c0             	test   %rax,%rax
    3f77:	0f 84 8c 00 00 00    	je     4009 <lzma_index_init+0xa9>
    3f7d:	48 89 c3             	mov    %rax,%rbx
    3f80:	0f 57 c0             	xorps  %xmm0,%xmm0
    3f83:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
    3f87:	0f 11 00             	movups %xmm0,(%rax)
    3f8a:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    3f8e:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    3f92:	48 c7 40 40 00 02 00 	movq   $0x200,0x40(%rax)
    3f99:	00 
    3f9a:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    3fa1:	bf a8 00 00 00       	mov    $0xa8,%edi
    3fa6:	4c 89 f6             	mov    %r14,%rsi
    3fa9:	e8 12 ef ff ff       	call   2ec0 <lzma_alloc>
    3fae:	48 85 c0             	test   %rax,%rax
    3fb1:	74 4b                	je     3ffe <lzma_index_init+0x9e>
    3fb3:	0f 57 c0             	xorps  %xmm0,%xmm0
    3fb6:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3fba:	0f 11 00             	movups %xmm0,(%rax)
    3fbd:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3fc4:	00 
    3fc5:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
    3fcc:	0f 11 40 58          	movups %xmm0,0x58(%rax)
    3fd0:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    3fd4:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    3fd8:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%rax)
    3fdf:	c7 40 68 ff ff ff ff 	movl   $0xffffffff,0x68(%rax)
    3fe6:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
    3fed:	00 00 00 00 
    3ff1:	48 89 df             	mov    %rbx,%rdi
    3ff4:	48 89 c6             	mov    %rax,%rsi
    3ff7:	e8 24 00 00 00       	call   4020 <index_tree_append>
    3ffc:	eb 0d                	jmp    400b <lzma_index_init+0xab>
    3ffe:	48 89 df             	mov    %rbx,%rdi
    4001:	4c 89 f6             	mov    %r14,%rsi
    4004:	e8 e7 ee ff ff       	call   2ef0 <lzma_free>
    4009:	31 db                	xor    %ebx,%ebx
    400b:	48 89 d8             	mov    %rbx,%rax
    400e:	48 83 c4 08          	add    $0x8,%rsp
    4012:	5b                   	pop    %rbx
    4013:	41 5e                	pop    %r14
    4015:	c3                   	ret    
    4016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    401d:	00 00 00 

0000000000004020 <index_tree_append>:
    4020:	48 8b 47 10          	mov    0x10(%rdi),%rax
    4024:	48 89 46 10          	mov    %rax,0x10(%rsi)
    4028:	0f 57 c0             	xorps  %xmm0,%xmm0
    402b:	0f 11 46 18          	movups %xmm0,0x18(%rsi)
    402f:	ff 47 18             	incl   0x18(%rdi)
    4032:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    4036:	0f 84 81 01 00 00    	je     41bd <index_tree_append+0x19d>
    403c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    4040:	48 89 70 20          	mov    %rsi,0x20(%rax)
    4044:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    4048:	8b 47 18             	mov    0x18(%rdi),%eax
    404b:	89 c1                	mov    %eax,%ecx
    404d:	c1 e1 10             	shl    $0x10,%ecx
    4050:	31 d2                	xor    %edx,%edx
    4052:	3d 00 00 01 00       	cmp    $0x10000,%eax
    4057:	0f 93 c2             	setae  %dl
    405a:	0f 43 c8             	cmovae %eax,%ecx
    405d:	c1 e2 04             	shl    $0x4,%edx
    4060:	44 8d 42 0f          	lea    0xf(%rdx),%r8d
    4064:	41 89 c9             	mov    %ecx,%r9d
    4067:	41 c1 e1 08          	shl    $0x8,%r9d
    406b:	83 ca 07             	or     $0x7,%edx
    406e:	81 f9 00 00 00 01    	cmp    $0x1000000,%ecx
    4074:	44 0f 43 c9          	cmovae %ecx,%r9d
    4078:	41 0f 43 d0          	cmovae %r8d,%edx
    407c:	45 89 c8             	mov    %r9d,%r8d
    407f:	41 c1 e0 04          	shl    $0x4,%r8d
    4083:	44 8d 52 fc          	lea    -0x4(%rdx),%r10d
    4087:	41 81 f9 00 00 00 10 	cmp    $0x10000000,%r9d
    408e:	45 0f 43 c1          	cmovae %r9d,%r8d
    4092:	44 0f 43 d2          	cmovae %edx,%r10d
    4096:	42 8d 0c 85 00 00 00 	lea    0x0(,%r8,4),%ecx
    409d:	00 
    409e:	41 81 f8 00 00 00 40 	cmp    $0x40000000,%r8d
    40a5:	41 0f 43 c8          	cmovae %r8d,%ecx
    40a9:	41 8d 52 fe          	lea    -0x2(%r10),%edx
    40ad:	41 0f 43 d2          	cmovae %r10d,%edx
    40b1:	f7 d1                	not    %ecx
    40b3:	c1 f9 1f             	sar    $0x1f,%ecx
    40b6:	01 d1                	add    %edx,%ecx
    40b8:	ba 01 00 00 00       	mov    $0x1,%edx
    40bd:	d3 e2                	shl    %cl,%edx
    40bf:	39 d0                	cmp    %edx,%eax
    40c1:	0f 84 f5 00 00 00    	je     41bc <index_tree_append+0x19c>
    40c7:	89 c1                	mov    %eax,%ecx
    40c9:	c1 e9 10             	shr    $0x10,%ecx
    40cc:	31 d2                	xor    %edx,%edx
    40ce:	66 85 c0             	test   %ax,%ax
    40d1:	0f 45 c8             	cmovne %eax,%ecx
    40d4:	0f 94 c2             	sete   %dl
    40d7:	c1 e2 04             	shl    $0x4,%edx
    40da:	89 c8                	mov    %ecx,%eax
    40dc:	c1 e8 08             	shr    $0x8,%eax
    40df:	44 8d 42 08          	lea    0x8(%rdx),%r8d
    40e3:	84 c9                	test   %cl,%cl
    40e5:	0f 45 c1             	cmovne %ecx,%eax
    40e8:	44 0f 45 c2          	cmovne %edx,%r8d
    40ec:	89 c1                	mov    %eax,%ecx
    40ee:	c1 e9 04             	shr    $0x4,%ecx
    40f1:	41 8d 50 04          	lea    0x4(%r8),%edx
    40f5:	a8 0f                	test   $0xf,%al
    40f7:	0f 45 c8             	cmovne %eax,%ecx
    40fa:	41 0f 45 d0          	cmovne %r8d,%edx
    40fe:	41 89 c8             	mov    %ecx,%r8d
    4101:	41 c1 e8 02          	shr    $0x2,%r8d
    4105:	44 8d 4a 02          	lea    0x2(%rdx),%r9d
    4109:	f6 c1 03             	test   $0x3,%cl
    410c:	44 0f 45 c1          	cmovne %ecx,%r8d
    4110:	41 f7 d0             	not    %r8d
    4113:	44 0f 45 ca          	cmovne %edx,%r9d
    4117:	41 83 e0 01          	and    $0x1,%r8d
    411b:	43 8d 04 01          	lea    (%r9,%r8,1),%eax
    411f:	83 c0 02             	add    $0x2,%eax
    4122:	43 8d 0c 01          	lea    (%r9,%r8,1),%ecx
    4126:	ff c1                	inc    %ecx
    4128:	89 c2                	mov    %eax,%edx
    412a:	83 e2 07             	and    $0x7,%edx
    412d:	74 20                	je     414f <index_tree_append+0x12f>
    412f:	45 31 c0             	xor    %r8d,%r8d
    4132:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4139:	1f 84 00 00 00 00 00 
    4140:	48 8b 76 10          	mov    0x10(%rsi),%rsi
    4144:	41 ff c0             	inc    %r8d
    4147:	44 39 c2             	cmp    %r8d,%edx
    414a:	75 f4                	jne    4140 <index_tree_append+0x120>
    414c:	44 29 c0             	sub    %r8d,%eax
    414f:	83 f9 07             	cmp    $0x7,%ecx
    4152:	72 31                	jb     4185 <index_tree_append+0x165>
    4154:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    415b:	00 00 00 00 00 
    4160:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    4164:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    4168:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    416c:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    4170:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    4174:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    4178:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    417c:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    4180:	83 c0 f8             	add    $0xfffffff8,%eax
    4183:	75 db                	jne    4160 <index_tree_append+0x140>
    4185:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    4189:	48 8b 46 20          	mov    0x20(%rsi),%rax
    418d:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    4191:	48 85 c9             	test   %rcx,%rcx
    4194:	48 0f 44 d7          	cmove  %rdi,%rdx
    4198:	48 89 02             	mov    %rax,(%rdx)
    419b:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    419f:	48 89 48 10          	mov    %rcx,0x10(%rax)
    41a3:	48 8b 48 18          	mov    0x18(%rax),%rcx
    41a7:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    41ab:	48 85 c9             	test   %rcx,%rcx
    41ae:	74 04                	je     41b4 <index_tree_append+0x194>
    41b0:	48 89 71 10          	mov    %rsi,0x10(%rcx)
    41b4:	48 89 70 18          	mov    %rsi,0x18(%rax)
    41b8:	48 89 46 10          	mov    %rax,0x10(%rsi)
    41bc:	c3                   	ret    
    41bd:	48 89 37             	mov    %rsi,(%rdi)
    41c0:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    41c4:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    41c8:	c3                   	ret    
    41c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000041d0 <lzma_index_end>:
    41d0:	48 85 ff             	test   %rdi,%rdi
    41d3:	74 37                	je     420c <lzma_index_end+0x3c>
    41d5:	48 8b 07             	mov    (%rdi),%rax
    41d8:	48 85 c0             	test   %rax,%rax
    41db:	0f 84 0f ed ff ff    	je     2ef0 <lzma_free>
    41e1:	41 56                	push   %r14
    41e3:	53                   	push   %rbx
    41e4:	50                   	push   %rax
    41e5:	48 8d 15 24 00 00 00 	lea    0x24(%rip),%rdx        # 4210 <index_stream_end>
    41ec:	49 89 fe             	mov    %rdi,%r14
    41ef:	48 89 c7             	mov    %rax,%rdi
    41f2:	48 89 f3             	mov    %rsi,%rbx
    41f5:	e8 06 12 00 00       	call   5400 <index_tree_node_end>
    41fa:	4c 89 f7             	mov    %r14,%rdi
    41fd:	48 89 de             	mov    %rbx,%rsi
    4200:	48 83 c4 08          	add    $0x8,%rsp
    4204:	5b                   	pop    %rbx
    4205:	41 5e                	pop    %r14
    4207:	e9 e4 ec ff ff       	jmp    2ef0 <lzma_free>
    420c:	c3                   	ret    
    420d:	0f 1f 00             	nopl   (%rax)

0000000000004210 <index_stream_end>:
    4210:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
    4214:	48 85 ff             	test   %rdi,%rdi
    4217:	74 07                	je     4220 <index_stream_end+0x10>
    4219:	31 d2                	xor    %edx,%edx
    421b:	e9 e0 11 00 00       	jmp    5400 <index_tree_node_end>
    4220:	c3                   	ret    
    4221:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4228:	0f 1f 84 00 00 00 00 
    422f:	00 

0000000000004230 <lzma_index_prealloc>:
    4230:	48 b8 fb ff ff ff ff 	movabs $0xffffffffffffffb,%rax
    4237:	ff ff 0f 
    423a:	48 39 c6             	cmp    %rax,%rsi
    423d:	48 0f 42 c6          	cmovb  %rsi,%rax
    4241:	48 89 47 40          	mov    %rax,0x40(%rdi)
    4245:	c3                   	ret    
    4246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    424d:	00 00 00 

0000000000004250 <lzma_index_memusage>:
    4250:	48 8d 86 ff 01 00 00 	lea    0x1ff(%rsi),%rax
    4257:	48 c1 e8 09          	shr    $0x9,%rax
    425b:	48 69 cf 28 01 00 00 	imul   $0x128,%rdi,%rcx
    4262:	48 69 c0 60 20 00 00 	imul   $0x2060,%rax,%rax
    4269:	48 ba 00 00 00 00 ff 	movabs $0xffffffff00000000,%rdx
    4270:	ff ff ff 
    4273:	48 01 d7             	add    %rdx,%rdi
    4276:	48 83 ca 01          	or     $0x1,%rdx
    427a:	49 c7 c0 8f ff ff ff 	mov    $0xffffffffffffff8f,%r8
    4281:	49 29 c8             	sub    %rcx,%r8
    4284:	49 39 c0             	cmp    %rax,%r8
    4287:	48 8d 44 01 70       	lea    0x70(%rcx,%rax,1),%rax
    428c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    4293:	48 0f 42 c1          	cmovb  %rcx,%rax
    4297:	49 b8 00 08 fd 00 55 	movabs $0xfd08e5500fd0800,%r8
    429e:	8e d0 0f 
    42a1:	4c 39 c6             	cmp    %r8,%rsi
    42a4:	48 0f 47 c1          	cmova  %rcx,%rax
    42a8:	48 39 d7             	cmp    %rdx,%rdi
    42ab:	48 0f 42 c1          	cmovb  %rcx,%rax
    42af:	c3                   	ret    

00000000000042b0 <lzma_index_memused>:
    42b0:	8b 4f 18             	mov    0x18(%rdi),%ecx
    42b3:	48 8b 47 30          	mov    0x30(%rdi),%rax
    42b7:	48 8d 90 ff 01 00 00 	lea    0x1ff(%rax),%rdx
    42be:	48 c1 ea 09          	shr    $0x9,%rdx
    42c2:	48 69 f1 28 01 00 00 	imul   $0x128,%rcx,%rsi
    42c9:	48 69 d2 60 20 00 00 	imul   $0x2060,%rdx,%rdx
    42d0:	48 c7 c7 8f ff ff ff 	mov    $0xffffffffffffff8f,%rdi
    42d7:	48 29 f7             	sub    %rsi,%rdi
    42da:	48 39 d7             	cmp    %rdx,%rdi
    42dd:	48 8d 54 16 70       	lea    0x70(%rsi,%rdx,1),%rdx
    42e2:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    42e9:	48 0f 42 d6          	cmovb  %rsi,%rdx
    42ed:	48 bf 00 08 fd 00 55 	movabs $0xfd08e5500fd0800,%rdi
    42f4:	8e d0 0f 
    42f7:	48 39 f8             	cmp    %rdi,%rax
    42fa:	48 0f 47 d6          	cmova  %rsi,%rdx
    42fe:	31 c0                	xor    %eax,%eax
    4300:	48 83 f9 01          	cmp    $0x1,%rcx
    4304:	48 19 c0             	sbb    %rax,%rax
    4307:	48 09 d0             	or     %rdx,%rax
    430a:	c3                   	ret    
    430b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004310 <lzma_index_block_count>:
    4310:	48 8b 47 30          	mov    0x30(%rdi),%rax
    4314:	c3                   	ret    
    4315:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    431c:	00 00 00 00 

0000000000004320 <lzma_index_stream_count>:
    4320:	8b 47 18             	mov    0x18(%rdi),%eax
    4323:	c3                   	ret    
    4324:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    432b:	00 00 00 00 00 

0000000000004330 <lzma_index_size>:
    4330:	53                   	push   %rbx
    4331:	48 8b 47 30          	mov    0x30(%rdi),%rax
    4335:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    4339:	48 89 c7             	mov    %rax,%rdi
    433c:	e8 9f 11 00 00       	call   54e0 <lzma_vli_size>
    4341:	ff c0                	inc    %eax
    4343:	48 01 d8             	add    %rbx,%rax
    4346:	48 83 c0 07          	add    $0x7,%rax
    434a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    434e:	5b                   	pop    %rbx
    434f:	c3                   	ret    

0000000000004350 <lzma_index_total_size>:
    4350:	48 8b 47 28          	mov    0x28(%rdi),%rax
    4354:	c3                   	ret    
    4355:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    435c:	00 00 00 00 

0000000000004360 <lzma_index_stream_size>:
    4360:	41 56                	push   %r14
    4362:	53                   	push   %rbx
    4363:	50                   	push   %rax
    4364:	48 8b 5f 28          	mov    0x28(%rdi),%rbx
    4368:	48 8b 47 30          	mov    0x30(%rdi),%rax
    436c:	4c 8b 77 38          	mov    0x38(%rdi),%r14
    4370:	48 89 c7             	mov    %rax,%rdi
    4373:	e8 68 11 00 00       	call   54e0 <lzma_vli_size>
    4378:	ff c0                	inc    %eax
    437a:	4c 01 f0             	add    %r14,%rax
    437d:	48 83 c0 07          	add    $0x7,%rax
    4381:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    4385:	48 01 d8             	add    %rbx,%rax
    4388:	48 83 c0 18          	add    $0x18,%rax
    438c:	48 83 c4 08          	add    $0x8,%rsp
    4390:	5b                   	pop    %rbx
    4391:	41 5e                	pop    %r14
    4393:	c3                   	ret    
    4394:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    439b:	00 00 00 00 00 

00000000000043a0 <lzma_index_file_size>:
    43a0:	41 56                	push   %r14
    43a2:	53                   	push   %rbx
    43a3:	50                   	push   %rax
    43a4:	48 8b 47 10          	mov    0x10(%rdi),%rax
    43a8:	48 8b 58 08          	mov    0x8(%rax),%rbx
    43ac:	48 8b 48 48          	mov    0x48(%rax),%rcx
    43b0:	48 85 c9             	test   %rcx,%rcx
    43b3:	74 56                	je     440b <lzma_index_file_size+0x6b>
    43b5:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    43b9:	48 c1 e2 04          	shl    $0x4,%rdx
    43bd:	48 8b 4c 11 48       	mov    0x48(%rcx,%rdx,1),%rcx
    43c2:	48 83 c1 03          	add    $0x3,%rcx
    43c6:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    43ca:	48 01 cb             	add    %rcx,%rbx
    43cd:	48 03 98 a0 00 00 00 	add    0xa0(%rax),%rbx
    43d4:	48 83 c3 18          	add    $0x18,%rbx
    43d8:	78 43                	js     441d <lzma_index_file_size+0x7d>
    43da:	48 8b 78 58          	mov    0x58(%rax),%rdi
    43de:	4c 8b 70 60          	mov    0x60(%rax),%r14
    43e2:	e8 f9 10 00 00       	call   54e0 <lzma_vli_size>
    43e7:	ff c0                	inc    %eax
    43e9:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
    43ed:	48 83 c1 07          	add    $0x7,%rcx
    43f1:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    43f5:	48 01 d9             	add    %rbx,%rcx
    43f8:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    43ff:	48 0f 49 c1          	cmovns %rcx,%rax
    4403:	48 83 c4 08          	add    $0x8,%rsp
    4407:	5b                   	pop    %rbx
    4408:	41 5e                	pop    %r14
    440a:	c3                   	ret    
    440b:	31 c9                	xor    %ecx,%ecx
    440d:	48 01 cb             	add    %rcx,%rbx
    4410:	48 03 98 a0 00 00 00 	add    0xa0(%rax),%rbx
    4417:	48 83 c3 18          	add    $0x18,%rbx
    441b:	79 bd                	jns    43da <lzma_index_file_size+0x3a>
    441d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4424:	48 83 c4 08          	add    $0x8,%rsp
    4428:	5b                   	pop    %rbx
    4429:	41 5e                	pop    %r14
    442b:	c3                   	ret    
    442c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004430 <lzma_index_uncompressed_size>:
    4430:	48 8b 47 20          	mov    0x20(%rdi),%rax
    4434:	c3                   	ret    
    4435:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    443c:	00 00 00 00 

0000000000004440 <lzma_index_checks>:
    4440:	8b 47 48             	mov    0x48(%rdi),%eax
    4443:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    4447:	83 79 68 ff          	cmpl   $0xffffffff,0x68(%rcx)
    444b:	74 07                	je     4454 <lzma_index_checks+0x14>
    444d:	0f b6 49 78          	movzbl 0x78(%rcx),%ecx
    4451:	0f ab c8             	bts    %ecx,%eax
    4454:	c3                   	ret    
    4455:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    445c:	00 00 00 00 

0000000000004460 <lzma_index_padding_size>:
    4460:	53                   	push   %rbx
    4461:	48 8b 47 30          	mov    0x30(%rdi),%rax
    4465:	8b 5f 38             	mov    0x38(%rdi),%ebx
    4468:	48 89 c7             	mov    %rax,%rdi
    446b:	e8 70 10 00 00       	call   54e0 <lzma_vli_size>
    4470:	01 d8                	add    %ebx,%eax
    4472:	b9 03 00 00 00       	mov    $0x3,%ecx
    4477:	29 c1                	sub    %eax,%ecx
    4479:	83 e1 03             	and    $0x3,%ecx
    447c:	89 c8                	mov    %ecx,%eax
    447e:	5b                   	pop    %rbx
    447f:	c3                   	ret    

0000000000004480 <lzma_index_stream_flags>:
    4480:	b8 0b 00 00 00       	mov    $0xb,%eax
    4485:	48 85 ff             	test   %rdi,%rdi
    4488:	74 50                	je     44da <lzma_index_stream_flags+0x5a>
    448a:	41 56                	push   %r14
    448c:	53                   	push   %rbx
    448d:	50                   	push   %rax
    448e:	48 89 f3             	mov    %rsi,%rbx
    4491:	48 85 f6             	test   %rsi,%rsi
    4494:	74 3d                	je     44d3 <lzma_index_stream_flags+0x53>
    4496:	49 89 fe             	mov    %rdi,%r14
    4499:	48 89 df             	mov    %rbx,%rdi
    449c:	48 89 de             	mov    %rbx,%rsi
    449f:	e8 bc 0f 00 00       	call   5460 <lzma_stream_flags_compare>
    44a4:	85 c0                	test   %eax,%eax
    44a6:	75 2b                	jne    44d3 <lzma_index_stream_flags+0x53>
    44a8:	49 8b 46 10          	mov    0x10(%r14),%rax
    44ac:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
    44b0:	48 89 88 98 00 00 00 	mov    %rcx,0x98(%rax)
    44b7:	0f 10 03             	movups (%rbx),%xmm0
    44ba:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
    44be:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
    44c2:	0f 11 90 88 00 00 00 	movups %xmm2,0x88(%rax)
    44c9:	0f 11 48 78          	movups %xmm1,0x78(%rax)
    44cd:	0f 11 40 68          	movups %xmm0,0x68(%rax)
    44d1:	31 c0                	xor    %eax,%eax
    44d3:	48 83 c4 08          	add    $0x8,%rsp
    44d7:	5b                   	pop    %rbx
    44d8:	41 5e                	pop    %r14
    44da:	c3                   	ret    
    44db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000044e0 <lzma_index_stream_padding>:
    44e0:	b8 0b 00 00 00       	mov    $0xb,%eax
    44e5:	48 85 ff             	test   %rdi,%rdi
    44e8:	0f 84 d0 00 00 00    	je     45be <lzma_index_stream_padding+0xde>
    44ee:	48 b9 03 00 00 00 00 	movabs $0x8000000000000003,%rcx
    44f5:	00 00 80 
    44f8:	48 21 f1             	and    %rsi,%rcx
    44fb:	0f 85 bd 00 00 00    	jne    45be <lzma_index_stream_padding+0xde>
    4501:	41 57                	push   %r15
    4503:	41 56                	push   %r14
    4505:	41 55                	push   %r13
    4507:	41 54                	push   %r12
    4509:	53                   	push   %rbx
    450a:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    450e:	4c 8b b3 a0 00 00 00 	mov    0xa0(%rbx),%r14
    4515:	48 c7 83 a0 00 00 00 	movq   $0x0,0xa0(%rbx)
    451c:	00 00 00 00 
    4520:	48 8b 47 10          	mov    0x10(%rdi),%rax
    4524:	4c 8b 78 08          	mov    0x8(%rax),%r15
    4528:	48 8b 48 48          	mov    0x48(%rax),%rcx
    452c:	48 85 c9             	test   %rcx,%rcx
    452f:	74 56                	je     4587 <lzma_index_stream_padding+0xa7>
    4531:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    4535:	48 c1 e2 04          	shl    $0x4,%rdx
    4539:	48 8b 4c 11 48       	mov    0x48(%rcx,%rdx,1),%rcx
    453e:	48 83 c1 03          	add    $0x3,%rcx
    4542:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    4546:	49 01 cf             	add    %rcx,%r15
    4549:	4c 03 b8 a0 00 00 00 	add    0xa0(%rax),%r15
    4550:	49 83 c7 18          	add    $0x18,%r15
    4554:	78 43                	js     4599 <lzma_index_stream_padding+0xb9>
    4556:	48 8b 78 58          	mov    0x58(%rax),%rdi
    455a:	4c 8b 68 60          	mov    0x60(%rax),%r13
    455e:	49 89 f4             	mov    %rsi,%r12
    4561:	e8 7a 0f 00 00       	call   54e0 <lzma_vli_size>
    4566:	4c 89 e6             	mov    %r12,%rsi
    4569:	ff c0                	inc    %eax
    456b:	4a 8d 0c 28          	lea    (%rax,%r13,1),%rcx
    456f:	48 83 c1 07          	add    $0x7,%rcx
    4573:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    4577:	4c 01 f9             	add    %r15,%rcx
    457a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4581:	48 0f 49 c1          	cmovns %rcx,%rax
    4585:	eb 19                	jmp    45a0 <lzma_index_stream_padding+0xc0>
    4587:	31 c9                	xor    %ecx,%ecx
    4589:	49 01 cf             	add    %rcx,%r15
    458c:	4c 03 b8 a0 00 00 00 	add    0xa0(%rax),%r15
    4593:	49 83 c7 18          	add    $0x18,%r15
    4597:	79 bd                	jns    4556 <lzma_index_stream_padding+0x76>
    4599:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    45a0:	48 01 f0             	add    %rsi,%rax
    45a3:	4c 0f 49 f6          	cmovns %rsi,%r14
    45a7:	48 c1 f8 3f          	sar    $0x3f,%rax
    45ab:	83 e0 09             	and    $0x9,%eax
    45ae:	4c 89 b3 a0 00 00 00 	mov    %r14,0xa0(%rbx)
    45b5:	5b                   	pop    %rbx
    45b6:	41 5c                	pop    %r12
    45b8:	41 5d                	pop    %r13
    45ba:	41 5e                	pop    %r14
    45bc:	41 5f                	pop    %r15
    45be:	c3                   	ret    
    45bf:	90                   	nop

00000000000045c0 <lzma_index_append>:
    45c0:	55                   	push   %rbp
    45c1:	41 57                	push   %r15
    45c3:	41 56                	push   %r14
    45c5:	41 55                	push   %r13
    45c7:	41 54                	push   %r12
    45c9:	53                   	push   %rbx
    45ca:	48 83 ec 38          	sub    $0x38,%rsp
    45ce:	b8 0b 00 00 00       	mov    $0xb,%eax
    45d3:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    45d8:	48 85 c9             	test   %rcx,%rcx
    45db:	0f 88 17 02 00 00    	js     47f8 <lzma_index_append+0x238>
    45e1:	49 89 ff             	mov    %rdi,%r15
    45e4:	48 85 ff             	test   %rdi,%rdi
    45e7:	0f 84 0b 02 00 00    	je     47f8 <lzma_index_append+0x238>
    45ed:	48 89 d3             	mov    %rdx,%rbx
    45f0:	48 b9 03 00 00 00 00 	movabs $0x8000000000000003,%rcx
    45f7:	00 00 80 
    45fa:	48 01 ca             	add    %rcx,%rdx
    45fd:	48 83 c1 05          	add    $0x5,%rcx
    4601:	48 39 ca             	cmp    %rcx,%rdx
    4604:	0f 82 ee 01 00 00    	jb     47f8 <lzma_index_append+0x238>
    460a:	4d 8b 6f 10          	mov    0x10(%r15),%r13
    460e:	4d 8b 65 48          	mov    0x48(%r13),%r12
    4612:	4d 85 e4             	test   %r12,%r12
    4615:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    461a:	74 22                	je     463e <lzma_index_append+0x7e>
    461c:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    4621:	48 c1 e0 04          	shl    $0x4,%rax
    4625:	49 8b 4c 04 40       	mov    0x40(%r12,%rax,1),%rcx
    462a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    462f:	4d 8b 74 04 48       	mov    0x48(%r12,%rax,1),%r14
    4634:	49 83 c6 03          	add    $0x3,%r14
    4638:	49 83 e6 fc          	and    $0xfffffffffffffffc,%r14
    463c:	eb 0a                	jmp    4648 <lzma_index_append+0x88>
    463e:	45 31 f6             	xor    %r14d,%r14d
    4641:	31 c0                	xor    %eax,%eax
    4643:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4648:	48 89 df             	mov    %rbx,%rdi
    464b:	e8 90 0e 00 00       	call   54e0 <lzma_vli_size>
    4650:	89 c5                	mov    %eax,%ebp
    4652:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4657:	e8 84 0e 00 00       	call   54e0 <lzma_vli_size>
    465c:	89 c1                	mov    %eax,%ecx
    465e:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    4663:	4c 01 f3             	add    %r14,%rbx
    4666:	48 83 c3 03          	add    $0x3,%rbx
    466a:	48 83 e3 fc          	and    $0xfffffffffffffffc,%rbx
    466e:	49 03 5d 08          	add    0x8(%r13),%rbx
    4672:	49 03 9d a0 00 00 00 	add    0xa0(%r13),%rbx
    4679:	48 83 c3 18          	add    $0x18,%rbx
    467d:	b8 09 00 00 00       	mov    $0x9,%eax
    4682:	0f 88 70 01 00 00    	js     47f8 <lzma_index_append+0x238>
    4688:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    468d:	01 e9                	add    %ebp,%ecx
    468f:	49 8b 7d 58          	mov    0x58(%r13),%rdi
    4693:	48 ff c7             	inc    %rdi
    4696:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    469b:	48 8d 69 07          	lea    0x7(%rcx),%rbp
    469f:	4d 8b 7d 60          	mov    0x60(%r13),%r15
    46a3:	49 01 ef             	add    %rbp,%r15
    46a6:	e8 35 0e 00 00       	call   54e0 <lzma_vli_size>
    46ab:	ff c0                	inc    %eax
    46ad:	4c 01 f8             	add    %r15,%rax
    46b0:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    46b4:	48 01 d8             	add    %rbx,%rax
    46b7:	78 60                	js     4719 <lzma_index_append+0x159>
    46b9:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    46be:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    46c2:	48 ff c7             	inc    %rdi
    46c5:	48 03 6b 38          	add    0x38(%rbx),%rbp
    46c9:	e8 12 0e 00 00       	call   54e0 <lzma_vli_size>
    46ce:	ff c0                	inc    %eax
    46d0:	48 01 e8             	add    %rbp,%rax
    46d3:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    46d7:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
    46de:	00 00 00 
    46e1:	48 39 c8             	cmp    %rcx,%rax
    46e4:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    46e9:	b8 09 00 00 00       	mov    $0x9,%eax
    46ee:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    46f3:	0f 87 ff 00 00 00    	ja     47f8 <lzma_index_append+0x238>
    46f9:	4d 85 e4             	test   %r12,%r12
    46fc:	74 25                	je     4723 <lzma_index_append+0x163>
    46fe:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    4703:	48 ff c0             	inc    %rax
    4706:	49 3b 44 24 30       	cmp    0x30(%r12),%rax
    470b:	73 16                	jae    4723 <lzma_index_append+0x163>
    470d:	49 89 44 24 38       	mov    %rax,0x38(%r12)
    4712:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    4717:	eb 6b                	jmp    4784 <lzma_index_append+0x1c4>
    4719:	b8 09 00 00 00       	mov    $0x9,%eax
    471e:	e9 d5 00 00 00       	jmp    47f8 <lzma_index_append+0x238>
    4723:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    4727:	48 c1 e7 04          	shl    $0x4,%rdi
    472b:	48 83 c7 40          	add    $0x40,%rdi
    472f:	e8 8c e7 ff ff       	call   2ec0 <lzma_alloc>
    4734:	48 85 c0             	test   %rax,%rax
    4737:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    473c:	0f 84 b1 00 00 00    	je     47f3 <lzma_index_append+0x233>
    4742:	49 89 c4             	mov    %rax,%r12
    4745:	49 8d 7d 38          	lea    0x38(%r13),%rdi
    4749:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    4750:	00 
    4751:	48 8b 43 40          	mov    0x40(%rbx),%rax
    4755:	49 89 44 24 30       	mov    %rax,0x30(%r12)
    475a:	48 c7 43 40 00 02 00 	movq   $0x200,0x40(%rbx)
    4761:	00 
    4762:	49 89 2c 24          	mov    %rbp,(%r12)
    4766:	4d 89 74 24 08       	mov    %r14,0x8(%r12)
    476b:	49 8b 45 58          	mov    0x58(%r13),%rax
    476f:	48 ff c0             	inc    %rax
    4772:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    4777:	4c 89 e6             	mov    %r12,%rsi
    477a:	e8 a1 f8 ff ff       	call   4020 <index_tree_append>
    477f:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    4784:	4d 01 fe             	add    %r15,%r14
    4787:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    478c:	48 01 cd             	add    %rcx,%rbp
    478f:	48 c1 e0 04          	shl    $0x4,%rax
    4793:	49 89 6c 04 40       	mov    %rbp,0x40(%r12,%rax,1)
    4798:	4d 89 74 04 48       	mov    %r14,0x48(%r12,%rax,1)
    479d:	f3 41 0f 6f 45 58    	movdqu 0x58(%r13),%xmm0
    47a3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    47a8:	66 48 0f 6e c8       	movq   %rax,%xmm1
    47ad:	66 0f 6f 15 fb f3 01 	movdqa 0x1f3fb(%rip),%xmm2        # 23bb0 <features+0xf0>
    47b4:	00 
    47b5:	66 0f 6c d1          	punpcklqdq %xmm1,%xmm2
    47b9:	66 0f d4 d0          	paddq  %xmm0,%xmm2
    47bd:	f3 41 0f 7f 55 58    	movdqu %xmm2,0x58(%r13)
    47c3:	49 83 c7 03          	add    $0x3,%r15
    47c7:	49 83 e7 fc          	and    $0xfffffffffffffffc,%r15
    47cb:	66 49 0f 6e c7       	movq   %r15,%xmm0
    47d0:	48 01 4b 20          	add    %rcx,0x20(%rbx)
    47d4:	f3 0f 6f 4b 28       	movdqu 0x28(%rbx),%xmm1
    47d9:	66 0f c6 05 de f3 01 	shufpd $0x2,0x1f3de(%rip),%xmm0        # 23bc0 <features+0x100>
    47e0:	00 02 
    47e2:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    47e6:	f3 0f 7f 43 28       	movdqu %xmm0,0x28(%rbx)
    47eb:	48 01 43 38          	add    %rax,0x38(%rbx)
    47ef:	31 c0                	xor    %eax,%eax
    47f1:	eb 05                	jmp    47f8 <lzma_index_append+0x238>
    47f3:	b8 05 00 00 00       	mov    $0x5,%eax
    47f8:	48 83 c4 38          	add    $0x38,%rsp
    47fc:	5b                   	pop    %rbx
    47fd:	41 5c                	pop    %r12
    47ff:	41 5d                	pop    %r13
    4801:	41 5e                	pop    %r14
    4803:	41 5f                	pop    %r15
    4805:	5d                   	pop    %rbp
    4806:	c3                   	ret    
    4807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    480e:	00 00 

0000000000004810 <lzma_index_cat>:
    4810:	55                   	push   %rbp
    4811:	41 57                	push   %r15
    4813:	41 56                	push   %r14
    4815:	41 55                	push   %r13
    4817:	41 54                	push   %r12
    4819:	53                   	push   %rbx
    481a:	48 83 ec 68          	sub    $0x68,%rsp
    481e:	49 89 d6             	mov    %rdx,%r14
    4821:	48 89 f5             	mov    %rsi,%rbp
    4824:	49 89 ff             	mov    %rdi,%r15
    4827:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    482b:	4c 8b 63 08          	mov    0x8(%rbx),%r12
    482f:	48 8b 43 48          	mov    0x48(%rbx),%rax
    4833:	48 85 c0             	test   %rax,%rax
    4836:	74 4f                	je     4887 <lzma_index_cat+0x77>
    4838:	48 8b 48 38          	mov    0x38(%rax),%rcx
    483c:	48 c1 e1 04          	shl    $0x4,%rcx
    4840:	48 8b 44 08 48       	mov    0x48(%rax,%rcx,1),%rax
    4845:	48 83 c0 03          	add    $0x3,%rax
    4849:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    484d:	49 01 c4             	add    %rax,%r12
    4850:	4c 03 a3 a0 00 00 00 	add    0xa0(%rbx),%r12
    4857:	49 83 c4 18          	add    $0x18,%r12
    485b:	78 3c                	js     4899 <lzma_index_cat+0x89>
    485d:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
    4861:	4c 8b 6b 60          	mov    0x60(%rbx),%r13
    4865:	e8 76 0c 00 00       	call   54e0 <lzma_vli_size>
    486a:	ff c0                	inc    %eax
    486c:	4c 01 e8             	add    %r13,%rax
    486f:	48 83 c0 07          	add    $0x7,%rax
    4873:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    4877:	4c 01 e0             	add    %r12,%rax
    487a:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    4881:	4c 0f 49 e0          	cmovns %rax,%r12
    4885:	eb 19                	jmp    48a0 <lzma_index_cat+0x90>
    4887:	31 c0                	xor    %eax,%eax
    4889:	49 01 c4             	add    %rax,%r12
    488c:	4c 03 a3 a0 00 00 00 	add    0xa0(%rbx),%r12
    4893:	49 83 c4 18          	add    $0x18,%r12
    4897:	79 c4                	jns    485d <lzma_index_cat+0x4d>
    4899:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    48a0:	48 8b 45 10          	mov    0x10(%rbp),%rax
    48a4:	4c 8b 68 08          	mov    0x8(%rax),%r13
    48a8:	48 8b 48 48          	mov    0x48(%rax),%rcx
    48ac:	48 85 c9             	test   %rcx,%rcx
    48af:	74 17                	je     48c8 <lzma_index_cat+0xb8>
    48b1:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    48b5:	48 c1 e2 04          	shl    $0x4,%rdx
    48b9:	48 8b 4c 11 48       	mov    0x48(%rcx,%rdx,1),%rcx
    48be:	48 83 c1 03          	add    $0x3,%rcx
    48c2:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    48c6:	eb 02                	jmp    48ca <lzma_index_cat+0xba>
    48c8:	31 c9                	xor    %ecx,%ecx
    48ca:	48 89 2c 24          	mov    %rbp,(%rsp)
    48ce:	49 01 cd             	add    %rcx,%r13
    48d1:	4c 03 a8 a0 00 00 00 	add    0xa0(%rax),%r13
    48d8:	49 83 c5 18          	add    $0x18,%r13
    48dc:	78 38                	js     4916 <lzma_index_cat+0x106>
    48de:	48 8b 78 58          	mov    0x58(%rax),%rdi
    48e2:	48 8b 68 60          	mov    0x60(%rax),%rbp
    48e6:	e8 f5 0b 00 00       	call   54e0 <lzma_vli_size>
    48eb:	ff c0                	inc    %eax
    48ed:	48 8d 0c 28          	lea    (%rax,%rbp,1),%rcx
    48f1:	48 83 c1 07          	add    $0x7,%rcx
    48f5:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    48f9:	4c 01 e9             	add    %r13,%rcx
    48fc:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4903:	48 0f 49 c1          	cmovns %rcx,%rax
    4907:	bd 09 00 00 00       	mov    $0x9,%ebp
    490c:	4c 01 e0             	add    %r12,%rax
    490f:	79 1a                	jns    492b <lzma_index_cat+0x11b>
    4911:	e9 e3 01 00 00       	jmp    4af9 <lzma_index_cat+0x2e9>
    4916:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    491d:	bd 09 00 00 00       	mov    $0x9,%ebp
    4922:	4c 01 e0             	add    %r12,%rax
    4925:	0f 88 ce 01 00 00    	js     4af9 <lzma_index_cat+0x2e9>
    492b:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    4930:	49 8b 57 20          	mov    0x20(%r15),%rdx
    4934:	4c 8b 24 24          	mov    (%rsp),%r12
    4938:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
    493d:	48 89 c8             	mov    %rcx,%rax
    4940:	48 01 d0             	add    %rdx,%rax
    4943:	0f 88 b0 01 00 00    	js     4af9 <lzma_index_cat+0x2e9>
    4949:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    494e:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    4953:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
    4958:	49 8b 7f 30          	mov    0x30(%r15),%rdi
    495c:	4d 8b 77 38          	mov    0x38(%r15),%r14
    4960:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    4965:	e8 76 0b 00 00       	call   54e0 <lzma_vli_size>
    496a:	41 89 c5             	mov    %eax,%r13d
    496d:	41 ff c5             	inc    %r13d
    4970:	4d 01 f5             	add    %r14,%r13
    4973:	41 0f 10 44 24 30    	movups 0x30(%r12),%xmm0
    4979:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    497e:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    4983:	e8 58 0b 00 00       	call   54e0 <lzma_vli_size>
    4988:	ff c0                	inc    %eax
    498a:	66 0f 70 44 24 30 ee 	pshufd $0xee,0x30(%rsp),%xmm0
    4991:	66 48 0f 7e c1       	movq   %xmm0,%rcx
    4996:	4c 01 e9             	add    %r13,%rcx
    4999:	48 01 c8             	add    %rcx,%rax
    499c:	48 83 c0 0b          	add    $0xb,%rax
    49a0:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    49a4:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
    49ab:	00 00 00 
    49ae:	48 39 c8             	cmp    %rcx,%rax
    49b1:	0f 87 42 01 00 00    	ja     4af9 <lzma_index_cat+0x2e9>
    49b7:	4c 8b 6b 48          	mov    0x48(%rbx),%r13
    49bb:	4d 85 ed             	test   %r13,%r13
    49be:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    49c3:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    49c8:	0f 84 a8 00 00 00    	je     4a76 <lzma_index_cat+0x266>
    49ce:	49 8b 7d 38          	mov    0x38(%r13),%rdi
    49d2:	48 ff c7             	inc    %rdi
    49d5:	49 3b 7d 30          	cmp    0x30(%r13),%rdi
    49d9:	0f 83 97 00 00 00    	jae    4a76 <lzma_index_cat+0x266>
    49df:	48 c1 e7 04          	shl    $0x4,%rdi
    49e3:	48 83 c7 40          	add    $0x40,%rdi
    49e7:	4c 89 f6             	mov    %r14,%rsi
    49ea:	e8 d1 e4 ff ff       	call   2ec0 <lzma_alloc>
    49ef:	48 85 c0             	test   %rax,%rax
    49f2:	0f 84 12 01 00 00    	je     4b0a <lzma_index_cat+0x2fa>
    49f8:	48 89 c5             	mov    %rax,%rbp
    49fb:	49 8b 45 20          	mov    0x20(%r13),%rax
    49ff:	48 89 45 20          	mov    %rax,0x20(%rbp)
    4a03:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
    4a09:	41 0f 10 4d 10       	movups 0x10(%r13),%xmm1
    4a0e:	0f 11 4d 10          	movups %xmm1,0x10(%rbp)
    4a12:	f3 0f 7f 45 00       	movdqu %xmm0,0x0(%rbp)
    4a17:	49 8b 55 38          	mov    0x38(%r13),%rdx
    4a1b:	48 ff c2             	inc    %rdx
    4a1e:	48 89 55 30          	mov    %rdx,0x30(%rbp)
    4a22:	49 8b 45 38          	mov    0x38(%r13),%rax
    4a26:	48 89 45 38          	mov    %rax,0x38(%rbp)
    4a2a:	49 8b 45 28          	mov    0x28(%r13),%rax
    4a2e:	48 89 45 28          	mov    %rax,0x28(%rbp)
    4a32:	48 89 ef             	mov    %rbp,%rdi
    4a35:	48 83 c7 40          	add    $0x40,%rdi
    4a39:	49 8d 75 40          	lea    0x40(%r13),%rsi
    4a3d:	48 c1 e2 04          	shl    $0x4,%rdx
    4a41:	e8 0a d7 ff ff       	call   2150 <memcpy@plt>
    4a46:	49 8b 45 10          	mov    0x10(%r13),%rax
    4a4a:	48 85 c0             	test   %rax,%rax
    4a4d:	74 04                	je     4a53 <lzma_index_cat+0x243>
    4a4f:	48 89 68 20          	mov    %rbp,0x20(%rax)
    4a53:	4c 39 6b 40          	cmp    %r13,0x40(%rbx)
    4a57:	75 08                	jne    4a61 <lzma_index_cat+0x251>
    4a59:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    4a5d:	48 89 6b 38          	mov    %rbp,0x38(%rbx)
    4a61:	4c 39 6b 48          	cmp    %r13,0x48(%rbx)
    4a65:	75 04                	jne    4a6b <lzma_index_cat+0x25b>
    4a67:	48 89 6b 48          	mov    %rbp,0x48(%rbx)
    4a6b:	4c 89 ef             	mov    %r13,%rdi
    4a6e:	4c 89 f6             	mov    %r14,%rsi
    4a71:	e8 7a e4 ff ff       	call   2ef0 <lzma_free>
    4a76:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4a7b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    4a80:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
    4a85:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4a8a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    4a8f:	41 8b 47 18          	mov    0x18(%r15),%eax
    4a93:	89 44 24 58          	mov    %eax,0x58(%rsp)
    4a97:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
    4a9c:	48 8b 1c 24          	mov    (%rsp),%rbx
    4aa0:	48 8b 33             	mov    (%rbx),%rsi
    4aa3:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    4aa8:	e8 73 00 00 00       	call   4b20 <index_cat_helper>
    4aad:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4ab2:	49 01 47 20          	add    %rax,0x20(%r15)
    4ab6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    4aba:	49 01 47 28          	add    %rax,0x28(%r15)
    4abe:	f3 41 0f 6f 47 30    	movdqu 0x30(%r15),%xmm0
    4ac4:	66 0f d4 44 24 30    	paddq  0x30(%rsp),%xmm0
    4aca:	f3 41 0f 7f 47 30    	movdqu %xmm0,0x30(%r15)
    4ad0:	41 8b 47 48          	mov    0x48(%r15),%eax
    4ad4:	49 8b 4f 10          	mov    0x10(%r15),%rcx
    4ad8:	83 79 68 ff          	cmpl   $0xffffffff,0x68(%rcx)
    4adc:	74 07                	je     4ae5 <lzma_index_cat+0x2d5>
    4ade:	0f b6 49 78          	movzbl 0x78(%rcx),%ecx
    4ae2:	0f ab c8             	bts    %ecx,%eax
    4ae5:	0b 43 48             	or     0x48(%rbx),%eax
    4ae8:	41 89 47 48          	mov    %eax,0x48(%r15)
    4aec:	48 89 df             	mov    %rbx,%rdi
    4aef:	4c 89 f6             	mov    %r14,%rsi
    4af2:	e8 f9 e3 ff ff       	call   2ef0 <lzma_free>
    4af7:	31 ed                	xor    %ebp,%ebp
    4af9:	89 e8                	mov    %ebp,%eax
    4afb:	48 83 c4 68          	add    $0x68,%rsp
    4aff:	5b                   	pop    %rbx
    4b00:	41 5c                	pop    %r12
    4b02:	41 5d                	pop    %r13
    4b04:	41 5e                	pop    %r14
    4b06:	41 5f                	pop    %r15
    4b08:	5d                   	pop    %rbp
    4b09:	c3                   	ret    
    4b0a:	bd 05 00 00 00       	mov    $0x5,%ebp
    4b0f:	eb e8                	jmp    4af9 <lzma_index_cat+0x2e9>
    4b11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4b18:	0f 1f 84 00 00 00 00 
    4b1f:	00 

0000000000004b20 <index_cat_helper>:
    4b20:	41 57                	push   %r15
    4b22:	41 56                	push   %r14
    4b24:	53                   	push   %rbx
    4b25:	49 89 f6             	mov    %rsi,%r14
    4b28:	48 89 fb             	mov    %rdi,%rbx
    4b2b:	eb 34                	jmp    4b61 <index_cat_helper+0x41>
    4b2d:	0f 1f 00             	nopl   (%rax)
    4b30:	48 8b 03             	mov    (%rbx),%rax
    4b33:	49 01 06             	add    %rax,(%r14)
    4b36:	48 8b 43 08          	mov    0x8(%rbx),%rax
    4b3a:	49 01 46 08          	add    %rax,0x8(%r14)
    4b3e:	8b 43 18             	mov    0x18(%rbx),%eax
    4b41:	41 01 46 28          	add    %eax,0x28(%r14)
    4b45:	48 8b 43 10          	mov    0x10(%rbx),%rax
    4b49:	49 01 46 30          	add    %rax,0x30(%r14)
    4b4d:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    4b51:	4c 89 f6             	mov    %r14,%rsi
    4b54:	e8 c7 f4 ff ff       	call   4020 <index_tree_append>
    4b59:	4d 89 fe             	mov    %r15,%r14
    4b5c:	4d 85 ff             	test   %r15,%r15
    4b5f:	74 17                	je     4b78 <index_cat_helper+0x58>
    4b61:	49 8b 76 18          	mov    0x18(%r14),%rsi
    4b65:	4d 8b 7e 20          	mov    0x20(%r14),%r15
    4b69:	48 85 f6             	test   %rsi,%rsi
    4b6c:	74 c2                	je     4b30 <index_cat_helper+0x10>
    4b6e:	48 89 df             	mov    %rbx,%rdi
    4b71:	e8 aa ff ff ff       	call   4b20 <index_cat_helper>
    4b76:	eb b8                	jmp    4b30 <index_cat_helper+0x10>
    4b78:	5b                   	pop    %rbx
    4b79:	41 5e                	pop    %r14
    4b7b:	41 5f                	pop    %r15
    4b7d:	c3                   	ret    
    4b7e:	66 90                	xchg   %ax,%ax

0000000000004b80 <lzma_index_dup>:
    4b80:	55                   	push   %rbp
    4b81:	41 57                	push   %r15
    4b83:	41 56                	push   %r14
    4b85:	41 55                	push   %r13
    4b87:	41 54                	push   %r12
    4b89:	53                   	push   %rbx
    4b8a:	48 83 ec 28          	sub    $0x28,%rsp
    4b8e:	48 89 f3             	mov    %rsi,%rbx
    4b91:	49 89 ff             	mov    %rdi,%r15
    4b94:	bf 50 00 00 00       	mov    $0x50,%edi
    4b99:	e8 22 e3 ff ff       	call   2ec0 <lzma_alloc>
    4b9e:	48 85 c0             	test   %rax,%rax
    4ba1:	0f 84 83 00 00 00    	je     4c2a <lzma_index_dup+0xaa>
    4ba7:	49 89 c5             	mov    %rax,%r13
    4baa:	48 89 1c 24          	mov    %rbx,(%rsp)
    4bae:	48 b9 fb ff ff ff ff 	movabs $0xffffffffffffffb,%rcx
    4bb5:	ff ff 0f 
    4bb8:	0f 57 c0             	xorps  %xmm0,%xmm0
    4bbb:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
    4bbf:	0f 11 00             	movups %xmm0,(%rax)
    4bc2:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4bc6:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    4bca:	48 c7 40 40 00 02 00 	movq   $0x200,0x40(%rax)
    4bd1:	00 
    4bd2:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    4bd9:	49 8b 47 20          	mov    0x20(%r15),%rax
    4bdd:	49 89 45 20          	mov    %rax,0x20(%r13)
    4be1:	49 8b 47 28          	mov    0x28(%r15),%rax
    4be5:	49 89 45 28          	mov    %rax,0x28(%r13)
    4be9:	49 8b 47 30          	mov    0x30(%r15),%rax
    4bed:	49 89 45 30          	mov    %rax,0x30(%r13)
    4bf1:	49 8b 47 38          	mov    0x38(%r15),%rax
    4bf5:	49 89 45 38          	mov    %rax,0x38(%r13)
    4bf9:	49 8b 6f 08          	mov    0x8(%r15),%rbp
    4bfd:	48 39 4d 58          	cmp    %rcx,0x58(%rbp)
    4c01:	76 3c                	jbe    4c3f <lzma_index_dup+0xbf>
    4c03:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    4c07:	48 85 ff             	test   %rdi,%rdi
    4c0a:	48 8b 1c 24          	mov    (%rsp),%rbx
    4c0e:	74 0f                	je     4c1f <lzma_index_dup+0x9f>
    4c10:	48 8d 15 f9 f5 ff ff 	lea    -0xa07(%rip),%rdx        # 4210 <index_stream_end>
    4c17:	48 89 de             	mov    %rbx,%rsi
    4c1a:	e8 e1 07 00 00       	call   5400 <index_tree_node_end>
    4c1f:	4c 89 ef             	mov    %r13,%rdi
    4c22:	48 89 de             	mov    %rbx,%rsi
    4c25:	e8 c6 e2 ff ff       	call   2ef0 <lzma_free>
    4c2a:	45 31 ed             	xor    %r13d,%r13d
    4c2d:	4c 89 e8             	mov    %r13,%rax
    4c30:	48 83 c4 28          	add    $0x28,%rsp
    4c34:	5b                   	pop    %rbx
    4c35:	41 5c                	pop    %r12
    4c37:	41 5d                	pop    %r13
    4c39:	41 5e                	pop    %r14
    4c3b:	41 5f                	pop    %r15
    4c3d:	5d                   	pop    %rbp
    4c3e:	c3                   	ret    
    4c3f:	4c 8d 75 58          	lea    0x58(%rbp),%r14
    4c43:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
    4c48:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
    4c4c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    4c51:	8b 5d 28             	mov    0x28(%rbp),%ebx
    4c54:	4c 8b 65 30          	mov    0x30(%rbp),%r12
    4c58:	bf a8 00 00 00       	mov    $0xa8,%edi
    4c5d:	48 8b 34 24          	mov    (%rsp),%rsi
    4c61:	e8 5a e2 ff ff       	call   2ec0 <lzma_alloc>
    4c66:	48 85 c0             	test   %rax,%rax
    4c69:	74 98                	je     4c03 <lzma_index_dup+0x83>
    4c6b:	49 89 c7             	mov    %rax,%r15
    4c6e:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    4c73:	0f 11 00             	movups %xmm0,(%rax)
    4c76:	0f 57 c0             	xorps  %xmm0,%xmm0
    4c79:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4c7d:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    4c84:	00 
    4c85:	89 58 28             	mov    %ebx,0x28(%rax)
    4c88:	4c 89 60 30          	mov    %r12,0x30(%rax)
    4c8c:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    4c90:	0f 11 40 44          	movups %xmm0,0x44(%rax)
    4c94:	0f 11 40 58          	movups %xmm0,0x58(%rax)
    4c98:	c7 40 68 ff ff ff ff 	movl   $0xffffffff,0x68(%rax)
    4c9f:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
    4ca6:	00 00 00 00 
    4caa:	48 83 7d 40 00       	cmpq   $0x0,0x40(%rbp)
    4caf:	0f 84 2d 01 00 00    	je     4de2 <lzma_index_dup+0x262>
    4cb5:	49 8d 5f 38          	lea    0x38(%r15),%rbx
    4cb9:	4c 89 f8             	mov    %r15,%rax
    4cbc:	48 83 c0 68          	add    $0x68,%rax
    4cc0:	49 8b 0e             	mov    (%r14),%rcx
    4cc3:	49 89 4f 58          	mov    %rcx,0x58(%r15)
    4cc7:	48 8b 4d 60          	mov    0x60(%rbp),%rcx
    4ccb:	49 89 4f 60          	mov    %rcx,0x60(%r15)
    4ccf:	48 8b 8d 98 00 00 00 	mov    0x98(%rbp),%rcx
    4cd6:	48 89 48 30          	mov    %rcx,0x30(%rax)
    4cda:	0f 10 45 68          	movups 0x68(%rbp),%xmm0
    4cde:	0f 10 4d 78          	movups 0x78(%rbp),%xmm1
    4ce2:	0f 10 95 88 00 00 00 	movups 0x88(%rbp),%xmm2
    4ce9:	0f 11 50 20          	movups %xmm2,0x20(%rax)
    4ced:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    4cf1:	0f 11 00             	movups %xmm0,(%rax)
    4cf4:	48 8b 85 a0 00 00 00 	mov    0xa0(%rbp),%rax
    4cfb:	49 89 87 a0 00 00 00 	mov    %rax,0xa0(%r15)
    4d02:	49 8b 3e             	mov    (%r14),%rdi
    4d05:	48 c1 e7 04          	shl    $0x4,%rdi
    4d09:	48 83 c7 40          	add    $0x40,%rdi
    4d0d:	48 8b 34 24          	mov    (%rsp),%rsi
    4d11:	e8 aa e1 ff ff       	call   2ec0 <lzma_alloc>
    4d16:	48 85 c0             	test   %rax,%rax
    4d19:	0f 84 27 01 00 00    	je     4e46 <lzma_index_dup+0x2c6>
    4d1f:	49 89 c5             	mov    %rax,%r13
    4d22:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    4d27:	0f 57 c0             	xorps  %xmm0,%xmm0
    4d2a:	0f 11 00             	movups %xmm0,(%rax)
    4d2d:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
    4d34:	00 
    4d35:	49 8b 06             	mov    (%r14),%rax
    4d38:	49 89 45 30          	mov    %rax,0x30(%r13)
    4d3c:	48 ff c8             	dec    %rax
    4d3f:	49 89 45 38          	mov    %rax,0x38(%r13)
    4d43:	48 8b 5d 40          	mov    0x40(%rbp),%rbx
    4d47:	4d 89 ee             	mov    %r13,%r14
    4d4a:	49 83 c6 40          	add    $0x40,%r14
    4d4e:	45 31 e4             	xor    %r12d,%r12d
    4d51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4d58:	0f 1f 84 00 00 00 00 
    4d5f:	00 
    4d60:	4c 89 e7             	mov    %r12,%rdi
    4d63:	48 c1 e7 04          	shl    $0x4,%rdi
    4d67:	4c 01 f7             	add    %r14,%rdi
    4d6a:	48 8d 73 40          	lea    0x40(%rbx),%rsi
    4d6e:	48 8b 53 38          	mov    0x38(%rbx),%rdx
    4d72:	48 c1 e2 04          	shl    $0x4,%rdx
    4d76:	48 83 c2 10          	add    $0x10,%rdx
    4d7a:	e8 d1 d3 ff ff       	call   2150 <memcpy@plt>
    4d7f:	48 8b 43 20          	mov    0x20(%rbx),%rax
    4d83:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    4d87:	49 01 cc             	add    %rcx,%r12
    4d8a:	49 ff c4             	inc    %r12
    4d8d:	48 89 d9             	mov    %rbx,%rcx
    4d90:	48 85 c0             	test   %rax,%rax
    4d93:	74 1b                	je     4db0 <lzma_index_dup+0x230>
    4d95:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    4d9c:	00 00 00 00 
    4da0:	48 89 c3             	mov    %rax,%rbx
    4da3:	48 8b 40 18          	mov    0x18(%rax),%rax
    4da7:	48 85 c0             	test   %rax,%rax
    4daa:	75 f4                	jne    4da0 <lzma_index_dup+0x220>
    4dac:	eb b2                	jmp    4d60 <lzma_index_dup+0x1e0>
    4dae:	66 90                	xchg   %ax,%ax
    4db0:	48 8b 59 10          	mov    0x10(%rcx),%rbx
    4db4:	48 85 db             	test   %rbx,%rbx
    4db7:	74 17                	je     4dd0 <lzma_index_dup+0x250>
    4db9:	48 39 4b 20          	cmp    %rcx,0x20(%rbx)
    4dbd:	48 89 d9             	mov    %rbx,%rcx
    4dc0:	74 ee                	je     4db0 <lzma_index_dup+0x230>
    4dc2:	eb 9c                	jmp    4d60 <lzma_index_dup+0x1e0>
    4dc4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    4dcb:	00 00 00 00 00 
    4dd0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4dd5:	4c 89 ee             	mov    %r13,%rsi
    4dd8:	e8 43 f2 ff ff       	call   4020 <index_tree_append>
    4ddd:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    4de2:	4c 89 ef             	mov    %r13,%rdi
    4de5:	4c 89 fe             	mov    %r15,%rsi
    4de8:	e8 33 f2 ff ff       	call   4020 <index_tree_append>
    4ded:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    4df1:	48 85 c9             	test   %rcx,%rcx
    4df4:	74 1a                	je     4e10 <lzma_index_dup+0x290>
    4df6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4dfd:	00 00 00 
    4e00:	48 89 c8             	mov    %rcx,%rax
    4e03:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    4e07:	48 85 c9             	test   %rcx,%rcx
    4e0a:	75 f4                	jne    4e00 <lzma_index_dup+0x280>
    4e0c:	eb 18                	jmp    4e26 <lzma_index_dup+0x2a6>
    4e0e:	66 90                	xchg   %ax,%ax
    4e10:	48 8b 45 10          	mov    0x10(%rbp),%rax
    4e14:	48 85 c0             	test   %rax,%rax
    4e17:	0f 84 10 fe ff ff    	je     4c2d <lzma_index_dup+0xad>
    4e1d:	48 39 68 20          	cmp    %rbp,0x20(%rax)
    4e21:	48 89 c5             	mov    %rax,%rbp
    4e24:	74 ea                	je     4e10 <lzma_index_dup+0x290>
    4e26:	4c 8d 70 58          	lea    0x58(%rax),%r14
    4e2a:	48 89 c5             	mov    %rax,%rbp
    4e2d:	48 b9 fb ff ff ff ff 	movabs $0xffffffffffffffb,%rcx
    4e34:	ff ff 0f 
    4e37:	48 39 48 58          	cmp    %rcx,0x58(%rax)
    4e3b:	0f 86 07 fe ff ff    	jbe    4c48 <lzma_index_dup+0xc8>
    4e41:	e9 bd fd ff ff       	jmp    4c03 <lzma_index_dup+0x83>
    4e46:	48 8b 3b             	mov    (%rbx),%rdi
    4e49:	48 85 ff             	test   %rdi,%rdi
    4e4c:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    4e51:	0f 84 ac fd ff ff    	je     4c03 <lzma_index_dup+0x83>
    4e57:	48 8b 34 24          	mov    (%rsp),%rsi
    4e5b:	31 d2                	xor    %edx,%edx
    4e5d:	e8 9e 05 00 00       	call   5400 <index_tree_node_end>
    4e62:	e9 9c fd ff ff       	jmp    4c03 <lzma_index_dup+0x83>
    4e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4e6e:	00 00 

0000000000004e70 <lzma_index_iter_init>:
    4e70:	48 89 b7 00 01 00 00 	mov    %rsi,0x100(%rdi)
    4e77:	0f 57 c0             	xorps  %xmm0,%xmm0
    4e7a:	0f 11 87 08 01 00 00 	movups %xmm0,0x108(%rdi)
    4e81:	0f 11 87 18 01 00 00 	movups %xmm0,0x118(%rdi)
    4e88:	c3                   	ret    
    4e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004e90 <lzma_index_iter_rewind>:
    4e90:	0f 57 c0             	xorps  %xmm0,%xmm0
    4e93:	0f 11 87 18 01 00 00 	movups %xmm0,0x118(%rdi)
    4e9a:	0f 11 87 08 01 00 00 	movups %xmm0,0x108(%rdi)
    4ea1:	c3                   	ret    
    4ea2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4ea9:	1f 84 00 00 00 00 00 

0000000000004eb0 <lzma_index_iter_next>:
    4eb0:	b0 01                	mov    $0x1,%al
    4eb2:	83 fe 03             	cmp    $0x3,%esi
    4eb5:	0f 87 35 02 00 00    	ja     50f0 <lzma_index_iter_next+0x240>
    4ebb:	50                   	push   %rax
    4ebc:	48 8b 8f 08 01 00 00 	mov    0x108(%rdi),%rcx
    4ec3:	83 fe 01             	cmp    $0x1,%esi
    4ec6:	75 05                	jne    4ecd <lzma_index_iter_next+0x1d>
    4ec8:	45 31 c0             	xor    %r8d,%r8d
    4ecb:	eb 5e                	jmp    4f2b <lzma_index_iter_next+0x7b>
    4ecd:	48 8b 97 20 01 00 00 	mov    0x120(%rdi),%rdx
    4ed4:	48 83 fa 02          	cmp    $0x2,%rdx
    4ed8:	74 4a                	je     4f24 <lzma_index_iter_next+0x74>
    4eda:	48 83 fa 01          	cmp    $0x1,%rdx
    4ede:	74 0e                	je     4eee <lzma_index_iter_next+0x3e>
    4ee0:	48 85 d2             	test   %rdx,%rdx
    4ee3:	75 e3                	jne    4ec8 <lzma_index_iter_next+0x18>
    4ee5:	48 8d 97 10 01 00 00 	lea    0x110(%rdi),%rdx
    4eec:	eb 3a                	jmp    4f28 <lzma_index_iter_next+0x78>
    4eee:	48 8b 97 10 01 00 00 	mov    0x110(%rdi),%rdx
    4ef5:	4c 8b 4a 20          	mov    0x20(%rdx),%r9
    4ef9:	4d 85 c9             	test   %r9,%r9
    4efc:	74 1b                	je     4f19 <lzma_index_iter_next+0x69>
    4efe:	66 90                	xchg   %ax,%ax
    4f00:	4d 89 c8             	mov    %r9,%r8
    4f03:	4d 8b 49 18          	mov    0x18(%r9),%r9
    4f07:	4d 85 c9             	test   %r9,%r9
    4f0a:	75 f4                	jne    4f00 <lzma_index_iter_next+0x50>
    4f0c:	eb 1d                	jmp    4f2b <lzma_index_iter_next+0x7b>
    4f0e:	66 90                	xchg   %ax,%ax
    4f10:	49 39 50 20          	cmp    %rdx,0x20(%r8)
    4f14:	4c 89 c2             	mov    %r8,%rdx
    4f17:	75 12                	jne    4f2b <lzma_index_iter_next+0x7b>
    4f19:	4c 8b 42 10          	mov    0x10(%rdx),%r8
    4f1d:	4d 85 c0             	test   %r8,%r8
    4f20:	75 ee                	jne    4f10 <lzma_index_iter_next+0x60>
    4f22:	eb a4                	jmp    4ec8 <lzma_index_iter_next+0x18>
    4f24:	48 8d 51 40          	lea    0x40(%rcx),%rdx
    4f28:	4c 8b 02             	mov    (%rdx),%r8
    4f2b:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
    4f32:	4c 8b 8f 18 01 00 00 	mov    0x118(%rdi),%r9
    4f39:	48 85 c9             	test   %rcx,%rcx
    4f3c:	74 22                	je     4f60 <lzma_index_iter_next+0xb0>
    4f3e:	4d 85 c0             	test   %r8,%r8
    4f41:	0f 84 d9 00 00 00    	je     5020 <lzma_index_iter_next+0x170>
    4f47:	4d 3b 48 38          	cmp    0x38(%r8),%r9
    4f4b:	0f 83 7c 00 00 00    	jae    4fcd <lzma_index_iter_next+0x11d>
    4f51:	49 ff c1             	inc    %r9
    4f54:	e9 43 01 00 00       	jmp    509c <lzma_index_iter_next+0x1ec>
    4f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4f60:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    4f64:	4c 8b 41 40          	mov    0x40(%rcx),%r8
    4f68:	83 fe 02             	cmp    $0x2,%esi
    4f6b:	0f 82 5c 01 00 00    	jb     50cd <lzma_index_iter_next+0x21d>
    4f71:	4d 85 c0             	test   %r8,%r8
    4f74:	0f 85 1f 01 00 00    	jne    5099 <lzma_index_iter_next+0x1e9>
    4f7a:	49 89 ca             	mov    %rcx,%r10
    4f7d:	4d 8b 42 20          	mov    0x20(%r10),%r8
    4f81:	4d 85 c0             	test   %r8,%r8
    4f84:	74 1a                	je     4fa0 <lzma_index_iter_next+0xf0>
    4f86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4f8d:	00 00 00 
    4f90:	4c 89 c1             	mov    %r8,%rcx
    4f93:	4d 8b 40 18          	mov    0x18(%r8),%r8
    4f97:	4d 85 c0             	test   %r8,%r8
    4f9a:	75 f4                	jne    4f90 <lzma_index_iter_next+0xe0>
    4f9c:	eb 18                	jmp    4fb6 <lzma_index_iter_next+0x106>
    4f9e:	66 90                	xchg   %ax,%ax
    4fa0:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    4fa4:	48 85 c9             	test   %rcx,%rcx
    4fa7:	0f 84 3f 01 00 00    	je     50ec <lzma_index_iter_next+0x23c>
    4fad:	4c 39 51 20          	cmp    %r10,0x20(%rcx)
    4fb1:	49 89 ca             	mov    %rcx,%r10
    4fb4:	74 ea                	je     4fa0 <lzma_index_iter_next+0xf0>
    4fb6:	4c 8b 41 40          	mov    0x40(%rcx),%r8
    4fba:	49 89 ca             	mov    %rcx,%r10
    4fbd:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    4fc3:	4d 85 c0             	test   %r8,%r8
    4fc6:	74 b5                	je     4f7d <lzma_index_iter_next+0xcd>
    4fc8:	e9 cf 00 00 00       	jmp    509c <lzma_index_iter_next+0x1ec>
    4fcd:	4d 8b 48 20          	mov    0x20(%r8),%r9
    4fd1:	4d 85 c9             	test   %r9,%r9
    4fd4:	74 2a                	je     5000 <lzma_index_iter_next+0x150>
    4fd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4fdd:	00 00 00 
    4fe0:	4d 89 c8             	mov    %r9,%r8
    4fe3:	4d 8b 49 18          	mov    0x18(%r9),%r9
    4fe7:	4d 85 c9             	test   %r9,%r9
    4fea:	75 f4                	jne    4fe0 <lzma_index_iter_next+0x130>
    4fec:	e9 a8 00 00 00       	jmp    5099 <lzma_index_iter_next+0x1e9>
    4ff1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4ff8:	0f 1f 84 00 00 00 00 
    4fff:	00 
    5000:	4d 8b 48 10          	mov    0x10(%r8),%r9
    5004:	4d 85 c9             	test   %r9,%r9
    5007:	74 17                	je     5020 <lzma_index_iter_next+0x170>
    5009:	4d 39 41 20          	cmp    %r8,0x20(%r9)
    500d:	4d 89 c8             	mov    %r9,%r8
    5010:	74 ee                	je     5000 <lzma_index_iter_next+0x150>
    5012:	4d 89 c8             	mov    %r9,%r8
    5015:	e9 7f 00 00 00       	jmp    5099 <lzma_index_iter_next+0x1e9>
    501a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5020:	83 fe 02             	cmp    $0x2,%esi
    5023:	72 3d                	jb     5062 <lzma_index_iter_next+0x1b2>
    5025:	4c 8b 41 20          	mov    0x20(%rcx),%r8
    5029:	4d 85 c0             	test   %r8,%r8
    502c:	74 12                	je     5040 <lzma_index_iter_next+0x190>
    502e:	66 90                	xchg   %ax,%ax
    5030:	4d 89 c1             	mov    %r8,%r9
    5033:	4d 8b 40 18          	mov    0x18(%r8),%r8
    5037:	4d 85 c0             	test   %r8,%r8
    503a:	75 f4                	jne    5030 <lzma_index_iter_next+0x180>
    503c:	eb 18                	jmp    5056 <lzma_index_iter_next+0x1a6>
    503e:	66 90                	xchg   %ax,%ax
    5040:	4c 8b 49 10          	mov    0x10(%rcx),%r9
    5044:	4d 85 c9             	test   %r9,%r9
    5047:	0f 84 9f 00 00 00    	je     50ec <lzma_index_iter_next+0x23c>
    504d:	49 39 49 20          	cmp    %rcx,0x20(%r9)
    5051:	4c 89 c9             	mov    %r9,%rcx
    5054:	74 ea                	je     5040 <lzma_index_iter_next+0x190>
    5056:	49 83 79 40 00       	cmpq   $0x0,0x40(%r9)
    505b:	4c 89 c9             	mov    %r9,%rcx
    505e:	74 c5                	je     5025 <lzma_index_iter_next+0x175>
    5060:	eb 30                	jmp    5092 <lzma_index_iter_next+0x1e2>
    5062:	4c 8b 41 20          	mov    0x20(%rcx),%r8
    5066:	4d 85 c0             	test   %r8,%r8
    5069:	74 15                	je     5080 <lzma_index_iter_next+0x1d0>
    506b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5070:	4d 89 c1             	mov    %r8,%r9
    5073:	4d 8b 40 18          	mov    0x18(%r8),%r8
    5077:	4d 85 c0             	test   %r8,%r8
    507a:	75 f4                	jne    5070 <lzma_index_iter_next+0x1c0>
    507c:	eb 14                	jmp    5092 <lzma_index_iter_next+0x1e2>
    507e:	66 90                	xchg   %ax,%ax
    5080:	4c 8b 49 10          	mov    0x10(%rcx),%r9
    5084:	4d 85 c9             	test   %r9,%r9
    5087:	74 63                	je     50ec <lzma_index_iter_next+0x23c>
    5089:	49 39 49 20          	cmp    %rcx,0x20(%r9)
    508d:	4c 89 c9             	mov    %r9,%rcx
    5090:	74 ee                	je     5080 <lzma_index_iter_next+0x1d0>
    5092:	4d 8b 41 40          	mov    0x40(%r9),%r8
    5096:	4c 89 c9             	mov    %r9,%rcx
    5099:	45 31 c9             	xor    %r9d,%r9d
    509c:	83 fe 03             	cmp    $0x3,%esi
    509f:	75 2f                	jne    50d0 <lzma_index_iter_next+0x220>
    50a1:	4d 85 c9             	test   %r9,%r9
    50a4:	74 1a                	je     50c0 <lzma_index_iter_next+0x210>
    50a6:	4d 89 ca             	mov    %r9,%r10
    50a9:	49 c1 e2 04          	shl    $0x4,%r10
    50ad:	4f 8b 5c 10 30       	mov    0x30(%r8,%r10,1),%r11
    50b2:	4f 3b 5c 10 40       	cmp    0x40(%r8,%r10,1),%r11
    50b7:	0f 84 7c fe ff ff    	je     4f39 <lzma_index_iter_next+0x89>
    50bd:	eb 11                	jmp    50d0 <lzma_index_iter_next+0x220>
    50bf:	90                   	nop
    50c0:	4d 8b 10             	mov    (%r8),%r10
    50c3:	4d 3b 50 40          	cmp    0x40(%r8),%r10
    50c7:	0f 84 6c fe ff ff    	je     4f39 <lzma_index_iter_next+0x89>
    50cd:	45 31 c9             	xor    %r9d,%r9d
    50d0:	48 89 8f 08 01 00 00 	mov    %rcx,0x108(%rdi)
    50d7:	4c 89 87 10 01 00 00 	mov    %r8,0x110(%rdi)
    50de:	4c 89 8f 18 01 00 00 	mov    %r9,0x118(%rdi)
    50e5:	e8 16 00 00 00       	call   5100 <iter_set_info>
    50ea:	31 c0                	xor    %eax,%eax
    50ec:	48 83 c4 08          	add    $0x8,%rsp
    50f0:	c3                   	ret    
    50f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    50f8:	0f 1f 84 00 00 00 00 
    50ff:	00 

0000000000005100 <iter_set_info>:
    5100:	55                   	push   %rbp
    5101:	41 57                	push   %r15
    5103:	41 56                	push   %r14
    5105:	41 55                	push   %r13
    5107:	41 54                	push   %r12
    5109:	53                   	push   %rbx
    510a:	50                   	push   %rax
    510b:	48 89 fb             	mov    %rdi,%rbx
    510e:	4c 8b a7 08 01 00 00 	mov    0x108(%rdi),%r12
    5115:	4c 8b b7 10 01 00 00 	mov    0x110(%rdi),%r14
    511c:	4d 85 f6             	test   %r14,%r14
    511f:	74 25                	je     5146 <iter_set_info+0x46>
    5121:	48 8b 83 00 01 00 00 	mov    0x100(%rbx),%rax
    5128:	4c 39 60 10          	cmp    %r12,0x10(%rax)
    512c:	75 0b                	jne    5139 <iter_set_info+0x39>
    512e:	4d 39 74 24 48       	cmp    %r14,0x48(%r12)
    5133:	0f 84 af 01 00 00    	je     52e8 <iter_set_info+0x1e8>
    5139:	48 c7 83 20 01 00 00 	movq   $0x0,0x120(%rbx)
    5140:	00 00 00 00 
    5144:	eb 0b                	jmp    5151 <iter_set_info+0x51>
    5146:	48 c7 83 20 01 00 00 	movq   $0x2,0x120(%rbx)
    514d:	02 00 00 00 
    5151:	4c 8b bb 18 01 00 00 	mov    0x118(%rbx),%r15
    5158:	41 8b 44 24 28       	mov    0x28(%r12),%eax
    515d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    5161:	49 8b 44 24 58       	mov    0x58(%r12),%rax
    5166:	48 89 43 28          	mov    %rax,0x28(%rbx)
    516a:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    516f:	48 89 43 30          	mov    %rax,0x30(%rbx)
    5173:	49 8b 04 24          	mov    (%r12),%rax
    5177:	48 89 43 38          	mov    %rax,0x38(%rbx)
    517b:	31 c0                	xor    %eax,%eax
    517d:	41 83 7c 24 68 ff    	cmpl   $0xffffffff,0x68(%r12)
    5183:	49 8d 4c 24 68       	lea    0x68(%r12),%rcx
    5188:	48 0f 45 c1          	cmovne %rcx,%rax
    518c:	48 89 03             	mov    %rax,(%rbx)
    518f:	49 8b 84 24 a0 00 00 	mov    0xa0(%r12),%rax
    5196:	00 
    5197:	48 89 43 50          	mov    %rax,0x50(%rbx)
    519b:	4d 8b 6c 24 48       	mov    0x48(%r12),%r13
    51a0:	4d 85 ed             	test   %r13,%r13
    51a3:	74 57                	je     51fc <iter_set_info+0xfc>
    51a5:	49 8b 7c 24 58       	mov    0x58(%r12),%rdi
    51aa:	49 8b 6c 24 60       	mov    0x60(%r12),%rbp
    51af:	e8 2c 03 00 00       	call   54e0 <lzma_vli_size>
    51b4:	ff c0                	inc    %eax
    51b6:	48 01 e8             	add    %rbp,%rax
    51b9:	48 83 c0 07          	add    $0x7,%rax
    51bd:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    51c1:	49 8b 4d 38          	mov    0x38(%r13),%rcx
    51c5:	48 c1 e1 04          	shl    $0x4,%rcx
    51c9:	49 8b 4c 0d 48       	mov    0x48(%r13,%rcx,1),%rcx
    51ce:	48 83 c1 03          	add    $0x3,%rcx
    51d2:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
    51d6:	48 01 c8             	add    %rcx,%rax
    51d9:	48 83 c0 18          	add    $0x18,%rax
    51dd:	48 89 43 40          	mov    %rax,0x40(%rbx)
    51e1:	49 8b 45 38          	mov    0x38(%r13),%rax
    51e5:	48 c1 e0 04          	shl    $0x4,%rax
    51e9:	4d 8b 6c 05 40       	mov    0x40(%r13,%rax,1),%r13
    51ee:	4c 89 6b 48          	mov    %r13,0x48(%rbx)
    51f2:	4d 85 f6             	test   %r14,%r14
    51f5:	75 2e                	jne    5225 <iter_set_info+0x125>
    51f7:	e9 dd 00 00 00       	jmp    52d9 <iter_set_info+0x1d9>
    51fc:	45 31 ed             	xor    %r13d,%r13d
    51ff:	31 ff                	xor    %edi,%edi
    5201:	e8 da 02 00 00       	call   54e0 <lzma_vli_size>
    5206:	ff c0                	inc    %eax
    5208:	48 83 c0 07          	add    $0x7,%rax
    520c:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    5210:	48 83 c0 18          	add    $0x18,%rax
    5214:	48 89 43 40          	mov    %rax,0x40(%rbx)
    5218:	4c 89 6b 48          	mov    %r13,0x48(%rbx)
    521c:	4d 85 f6             	test   %r14,%r14
    521f:	0f 84 b4 00 00 00    	je     52d9 <iter_set_info+0x1d9>
    5225:	49 8b 46 28          	mov    0x28(%r14),%rax
    5229:	4c 01 f8             	add    %r15,%rax
    522c:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
    5233:	49 03 44 24 30       	add    0x30(%r12),%rax
    5238:	48 89 43 78          	mov    %rax,0x78(%rbx)
    523c:	4d 85 ff             	test   %r15,%r15
    523f:	74 1a                	je     525b <iter_set_info+0x15b>
    5241:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    5245:	48 89 c8             	mov    %rcx,%rax
    5248:	48 c1 e0 04          	shl    $0x4,%rax
    524c:	49 8b 44 06 48       	mov    0x48(%r14,%rax,1),%rax
    5251:	48 83 c0 03          	add    $0x3,%rax
    5255:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    5259:	eb 0b                	jmp    5266 <iter_set_info+0x166>
    525b:	49 8b 46 08          	mov    0x8(%r14),%rax
    525f:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    5266:	48 c1 e1 04          	shl    $0x4,%rcx
    526a:	4d 85 ff             	test   %r15,%r15
    526d:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    5274:	49 8d 4c 0e 40       	lea    0x40(%r14,%rcx,1),%rcx
    5279:	49 0f 44 ce          	cmove  %r14,%rcx
    527d:	48 8b 09             	mov    (%rcx),%rcx
    5280:	48 89 8b a0 00 00 00 	mov    %rcx,0xa0(%rbx)
    5287:	49 c1 e7 04          	shl    $0x4,%r15
    528b:	4b 8b 54 3e 40       	mov    0x40(%r14,%r15,1),%rdx
    5290:	48 29 ca             	sub    %rcx,%rdx
    5293:	48 89 93 a8 00 00 00 	mov    %rdx,0xa8(%rbx)
    529a:	4b 8b 54 3e 48       	mov    0x48(%r14,%r15,1),%rdx
    529f:	48 29 c2             	sub    %rax,%rdx
    52a2:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    52a9:	48 83 c2 03          	add    $0x3,%rdx
    52ad:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    52b1:	48 89 93 b8 00 00 00 	mov    %rdx,0xb8(%rbx)
    52b8:	48 83 c0 0c          	add    $0xc,%rax
    52bc:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    52c3:	48 03 43 30          	add    0x30(%rbx),%rax
    52c7:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
    52ce:	48 03 4b 38          	add    0x38(%rbx),%rcx
    52d2:	48 89 8b 88 00 00 00 	mov    %rcx,0x88(%rbx)
    52d9:	48 83 c4 08          	add    $0x8,%rsp
    52dd:	5b                   	pop    %rbx
    52de:	41 5c                	pop    %r12
    52e0:	41 5d                	pop    %r13
    52e2:	41 5e                	pop    %r14
    52e4:	41 5f                	pop    %r15
    52e6:	5d                   	pop    %rbp
    52e7:	c3                   	ret    
    52e8:	4d 39 74 24 40       	cmp    %r14,0x40(%r12)
    52ed:	74 1b                	je     530a <iter_set_info+0x20a>
    52ef:	48 c7 83 20 01 00 00 	movq   $0x1,0x120(%rbx)
    52f6:	01 00 00 00 
    52fa:	49 8b 46 10          	mov    0x10(%r14),%rax
    52fe:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
    5305:	e9 47 fe ff ff       	jmp    5151 <iter_set_info+0x51>
    530a:	48 c7 83 20 01 00 00 	movq   $0x2,0x120(%rbx)
    5311:	02 00 00 00 
    5315:	48 c7 83 10 01 00 00 	movq   $0x0,0x110(%rbx)
    531c:	00 00 00 00 
    5320:	e9 2c fe ff ff       	jmp    5151 <iter_set_info+0x51>
    5325:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    532c:	00 00 00 00 

0000000000005330 <lzma_index_iter_locate>:
    5330:	48 8b 8f 00 01 00 00 	mov    0x100(%rdi),%rcx
    5337:	b0 01                	mov    $0x1,%al
    5339:	48 39 71 20          	cmp    %rsi,0x20(%rcx)
    533d:	0f 86 bb 00 00 00    	jbe    53fe <lzma_index_iter_locate+0xce>
    5343:	50                   	push   %rax
    5344:	48 8b 09             	mov    (%rcx),%rcx
    5347:	31 c0                	xor    %eax,%eax
    5349:	48 85 c9             	test   %rcx,%rcx
    534c:	74 18                	je     5366 <lzma_index_iter_locate+0x36>
    534e:	66 90                	xchg   %ax,%ax
    5350:	31 d2                	xor    %edx,%edx
    5352:	48 39 31             	cmp    %rsi,(%rcx)
    5355:	48 0f 46 c1          	cmovbe %rcx,%rax
    5359:	0f 96 c2             	setbe  %dl
    535c:	48 8b 4c d1 18       	mov    0x18(%rcx,%rdx,8),%rcx
    5361:	48 85 c9             	test   %rcx,%rcx
    5364:	75 ea                	jne    5350 <lzma_index_iter_locate+0x20>
    5366:	48 2b 30             	sub    (%rax),%rsi
    5369:	48 8b 50 38          	mov    0x38(%rax),%rdx
    536d:	31 c9                	xor    %ecx,%ecx
    536f:	48 85 d2             	test   %rdx,%rdx
    5372:	74 24                	je     5398 <lzma_index_iter_locate+0x68>
    5374:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    537b:	00 00 00 00 00 
    5380:	45 31 c0             	xor    %r8d,%r8d
    5383:	48 39 32             	cmp    %rsi,(%rdx)
    5386:	48 0f 46 ca          	cmovbe %rdx,%rcx
    538a:	41 0f 96 c0          	setbe  %r8b
    538e:	4a 8b 54 c2 18       	mov    0x18(%rdx,%r8,8),%rdx
    5393:	48 85 d2             	test   %rdx,%rdx
    5396:	75 e8                	jne    5380 <lzma_index_iter_locate+0x50>
    5398:	4c 8b 41 38          	mov    0x38(%rcx),%r8
    539c:	31 d2                	xor    %edx,%edx
    539e:	4d 85 c0             	test   %r8,%r8
    53a1:	75 18                	jne    53bb <lzma_index_iter_locate+0x8b>
    53a3:	eb 39                	jmp    53de <lzma_index_iter_locate+0xae>
    53a5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    53ac:	00 00 00 00 
    53b0:	4c 01 ca             	add    %r9,%rdx
    53b3:	48 ff c2             	inc    %rdx
    53b6:	4c 39 c2             	cmp    %r8,%rdx
    53b9:	73 23                	jae    53de <lzma_index_iter_locate+0xae>
    53bb:	4d 89 c1             	mov    %r8,%r9
    53be:	49 29 d1             	sub    %rdx,%r9
    53c1:	49 d1 e9             	shr    %r9
    53c4:	4d 8d 14 11          	lea    (%r9,%rdx,1),%r10
    53c8:	4d 89 d3             	mov    %r10,%r11
    53cb:	49 c1 e3 04          	shl    $0x4,%r11
    53cf:	4a 39 74 19 40       	cmp    %rsi,0x40(%rcx,%r11,1)
    53d4:	76 da                	jbe    53b0 <lzma_index_iter_locate+0x80>
    53d6:	4d 89 d0             	mov    %r10,%r8
    53d9:	4c 39 c2             	cmp    %r8,%rdx
    53dc:	72 dd                	jb     53bb <lzma_index_iter_locate+0x8b>
    53de:	48 89 87 08 01 00 00 	mov    %rax,0x108(%rdi)
    53e5:	48 89 8f 10 01 00 00 	mov    %rcx,0x110(%rdi)
    53ec:	48 89 97 18 01 00 00 	mov    %rdx,0x118(%rdi)
    53f3:	e8 08 fd ff ff       	call   5100 <iter_set_info>
    53f8:	31 c0                	xor    %eax,%eax
    53fa:	48 83 c4 08          	add    $0x8,%rsp
    53fe:	c3                   	ret    
    53ff:	90                   	nop

0000000000005400 <index_tree_node_end>:
    5400:	41 57                	push   %r15
    5402:	41 56                	push   %r14
    5404:	53                   	push   %rbx
    5405:	49 89 d7             	mov    %rdx,%r15
    5408:	48 89 f3             	mov    %rsi,%rbx
    540b:	49 89 fe             	mov    %rdi,%r14
    540e:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    5412:	48 85 ff             	test   %rdi,%rdi
    5415:	74 0b                	je     5422 <index_tree_node_end+0x22>
    5417:	48 89 de             	mov    %rbx,%rsi
    541a:	4c 89 fa             	mov    %r15,%rdx
    541d:	e8 de ff ff ff       	call   5400 <index_tree_node_end>
    5422:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    5426:	48 85 ff             	test   %rdi,%rdi
    5429:	74 0b                	je     5436 <index_tree_node_end+0x36>
    542b:	48 89 de             	mov    %rbx,%rsi
    542e:	4c 89 fa             	mov    %r15,%rdx
    5431:	e8 ca ff ff ff       	call   5400 <index_tree_node_end>
    5436:	4d 85 ff             	test   %r15,%r15
    5439:	74 09                	je     5444 <index_tree_node_end+0x44>
    543b:	4c 89 f7             	mov    %r14,%rdi
    543e:	48 89 de             	mov    %rbx,%rsi
    5441:	41 ff d7             	call   *%r15
    5444:	4c 89 f7             	mov    %r14,%rdi
    5447:	48 89 de             	mov    %rbx,%rsi
    544a:	5b                   	pop    %rbx
    544b:	41 5e                	pop    %r14
    544d:	41 5f                	pop    %r15
    544f:	e9 9c da ff ff       	jmp    2ef0 <lzma_free>
    5454:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    545b:	00 00 00 
    545e:	66 90                	xchg   %ax,%ax

0000000000005460 <lzma_stream_flags_compare>:
    5460:	b8 08 00 00 00       	mov    $0x8,%eax
    5465:	83 3f 00             	cmpl   $0x0,(%rdi)
    5468:	74 01                	je     546b <lzma_stream_flags_compare+0xb>
    546a:	c3                   	ret    
    546b:	83 3e 00             	cmpl   $0x0,(%rsi)
    546e:	75 fa                	jne    546a <lzma_stream_flags_compare+0xa>
    5470:	8b 4f 10             	mov    0x10(%rdi),%ecx
    5473:	b8 0b 00 00 00       	mov    $0xb,%eax
    5478:	83 f9 0f             	cmp    $0xf,%ecx
    547b:	77 ed                	ja     546a <lzma_stream_flags_compare+0xa>
    547d:	8b 56 10             	mov    0x10(%rsi),%edx
    5480:	83 fa 0f             	cmp    $0xf,%edx
    5483:	77 e5                	ja     546a <lzma_stream_flags_compare+0xa>
    5485:	39 d1                	cmp    %edx,%ecx
    5487:	75 4b                	jne    54d4 <lzma_stream_flags_compare+0x74>
    5489:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    548d:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
    5491:	74 3e                	je     54d1 <lzma_stream_flags_compare+0x71>
    5493:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    5497:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
    549b:	74 34                	je     54d1 <lzma_stream_flags_compare+0x71>
    549d:	48 be fd ff ff ff 03 	movabs $0x3fffffffd,%rsi
    54a4:	00 00 00 
    54a7:	48 8d 79 fc          	lea    -0x4(%rcx),%rdi
    54ab:	48 39 f7             	cmp    %rsi,%rdi
    54ae:	73 ba                	jae    546a <lzma_stream_flags_compare+0xa>
    54b0:	89 cf                	mov    %ecx,%edi
    54b2:	83 e7 03             	and    $0x3,%edi
    54b5:	75 b3                	jne    546a <lzma_stream_flags_compare+0xa>
    54b7:	48 8d 7a fc          	lea    -0x4(%rdx),%rdi
    54bb:	48 39 f7             	cmp    %rsi,%rdi
    54be:	73 aa                	jae    546a <lzma_stream_flags_compare+0xa>
    54c0:	89 d6                	mov    %edx,%esi
    54c2:	83 e6 03             	and    $0x3,%esi
    54c5:	75 a3                	jne    546a <lzma_stream_flags_compare+0xa>
    54c7:	b8 09 00 00 00       	mov    $0x9,%eax
    54cc:	48 39 d1             	cmp    %rdx,%rcx
    54cf:	75 99                	jne    546a <lzma_stream_flags_compare+0xa>
    54d1:	31 c0                	xor    %eax,%eax
    54d3:	c3                   	ret    
    54d4:	b8 09 00 00 00       	mov    $0x9,%eax
    54d9:	c3                   	ret    
    54da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000054e0 <lzma_vli_size>:
    54e0:	31 c0                	xor    %eax,%eax
    54e2:	48 85 ff             	test   %rdi,%rdi
    54e5:	78 18                	js     54ff <lzma_vli_size+0x1f>
    54e7:	48 89 f9             	mov    %rdi,%rcx
    54ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    54f0:	48 c1 e9 07          	shr    $0x7,%rcx
    54f4:	ff c0                	inc    %eax
    54f6:	48 83 ff 7f          	cmp    $0x7f,%rdi
    54fa:	48 89 cf             	mov    %rcx,%rdi
    54fd:	77 f1                	ja     54f0 <lzma_vli_size+0x10>
    54ff:	c3                   	ret    

0000000000005500 <lzma_alone_encoder>:
    5500:	41 56                	push   %r14
    5502:	53                   	push   %rbx
    5503:	50                   	push   %rax
    5504:	49 89 f6             	mov    %rsi,%r14
    5507:	48 89 fb             	mov    %rdi,%rbx
    550a:	e8 d1 db ff ff       	call   30e0 <lzma_strm_init>
    550f:	85 c0                	test   %eax,%eax
    5511:	74 08                	je     551b <lzma_alone_encoder+0x1b>
    5513:	48 83 c4 08          	add    $0x8,%rsp
    5517:	5b                   	pop    %rbx
    5518:	41 5e                	pop    %r14
    551a:	c3                   	ret    
    551b:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    551f:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    5523:	4c 89 f2             	mov    %r14,%rdx
    5526:	e8 35 00 00 00       	call   5560 <alone_encoder_init>
    552b:	85 c0                	test   %eax,%eax
    552d:	74 14                	je     5543 <lzma_alone_encoder+0x43>
    552f:	48 89 df             	mov    %rbx,%rdi
    5532:	89 c3                	mov    %eax,%ebx
    5534:	e8 d7 de ff ff       	call   3410 <lzma_end>
    5539:	89 d8                	mov    %ebx,%eax
    553b:	48 83 c4 08          	add    $0x8,%rsp
    553f:	5b                   	pop    %rbx
    5540:	41 5e                	pop    %r14
    5542:	c3                   	ret    
    5543:	48 8b 43 38          	mov    0x38(%rbx),%rax
    5547:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    554b:	48 8b 43 38          	mov    0x38(%rbx),%rax
    554f:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    5553:	31 c0                	xor    %eax,%eax
    5555:	48 83 c4 08          	add    $0x8,%rsp
    5559:	5b                   	pop    %rbx
    555a:	41 5e                	pop    %r14
    555c:	c3                   	ret    
    555d:	0f 1f 00             	nopl   (%rax)

0000000000005560 <alone_encoder_init>:
    5560:	41 57                	push   %r15
    5562:	41 56                	push   %r14
    5564:	41 54                	push   %r12
    5566:	53                   	push   %rbx
    5567:	48 83 ec 38          	sub    $0x38,%rsp
    556b:	49 89 d7             	mov    %rdx,%r15
    556e:	48 89 f3             	mov    %rsi,%rbx
    5571:	49 89 fe             	mov    %rdi,%r14
    5574:	4c 8d 25 e5 ff ff ff 	lea    -0x1b(%rip),%r12        # 5560 <alone_encoder_init>
    557b:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    557f:	74 0b                	je     558c <alone_encoder_init+0x2c>
    5581:	4c 89 f7             	mov    %r14,%rdi
    5584:	48 89 de             	mov    %rbx,%rsi
    5587:	e8 b4 da ff ff       	call   3040 <lzma_next_end>
    558c:	4d 89 66 10          	mov    %r12,0x10(%r14)
    5590:	49 8b 06             	mov    (%r14),%rax
    5593:	48 85 c0             	test   %rax,%rax
    5596:	75 50                	jne    55e8 <alone_encoder_init+0x88>
    5598:	bf 60 00 00 00       	mov    $0x60,%edi
    559d:	48 89 de             	mov    %rbx,%rsi
    55a0:	e8 1b d9 ff ff       	call   2ec0 <lzma_alloc>
    55a5:	49 89 06             	mov    %rax,(%r14)
    55a8:	48 85 c0             	test   %rax,%rax
    55ab:	0f 84 ec 00 00 00    	je     569d <alone_encoder_init+0x13d>
    55b1:	48 8d 0d f8 00 00 00 	lea    0xf8(%rip),%rcx        # 56b0 <alone_encode>
    55b8:	49 89 4e 18          	mov    %rcx,0x18(%r14)
    55bc:	48 8d 0d bd 01 00 00 	lea    0x1bd(%rip),%rcx        # 5780 <alone_encoder_end>
    55c3:	49 89 4e 20          	mov    %rcx,0x20(%r14)
    55c7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    55ce:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    55d5:	ff 
    55d6:	0f 57 c0             	xorps  %xmm0,%xmm0
    55d9:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    55dd:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    55e1:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    55e5:	49 8b 06             	mov    (%r14),%rax
    55e8:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    55ef:	49 8b 06             	mov    (%r14),%rax
    55f2:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    55f9:	00 
    55fa:	49 8b 36             	mov    (%r14),%rsi
    55fd:	48 83 c6 50          	add    $0x50,%rsi
    5601:	4c 89 ff             	mov    %r15,%rdi
    5604:	e8 17 b8 00 00       	call   10e20 <lzma_lzma_lclppb_encode>
    5609:	89 c1                	mov    %eax,%ecx
    560b:	b8 08 00 00 00       	mov    $0x8,%eax
    5610:	84 c9                	test   %cl,%cl
    5612:	0f 85 8a 00 00 00    	jne    56a2 <alone_encoder_init+0x142>
    5618:	41 8b 0f             	mov    (%r15),%ecx
    561b:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx
    5621:	72 7f                	jb     56a2 <alone_encoder_init+0x142>
    5623:	ff c9                	dec    %ecx
    5625:	89 c8                	mov    %ecx,%eax
    5627:	c1 e8 02             	shr    $0x2,%eax
    562a:	09 c8                	or     %ecx,%eax
    562c:	89 c1                	mov    %eax,%ecx
    562e:	c1 e9 03             	shr    $0x3,%ecx
    5631:	09 c1                	or     %eax,%ecx
    5633:	89 c8                	mov    %ecx,%eax
    5635:	c1 e8 04             	shr    $0x4,%eax
    5638:	09 c8                	or     %ecx,%eax
    563a:	89 c1                	mov    %eax,%ecx
    563c:	c1 e9 08             	shr    $0x8,%ecx
    563f:	09 c1                	or     %eax,%ecx
    5641:	89 c8                	mov    %ecx,%eax
    5643:	c1 e8 10             	shr    $0x10,%eax
    5646:	09 c8                	or     %ecx,%eax
    5648:	ff c0                	inc    %eax
    564a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    564f:	0f 45 c8             	cmovne %eax,%ecx
    5652:	49 8b 06             	mov    (%r14),%rax
    5655:	89 48 51             	mov    %ecx,0x51(%rax)
    5658:	49 8b 06             	mov    (%r14),%rax
    565b:	48 c7 40 55 ff ff ff 	movq   $0xffffffffffffffff,0x55(%rax)
    5662:	ff 
    5663:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    566a:	00 
    566b:	48 8d 05 de b6 00 00 	lea    0xb6de(%rip),%rax        # 10d50 <lzma_lzma_encoder_init>
    5672:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5677:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    567c:	0f 57 c0             	xorps  %xmm0,%xmm0
    567f:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    5684:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    568b:	00 00 
    568d:	49 8b 3e             	mov    (%r14),%rdi
    5690:	48 89 e2             	mov    %rsp,%rdx
    5693:	48 89 de             	mov    %rbx,%rsi
    5696:	e8 e5 d8 ff ff       	call   2f80 <lzma_next_filter_init>
    569b:	eb 05                	jmp    56a2 <alone_encoder_init+0x142>
    569d:	b8 05 00 00 00       	mov    $0x5,%eax
    56a2:	48 83 c4 38          	add    $0x38,%rsp
    56a6:	5b                   	pop    %rbx
    56a7:	41 5c                	pop    %r12
    56a9:	41 5e                	pop    %r14
    56ab:	41 5f                	pop    %r15
    56ad:	c3                   	ret    
    56ae:	66 90                	xchg   %ax,%ax

00000000000056b0 <alone_encode>:
    56b0:	55                   	push   %rbp
    56b1:	41 57                	push   %r15
    56b3:	41 56                	push   %r14
    56b5:	41 55                	push   %r13
    56b7:	41 54                	push   %r12
    56b9:	53                   	push   %rbx
    56ba:	48 83 ec 18          	sub    $0x18,%rsp
    56be:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
    56c3:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
    56c8:	49 39 1e             	cmp    %rbx,(%r14)
    56cb:	73 56                	jae    5723 <alone_encode+0x73>
    56cd:	44 8b 57 40          	mov    0x40(%rdi),%r10d
    56d1:	41 83 fa 01          	cmp    $0x1,%r10d
    56d5:	0f 84 82 00 00 00    	je     575d <alone_encode+0xad>
    56db:	b8 0b 00 00 00       	mov    $0xb,%eax
    56e0:	45 85 d2             	test   %r10d,%r10d
    56e3:	75 40                	jne    5725 <alone_encode+0x75>
    56e5:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    56ea:	48 89 14 24          	mov    %rdx,(%rsp)
    56ee:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    56f3:	4d 89 c4             	mov    %r8,%r12
    56f6:	48 8d 47 50          	lea    0x50(%rdi),%rax
    56fa:	49 89 fd             	mov    %rdi,%r13
    56fd:	4c 8d 7f 48          	lea    0x48(%rdi),%r15
    5701:	ba 0d 00 00 00       	mov    $0xd,%edx
    5706:	48 89 c7             	mov    %rax,%rdi
    5709:	4c 89 fe             	mov    %r15,%rsi
    570c:	4c 89 cd             	mov    %r9,%rbp
    570f:	4c 89 c9             	mov    %r9,%rcx
    5712:	4d 89 f0             	mov    %r14,%r8
    5715:	49 89 d9             	mov    %rbx,%r9
    5718:	e8 03 d8 ff ff       	call   2f20 <lzma_bufcpy>
    571d:	49 83 3f 0d          	cmpq   $0xd,(%r15)
    5721:	73 11                	jae    5734 <alone_encode+0x84>
    5723:	31 c0                	xor    %eax,%eax
    5725:	48 83 c4 18          	add    $0x18,%rsp
    5729:	5b                   	pop    %rbx
    572a:	41 5c                	pop    %r12
    572c:	41 5d                	pop    %r13
    572e:	41 5e                	pop    %r14
    5730:	41 5f                	pop    %r15
    5732:	5d                   	pop    %rbp
    5733:	c3                   	ret    
    5734:	4c 89 ef             	mov    %r13,%rdi
    5737:	41 c7 45 40 01 00 00 	movl   $0x1,0x40(%r13)
    573e:	00 
    573f:	b8 00 00 00 00       	mov    $0x0,%eax
    5744:	49 39 1e             	cmp    %rbx,(%r14)
    5747:	49 89 e9             	mov    %rbp,%r9
    574a:	4d 89 e0             	mov    %r12,%r8
    574d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    5752:	48 8b 14 24          	mov    (%rsp),%rdx
    5756:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    575b:	73 c8                	jae    5725 <alone_encode+0x75>
    575d:	48 8b 07             	mov    (%rdi),%rax
    5760:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    5764:	48 89 c7             	mov    %rax,%rdi
    5767:	48 83 c4 18          	add    $0x18,%rsp
    576b:	5b                   	pop    %rbx
    576c:	41 5c                	pop    %r12
    576e:	41 5d                	pop    %r13
    5770:	41 5e                	pop    %r14
    5772:	41 5f                	pop    %r15
    5774:	5d                   	pop    %rbp
    5775:	41 ff e3             	jmp    *%r11
    5778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    577f:	00 

0000000000005780 <alone_encoder_end>:
    5780:	41 56                	push   %r14
    5782:	53                   	push   %rbx
    5783:	50                   	push   %rax
    5784:	48 89 f3             	mov    %rsi,%rbx
    5787:	49 89 fe             	mov    %rdi,%r14
    578a:	e8 b1 d8 ff ff       	call   3040 <lzma_next_end>
    578f:	4c 89 f7             	mov    %r14,%rdi
    5792:	48 89 de             	mov    %rbx,%rsi
    5795:	48 83 c4 08          	add    $0x8,%rsp
    5799:	5b                   	pop    %rbx
    579a:	41 5e                	pop    %r14
    579c:	e9 4f d7 ff ff       	jmp    2ef0 <lzma_free>
    57a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57a8:	00 00 00 
    57ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000057b0 <lzma_block_buffer_bound>:
    57b0:	48 b8 bb fb ff ff ff 	movabs $0x7ffffffffffffbbb,%rax
    57b7:	ff ff 7f 
    57ba:	48 8d 48 01          	lea    0x1(%rax),%rcx
    57be:	48 39 cf             	cmp    %rcx,%rdi
    57c1:	76 03                	jbe    57c6 <lzma_block_buffer_bound+0x16>
    57c3:	31 c0                	xor    %eax,%eax
    57c5:	c3                   	ret    
    57c6:	48 8d 8f ff ff 00 00 	lea    0xffff(%rdi),%rcx
    57cd:	48 c1 e9 10          	shr    $0x10,%rcx
    57d1:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    57d5:	48 29 c8             	sub    %rcx,%rax
    57d8:	48 39 f8             	cmp    %rdi,%rax
    57db:	73 03                	jae    57e0 <lzma_block_buffer_bound+0x30>
    57dd:	31 c0                	xor    %eax,%eax
    57df:	c3                   	ret    
    57e0:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
    57e4:	48 83 c0 04          	add    $0x4,%rax
    57e8:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    57ec:	48 83 c0 5c          	add    $0x5c,%rax
    57f0:	c3                   	ret    
    57f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    57f8:	0f 1f 84 00 00 00 00 
    57ff:	00 

0000000000005800 <lzma_block_buffer_encode>:
    5800:	48 85 ff             	test   %rdi,%rdi
    5803:	74 41                	je     5846 <lzma_block_buffer_encode+0x46>
    5805:	48 85 d2             	test   %rdx,%rdx
    5808:	0f 94 c0             	sete   %al
    580b:	48 85 c9             	test   %rcx,%rcx
    580e:	41 0f 95 c2          	setne  %r10b
    5812:	44 84 d0             	test   %r10b,%al
    5815:	75 2f                	jne    5846 <lzma_block_buffer_encode+0x46>
    5817:	4d 85 c0             	test   %r8,%r8
    581a:	74 2a                	je     5846 <lzma_block_buffer_encode+0x46>
    581c:	4d 85 c9             	test   %r9,%r9
    581f:	74 25                	je     5846 <lzma_block_buffer_encode+0x46>
    5821:	55                   	push   %rbp
    5822:	41 57                	push   %r15
    5824:	41 56                	push   %r14
    5826:	41 55                	push   %r13
    5828:	41 54                	push   %r12
    582a:	53                   	push   %rbx
    582b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    5832:	4c 8b b4 24 c0 00 00 	mov    0xc0(%rsp),%r14
    5839:	00 
    583a:	4d 39 31             	cmp    %r14,(%r9)
    583d:	76 0d                	jbe    584c <lzma_block_buffer_encode+0x4c>
    583f:	b8 0b 00 00 00       	mov    $0xb,%eax
    5844:	eb 10                	jmp    5856 <lzma_block_buffer_encode+0x56>
    5846:	b8 0b 00 00 00       	mov    $0xb,%eax
    584b:	c3                   	ret    
    584c:	b8 08 00 00 00       	mov    $0x8,%eax
    5851:	83 3f 00             	cmpl   $0x0,(%rdi)
    5854:	74 12                	je     5868 <lzma_block_buffer_encode+0x68>
    5856:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    585d:	5b                   	pop    %rbx
    585e:	41 5c                	pop    %r12
    5860:	41 5d                	pop    %r13
    5862:	41 5e                	pop    %r14
    5864:	41 5f                	pop    %r15
    5866:	5d                   	pop    %rbp
    5867:	c3                   	ret    
    5868:	44 8b 57 08          	mov    0x8(%rdi),%r10d
    586c:	41 83 fa 0f          	cmp    $0xf,%r10d
    5870:	77 cd                	ja     583f <lzma_block_buffer_encode+0x3f>
    5872:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    5877:	b8 0b 00 00 00       	mov    $0xb,%eax
    587c:	74 d8                	je     5856 <lzma_block_buffer_encode+0x56>
    587e:	48 89 f3             	mov    %rsi,%rbx
    5881:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    5886:	48 89 cd             	mov    %rcx,%rbp
    5889:	49 89 fd             	mov    %rdi,%r13
    588c:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5891:	4d 89 cc             	mov    %r9,%r12
    5894:	44 89 d7             	mov    %r10d,%edi
    5897:	e8 94 50 00 00       	call   a930 <lzma_check_is_supported>
    589c:	84 c0                	test   %al,%al
    589e:	0f 84 74 01 00 00    	je     5a18 <lzma_block_buffer_encode+0x218>
    58a4:	4d 89 e7             	mov    %r12,%r15
    58a7:	41 8b 04 24          	mov    (%r12),%eax
    58ab:	44 89 f1             	mov    %r14d,%ecx
    58ae:	29 c1                	sub    %eax,%ecx
    58b0:	83 e1 03             	and    $0x3,%ecx
    58b3:	49 29 ce             	sub    %rcx,%r14
    58b6:	41 8b 7d 08          	mov    0x8(%r13),%edi
    58ba:	e8 91 50 00 00       	call   a950 <lzma_check_size>
    58bf:	89 c0                	mov    %eax,%eax
    58c1:	4c 89 f1             	mov    %r14,%rcx
    58c4:	49 2b 0c 24          	sub    (%r12),%rcx
    58c8:	49 89 c7             	mov    %rax,%r15
    58cb:	b8 0a 00 00 00       	mov    $0xa,%eax
    58d0:	4c 39 f9             	cmp    %r15,%rcx
    58d3:	76 81                	jbe    5856 <lzma_block_buffer_encode+0x56>
    58d5:	4d 29 fe             	sub    %r15,%r14
    58d8:	4c 89 34 24          	mov    %r14,(%rsp)
    58dc:	4c 89 ef             	mov    %r13,%rdi
    58df:	48 89 de             	mov    %rbx,%rsi
    58e2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    58e7:	48 89 e9             	mov    %rbp,%rcx
    58ea:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    58ef:	4d 89 e1             	mov    %r12,%r9
    58f2:	e8 39 01 00 00       	call   5a30 <block_encode_normal>
    58f7:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    58fc:	48 89 ea             	mov    %rbp,%rdx
    58ff:	4c 89 ef             	mov    %r13,%rdi
    5902:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    5907:	4d 89 e0             	mov    %r12,%r8
    590a:	85 c0                	test   %eax,%eax
    590c:	74 32                	je     5940 <lzma_block_buffer_encode+0x140>
    590e:	83 f8 0a             	cmp    $0xa,%eax
    5911:	0f 85 3f ff ff ff    	jne    5856 <lzma_block_buffer_encode+0x56>
    5917:	4c 89 ef             	mov    %r13,%rdi
    591a:	4c 89 ce             	mov    %r9,%rsi
    591d:	4d 89 f1             	mov    %r14,%r9
    5920:	e8 ab 02 00 00       	call   5bd0 <block_encode_uncompressed>
    5925:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    592a:	48 89 ea             	mov    %rbp,%rdx
    592d:	4c 89 ef             	mov    %r13,%rdi
    5930:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    5935:	4d 89 e0             	mov    %r12,%r8
    5938:	85 c0                	test   %eax,%eax
    593a:	0f 85 16 ff ff ff    	jne    5856 <lzma_block_buffer_encode+0x56>
    5940:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5944:	a8 03                	test   $0x3,%al
    5946:	74 51                	je     5999 <lzma_block_buffer_encode+0x199>
    5948:	49 8b 30             	mov    (%r8),%rsi
    594b:	4c 8d 56 01          	lea    0x1(%rsi),%r10
    594f:	4d 89 10             	mov    %r10,(%r8)
    5952:	c6 04 31 00          	movb   $0x0,(%rcx,%rsi,1)
    5956:	8d 70 01             	lea    0x1(%rax),%esi
    5959:	40 f6 c6 03          	test   $0x3,%sil
    595d:	74 3a                	je     5999 <lzma_block_buffer_encode+0x199>
    595f:	49 8b 30             	mov    (%r8),%rsi
    5962:	4c 8d 56 01          	lea    0x1(%rsi),%r10
    5966:	4d 89 10             	mov    %r10,(%r8)
    5969:	c6 04 31 00          	movb   $0x0,(%rcx,%rsi,1)
    596d:	89 c6                	mov    %eax,%esi
    596f:	83 e6 03             	and    $0x3,%esi
    5972:	83 fe 02             	cmp    $0x2,%esi
    5975:	74 22                	je     5999 <lzma_block_buffer_encode+0x199>
    5977:	49 8b 30             	mov    (%r8),%rsi
    597a:	4c 8d 56 01          	lea    0x1(%rsi),%r10
    597e:	4d 89 10             	mov    %r10,(%r8)
    5981:	c6 04 31 00          	movb   $0x0,(%rcx,%rsi,1)
    5985:	ff c8                	dec    %eax
    5987:	a8 03                	test   $0x3,%al
    5989:	74 0e                	je     5999 <lzma_block_buffer_encode+0x199>
    598b:	49 8b 00             	mov    (%r8),%rax
    598e:	48 8d 70 01          	lea    0x1(%rax),%rsi
    5992:	49 89 30             	mov    %rsi,(%r8)
    5995:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
    5999:	31 c0                	xor    %eax,%eax
    599b:	4d 85 ff             	test   %r15,%r15
    599e:	0f 84 b2 fe ff ff    	je     5856 <lzma_block_buffer_encode+0x56>
    59a4:	8b 77 08             	mov    0x8(%rdi),%esi
    59a7:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    59ac:	49 89 fe             	mov    %rdi,%r14
    59af:	48 89 df             	mov    %rbx,%rdi
    59b2:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    59b7:	4c 89 fd             	mov    %r15,%rbp
    59ba:	49 89 cf             	mov    %rcx,%r15
    59bd:	49 89 d4             	mov    %rdx,%r12
    59c0:	4d 89 cd             	mov    %r9,%r13
    59c3:	e8 a8 4f 00 00       	call   a970 <lzma_check_init>
    59c8:	41 8b 76 08          	mov    0x8(%r14),%esi
    59cc:	48 89 df             	mov    %rbx,%rdi
    59cf:	4c 89 ea             	mov    %r13,%rdx
    59d2:	4c 89 e1             	mov    %r12,%rcx
    59d5:	e8 c6 4f 00 00       	call   a9a0 <lzma_check_update>
    59da:	41 8b 76 08          	mov    0x8(%r14),%esi
    59de:	48 89 df             	mov    %rbx,%rdi
    59e1:	e8 0a 50 00 00       	call   a9f0 <lzma_check_finish>
    59e6:	49 83 c6 28          	add    $0x28,%r14
    59ea:	4c 89 f7             	mov    %r14,%rdi
    59ed:	48 89 de             	mov    %rbx,%rsi
    59f0:	48 89 ea             	mov    %rbp,%rdx
    59f3:	e8 58 c7 ff ff       	call   2150 <memcpy@plt>
    59f8:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    59fd:	4d 03 3e             	add    (%r14),%r15
    5a00:	4c 89 ff             	mov    %r15,%rdi
    5a03:	48 89 de             	mov    %rbx,%rsi
    5a06:	48 89 ea             	mov    %rbp,%rdx
    5a09:	e8 42 c7 ff ff       	call   2150 <memcpy@plt>
    5a0e:	31 c0                	xor    %eax,%eax
    5a10:	49 01 2e             	add    %rbp,(%r14)
    5a13:	e9 3e fe ff ff       	jmp    5856 <lzma_block_buffer_encode+0x56>
    5a18:	b8 03 00 00 00       	mov    $0x3,%eax
    5a1d:	e9 34 fe ff ff       	jmp    5856 <lzma_block_buffer_encode+0x56>
    5a22:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    5a29:	1f 84 00 00 00 00 00 

0000000000005a30 <block_encode_normal>:
    5a30:	48 b8 bb fb ff ff ff 	movabs $0x7ffffffffffffbbb,%rax
    5a37:	ff ff 7f 
    5a3a:	4c 8d 50 01          	lea    0x1(%rax),%r10
    5a3e:	4c 39 d1             	cmp    %r10,%rcx
    5a41:	77 17                	ja     5a5a <block_encode_normal+0x2a>
    5a43:	4c 8d 91 ff ff 00 00 	lea    0xffff(%rcx),%r10
    5a4a:	49 c1 ea 10          	shr    $0x10,%r10
    5a4e:	4f 8d 14 52          	lea    (%r10,%r10,2),%r10
    5a52:	4c 29 d0             	sub    %r10,%rax
    5a55:	48 39 c8             	cmp    %rcx,%rax
    5a58:	73 0e                	jae    5a68 <block_encode_normal+0x38>
    5a5a:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    5a61:	00 
    5a62:	b8 09 00 00 00       	mov    $0x9,%eax
    5a67:	c3                   	ret    
    5a68:	55                   	push   %rbp
    5a69:	41 57                	push   %r15
    5a6b:	41 56                	push   %r14
    5a6d:	41 55                	push   %r13
    5a6f:	41 54                	push   %r12
    5a71:	53                   	push   %rbx
    5a72:	48 83 ec 68          	sub    $0x68,%rsp
    5a76:	49 89 d7             	mov    %rdx,%r15
    5a79:	49 89 f6             	mov    %rsi,%r14
    5a7c:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    5a81:	4d 89 cd             	mov    %r9,%r13
    5a84:	4a 8d 44 11 01       	lea    0x1(%rcx,%r10,1),%rax
    5a89:	48 89 47 10          	mov    %rax,0x10(%rdi)
    5a8d:	49 89 cc             	mov    %rcx,%r12
    5a90:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
    5a94:	48 89 fb             	mov    %rdi,%rbx
    5a97:	e8 64 07 00 00       	call   6200 <lzma_block_header_size>
    5a9c:	85 c0                	test   %eax,%eax
    5a9e:	0f 85 1a 01 00 00    	jne    5bbe <block_encode_normal+0x18e>
    5aa4:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    5aab:	00 
    5aac:	49 8b 55 00          	mov    0x0(%r13),%rdx
    5ab0:	48 29 d1             	sub    %rdx,%rcx
    5ab3:	8b 6b 04             	mov    0x4(%rbx),%ebp
    5ab6:	b8 0a 00 00 00       	mov    $0xa,%eax
    5abb:	48 39 e9             	cmp    %rbp,%rcx
    5abe:	0f 86 fa 00 00 00    	jbe    5bbe <block_encode_normal+0x18e>
    5ac4:	48 89 14 24          	mov    %rdx,(%rsp)
    5ac8:	48 01 d5             	add    %rdx,%rbp
    5acb:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    5acf:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    5ad3:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5ad8:	0f 57 c0             	xorps  %xmm0,%xmm0
    5adb:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    5ae0:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    5ae5:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    5aea:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    5aef:	48 c7 44 24 28 ff ff 	movq   $0xffffffffffffffff,0x28(%rsp)
    5af6:	ff ff 
    5af8:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    5afc:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    5b01:	4c 89 f6             	mov    %r14,%rsi
    5b04:	e8 b7 0d 00 00       	call   68c0 <lzma_raw_encoder_init>
    5b09:	85 c0                	test   %eax,%eax
    5b0b:	75 4f                	jne    5b5c <block_encode_normal+0x12c>
    5b0d:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    5b14:	00 
    5b15:	48 89 c8             	mov    %rcx,%rax
    5b18:	48 29 e8             	sub    %rbp,%rax
    5b1b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5b20:	48 01 d5             	add    %rdx,%rbp
    5b23:	48 39 d0             	cmp    %rdx,%rax
    5b26:	48 0f 46 e9          	cmovbe %rcx,%rbp
    5b2a:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    5b31:	00 00 
    5b33:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    5b38:	48 83 ec 08          	sub    $0x8,%rsp
    5b3c:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    5b41:	4c 89 f6             	mov    %r14,%rsi
    5b44:	4c 89 fa             	mov    %r15,%rdx
    5b47:	4d 89 e0             	mov    %r12,%r8
    5b4a:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    5b4f:	6a 03                	push   $0x3
    5b51:	55                   	push   %rbp
    5b52:	41 55                	push   %r13
    5b54:	ff 54 24 58          	call   *0x58(%rsp)
    5b58:	48 83 c4 20          	add    $0x20,%rsp
    5b5c:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    5b61:	4c 89 f6             	mov    %r14,%rsi
    5b64:	89 c5                	mov    %eax,%ebp
    5b66:	e8 d5 d4 ff ff       	call   3040 <lzma_next_end>
    5b6b:	85 ed                	test   %ebp,%ebp
    5b6d:	74 40                	je     5baf <block_encode_normal+0x17f>
    5b6f:	89 e8                	mov    %ebp,%eax
    5b71:	83 fd 01             	cmp    $0x1,%ebp
    5b74:	4c 89 ea             	mov    %r13,%rdx
    5b77:	75 3e                	jne    5bb7 <block_encode_normal+0x187>
    5b79:	48 8b 02             	mov    (%rdx),%rax
    5b7c:	8b 4b 04             	mov    0x4(%rbx),%ecx
    5b7f:	48 8b 14 24          	mov    (%rsp),%rdx
    5b83:	48 01 d1             	add    %rdx,%rcx
    5b86:	48 29 c8             	sub    %rcx,%rax
    5b89:	48 89 43 10          	mov    %rax,0x10(%rbx)
    5b8d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    5b92:	48 01 d6             	add    %rdx,%rsi
    5b95:	48 89 df             	mov    %rbx,%rdi
    5b98:	e8 93 07 00 00       	call   6330 <lzma_block_header_encode>
    5b9d:	4c 89 ea             	mov    %r13,%rdx
    5ba0:	89 c1                	mov    %eax,%ecx
    5ba2:	b8 0b 00 00 00       	mov    $0xb,%eax
    5ba7:	85 c9                	test   %ecx,%ecx
    5ba9:	75 0c                	jne    5bb7 <block_encode_normal+0x187>
    5bab:	31 c0                	xor    %eax,%eax
    5bad:	eb 0f                	jmp    5bbe <block_encode_normal+0x18e>
    5baf:	b8 0a 00 00 00       	mov    $0xa,%eax
    5bb4:	4c 89 ea             	mov    %r13,%rdx
    5bb7:	48 8b 0c 24          	mov    (%rsp),%rcx
    5bbb:	48 89 0a             	mov    %rcx,(%rdx)
    5bbe:	48 83 c4 68          	add    $0x68,%rsp
    5bc2:	5b                   	pop    %rbx
    5bc3:	41 5c                	pop    %r12
    5bc5:	41 5d                	pop    %r13
    5bc7:	41 5e                	pop    %r14
    5bc9:	41 5f                	pop    %r15
    5bcb:	5d                   	pop    %rbp
    5bcc:	c3                   	ret    
    5bcd:	0f 1f 00             	nopl   (%rax)

0000000000005bd0 <block_encode_uncompressed>:
    5bd0:	55                   	push   %rbp
    5bd1:	41 57                	push   %r15
    5bd3:	41 56                	push   %r14
    5bd5:	41 55                	push   %r13
    5bd7:	41 54                	push   %r12
    5bd9:	53                   	push   %rbx
    5bda:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    5be1:	4c 89 cd             	mov    %r9,%rbp
    5be4:	4d 89 c6             	mov    %r8,%r14
    5be7:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    5bec:	48 89 d3             	mov    %rdx,%rbx
    5bef:	49 89 f7             	mov    %rsi,%r15
    5bf2:	49 89 fd             	mov    %rdi,%r13
    5bf5:	0f 57 c0             	xorps  %xmm0,%xmm0
    5bf8:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    5bfd:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    5c04:	00 
    5c05:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    5c0c:	00 
    5c0d:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    5c12:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    5c17:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    5c1c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    5c21:	c7 44 24 30 00 10 00 	movl   $0x1000,0x30(%rsp)
    5c28:	00 
    5c29:	48 c7 44 24 10 21 00 	movq   $0x21,0x10(%rsp)
    5c30:	00 00 
    5c32:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    5c37:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5c3c:	48 c7 44 24 20 ff ff 	movq   $0xffffffffffffffff,0x20(%rsp)
    5c43:	ff ff 
    5c45:	4c 8b 67 20          	mov    0x20(%rdi),%r12
    5c49:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    5c4e:	48 89 47 20          	mov    %rax,0x20(%rdi)
    5c52:	e8 a9 05 00 00       	call   6200 <lzma_block_header_size>
    5c57:	85 c0                	test   %eax,%eax
    5c59:	74 0e                	je     5c69 <block_encode_uncompressed+0x99>
    5c5b:	4d 89 65 20          	mov    %r12,0x20(%r13)
    5c5f:	b8 0b 00 00 00       	mov    $0xb,%eax
    5c64:	e9 3a 01 00 00       	jmp    5da3 <block_encode_uncompressed+0x1d3>
    5c69:	49 8b 36             	mov    (%r14),%rsi
    5c6c:	48 29 f5             	sub    %rsi,%rbp
    5c6f:	41 8b 45 04          	mov    0x4(%r13),%eax
    5c73:	49 03 45 10          	add    0x10(%r13),%rax
    5c77:	48 39 c5             	cmp    %rax,%rbp
    5c7a:	73 0e                	jae    5c8a <block_encode_uncompressed+0xba>
    5c7c:	4d 89 65 20          	mov    %r12,0x20(%r13)
    5c80:	b8 0a 00 00 00       	mov    $0xa,%eax
    5c85:	e9 19 01 00 00       	jmp    5da3 <block_encode_uncompressed+0x1d3>
    5c8a:	48 03 74 24 08       	add    0x8(%rsp),%rsi
    5c8f:	4c 89 ef             	mov    %r13,%rdi
    5c92:	e8 99 06 00 00       	call   6330 <lzma_block_header_encode>
    5c97:	89 c1                	mov    %eax,%ecx
    5c99:	4d 89 65 20          	mov    %r12,0x20(%r13)
    5c9d:	b8 0b 00 00 00       	mov    $0xb,%eax
    5ca2:	85 c9                	test   %ecx,%ecx
    5ca4:	0f 85 f9 00 00 00    	jne    5da3 <block_encode_uncompressed+0x1d3>
    5caa:	41 8b 6d 04          	mov    0x4(%r13),%ebp
    5cae:	49 03 2e             	add    (%r14),%rbp
    5cb1:	48 85 db             	test   %rbx,%rbx
    5cb4:	0f 84 d7 00 00 00    	je     5d91 <block_encode_uncompressed+0x1c1>
    5cba:	48 8d 45 01          	lea    0x1(%rbp),%rax
    5cbe:	49 89 06             	mov    %rax,(%r14)
    5cc1:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    5cc6:	c6 04 2e 01          	movb   $0x1,(%rsi,%rbp,1)
    5cca:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
    5cd1:	41 bd 00 00 01 00    	mov    $0x10000,%r13d
    5cd7:	4c 0f 42 eb          	cmovb  %rbx,%r13
    5cdb:	49 8d 45 ff          	lea    -0x1(%r13),%rax
    5cdf:	49 8b 0e             	mov    (%r14),%rcx
    5ce2:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    5ce6:	49 89 16             	mov    %rdx,(%r14)
    5ce9:	88 24 0e             	mov    %ah,(%rsi,%rcx,1)
    5cec:	49 8b 0e             	mov    (%r14),%rcx
    5cef:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    5cf3:	49 89 16             	mov    %rdx,(%r14)
    5cf6:	88 04 0e             	mov    %al,(%rsi,%rcx,1)
    5cf9:	49 8b 3e             	mov    (%r14),%rdi
    5cfc:	48 01 f7             	add    %rsi,%rdi
    5cff:	4d 89 fc             	mov    %r15,%r12
    5d02:	4c 89 fe             	mov    %r15,%rsi
    5d05:	4c 89 ea             	mov    %r13,%rdx
    5d08:	e8 43 c4 ff ff       	call   2150 <memcpy@plt>
    5d0d:	49 8b 2e             	mov    (%r14),%rbp
    5d10:	4c 01 ed             	add    %r13,%rbp
    5d13:	48 81 fb 01 00 01 00 	cmp    $0x10001,%rbx
    5d1a:	72 75                	jb     5d91 <block_encode_uncompressed+0x1c1>
    5d1c:	49 89 df             	mov    %rbx,%r15
    5d1f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    5d24:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    5d2b:	00 00 00 00 00 
    5d30:	48 8d 45 01          	lea    0x1(%rbp),%rax
    5d34:	49 89 06             	mov    %rax,(%r14)
    5d37:	c6 04 2b 02          	movb   $0x2,(%rbx,%rbp,1)
    5d3b:	4c 89 fd             	mov    %r15,%rbp
    5d3e:	4c 29 ed             	sub    %r13,%rbp
    5d41:	48 81 fd 00 00 01 00 	cmp    $0x10000,%rbp
    5d48:	b8 00 00 01 00       	mov    $0x10000,%eax
    5d4d:	48 0f 43 e8          	cmovae %rax,%rbp
    5d51:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    5d55:	49 8b 0e             	mov    (%r14),%rcx
    5d58:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    5d5c:	49 89 16             	mov    %rdx,(%r14)
    5d5f:	88 24 0b             	mov    %ah,(%rbx,%rcx,1)
    5d62:	49 8b 0e             	mov    (%r14),%rcx
    5d65:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    5d69:	49 89 16             	mov    %rdx,(%r14)
    5d6c:	88 04 0b             	mov    %al,(%rbx,%rcx,1)
    5d6f:	49 8b 3e             	mov    (%r14),%rdi
    5d72:	48 01 df             	add    %rbx,%rdi
    5d75:	4b 8d 34 2c          	lea    (%r12,%r13,1),%rsi
    5d79:	48 89 ea             	mov    %rbp,%rdx
    5d7c:	e8 cf c3 ff ff       	call   2150 <memcpy@plt>
    5d81:	49 01 ed             	add    %rbp,%r13
    5d84:	49 03 2e             	add    (%r14),%rbp
    5d87:	49 89 2e             	mov    %rbp,(%r14)
    5d8a:	4d 39 fd             	cmp    %r15,%r13
    5d8d:	72 a1                	jb     5d30 <block_encode_uncompressed+0x160>
    5d8f:	eb 05                	jmp    5d96 <block_encode_uncompressed+0x1c6>
    5d91:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    5d96:	48 8d 45 01          	lea    0x1(%rbp),%rax
    5d9a:	49 89 06             	mov    %rax,(%r14)
    5d9d:	c6 04 2b 00          	movb   $0x0,(%rbx,%rbp,1)
    5da1:	31 c0                	xor    %eax,%eax
    5da3:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    5daa:	5b                   	pop    %rbx
    5dab:	41 5c                	pop    %r12
    5dad:	41 5d                	pop    %r13
    5daf:	41 5e                	pop    %r14
    5db1:	41 5f                	pop    %r15
    5db3:	5d                   	pop    %rbp
    5db4:	c3                   	ret    
    5db5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5dbc:	00 00 00 
    5dbf:	90                   	nop

0000000000005dc0 <lzma_block_encoder_init>:
    5dc0:	41 57                	push   %r15
    5dc2:	41 56                	push   %r14
    5dc4:	41 54                	push   %r12
    5dc6:	53                   	push   %rbx
    5dc7:	50                   	push   %rax
    5dc8:	49 89 d6             	mov    %rdx,%r14
    5dcb:	48 89 f3             	mov    %rsi,%rbx
    5dce:	49 89 ff             	mov    %rdi,%r15
    5dd1:	4c 8d 25 e8 ff ff ff 	lea    -0x18(%rip),%r12        # 5dc0 <lzma_block_encoder_init>
    5dd8:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    5ddc:	74 0b                	je     5de9 <lzma_block_encoder_init+0x29>
    5dde:	4c 89 ff             	mov    %r15,%rdi
    5de1:	48 89 de             	mov    %rbx,%rsi
    5de4:	e8 57 d2 ff ff       	call   3040 <lzma_next_end>
    5de9:	4d 89 67 10          	mov    %r12,0x10(%r15)
    5ded:	b8 0b 00 00 00       	mov    $0xb,%eax
    5df2:	4d 85 f6             	test   %r14,%r14
    5df5:	0f 84 ef 00 00 00    	je     5eea <lzma_block_encoder_init+0x12a>
    5dfb:	b8 08 00 00 00       	mov    $0x8,%eax
    5e00:	41 83 3e 00          	cmpl   $0x0,(%r14)
    5e04:	0f 85 e0 00 00 00    	jne    5eea <lzma_block_encoder_init+0x12a>
    5e0a:	41 8b 7e 08          	mov    0x8(%r14),%edi
    5e0e:	b8 0b 00 00 00       	mov    $0xb,%eax
    5e13:	83 ff 0f             	cmp    $0xf,%edi
    5e16:	0f 87 ce 00 00 00    	ja     5eea <lzma_block_encoder_init+0x12a>
    5e1c:	e8 0f 4b 00 00       	call   a930 <lzma_check_is_supported>
    5e21:	84 c0                	test   %al,%al
    5e23:	0f 84 bc 00 00 00    	je     5ee5 <lzma_block_encoder_init+0x125>
    5e29:	49 8b 07             	mov    (%r15),%rax
    5e2c:	48 85 c0             	test   %rax,%rax
    5e2f:	75 5b                	jne    5e8c <lzma_block_encoder_init+0xcc>
    5e31:	bf d0 00 00 00       	mov    $0xd0,%edi
    5e36:	48 89 de             	mov    %rbx,%rsi
    5e39:	e8 82 d0 ff ff       	call   2ec0 <lzma_alloc>
    5e3e:	49 89 07             	mov    %rax,(%r15)
    5e41:	48 85 c0             	test   %rax,%rax
    5e44:	0f 84 ac 00 00 00    	je     5ef6 <lzma_block_encoder_init+0x136>
    5e4a:	48 8d 0d af 00 00 00 	lea    0xaf(%rip),%rcx        # 5f00 <block_encode>
    5e51:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    5e55:	48 8d 0d f4 02 00 00 	lea    0x2f4(%rip),%rcx        # 6150 <block_encoder_end>
    5e5c:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    5e60:	48 8d 0d 19 03 00 00 	lea    0x319(%rip),%rcx        # 6180 <block_encoder_update>
    5e67:	49 89 4f 38          	mov    %rcx,0x38(%r15)
    5e6b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5e72:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    5e79:	ff 
    5e7a:	0f 57 c0             	xorps  %xmm0,%xmm0
    5e7d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    5e81:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    5e85:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    5e89:	49 8b 07             	mov    (%r15),%rax
    5e8c:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    5e93:	49 8b 07             	mov    (%r15),%rax
    5e96:	4c 89 70 40          	mov    %r14,0x40(%rax)
    5e9a:	49 8b 07             	mov    (%r15),%rax
    5e9d:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    5ea4:	00 
    5ea5:	49 8b 07             	mov    (%r15),%rax
    5ea8:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
    5eaf:	00 
    5eb0:	49 8b 07             	mov    (%r15),%rax
    5eb3:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    5eba:	00 
    5ebb:	49 8b 3f             	mov    (%r15),%rdi
    5ebe:	48 83 c7 68          	add    $0x68,%rdi
    5ec2:	41 8b 76 08          	mov    0x8(%r14),%esi
    5ec6:	e8 a5 4a 00 00       	call   a970 <lzma_check_init>
    5ecb:	49 8b 3f             	mov    (%r15),%rdi
    5ece:	49 8b 56 20          	mov    0x20(%r14),%rdx
    5ed2:	48 89 de             	mov    %rbx,%rsi
    5ed5:	48 83 c4 08          	add    $0x8,%rsp
    5ed9:	5b                   	pop    %rbx
    5eda:	41 5c                	pop    %r12
    5edc:	41 5e                	pop    %r14
    5ede:	41 5f                	pop    %r15
    5ee0:	e9 db 09 00 00       	jmp    68c0 <lzma_raw_encoder_init>
    5ee5:	b8 03 00 00 00       	mov    $0x3,%eax
    5eea:	48 83 c4 08          	add    $0x8,%rsp
    5eee:	5b                   	pop    %rbx
    5eef:	41 5c                	pop    %r12
    5ef1:	41 5e                	pop    %r14
    5ef3:	41 5f                	pop    %r15
    5ef5:	c3                   	ret    
    5ef6:	b8 05 00 00 00       	mov    $0x5,%eax
    5efb:	eb ed                	jmp    5eea <lzma_block_encoder_init+0x12a>
    5efd:	0f 1f 00             	nopl   (%rax)

0000000000005f00 <block_encode>:
    5f00:	55                   	push   %rbp
    5f01:	41 57                	push   %r15
    5f03:	41 56                	push   %r14
    5f05:	41 55                	push   %r13
    5f07:	41 54                	push   %r12
    5f09:	53                   	push   %rbx
    5f0a:	50                   	push   %rax
    5f0b:	4d 89 ce             	mov    %r9,%r14
    5f0e:	48 89 fb             	mov    %rdi,%rbx
    5f11:	49 bc bc fb ff ff ff 	movabs $0x7ffffffffffffbbc,%r12
    5f18:	ff ff 7f 
    5f1b:	48 8b 47 58          	mov    0x58(%rdi),%rax
    5f1f:	48 f7 d8             	neg    %rax
    5f22:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
    5f26:	48 81 c7 43 04 00 00 	add    $0x443,%rdi
    5f2d:	4c 8b 39             	mov    (%rcx),%r15
    5f30:	4d 89 c1             	mov    %r8,%r9
    5f33:	4d 29 f9             	sub    %r15,%r9
    5f36:	b8 09 00 00 00       	mov    $0x9,%eax
    5f3b:	4c 39 cf             	cmp    %r9,%rdi
    5f3e:	73 0f                	jae    5f4f <block_encode+0x4f>
    5f40:	48 83 c4 08          	add    $0x8,%rsp
    5f44:	5b                   	pop    %rbx
    5f45:	41 5c                	pop    %r12
    5f47:	41 5d                	pop    %r13
    5f49:	41 5e                	pop    %r14
    5f4b:	41 5f                	pop    %r15
    5f4d:	5d                   	pop    %rbp
    5f4e:	c3                   	ret    
    5f4f:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    5f54:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
    5f59:	8b 7b 48             	mov    0x48(%rbx),%edi
    5f5c:	83 ff 02             	cmp    $0x2,%edi
    5f5f:	0f 84 87 01 00 00    	je     60ec <block_encode+0x1ec>
    5f65:	83 ff 01             	cmp    $0x1,%edi
    5f68:	0f 84 bd 00 00 00    	je     602b <block_encode+0x12b>
    5f6e:	b8 0b 00 00 00       	mov    $0xb,%eax
    5f73:	85 ff                	test   %edi,%edi
    5f75:	75 c9                	jne    5f40 <block_encode+0x40>
    5f77:	8b 44 24 50          	mov    0x50(%rsp),%eax
    5f7b:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    5f7f:	48 89 3c 24          	mov    %rdi,(%rsp)
    5f83:	48 8b 3b             	mov    (%rbx),%rdi
    5f86:	48 83 ec 08          	sub    $0x8,%rsp
    5f8a:	49 89 d5             	mov    %rdx,%r13
    5f8d:	48 89 cd             	mov    %rcx,%rbp
    5f90:	4d 89 f1             	mov    %r14,%r9
    5f93:	50                   	push   %rax
    5f94:	41 52                	push   %r10
    5f96:	ff 74 24 58          	push   0x58(%rsp)
    5f9a:	ff 53 18             	call   *0x18(%rbx)
    5f9d:	48 89 e9             	mov    %rbp,%rcx
    5fa0:	4c 89 ea             	mov    %r13,%rdx
    5fa3:	4c 8b 6c 24 60       	mov    0x60(%rsp),%r13
    5fa8:	48 83 c4 20          	add    $0x20,%rsp
    5fac:	89 c5                	mov    %eax,%ebp
    5fae:	49 8b 75 00          	mov    0x0(%r13),%rsi
    5fb2:	48 2b 34 24          	sub    (%rsp),%rsi
    5fb6:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    5fba:	49 29 fc             	sub    %rdi,%r12
    5fbd:	b8 09 00 00 00       	mov    $0x9,%eax
    5fc2:	49 39 f4             	cmp    %rsi,%r12
    5fc5:	0f 82 75 ff ff ff    	jb     5f40 <block_encode+0x40>
    5fcb:	48 8b 09             	mov    (%rcx),%rcx
    5fce:	4c 29 f9             	sub    %r15,%rcx
    5fd1:	48 01 f7             	add    %rsi,%rdi
    5fd4:	48 89 7b 50          	mov    %rdi,0x50(%rbx)
    5fd8:	48 01 4b 58          	add    %rcx,0x58(%rbx)
    5fdc:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
    5fe0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    5fe4:	8b 70 08             	mov    0x8(%rax),%esi
    5fe7:	4c 01 fa             	add    %r15,%rdx
    5fea:	e8 b1 49 00 00       	call   a9a0 <lzma_check_update>
    5fef:	8b 44 24 50          	mov    0x50(%rsp),%eax
    5ff3:	83 f8 01             	cmp    $0x1,%eax
    5ff6:	0f 84 47 01 00 00    	je     6143 <block_encode+0x243>
    5ffc:	89 e8                	mov    %ebp,%eax
    5ffe:	83 fd 01             	cmp    $0x1,%ebp
    6001:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    6006:	0f 85 34 ff ff ff    	jne    5f40 <block_encode+0x40>
    600c:	48 8b 43 40          	mov    0x40(%rbx),%rax
    6010:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    6014:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6018:	48 8b 43 40          	mov    0x40(%rbx),%rax
    601c:	48 8b 4b 58          	mov    0x58(%rbx),%rcx
    6020:	48 89 48 18          	mov    %rcx,0x18(%rax)
    6024:	c7 43 48 01 00 00 00 	movl   $0x1,0x48(%rbx)
    602b:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    602f:	f6 c1 03             	test   $0x3,%cl
    6032:	0f 84 93 00 00 00    	je     60cb <block_encode+0x1cb>
    6038:	49 8b 55 00          	mov    0x0(%r13),%rdx
    603c:	31 c0                	xor    %eax,%eax
    603e:	4c 39 d2             	cmp    %r10,%rdx
    6041:	0f 83 f9 fe ff ff    	jae    5f40 <block_encode+0x40>
    6047:	41 c6 04 16 00       	movb   $0x0,(%r14,%rdx,1)
    604c:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    6050:	49 89 75 00          	mov    %rsi,0x0(%r13)
    6054:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    6058:	48 89 7b 50          	mov    %rdi,0x50(%rbx)
    605c:	40 f6 c7 03          	test   $0x3,%dil
    6060:	74 69                	je     60cb <block_encode+0x1cb>
    6062:	4c 39 d6             	cmp    %r10,%rsi
    6065:	0f 83 d5 fe ff ff    	jae    5f40 <block_encode+0x40>
    606b:	41 c6 44 16 01 00    	movb   $0x0,0x1(%r14,%rdx,1)
    6071:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    6075:	49 89 75 00          	mov    %rsi,0x0(%r13)
    6079:	48 8d 79 02          	lea    0x2(%rcx),%rdi
    607d:	48 89 7b 50          	mov    %rdi,0x50(%rbx)
    6081:	40 f6 c7 03          	test   $0x3,%dil
    6085:	74 44                	je     60cb <block_encode+0x1cb>
    6087:	4c 39 d6             	cmp    %r10,%rsi
    608a:	0f 83 b0 fe ff ff    	jae    5f40 <block_encode+0x40>
    6090:	41 c6 44 16 02 00    	movb   $0x0,0x2(%r14,%rdx,1)
    6096:	48 8d 72 03          	lea    0x3(%rdx),%rsi
    609a:	49 89 75 00          	mov    %rsi,0x0(%r13)
    609e:	48 8d 79 03          	lea    0x3(%rcx),%rdi
    60a2:	48 89 7b 50          	mov    %rdi,0x50(%rbx)
    60a6:	40 f6 c7 03          	test   $0x3,%dil
    60aa:	74 1f                	je     60cb <block_encode+0x1cb>
    60ac:	4c 39 d6             	cmp    %r10,%rsi
    60af:	0f 83 8b fe ff ff    	jae    5f40 <block_encode+0x40>
    60b5:	41 c6 44 16 03 00    	movb   $0x0,0x3(%r14,%rdx,1)
    60bb:	48 83 c2 04          	add    $0x4,%rdx
    60bf:	49 89 55 00          	mov    %rdx,0x0(%r13)
    60c3:	48 83 c1 04          	add    $0x4,%rcx
    60c7:	48 89 4b 50          	mov    %rcx,0x50(%rbx)
    60cb:	48 8b 43 40          	mov    0x40(%rbx),%rax
    60cf:	8b 70 08             	mov    0x8(%rax),%esi
    60d2:	85 f6                	test   %esi,%esi
    60d4:	74 63                	je     6139 <block_encode+0x239>
    60d6:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
    60da:	4d 89 d7             	mov    %r10,%r15
    60dd:	e8 0e 49 00 00       	call   a9f0 <lzma_check_finish>
    60e2:	4d 89 fa             	mov    %r15,%r10
    60e5:	c7 43 48 02 00 00 00 	movl   $0x2,0x48(%rbx)
    60ec:	48 8b 43 40          	mov    0x40(%rbx),%rax
    60f0:	8b 78 08             	mov    0x8(%rax),%edi
    60f3:	4d 89 d7             	mov    %r10,%r15
    60f6:	e8 55 48 00 00       	call   a950 <lzma_check_size>
    60fb:	4d 89 e8             	mov    %r13,%r8
    60fe:	41 89 c5             	mov    %eax,%r13d
    6101:	48 8d 6b 68          	lea    0x68(%rbx),%rbp
    6105:	48 8d 73 60          	lea    0x60(%rbx),%rsi
    6109:	48 89 ef             	mov    %rbp,%rdi
    610c:	4c 89 ea             	mov    %r13,%rdx
    610f:	4c 89 f1             	mov    %r14,%rcx
    6112:	4d 89 f9             	mov    %r15,%r9
    6115:	e8 06 ce ff ff       	call   2f20 <lzma_bufcpy>
    611a:	31 c0                	xor    %eax,%eax
    611c:	4c 39 6b 60          	cmp    %r13,0x60(%rbx)
    6120:	0f 82 1a fe ff ff    	jb     5f40 <block_encode+0x40>
    6126:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    612a:	48 83 c7 28          	add    $0x28,%rdi
    612e:	48 89 ee             	mov    %rbp,%rsi
    6131:	4c 89 ea             	mov    %r13,%rdx
    6134:	e8 17 c0 ff ff       	call   2150 <memcpy@plt>
    6139:	b8 01 00 00 00       	mov    $0x1,%eax
    613e:	e9 fd fd ff ff       	jmp    5f40 <block_encode+0x40>
    6143:	89 e8                	mov    %ebp,%eax
    6145:	e9 f6 fd ff ff       	jmp    5f40 <block_encode+0x40>
    614a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006150 <block_encoder_end>:
    6150:	41 56                	push   %r14
    6152:	53                   	push   %rbx
    6153:	50                   	push   %rax
    6154:	48 89 f3             	mov    %rsi,%rbx
    6157:	49 89 fe             	mov    %rdi,%r14
    615a:	e8 e1 ce ff ff       	call   3040 <lzma_next_end>
    615f:	4c 89 f7             	mov    %r14,%rdi
    6162:	48 89 de             	mov    %rbx,%rsi
    6165:	48 83 c4 08          	add    $0x8,%rsp
    6169:	5b                   	pop    %rbx
    616a:	41 5e                	pop    %r14
    616c:	e9 7f cd ff ff       	jmp    2ef0 <lzma_free>
    6171:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6178:	0f 1f 84 00 00 00 00 
    617f:	00 

0000000000006180 <block_encoder_update>:
    6180:	83 7f 48 00          	cmpl   $0x0,0x48(%rdi)
    6184:	74 06                	je     618c <block_encoder_update+0xc>
    6186:	b8 0b 00 00 00       	mov    $0xb,%eax
    618b:	c3                   	ret    
    618c:	48 89 ca             	mov    %rcx,%rdx
    618f:	e9 1c cf ff ff       	jmp    30b0 <lzma_next_filter_update>
    6194:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    619b:	00 00 00 00 00 

00000000000061a0 <lzma_block_encoder>:
    61a0:	41 56                	push   %r14
    61a2:	53                   	push   %rbx
    61a3:	50                   	push   %rax
    61a4:	49 89 f6             	mov    %rsi,%r14
    61a7:	48 89 fb             	mov    %rdi,%rbx
    61aa:	e8 31 cf ff ff       	call   30e0 <lzma_strm_init>
    61af:	85 c0                	test   %eax,%eax
    61b1:	74 08                	je     61bb <lzma_block_encoder+0x1b>
    61b3:	48 83 c4 08          	add    $0x8,%rsp
    61b7:	5b                   	pop    %rbx
    61b8:	41 5e                	pop    %r14
    61ba:	c3                   	ret    
    61bb:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    61bf:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    61c3:	4c 89 f2             	mov    %r14,%rdx
    61c6:	e8 f5 fb ff ff       	call   5dc0 <lzma_block_encoder_init>
    61cb:	85 c0                	test   %eax,%eax
    61cd:	74 14                	je     61e3 <lzma_block_encoder+0x43>
    61cf:	48 89 df             	mov    %rbx,%rdi
    61d2:	89 c3                	mov    %eax,%ebx
    61d4:	e8 37 d2 ff ff       	call   3410 <lzma_end>
    61d9:	89 d8                	mov    %ebx,%eax
    61db:	48 83 c4 08          	add    $0x8,%rsp
    61df:	5b                   	pop    %rbx
    61e0:	41 5e                	pop    %r14
    61e2:	c3                   	ret    
    61e3:	48 8b 43 38          	mov    0x38(%rbx),%rax
    61e7:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    61eb:	48 8b 43 38          	mov    0x38(%rbx),%rax
    61ef:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    61f3:	31 c0                	xor    %eax,%eax
    61f5:	48 83 c4 08          	add    $0x8,%rsp
    61f9:	5b                   	pop    %rbx
    61fa:	41 5e                	pop    %r14
    61fc:	c3                   	ret    
    61fd:	0f 1f 00             	nopl   (%rax)

0000000000006200 <lzma_block_header_size>:
    6200:	b8 08 00 00 00       	mov    $0x8,%eax
    6205:	83 3f 00             	cmpl   $0x0,(%rdi)
    6208:	74 01                	je     620b <lzma_block_header_size+0xb>
    620a:	c3                   	ret    
    620b:	55                   	push   %rbp
    620c:	53                   	push   %rbx
    620d:	50                   	push   %rax
    620e:	48 89 fb             	mov    %rdi,%rbx
    6211:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    6215:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    6219:	74 2e                	je     6249 <lzma_block_header_size+0x49>
    621b:	e8 c0 f2 ff ff       	call   54e0 <lzma_vli_size>
    6220:	89 c5                	mov    %eax,%ebp
    6222:	b8 0b 00 00 00       	mov    $0xb,%eax
    6227:	85 ed                	test   %ebp,%ebp
    6229:	0f 84 f4 00 00 00    	je     6323 <lzma_block_header_size+0x123>
    622f:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    6234:	0f 84 e9 00 00 00    	je     6323 <lzma_block_header_size+0x123>
    623a:	83 c5 06             	add    $0x6,%ebp
    623d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    6241:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    6245:	75 11                	jne    6258 <lzma_block_header_size+0x58>
    6247:	eb 1e                	jmp    6267 <lzma_block_header_size+0x67>
    6249:	bd 06 00 00 00       	mov    $0x6,%ebp
    624e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    6252:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    6256:	74 0f                	je     6267 <lzma_block_header_size+0x67>
    6258:	e8 83 f2 ff ff       	call   54e0 <lzma_vli_size>
    625d:	85 c0                	test   %eax,%eax
    625f:	0f 84 b9 00 00 00    	je     631e <lzma_block_header_size+0x11e>
    6265:	01 c5                	add    %eax,%ebp
    6267:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    626b:	b8 0b 00 00 00       	mov    $0xb,%eax
    6270:	48 85 f6             	test   %rsi,%rsi
    6273:	0f 84 aa 00 00 00    	je     6323 <lzma_block_header_size+0x123>
    6279:	48 83 3e ff          	cmpq   $0xffffffffffffffff,(%rsi)
    627d:	0f 84 a0 00 00 00    	je     6323 <lzma_block_header_size+0x123>
    6283:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    6288:	e8 03 08 00 00       	call   6a90 <lzma_filter_flags_size>
    628d:	85 c0                	test   %eax,%eax
    628f:	0f 85 8e 00 00 00    	jne    6323 <lzma_block_header_size+0x123>
    6295:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    6299:	03 6c 24 04          	add    0x4(%rsp),%ebp
    629d:	48 83 7e 10 ff       	cmpq   $0xffffffffffffffff,0x10(%rsi)
    62a2:	74 68                	je     630c <lzma_block_header_size+0x10c>
    62a4:	48 83 c6 10          	add    $0x10,%rsi
    62a8:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    62ad:	e8 de 07 00 00       	call   6a90 <lzma_filter_flags_size>
    62b2:	85 c0                	test   %eax,%eax
    62b4:	75 6d                	jne    6323 <lzma_block_header_size+0x123>
    62b6:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    62ba:	03 6c 24 04          	add    0x4(%rsp),%ebp
    62be:	48 83 7e 20 ff       	cmpq   $0xffffffffffffffff,0x20(%rsi)
    62c3:	74 47                	je     630c <lzma_block_header_size+0x10c>
    62c5:	48 83 c6 20          	add    $0x20,%rsi
    62c9:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    62ce:	e8 bd 07 00 00       	call   6a90 <lzma_filter_flags_size>
    62d3:	85 c0                	test   %eax,%eax
    62d5:	75 4c                	jne    6323 <lzma_block_header_size+0x123>
    62d7:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    62db:	03 6c 24 04          	add    0x4(%rsp),%ebp
    62df:	48 83 7e 30 ff       	cmpq   $0xffffffffffffffff,0x30(%rsi)
    62e4:	74 26                	je     630c <lzma_block_header_size+0x10c>
    62e6:	48 83 c6 30          	add    $0x30,%rsi
    62ea:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    62ef:	e8 9c 07 00 00       	call   6a90 <lzma_filter_flags_size>
    62f4:	85 c0                	test   %eax,%eax
    62f6:	75 2b                	jne    6323 <lzma_block_header_size+0x123>
    62f8:	48 8b 43 20          	mov    0x20(%rbx),%rax
    62fc:	48 83 78 40 ff       	cmpq   $0xffffffffffffffff,0x40(%rax)
    6301:	b8 0b 00 00 00       	mov    $0xb,%eax
    6306:	75 1b                	jne    6323 <lzma_block_header_size+0x123>
    6308:	03 6c 24 04          	add    0x4(%rsp),%ebp
    630c:	83 c5 03             	add    $0x3,%ebp
    630f:	83 e5 fc             	and    $0xfffffffc,%ebp
    6312:	89 6b 04             	mov    %ebp,0x4(%rbx)
    6315:	31 c0                	xor    %eax,%eax
    6317:	48 83 c4 08          	add    $0x8,%rsp
    631b:	5b                   	pop    %rbx
    631c:	5d                   	pop    %rbp
    631d:	c3                   	ret    
    631e:	b8 0b 00 00 00       	mov    $0xb,%eax
    6323:	48 83 c4 08          	add    $0x8,%rsp
    6327:	5b                   	pop    %rbx
    6328:	5d                   	pop    %rbp
    6329:	c3                   	ret    
    632a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006330 <lzma_block_header_encode>:
    6330:	41 57                	push   %r15
    6332:	41 56                	push   %r14
    6334:	53                   	push   %rbx
    6335:	48 83 ec 10          	sub    $0x10,%rsp
    6339:	48 89 f3             	mov    %rsi,%rbx
    633c:	49 89 ff             	mov    %rdi,%r15
    633f:	e8 6c d3 ff ff       	call   36b0 <lzma_block_unpadded_size>
    6344:	48 89 c1             	mov    %rax,%rcx
    6347:	b8 0b 00 00 00       	mov    $0xb,%eax
    634c:	48 85 c9             	test   %rcx,%rcx
    634f:	0f 84 5d 01 00 00    	je     64b2 <lzma_block_header_encode+0x182>
    6355:	49 83 7f 18 ff       	cmpq   $0xffffffffffffffff,0x18(%r15)
    635a:	0f 8c 52 01 00 00    	jl     64b2 <lzma_block_header_encode+0x182>
    6360:	45 8b 77 04          	mov    0x4(%r15),%r14d
    6364:	41 83 c6 fc          	add    $0xfffffffc,%r14d
    6368:	44 89 f0             	mov    %r14d,%eax
    636b:	c1 e8 02             	shr    $0x2,%eax
    636e:	88 03                	mov    %al,(%rbx)
    6370:	c6 43 01 00          	movb   $0x0,0x1(%rbx)
    6374:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    637b:	00 00 
    637d:	49 8b 7f 10          	mov    0x10(%r15),%rdi
    6381:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    6385:	74 1e                	je     63a5 <lzma_block_header_encode+0x75>
    6387:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    638c:	31 f6                	xor    %esi,%esi
    638e:	48 89 da             	mov    %rbx,%rdx
    6391:	4d 89 f0             	mov    %r14,%r8
    6394:	e8 67 17 00 00       	call   7b00 <lzma_vli_encode>
    6399:	85 c0                	test   %eax,%eax
    639b:	0f 85 11 01 00 00    	jne    64b2 <lzma_block_header_encode+0x182>
    63a1:	80 4b 01 40          	orb    $0x40,0x1(%rbx)
    63a5:	49 8b 7f 18          	mov    0x18(%r15),%rdi
    63a9:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    63ad:	74 1e                	je     63cd <lzma_block_header_encode+0x9d>
    63af:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    63b4:	31 f6                	xor    %esi,%esi
    63b6:	48 89 da             	mov    %rbx,%rdx
    63b9:	4d 89 f0             	mov    %r14,%r8
    63bc:	e8 3f 17 00 00       	call   7b00 <lzma_vli_encode>
    63c1:	85 c0                	test   %eax,%eax
    63c3:	0f 85 e9 00 00 00    	jne    64b2 <lzma_block_header_encode+0x182>
    63c9:	80 4b 01 80          	orb    $0x80,0x1(%rbx)
    63cd:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    63d1:	b8 0b 00 00 00       	mov    $0xb,%eax
    63d6:	48 85 ff             	test   %rdi,%rdi
    63d9:	0f 84 d3 00 00 00    	je     64b2 <lzma_block_header_encode+0x182>
    63df:	48 83 3f ff          	cmpq   $0xffffffffffffffff,(%rdi)
    63e3:	0f 84 c9 00 00 00    	je     64b2 <lzma_block_header_encode+0x182>
    63e9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    63ee:	48 89 de             	mov    %rbx,%rsi
    63f1:	4c 89 f1             	mov    %r14,%rcx
    63f4:	e8 d7 06 00 00       	call   6ad0 <lzma_filter_flags_encode>
    63f9:	85 c0                	test   %eax,%eax
    63fb:	0f 85 b1 00 00 00    	jne    64b2 <lzma_block_header_encode+0x182>
    6401:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    6405:	31 c0                	xor    %eax,%eax
    6407:	48 83 7f 10 ff       	cmpq   $0xffffffffffffffff,0x10(%rdi)
    640c:	74 78                	je     6486 <lzma_block_header_encode+0x156>
    640e:	48 83 c7 10          	add    $0x10,%rdi
    6412:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    6417:	48 89 de             	mov    %rbx,%rsi
    641a:	4c 89 f1             	mov    %r14,%rcx
    641d:	e8 ae 06 00 00       	call   6ad0 <lzma_filter_flags_encode>
    6422:	85 c0                	test   %eax,%eax
    6424:	0f 85 88 00 00 00    	jne    64b2 <lzma_block_header_encode+0x182>
    642a:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    642e:	48 83 7f 20 ff       	cmpq   $0xffffffffffffffff,0x20(%rdi)
    6433:	74 4f                	je     6484 <lzma_block_header_encode+0x154>
    6435:	48 83 c7 20          	add    $0x20,%rdi
    6439:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    643e:	48 89 de             	mov    %rbx,%rsi
    6441:	4c 89 f1             	mov    %r14,%rcx
    6444:	e8 87 06 00 00       	call   6ad0 <lzma_filter_flags_encode>
    6449:	85 c0                	test   %eax,%eax
    644b:	75 65                	jne    64b2 <lzma_block_header_encode+0x182>
    644d:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    6451:	48 83 7f 30 ff       	cmpq   $0xffffffffffffffff,0x30(%rdi)
    6456:	74 64                	je     64bc <lzma_block_header_encode+0x18c>
    6458:	48 83 c7 30          	add    $0x30,%rdi
    645c:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    6461:	48 89 de             	mov    %rbx,%rsi
    6464:	4c 89 f1             	mov    %r14,%rcx
    6467:	e8 64 06 00 00       	call   6ad0 <lzma_filter_flags_encode>
    646c:	85 c0                	test   %eax,%eax
    646e:	75 42                	jne    64b2 <lzma_block_header_encode+0x182>
    6470:	49 8b 47 20          	mov    0x20(%r15),%rax
    6474:	48 83 78 40 ff       	cmpq   $0xffffffffffffffff,0x40(%rax)
    6479:	b8 0b 00 00 00       	mov    $0xb,%eax
    647e:	75 32                	jne    64b2 <lzma_block_header_encode+0x182>
    6480:	b0 03                	mov    $0x3,%al
    6482:	eb 02                	jmp    6486 <lzma_block_header_encode+0x156>
    6484:	b0 01                	mov    $0x1,%al
    6486:	08 43 01             	or     %al,0x1(%rbx)
    6489:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    648e:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
    6492:	4c 89 f2             	mov    %r14,%rdx
    6495:	48 29 c2             	sub    %rax,%rdx
    6498:	31 f6                	xor    %esi,%esi
    649a:	e8 21 bc ff ff       	call   20c0 <memset@plt>
    649f:	48 89 df             	mov    %rbx,%rdi
    64a2:	4c 89 f6             	mov    %r14,%rsi
    64a5:	31 d2                	xor    %edx,%edx
    64a7:	e8 74 45 00 00       	call   aa20 <lzma_crc32>
    64ac:	42 89 04 33          	mov    %eax,(%rbx,%r14,1)
    64b0:	31 c0                	xor    %eax,%eax
    64b2:	48 83 c4 10          	add    $0x10,%rsp
    64b6:	5b                   	pop    %rbx
    64b7:	41 5e                	pop    %r14
    64b9:	41 5f                	pop    %r15
    64bb:	c3                   	ret    
    64bc:	b0 02                	mov    $0x2,%al
    64be:	eb c6                	jmp    6486 <lzma_block_header_encode+0x156>

00000000000064c0 <lzma_easy_buffer_encode>:
    64c0:	55                   	push   %rbp
    64c1:	41 57                	push   %r15
    64c3:	41 56                	push   %r14
    64c5:	41 54                	push   %r12
    64c7:	53                   	push   %rbx
    64c8:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    64cf:	4c 89 cb             	mov    %r9,%rbx
    64d2:	4d 89 c6             	mov    %r8,%r14
    64d5:	49 89 cf             	mov    %rcx,%r15
    64d8:	49 89 d4             	mov    %rdx,%r12
    64db:	89 f5                	mov    %esi,%ebp
    64dd:	89 fe                	mov    %edi,%esi
    64df:	48 89 e7             	mov    %rsp,%rdi
    64e2:	e8 b9 d2 ff ff       	call   37a0 <lzma_easy_preset>
    64e7:	89 c1                	mov    %eax,%ecx
    64e9:	b8 08 00 00 00       	mov    $0x8,%eax
    64ee:	84 c9                	test   %cl,%cl
    64f0:	75 28                	jne    651a <lzma_easy_buffer_encode+0x5a>
    64f2:	48 89 e7             	mov    %rsp,%rdi
    64f5:	89 ee                	mov    %ebp,%esi
    64f7:	4c 89 e2             	mov    %r12,%rdx
    64fa:	4c 89 f9             	mov    %r15,%rcx
    64fd:	4d 89 f0             	mov    %r14,%r8
    6500:	49 89 d9             	mov    %rbx,%r9
    6503:	ff b4 24 f8 00 00 00 	push   0xf8(%rsp)
    650a:	ff b4 24 f8 00 00 00 	push   0xf8(%rsp)
    6511:	e8 8a 0b 00 00       	call   70a0 <lzma_stream_buffer_encode>
    6516:	48 83 c4 10          	add    $0x10,%rsp
    651a:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
    6521:	5b                   	pop    %rbx
    6522:	41 5c                	pop    %r12
    6524:	41 5e                	pop    %r14
    6526:	41 5f                	pop    %r15
    6528:	5d                   	pop    %rbp
    6529:	c3                   	ret    
    652a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006530 <lzma_easy_encoder>:
    6530:	41 56                	push   %r14
    6532:	53                   	push   %rbx
    6533:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    653a:	89 d3                	mov    %edx,%ebx
    653c:	49 89 fe             	mov    %rdi,%r14
    653f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    6544:	e8 57 d2 ff ff       	call   37a0 <lzma_easy_preset>
    6549:	89 c1                	mov    %eax,%ecx
    654b:	b8 08 00 00 00       	mov    $0x8,%eax
    6550:	84 c9                	test   %cl,%cl
    6552:	75 0f                	jne    6563 <lzma_easy_encoder+0x33>
    6554:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    6559:	4c 89 f7             	mov    %r14,%rdi
    655c:	89 da                	mov    %ebx,%edx
    655e:	e8 3d 14 00 00       	call   79a0 <lzma_stream_encoder>
    6563:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    656a:	5b                   	pop    %rbx
    656b:	41 5e                	pop    %r14
    656d:	c3                   	ret    
    656e:	66 90                	xchg   %ax,%ax

0000000000006570 <lzma_easy_encoder_memusage>:
    6570:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    6577:	89 fe                	mov    %edi,%esi
    6579:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    657e:	e8 1d d2 ff ff       	call   37a0 <lzma_easy_preset>
    6583:	89 c1                	mov    %eax,%ecx
    6585:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    658a:	84 c9                	test   %cl,%cl
    658c:	75 0a                	jne    6598 <lzma_easy_encoder_memusage+0x28>
    658e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    6593:	e8 18 03 00 00       	call   68b0 <lzma_raw_encoder_memusage>
    6598:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    659f:	c3                   	ret    

00000000000065a0 <lzma_raw_buffer_encode>:
    65a0:	55                   	push   %rbp
    65a1:	41 57                	push   %r15
    65a3:	41 56                	push   %r14
    65a5:	41 55                	push   %r13
    65a7:	41 54                	push   %r12
    65a9:	53                   	push   %rbx
    65aa:	48 83 ec 58          	sub    $0x58,%rsp
    65ae:	49 89 d7             	mov    %rdx,%r15
    65b1:	48 89 fa             	mov    %rdi,%rdx
    65b4:	4d 85 ff             	test   %r15,%r15
    65b7:	40 0f 94 c7          	sete   %dil
    65bb:	48 85 c9             	test   %rcx,%rcx
    65be:	41 0f 95 c2          	setne  %r10b
    65c2:	b8 0b 00 00 00       	mov    $0xb,%eax
    65c7:	44 84 d7             	test   %r10b,%dil
    65ca:	0f 85 bd 00 00 00    	jne    668d <lzma_raw_buffer_encode+0xed>
    65d0:	4d 85 c0             	test   %r8,%r8
    65d3:	0f 84 b4 00 00 00    	je     668d <lzma_raw_buffer_encode+0xed>
    65d9:	4d 85 c9             	test   %r9,%r9
    65dc:	0f 84 ab 00 00 00    	je     668d <lzma_raw_buffer_encode+0xed>
    65e2:	48 8b ac 24 90 00 00 	mov    0x90(%rsp),%rbp
    65e9:	00 
    65ea:	49 39 29             	cmp    %rbp,(%r9)
    65ed:	0f 87 9a 00 00 00    	ja     668d <lzma_raw_buffer_encode+0xed>
    65f3:	49 89 ce             	mov    %rcx,%r14
    65f6:	4c 89 c3             	mov    %r8,%rbx
    65f9:	4d 89 cd             	mov    %r9,%r13
    65fc:	0f 57 c0             	xorps  %xmm0,%xmm0
    65ff:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    6604:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6609:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    660e:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    6613:	48 c7 44 24 18 ff ff 	movq   $0xffffffffffffffff,0x18(%rsp)
    661a:	ff ff 
    661c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    6621:	49 89 f4             	mov    %rsi,%r12
    6624:	e8 97 02 00 00       	call   68c0 <lzma_raw_encoder_init>
    6629:	85 c0                	test   %eax,%eax
    662b:	75 60                	jne    668d <lzma_raw_buffer_encode+0xed>
    662d:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    6631:	48 89 0c 24          	mov    %rcx,(%rsp)
    6635:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    663c:	00 00 
    663e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6643:	48 83 ec 08          	sub    $0x8,%rsp
    6647:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    664c:	4c 89 e6             	mov    %r12,%rsi
    664f:	4c 89 fa             	mov    %r15,%rdx
    6652:	4d 89 f0             	mov    %r14,%r8
    6655:	49 89 d9             	mov    %rbx,%r9
    6658:	6a 03                	push   $0x3
    665a:	55                   	push   %rbp
    665b:	41 55                	push   %r13
    665d:	ff 54 24 48          	call   *0x48(%rsp)
    6661:	48 83 c4 20          	add    $0x20,%rsp
    6665:	89 c3                	mov    %eax,%ebx
    6667:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    666c:	4c 89 e6             	mov    %r12,%rsi
    666f:	e8 cc c9 ff ff       	call   3040 <lzma_next_end>
    6674:	31 c0                	xor    %eax,%eax
    6676:	83 fb 01             	cmp    $0x1,%ebx
    6679:	74 12                	je     668d <lzma_raw_buffer_encode+0xed>
    667b:	85 db                	test   %ebx,%ebx
    667d:	b8 0a 00 00 00       	mov    $0xa,%eax
    6682:	0f 45 c3             	cmovne %ebx,%eax
    6685:	48 8b 0c 24          	mov    (%rsp),%rcx
    6689:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    668d:	48 83 c4 58          	add    $0x58,%rsp
    6691:	5b                   	pop    %rbx
    6692:	41 5c                	pop    %r12
    6694:	41 5d                	pop    %r13
    6696:	41 5e                	pop    %r14
    6698:	41 5f                	pop    %r15
    669a:	5d                   	pop    %rbp
    669b:	c3                   	ret    
    669c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000066a0 <lzma_filter_encoder_is_supported>:
    66a0:	48 8d 47 fd          	lea    -0x3(%rdi),%rax
    66a4:	48 83 f8 07          	cmp    $0x7,%rax
    66a8:	73 03                	jae    66ad <lzma_filter_encoder_is_supported+0xd>
    66aa:	b0 01                	mov    $0x1,%al
    66ac:	c3                   	ret    
    66ad:	48 b8 01 00 00 00 00 	movabs $0x4000000000000001,%rax
    66b4:	00 00 40 
    66b7:	48 39 c7             	cmp    %rax,%rdi
    66ba:	74 ee                	je     66aa <lzma_filter_encoder_is_supported+0xa>
    66bc:	48 83 ff 21          	cmp    $0x21,%rdi
    66c0:	74 e8                	je     66aa <lzma_filter_encoder_is_supported+0xa>
    66c2:	31 c0                	xor    %eax,%eax
    66c4:	c3                   	ret    
    66c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    66cc:	00 00 00 00 

00000000000066d0 <encoder_find>:
    66d0:	31 c0                	xor    %eax,%eax
    66d2:	48 8d 4f fd          	lea    -0x3(%rdi),%rcx
    66d6:	48 83 f9 1e          	cmp    $0x1e,%rcx
    66da:	77 24                	ja     6700 <encoder_find+0x30>
    66dc:	48 8d 15 05 d5 01 00 	lea    0x1d505(%rip),%rdx        # 23be8 <lzma_footer_magic+0x2>
    66e3:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
    66e7:	48 01 d1             	add    %rdx,%rcx
    66ea:	ff e1                	jmp    *%rcx
    66ec:	b8 08 00 00 00       	mov    $0x8,%eax
    66f1:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    66f5:	48 8d 05 74 d1 02 00 	lea    0x2d174(%rip),%rax        # 33870 <encoders>
    66fc:	48 01 c8             	add    %rcx,%rax
    66ff:	c3                   	ret    
    6700:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    6707:	00 00 40 
    670a:	48 39 cf             	cmp    %rcx,%rdi
    670d:	74 06                	je     6715 <encoder_find+0x45>
    670f:	c3                   	ret    
    6710:	b8 01 00 00 00       	mov    $0x1,%eax
    6715:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    6719:	48 8d 05 50 d1 02 00 	lea    0x2d150(%rip),%rax        # 33870 <encoders>
    6720:	48 01 c8             	add    %rcx,%rax
    6723:	c3                   	ret    
    6724:	b8 07 00 00 00       	mov    $0x7,%eax
    6729:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    672d:	48 8d 05 3c d1 02 00 	lea    0x2d13c(%rip),%rax        # 33870 <encoders>
    6734:	48 01 c8             	add    %rcx,%rax
    6737:	c3                   	ret    
    6738:	b8 03 00 00 00       	mov    $0x3,%eax
    673d:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    6741:	48 8d 05 28 d1 02 00 	lea    0x2d128(%rip),%rax        # 33870 <encoders>
    6748:	48 01 c8             	add    %rcx,%rax
    674b:	c3                   	ret    
    674c:	b8 02 00 00 00       	mov    $0x2,%eax
    6751:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    6755:	48 8d 05 14 d1 02 00 	lea    0x2d114(%rip),%rax        # 33870 <encoders>
    675c:	48 01 c8             	add    %rcx,%rax
    675f:	c3                   	ret    
    6760:	b8 05 00 00 00       	mov    $0x5,%eax
    6765:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    6769:	48 8d 05 00 d1 02 00 	lea    0x2d100(%rip),%rax        # 33870 <encoders>
    6770:	48 01 c8             	add    %rcx,%rax
    6773:	c3                   	ret    
    6774:	b8 04 00 00 00       	mov    $0x4,%eax
    6779:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    677d:	48 8d 05 ec d0 02 00 	lea    0x2d0ec(%rip),%rax        # 33870 <encoders>
    6784:	48 01 c8             	add    %rcx,%rax
    6787:	c3                   	ret    
    6788:	b8 06 00 00 00       	mov    $0x6,%eax
    678d:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    6791:	48 8d 05 d8 d0 02 00 	lea    0x2d0d8(%rip),%rax        # 33870 <encoders>
    6798:	48 01 c8             	add    %rcx,%rax
    679b:	c3                   	ret    
    679c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000067a0 <lzma_filters_update>:
    67a0:	41 56                	push   %r14
    67a2:	53                   	push   %rbx
    67a3:	48 83 ec 58          	sub    $0x58,%rsp
    67a7:	48 8b 47 38          	mov    0x38(%rdi),%rax
    67ab:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
    67b0:	74 52                	je     6804 <lzma_filters_update+0x64>
    67b2:	48 89 f3             	mov    %rsi,%rbx
    67b5:	49 89 fe             	mov    %rdi,%r14
    67b8:	48 8d 3d 11 ff ff ff 	lea    -0xef(%rip),%rdi        # 66d0 <encoder_find>
    67bf:	e8 5c d6 ff ff       	call   3e20 <lzma_raw_coder_memusage>
    67c4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    67c8:	74 47                	je     6811 <lzma_filters_update+0x71>
    67ca:	48 8d 44 24 f0       	lea    -0x10(%rsp),%rax
    67cf:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    67d3:	31 c9                	xor    %ecx,%ecx
    67d5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    67dc:	00 00 00 00 
    67e0:	48 ff c1             	inc    %rcx
    67e3:	48 83 c0 10          	add    $0x10,%rax
    67e7:	48 83 3a ff          	cmpq   $0xffffffffffffffff,(%rdx)
    67eb:	48 8d 52 10          	lea    0x10(%rdx),%rdx
    67ef:	75 ef                	jne    67e0 <lzma_filters_update+0x40>
    67f1:	48 85 c9             	test   %rcx,%rcx
    67f4:	0f 84 8a 00 00 00    	je     6884 <lzma_filters_update+0xe4>
    67fa:	48 83 f9 01          	cmp    $0x1,%rcx
    67fe:	75 1e                	jne    681e <lzma_filters_update+0x7e>
    6800:	31 d2                	xor    %edx,%edx
    6802:	eb 6a                	jmp    686e <lzma_filters_update+0xce>
    6804:	b8 0b 00 00 00       	mov    $0xb,%eax
    6809:	48 83 c4 58          	add    $0x58,%rsp
    680d:	5b                   	pop    %rbx
    680e:	41 5e                	pop    %r14
    6810:	c3                   	ret    
    6811:	b8 08 00 00 00       	mov    $0x8,%eax
    6816:	48 83 c4 58          	add    $0x58,%rsp
    681a:	5b                   	pop    %rbx
    681b:	41 5e                	pop    %r14
    681d:	c3                   	ret    
    681e:	48 8d 73 10          	lea    0x10(%rbx),%rsi
    6822:	48 89 cf             	mov    %rcx,%rdi
    6825:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    6829:	31 d2                	xor    %edx,%edx
    682b:	49 b8 fe ff ff ff ff 	movabs $0xffffffffffffffe,%r8
    6832:	ff ff 0f 
    6835:	49 89 c1             	mov    %rax,%r9
    6838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    683f:	00 
    6840:	0f 10 46 f0          	movups -0x10(%rsi),%xmm0
    6844:	41 0f 11 01          	movups %xmm0,(%r9)
    6848:	49 89 d2             	mov    %rdx,%r10
    684b:	4d 31 c2             	xor    %r8,%r10
    684e:	49 01 ca             	add    %rcx,%r10
    6851:	49 c1 e2 04          	shl    $0x4,%r10
    6855:	0f 10 06             	movups (%rsi),%xmm0
    6858:	42 0f 11 04 14       	movups %xmm0,(%rsp,%r10,1)
    685d:	48 83 c2 02          	add    $0x2,%rdx
    6861:	48 83 c6 20          	add    $0x20,%rsi
    6865:	49 83 c1 e0          	add    $0xffffffffffffffe0,%r9
    6869:	48 39 d7             	cmp    %rdx,%rdi
    686c:	75 d2                	jne    6840 <lzma_filters_update+0xa0>
    686e:	f6 c1 01             	test   $0x1,%cl
    6871:	74 11                	je     6884 <lzma_filters_update+0xe4>
    6873:	48 c1 e2 04          	shl    $0x4,%rdx
    6877:	48 89 c1             	mov    %rax,%rcx
    687a:	48 29 d1             	sub    %rdx,%rcx
    687d:	0f 10 04 13          	movups (%rbx,%rdx,1),%xmm0
    6881:	0f 11 01             	movups %xmm0,(%rcx)
    6884:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    688b:	ff 
    688c:	49 8b 76 30          	mov    0x30(%r14),%rsi
    6890:	49 8b 46 38          	mov    0x38(%r14),%rax
    6894:	48 8b 38             	mov    (%rax),%rdi
    6897:	48 89 e1             	mov    %rsp,%rcx
    689a:	48 89 da             	mov    %rbx,%rdx
    689d:	ff 50 38             	call   *0x38(%rax)
    68a0:	48 83 c4 58          	add    $0x58,%rsp
    68a4:	5b                   	pop    %rbx
    68a5:	41 5e                	pop    %r14
    68a7:	c3                   	ret    
    68a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    68af:	00 

00000000000068b0 <lzma_raw_encoder_memusage>:
    68b0:	48 89 fe             	mov    %rdi,%rsi
    68b3:	48 8d 3d 16 fe ff ff 	lea    -0x1ea(%rip),%rdi        # 66d0 <encoder_find>
    68ba:	e9 61 d5 ff ff       	jmp    3e20 <lzma_raw_coder_memusage>
    68bf:	90                   	nop

00000000000068c0 <lzma_raw_encoder_init>:
    68c0:	48 8d 0d 09 fe ff ff 	lea    -0x1f7(%rip),%rcx        # 66d0 <encoder_find>
    68c7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    68cd:	e9 7e d3 ff ff       	jmp    3c50 <lzma_raw_coder_init>
    68d2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    68d9:	1f 84 00 00 00 00 00 

00000000000068e0 <lzma_raw_encoder>:
    68e0:	41 56                	push   %r14
    68e2:	53                   	push   %rbx
    68e3:	50                   	push   %rax
    68e4:	49 89 f6             	mov    %rsi,%r14
    68e7:	48 89 fb             	mov    %rdi,%rbx
    68ea:	e8 f1 c7 ff ff       	call   30e0 <lzma_strm_init>
    68ef:	85 c0                	test   %eax,%eax
    68f1:	74 08                	je     68fb <lzma_raw_encoder+0x1b>
    68f3:	48 83 c4 08          	add    $0x8,%rsp
    68f7:	5b                   	pop    %rbx
    68f8:	41 5e                	pop    %r14
    68fa:	c3                   	ret    
    68fb:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    68ff:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    6903:	48 8d 0d c6 fd ff ff 	lea    -0x23a(%rip),%rcx        # 66d0 <encoder_find>
    690a:	4c 89 f2             	mov    %r14,%rdx
    690d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    6913:	e8 38 d3 ff ff       	call   3c50 <lzma_raw_coder_init>
    6918:	85 c0                	test   %eax,%eax
    691a:	74 14                	je     6930 <lzma_raw_encoder+0x50>
    691c:	48 89 df             	mov    %rbx,%rdi
    691f:	89 c3                	mov    %eax,%ebx
    6921:	e8 ea ca ff ff       	call   3410 <lzma_end>
    6926:	89 d8                	mov    %ebx,%eax
    6928:	48 83 c4 08          	add    $0x8,%rsp
    692c:	5b                   	pop    %rbx
    692d:	41 5e                	pop    %r14
    692f:	c3                   	ret    
    6930:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6934:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    6938:	48 8b 43 38          	mov    0x38(%rbx),%rax
    693c:	c6 40 51 01          	movb   $0x1,0x51(%rax)
    6940:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6944:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    6948:	31 c0                	xor    %eax,%eax
    694a:	48 83 c4 08          	add    $0x8,%rsp
    694e:	5b                   	pop    %rbx
    694f:	41 5e                	pop    %r14
    6951:	c3                   	ret    
    6952:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6959:	1f 84 00 00 00 00 00 

0000000000006960 <lzma_properties_size>:
    6960:	48 8b 06             	mov    (%rsi),%rax
    6963:	48 8d 48 fd          	lea    -0x3(%rax),%rcx
    6967:	48 83 f9 1e          	cmp    $0x1e,%rcx
    696b:	77 17                	ja     6984 <lzma_properties_size+0x24>
    696d:	48 8d 15 f0 d2 01 00 	lea    0x1d2f0(%rip),%rdx        # 23c64 <lzma_footer_magic+0x7e>
    6974:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
    6978:	48 01 d1             	add    %rdx,%rcx
    697b:	ff e1                	jmp    *%rcx
    697d:	b8 08 00 00 00       	mov    $0x8,%eax
    6982:	eb 4d                	jmp    69d1 <lzma_properties_size+0x71>
    6984:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    698b:	00 00 40 
    698e:	48 39 c8             	cmp    %rcx,%rax
    6991:	75 04                	jne    6997 <lzma_properties_size+0x37>
    6993:	31 c0                	xor    %eax,%eax
    6995:	eb 3a                	jmp    69d1 <lzma_properties_size+0x71>
    6997:	48 c1 e8 3f          	shr    $0x3f,%rax
    699b:	8d 04 40             	lea    (%rax,%rax,2),%eax
    699e:	83 c0 08             	add    $0x8,%eax
    69a1:	c3                   	ret    
    69a2:	b8 01 00 00 00       	mov    $0x1,%eax
    69a7:	eb 28                	jmp    69d1 <lzma_properties_size+0x71>
    69a9:	b8 07 00 00 00       	mov    $0x7,%eax
    69ae:	eb 21                	jmp    69d1 <lzma_properties_size+0x71>
    69b0:	b8 03 00 00 00       	mov    $0x3,%eax
    69b5:	eb 1a                	jmp    69d1 <lzma_properties_size+0x71>
    69b7:	b8 02 00 00 00       	mov    $0x2,%eax
    69bc:	eb 13                	jmp    69d1 <lzma_properties_size+0x71>
    69be:	b8 05 00 00 00       	mov    $0x5,%eax
    69c3:	eb 0c                	jmp    69d1 <lzma_properties_size+0x71>
    69c5:	b8 04 00 00 00       	mov    $0x4,%eax
    69ca:	eb 05                	jmp    69d1 <lzma_properties_size+0x71>
    69cc:	b8 06 00 00 00       	mov    $0x6,%eax
    69d1:	48 6b c8 38          	imul   $0x38,%rax,%rcx
    69d5:	48 8d 15 94 ce 02 00 	lea    0x2ce94(%rip),%rdx        # 33870 <encoders>
    69dc:	48 8b 44 11 20       	mov    0x20(%rcx,%rdx,1),%rax
    69e1:	48 85 c0             	test   %rax,%rax
    69e4:	74 06                	je     69ec <lzma_properties_size+0x8c>
    69e6:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    69ea:	ff e0                	jmp    *%rax
    69ec:	8b 44 11 28          	mov    0x28(%rcx,%rdx,1),%eax
    69f0:	89 07                	mov    %eax,(%rdi)
    69f2:	31 c0                	xor    %eax,%eax
    69f4:	c3                   	ret    
    69f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    69fc:	00 00 00 00 

0000000000006a00 <lzma_properties_encode>:
    6a00:	48 8b 0f             	mov    (%rdi),%rcx
    6a03:	b8 0b 00 00 00       	mov    $0xb,%eax
    6a08:	48 8d 51 fd          	lea    -0x3(%rcx),%rdx
    6a0c:	48 83 fa 1e          	cmp    $0x1e,%rdx
    6a10:	77 17                	ja     6a29 <lzma_properties_encode+0x29>
    6a12:	48 8d 0d c7 d2 01 00 	lea    0x1d2c7(%rip),%rcx        # 23ce0 <lzma_footer_magic+0xfa>
    6a19:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
    6a1d:	48 01 ca             	add    %rcx,%rdx
    6a20:	ff e2                	jmp    *%rdx
    6a22:	b8 08 00 00 00       	mov    $0x8,%eax
    6a27:	eb 42                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a29:	48 ba 01 00 00 00 00 	movabs $0x4000000000000001,%rdx
    6a30:	00 00 40 
    6a33:	48 39 d1             	cmp    %rdx,%rcx
    6a36:	75 50                	jne    6a88 <lzma_properties_encode+0x88>
    6a38:	31 c0                	xor    %eax,%eax
    6a3a:	eb 2f                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a3c:	b8 01 00 00 00       	mov    $0x1,%eax
    6a41:	eb 28                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a43:	b8 07 00 00 00       	mov    $0x7,%eax
    6a48:	eb 21                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a4a:	b8 03 00 00 00       	mov    $0x3,%eax
    6a4f:	eb 1a                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a51:	b8 02 00 00 00       	mov    $0x2,%eax
    6a56:	eb 13                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a58:	b8 05 00 00 00       	mov    $0x5,%eax
    6a5d:	eb 0c                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a5f:	b8 04 00 00 00       	mov    $0x4,%eax
    6a64:	eb 05                	jmp    6a6b <lzma_properties_encode+0x6b>
    6a66:	b8 06 00 00 00       	mov    $0x6,%eax
    6a6b:	48 6b c0 38          	imul   $0x38,%rax,%rax
    6a6f:	48 8d 0d fa cd 02 00 	lea    0x2cdfa(%rip),%rcx        # 33870 <encoders>
    6a76:	48 8b 44 08 30       	mov    0x30(%rax,%rcx,1),%rax
    6a7b:	48 85 c0             	test   %rax,%rax
    6a7e:	74 06                	je     6a86 <lzma_properties_encode+0x86>
    6a80:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6a84:	ff e0                	jmp    *%rax
    6a86:	31 c0                	xor    %eax,%eax
    6a88:	c3                   	ret    
    6a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006a90 <lzma_filter_flags_size>:
    6a90:	48 8b 06             	mov    (%rsi),%rax
    6a93:	48 c1 e8 3e          	shr    $0x3e,%rax
    6a97:	b8 0b 00 00 00       	mov    $0xb,%eax
    6a9c:	75 2e                	jne    6acc <lzma_filter_flags_size+0x3c>
    6a9e:	55                   	push   %rbp
    6a9f:	41 56                	push   %r14
    6aa1:	53                   	push   %rbx
    6aa2:	49 89 f6             	mov    %rsi,%r14
    6aa5:	48 89 fb             	mov    %rdi,%rbx
    6aa8:	e8 b3 fe ff ff       	call   6960 <lzma_properties_size>
    6aad:	85 c0                	test   %eax,%eax
    6aaf:	75 17                	jne    6ac8 <lzma_filter_flags_size+0x38>
    6ab1:	49 8b 3e             	mov    (%r14),%rdi
    6ab4:	e8 27 ea ff ff       	call   54e0 <lzma_vli_size>
    6ab9:	89 c5                	mov    %eax,%ebp
    6abb:	8b 3b                	mov    (%rbx),%edi
    6abd:	e8 1e ea ff ff       	call   54e0 <lzma_vli_size>
    6ac2:	01 e8                	add    %ebp,%eax
    6ac4:	01 03                	add    %eax,(%rbx)
    6ac6:	31 c0                	xor    %eax,%eax
    6ac8:	5b                   	pop    %rbx
    6ac9:	41 5e                	pop    %r14
    6acb:	5d                   	pop    %rbp
    6acc:	c3                   	ret    
    6acd:	0f 1f 00             	nopl   (%rax)

0000000000006ad0 <lzma_filter_flags_encode>:
    6ad0:	41 57                	push   %r15
    6ad2:	41 56                	push   %r14
    6ad4:	41 54                	push   %r12
    6ad6:	53                   	push   %rbx
    6ad7:	50                   	push   %rax
    6ad8:	49 89 ff             	mov    %rdi,%r15
    6adb:	48 8b 3f             	mov    (%rdi),%rdi
    6ade:	48 89 f8             	mov    %rdi,%rax
    6ae1:	48 c1 e8 3e          	shr    $0x3e,%rax
    6ae5:	b8 0b 00 00 00       	mov    $0xb,%eax
    6aea:	75 75                	jne    6b61 <lzma_filter_flags_encode+0x91>
    6aec:	49 89 cc             	mov    %rcx,%r12
    6aef:	48 89 d3             	mov    %rdx,%rbx
    6af2:	49 89 f6             	mov    %rsi,%r14
    6af5:	31 f6                	xor    %esi,%esi
    6af7:	4c 89 f2             	mov    %r14,%rdx
    6afa:	48 89 d9             	mov    %rbx,%rcx
    6afd:	4d 89 e0             	mov    %r12,%r8
    6b00:	e8 fb 0f 00 00       	call   7b00 <lzma_vli_encode>
    6b05:	85 c0                	test   %eax,%eax
    6b07:	75 58                	jne    6b61 <lzma_filter_flags_encode+0x91>
    6b09:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    6b0e:	4c 89 fe             	mov    %r15,%rsi
    6b11:	e8 4a fe ff ff       	call   6960 <lzma_properties_size>
    6b16:	85 c0                	test   %eax,%eax
    6b18:	75 47                	jne    6b61 <lzma_filter_flags_encode+0x91>
    6b1a:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    6b1e:	31 f6                	xor    %esi,%esi
    6b20:	4c 89 f2             	mov    %r14,%rdx
    6b23:	48 89 d9             	mov    %rbx,%rcx
    6b26:	4d 89 e0             	mov    %r12,%r8
    6b29:	e8 d2 0f 00 00       	call   7b00 <lzma_vli_encode>
    6b2e:	85 c0                	test   %eax,%eax
    6b30:	75 2f                	jne    6b61 <lzma_filter_flags_encode+0x91>
    6b32:	48 8b 0b             	mov    (%rbx),%rcx
    6b35:	49 29 cc             	sub    %rcx,%r12
    6b38:	8b 54 24 04          	mov    0x4(%rsp),%edx
    6b3c:	b8 0b 00 00 00       	mov    $0xb,%eax
    6b41:	49 39 d4             	cmp    %rdx,%r12
    6b44:	72 1b                	jb     6b61 <lzma_filter_flags_encode+0x91>
    6b46:	49 01 ce             	add    %rcx,%r14
    6b49:	4c 89 ff             	mov    %r15,%rdi
    6b4c:	4c 89 f6             	mov    %r14,%rsi
    6b4f:	e8 ac fe ff ff       	call   6a00 <lzma_properties_encode>
    6b54:	85 c0                	test   %eax,%eax
    6b56:	75 09                	jne    6b61 <lzma_filter_flags_encode+0x91>
    6b58:	8b 44 24 04          	mov    0x4(%rsp),%eax
    6b5c:	48 01 03             	add    %rax,(%rbx)
    6b5f:	31 c0                	xor    %eax,%eax
    6b61:	48 83 c4 08          	add    $0x8,%rsp
    6b65:	5b                   	pop    %rbx
    6b66:	41 5c                	pop    %r12
    6b68:	41 5e                	pop    %r14
    6b6a:	41 5f                	pop    %r15
    6b6c:	c3                   	ret    
    6b6d:	0f 1f 00             	nopl   (%rax)

0000000000006b70 <lzma_index_encoder_init>:
    6b70:	41 57                	push   %r15
    6b72:	41 56                	push   %r14
    6b74:	41 54                	push   %r12
    6b76:	53                   	push   %rbx
    6b77:	50                   	push   %rax
    6b78:	48 89 d3             	mov    %rdx,%rbx
    6b7b:	49 89 f4             	mov    %rsi,%r12
    6b7e:	49 89 fe             	mov    %rdi,%r14
    6b81:	4c 8d 3d e8 ff ff ff 	lea    -0x18(%rip),%r15        # 6b70 <lzma_index_encoder_init>
    6b88:	4c 39 7f 10          	cmp    %r15,0x10(%rdi)
    6b8c:	74 0b                	je     6b99 <lzma_index_encoder_init+0x29>
    6b8e:	4c 89 f7             	mov    %r14,%rdi
    6b91:	4c 89 e6             	mov    %r12,%rsi
    6b94:	e8 a7 c4 ff ff       	call   3040 <lzma_next_end>
    6b99:	4d 89 7e 10          	mov    %r15,0x10(%r14)
    6b9d:	48 85 db             	test   %rbx,%rbx
    6ba0:	74 67                	je     6c09 <lzma_index_encoder_init+0x99>
    6ba2:	4d 8b 3e             	mov    (%r14),%r15
    6ba5:	4d 85 ff             	test   %r15,%r15
    6ba8:	75 2e                	jne    6bd8 <lzma_index_encoder_init+0x68>
    6baa:	bf 50 01 00 00       	mov    $0x150,%edi
    6baf:	4c 89 e6             	mov    %r12,%rsi
    6bb2:	e8 09 c3 ff ff       	call   2ec0 <lzma_alloc>
    6bb7:	49 89 06             	mov    %rax,(%r14)
    6bba:	48 85 c0             	test   %rax,%rax
    6bbd:	74 5b                	je     6c1a <lzma_index_encoder_init+0xaa>
    6bbf:	49 89 c7             	mov    %rax,%r15
    6bc2:	48 8d 05 67 00 00 00 	lea    0x67(%rip),%rax        # 6c30 <index_encode>
    6bc9:	49 89 46 18          	mov    %rax,0x18(%r14)
    6bcd:	48 8d 05 dc 02 00 00 	lea    0x2dc(%rip),%rax        # 6eb0 <index_encoder_end>
    6bd4:	49 89 46 20          	mov    %rax,0x20(%r14)
    6bd8:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    6bdc:	48 89 de             	mov    %rbx,%rsi
    6bdf:	e8 8c e2 ff ff       	call   4e70 <lzma_index_iter_init>
    6be4:	41 c7 07 00 00 00 00 	movl   $0x0,(%r15)
    6beb:	49 89 5f 08          	mov    %rbx,0x8(%r15)
    6bef:	49 c7 87 40 01 00 00 	movq   $0x0,0x140(%r15)
    6bf6:	00 00 00 00 
    6bfa:	41 c7 87 48 01 00 00 	movl   $0x0,0x148(%r15)
    6c01:	00 00 00 00 
    6c05:	31 c0                	xor    %eax,%eax
    6c07:	eb 05                	jmp    6c0e <lzma_index_encoder_init+0x9e>
    6c09:	b8 0b 00 00 00       	mov    $0xb,%eax
    6c0e:	48 83 c4 08          	add    $0x8,%rsp
    6c12:	5b                   	pop    %rbx
    6c13:	41 5c                	pop    %r12
    6c15:	41 5e                	pop    %r14
    6c17:	41 5f                	pop    %r15
    6c19:	c3                   	ret    
    6c1a:	b8 05 00 00 00       	mov    $0x5,%eax
    6c1f:	eb ed                	jmp    6c0e <lzma_index_encoder_init+0x9e>
    6c21:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6c28:	0f 1f 84 00 00 00 00 
    6c2f:	00 

0000000000006c30 <index_encode>:
    6c30:	55                   	push   %rbp
    6c31:	41 57                	push   %r15
    6c33:	41 56                	push   %r14
    6c35:	41 55                	push   %r13
    6c37:	41 54                	push   %r12
    6c39:	53                   	push   %rbx
    6c3a:	48 83 ec 28          	sub    $0x28,%rsp
    6c3e:	4d 89 ce             	mov    %r9,%r14
    6c41:	48 89 fb             	mov    %rdi,%rbx
    6c44:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
    6c49:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    6c4e:	48 8b 00             	mov    (%rax),%rax
    6c51:	31 ed                	xor    %ebp,%ebp
    6c53:	48 89 c6             	mov    %rax,%rsi
    6c56:	4c 39 e0             	cmp    %r12,%rax
    6c59:	0f 83 9a 01 00 00    	jae    6df9 <index_encode+0x1c9>
    6c5f:	4c 8d ab 40 01 00 00 	lea    0x140(%rbx),%r13
    6c66:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
    6c6a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6c6f:	48 8d 8b c0 00 00 00 	lea    0xc0(%rbx),%rcx
    6c76:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    6c7b:	48 8d 8b b8 00 00 00 	lea    0xb8(%rbx),%rcx
    6c82:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    6c87:	48 89 c6             	mov    %rax,%rsi
    6c8a:	8b 03                	mov    (%rbx),%eax
    6c8c:	4c 8d 3d c9 d0 01 00 	lea    0x1d0c9(%rip),%r15        # 23d5c <lzma_footer_magic+0x176>
    6c93:	89 c1                	mov    %eax,%ecx
    6c95:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6c9a:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
    6c9f:	eb 2c                	jmp    6ccd <index_encode+0x9d>
    6ca1:	41 c6 04 36 00       	movb   $0x0,(%r14,%rsi,1)
    6ca6:	48 ff c6             	inc    %rsi
    6ca9:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6cad:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    6cb3:	b8 01 00 00 00       	mov    $0x1,%eax
    6cb8:	b9 01 00 00 00       	mov    $0x1,%ecx
    6cbd:	0f 1f 00             	nopl   (%rax)
    6cc0:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    6cc4:	4c 39 e6             	cmp    %r12,%rsi
    6cc7:	0f 83 19 01 00 00    	jae    6de6 <index_encode+0x1b6>
    6ccd:	83 f9 06             	cmp    $0x6,%ecx
    6cd0:	0f 87 4e 01 00 00    	ja     6e24 <index_encode+0x1f4>
    6cd6:	89 c9                	mov    %ecx,%ecx
    6cd8:	49 63 0c 8f          	movslq (%r15,%rcx,4),%rcx
    6cdc:	4c 01 f9             	add    %r15,%rcx
    6cdf:	ff e1                	jmp    *%rcx
    6ce1:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    6ce6:	83 f8 02             	cmp    $0x2,%eax
    6ce9:	0f 84 bc 00 00 00    	je     6dab <index_encode+0x17b>
    6cef:	e9 bc 00 00 00       	jmp    6db0 <index_encode+0x180>
    6cf4:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6cf9:	be 02 00 00 00       	mov    $0x2,%esi
    6cfe:	e8 ad e1 ff ff       	call   4eb0 <lzma_index_iter_next>
    6d03:	84 c0                	test   %al,%al
    6d05:	0f 84 9a 00 00 00    	je     6da5 <index_encode+0x175>
    6d0b:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6d0f:	e8 4c d7 ff ff       	call   4460 <lzma_index_padding_size>
    6d14:	89 c0                	mov    %eax,%eax
    6d16:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
    6d1d:	c7 03 05 00 00 00    	movl   $0x5,(%rbx)
    6d23:	b8 05 00 00 00       	mov    $0x5,%eax
    6d28:	b9 05 00 00 00       	mov    $0x5,%ecx
    6d2d:	eb 91                	jmp    6cc0 <index_encode+0x90>
    6d2f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6d33:	e8 d8 d5 ff ff       	call   4310 <lzma_index_block_count>
    6d38:	48 89 c7             	mov    %rax,%rdi
    6d3b:	4c 89 ee             	mov    %r13,%rsi
    6d3e:	4c 89 f2             	mov    %r14,%rdx
    6d41:	48 89 e9             	mov    %rbp,%rcx
    6d44:	4d 89 e0             	mov    %r12,%r8
    6d47:	e8 b4 0d 00 00       	call   7b00 <lzma_vli_encode>
    6d4c:	83 f8 01             	cmp    $0x1,%eax
    6d4f:	0f 85 95 00 00 00    	jne    6dea <index_encode+0x1ba>
    6d55:	48 c7 83 40 01 00 00 	movq   $0x0,0x140(%rbx)
    6d5c:	00 00 00 00 
    6d60:	c7 03 04 00 00 00    	movl   $0x4,(%rbx)
    6d66:	b8 04 00 00 00       	mov    $0x4,%eax
    6d6b:	b9 04 00 00 00       	mov    $0x4,%ecx
    6d70:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
    6d75:	e9 46 ff ff ff       	jmp    6cc0 <index_encode+0x90>
    6d7a:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    6d7e:	48 85 c9             	test   %rcx,%rcx
    6d81:	0f 84 a4 00 00 00    	je     6e2b <index_encode+0x1fb>
    6d87:	48 ff c9             	dec    %rcx
    6d8a:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    6d8e:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    6d92:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    6d96:	41 c6 04 36 00       	movb   $0x0,(%r14,%rsi,1)
    6d9b:	b9 05 00 00 00       	mov    $0x5,%ecx
    6da0:	e9 1b ff ff ff       	jmp    6cc0 <index_encode+0x90>
    6da5:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    6dab:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6db0:	48 8b 39             	mov    (%rcx),%rdi
    6db3:	4c 89 ee             	mov    %r13,%rsi
    6db6:	4c 89 f2             	mov    %r14,%rdx
    6db9:	48 89 e9             	mov    %rbp,%rcx
    6dbc:	4d 89 e0             	mov    %r12,%r8
    6dbf:	e8 3c 0d 00 00       	call   7b00 <lzma_vli_encode>
    6dc4:	83 f8 01             	cmp    $0x1,%eax
    6dc7:	75 21                	jne    6dea <index_encode+0x1ba>
    6dc9:	48 c7 83 40 01 00 00 	movq   $0x0,0x140(%rbx)
    6dd0:	00 00 00 00 
    6dd4:	8b 03                	mov    (%rbx),%eax
    6dd6:	ff c0                	inc    %eax
    6dd8:	89 03                	mov    %eax,(%rbx)
    6dda:	89 c1                	mov    %eax,%ecx
    6ddc:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
    6de1:	e9 da fe ff ff       	jmp    6cc0 <index_encode+0x90>
    6de6:	31 ed                	xor    %ebp,%ebp
    6de8:	eb 02                	jmp    6dec <index_encode+0x1bc>
    6dea:	89 c5                	mov    %eax,%ebp
    6dec:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    6df1:	48 8b 30             	mov    (%rax),%rsi
    6df4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6df9:	49 01 c6             	add    %rax,%r14
    6dfc:	48 29 c6             	sub    %rax,%rsi
    6dff:	8b 93 48 01 00 00    	mov    0x148(%rbx),%edx
    6e05:	4c 89 f7             	mov    %r14,%rdi
    6e08:	e8 13 3c 00 00       	call   aa20 <lzma_crc32>
    6e0d:	89 83 48 01 00 00    	mov    %eax,0x148(%rbx)
    6e13:	89 e8                	mov    %ebp,%eax
    6e15:	48 83 c4 28          	add    $0x28,%rsp
    6e19:	5b                   	pop    %rbx
    6e1a:	41 5c                	pop    %r12
    6e1c:	41 5d                	pop    %r13
    6e1e:	41 5e                	pop    %r14
    6e20:	41 5f                	pop    %r15
    6e22:	5d                   	pop    %rbp
    6e23:	c3                   	ret    
    6e24:	bd 0b 00 00 00       	mov    $0xb,%ebp
    6e29:	eb e8                	jmp    6e13 <index_encode+0x1e3>
    6e2b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6e30:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
    6e34:	48 29 c6             	sub    %rax,%rsi
    6e37:	8b 93 48 01 00 00    	mov    0x148(%rbx),%edx
    6e3d:	e8 de 3b 00 00       	call   aa20 <lzma_crc32>
    6e42:	89 83 48 01 00 00    	mov    %eax,0x148(%rbx)
    6e48:	c7 03 06 00 00 00    	movl   $0x6,(%rbx)
    6e4e:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    6e52:	49 f7 dc             	neg    %r12
    6e55:	48 ff c6             	inc    %rsi
    6e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6e5f:	00 
    6e60:	49 8d 04 34          	lea    (%r12,%rsi,1),%rax
    6e64:	48 83 f8 01          	cmp    $0x1,%rax
    6e68:	74 3c                	je     6ea6 <index_encode+0x276>
    6e6a:	8b 83 48 01 00 00    	mov    0x148(%rbx),%eax
    6e70:	48 8b 93 40 01 00 00 	mov    0x140(%rbx),%rdx
    6e77:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
    6e7e:	d3 e8                	shr    %cl,%eax
    6e80:	41 88 44 36 ff       	mov    %al,-0x1(%r14,%rsi,1)
    6e85:	48 89 75 00          	mov    %rsi,0x0(%rbp)
    6e89:	48 ff c2             	inc    %rdx
    6e8c:	48 89 93 40 01 00 00 	mov    %rdx,0x140(%rbx)
    6e93:	48 ff c6             	inc    %rsi
    6e96:	48 83 fa 04          	cmp    $0x4,%rdx
    6e9a:	72 c4                	jb     6e60 <index_encode+0x230>
    6e9c:	bd 01 00 00 00       	mov    $0x1,%ebp
    6ea1:	e9 6d ff ff ff       	jmp    6e13 <index_encode+0x1e3>
    6ea6:	31 ed                	xor    %ebp,%ebp
    6ea8:	e9 66 ff ff ff       	jmp    6e13 <index_encode+0x1e3>
    6ead:	0f 1f 00             	nopl   (%rax)

0000000000006eb0 <index_encoder_end>:
    6eb0:	e9 3b c0 ff ff       	jmp    2ef0 <lzma_free>
    6eb5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6ebc:	00 00 00 00 

0000000000006ec0 <lzma_index_encoder>:
    6ec0:	55                   	push   %rbp
    6ec1:	41 57                	push   %r15
    6ec3:	41 56                	push   %r14
    6ec5:	41 55                	push   %r13
    6ec7:	41 54                	push   %r12
    6ec9:	53                   	push   %rbx
    6eca:	50                   	push   %rax
    6ecb:	49 89 f6             	mov    %rsi,%r14
    6ece:	48 89 fb             	mov    %rdi,%rbx
    6ed1:	e8 0a c2 ff ff       	call   30e0 <lzma_strm_init>
    6ed6:	85 c0                	test   %eax,%eax
    6ed8:	0f 85 b4 00 00 00    	jne    6f92 <lzma_index_encoder+0xd2>
    6ede:	4c 8b 6b 30          	mov    0x30(%rbx),%r13
    6ee2:	4c 8b 7b 38          	mov    0x38(%rbx),%r15
    6ee6:	4c 8d 25 83 fc ff ff 	lea    -0x37d(%rip),%r12        # 6b70 <lzma_index_encoder_init>
    6eed:	4d 39 67 10          	cmp    %r12,0x10(%r15)
    6ef1:	74 0b                	je     6efe <lzma_index_encoder+0x3e>
    6ef3:	4c 89 ff             	mov    %r15,%rdi
    6ef6:	4c 89 ee             	mov    %r13,%rsi
    6ef9:	e8 42 c1 ff ff       	call   3040 <lzma_next_end>
    6efe:	4d 89 67 10          	mov    %r12,0x10(%r15)
    6f02:	4d 85 f6             	test   %r14,%r14
    6f05:	74 7c                	je     6f83 <lzma_index_encoder+0xc3>
    6f07:	4d 8b 27             	mov    (%r15),%r12
    6f0a:	4d 85 e4             	test   %r12,%r12
    6f0d:	75 2e                	jne    6f3d <lzma_index_encoder+0x7d>
    6f0f:	bf 50 01 00 00       	mov    $0x150,%edi
    6f14:	4c 89 ee             	mov    %r13,%rsi
    6f17:	e8 a4 bf ff ff       	call   2ec0 <lzma_alloc>
    6f1c:	49 89 07             	mov    %rax,(%r15)
    6f1f:	48 85 c0             	test   %rax,%rax
    6f22:	74 7d                	je     6fa1 <lzma_index_encoder+0xe1>
    6f24:	49 89 c4             	mov    %rax,%r12
    6f27:	48 8d 05 02 fd ff ff 	lea    -0x2fe(%rip),%rax        # 6c30 <index_encode>
    6f2e:	49 89 47 18          	mov    %rax,0x18(%r15)
    6f32:	48 8d 05 77 ff ff ff 	lea    -0x89(%rip),%rax        # 6eb0 <index_encoder_end>
    6f39:	49 89 47 20          	mov    %rax,0x20(%r15)
    6f3d:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    6f42:	4c 89 f6             	mov    %r14,%rsi
    6f45:	e8 26 df ff ff       	call   4e70 <lzma_index_iter_init>
    6f4a:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
    6f51:	00 
    6f52:	4d 89 74 24 08       	mov    %r14,0x8(%r12)
    6f57:	49 c7 84 24 40 01 00 	movq   $0x0,0x140(%r12)
    6f5e:	00 00 00 00 00 
    6f63:	41 c7 84 24 48 01 00 	movl   $0x0,0x148(%r12)
    6f6a:	00 00 00 00 00 
    6f6f:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6f73:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    6f77:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6f7b:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    6f7f:	31 c0                	xor    %eax,%eax
    6f81:	eb 0f                	jmp    6f92 <lzma_index_encoder+0xd2>
    6f83:	bd 0b 00 00 00       	mov    $0xb,%ebp
    6f88:	48 89 df             	mov    %rbx,%rdi
    6f8b:	e8 80 c4 ff ff       	call   3410 <lzma_end>
    6f90:	89 e8                	mov    %ebp,%eax
    6f92:	48 83 c4 08          	add    $0x8,%rsp
    6f96:	5b                   	pop    %rbx
    6f97:	41 5c                	pop    %r12
    6f99:	41 5d                	pop    %r13
    6f9b:	41 5e                	pop    %r14
    6f9d:	41 5f                	pop    %r15
    6f9f:	5d                   	pop    %rbp
    6fa0:	c3                   	ret    
    6fa1:	bd 05 00 00 00       	mov    $0x5,%ebp
    6fa6:	eb e0                	jmp    6f88 <lzma_index_encoder+0xc8>
    6fa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6faf:	00 

0000000000006fb0 <lzma_index_buffer_encode>:
    6fb0:	b8 0b 00 00 00       	mov    $0xb,%eax
    6fb5:	48 85 ff             	test   %rdi,%rdi
    6fb8:	0f 84 b0 00 00 00    	je     706e <lzma_index_buffer_encode+0xbe>
    6fbe:	48 85 f6             	test   %rsi,%rsi
    6fc1:	0f 84 a7 00 00 00    	je     706e <lzma_index_buffer_encode+0xbe>
    6fc7:	41 57                	push   %r15
    6fc9:	41 56                	push   %r14
    6fcb:	41 55                	push   %r13
    6fcd:	41 54                	push   %r12
    6fcf:	53                   	push   %rbx
    6fd0:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
    6fd7:	48 89 d3             	mov    %rdx,%rbx
    6fda:	48 85 d2             	test   %rdx,%rdx
    6fdd:	74 7f                	je     705e <lzma_index_buffer_encode+0xae>
    6fdf:	49 89 cd             	mov    %rcx,%r13
    6fe2:	4c 2b 2b             	sub    (%rbx),%r13
    6fe5:	72 77                	jb     705e <lzma_index_buffer_encode+0xae>
    6fe7:	49 89 f6             	mov    %rsi,%r14
    6fea:	49 89 cc             	mov    %rcx,%r12
    6fed:	49 89 ff             	mov    %rdi,%r15
    6ff0:	e8 3b d3 ff ff       	call   4330 <lzma_index_size>
    6ff5:	48 89 c1             	mov    %rax,%rcx
    6ff8:	b8 0a 00 00 00       	mov    $0xa,%eax
    6ffd:	49 39 cd             	cmp    %rcx,%r13
    7000:	72 5c                	jb     705e <lzma_index_buffer_encode+0xae>
    7002:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    7007:	4c 89 fe             	mov    %r15,%rsi
    700a:	e8 61 de ff ff       	call   4e70 <lzma_index_iter_init>
    700f:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
    7016:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
    701b:	48 c7 84 24 40 01 00 	movq   $0x0,0x140(%rsp)
    7022:	00 00 00 00 00 
    7027:	c7 84 24 48 01 00 00 	movl   $0x0,0x148(%rsp)
    702e:	00 00 00 00 
    7032:	4c 8b 3b             	mov    (%rbx),%r15
    7035:	48 83 ec 10          	sub    $0x10,%rsp
    7039:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    703e:	4d 89 f1             	mov    %r14,%r9
    7041:	41 54                	push   %r12
    7043:	53                   	push   %rbx
    7044:	e8 e7 fb ff ff       	call   6c30 <index_encode>
    7049:	48 83 c4 20          	add    $0x20,%rsp
    704d:	89 c1                	mov    %eax,%ecx
    704f:	31 c0                	xor    %eax,%eax
    7051:	83 f9 01             	cmp    $0x1,%ecx
    7054:	74 08                	je     705e <lzma_index_buffer_encode+0xae>
    7056:	4c 89 3b             	mov    %r15,(%rbx)
    7059:	b8 0b 00 00 00       	mov    $0xb,%eax
    705e:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
    7065:	5b                   	pop    %rbx
    7066:	41 5c                	pop    %r12
    7068:	41 5d                	pop    %r13
    706a:	41 5e                	pop    %r14
    706c:	41 5f                	pop    %r15
    706e:	c3                   	ret    
    706f:	90                   	nop

0000000000007070 <lzma_stream_buffer_bound>:
    7070:	50                   	push   %rax
    7071:	e8 3a e7 ff ff       	call   57b0 <lzma_block_buffer_bound>
    7076:	48 8d 48 30          	lea    0x30(%rax),%rcx
    707a:	31 d2                	xor    %edx,%edx
    707c:	48 be cf ff ff ff ff 	movabs $0x7fffffffffffffcf,%rsi
    7083:	ff ff 7f 
    7086:	48 39 f0             	cmp    %rsi,%rax
    7089:	48 0f 4e d1          	cmovle %rcx,%rdx
    708d:	48 85 c0             	test   %rax,%rax
    7090:	48 0f 45 c2          	cmovne %rdx,%rax
    7094:	59                   	pop    %rcx
    7095:	c3                   	ret    
    7096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    709d:	00 00 00 

00000000000070a0 <lzma_stream_buffer_encode>:
    70a0:	b8 0b 00 00 00       	mov    $0xb,%eax
    70a5:	48 85 ff             	test   %rdi,%rdi
    70a8:	0f 84 f5 01 00 00    	je     72a3 <lzma_stream_buffer_encode+0x203>
    70ae:	83 fe 0f             	cmp    $0xf,%esi
    70b1:	0f 87 ec 01 00 00    	ja     72a3 <lzma_stream_buffer_encode+0x203>
    70b7:	48 85 c9             	test   %rcx,%rcx
    70ba:	41 0f 94 c2          	sete   %r10b
    70be:	4d 85 c0             	test   %r8,%r8
    70c1:	41 0f 95 c3          	setne  %r11b
    70c5:	45 84 da             	test   %r11b,%r10b
    70c8:	0f 85 d5 01 00 00    	jne    72a3 <lzma_stream_buffer_encode+0x203>
    70ce:	4d 85 c9             	test   %r9,%r9
    70d1:	0f 84 cc 01 00 00    	je     72a3 <lzma_stream_buffer_encode+0x203>
    70d7:	55                   	push   %rbp
    70d8:	41 57                	push   %r15
    70da:	41 56                	push   %r14
    70dc:	41 55                	push   %r13
    70de:	41 54                	push   %r12
    70e0:	53                   	push   %rbx
    70e1:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
    70e8:	4c 8b ac 24 80 01 00 	mov    0x180(%rsp),%r13
    70ef:	00 
    70f0:	4d 85 ed             	test   %r13,%r13
    70f3:	0f 84 99 01 00 00    	je     7292 <lzma_stream_buffer_encode+0x1f2>
    70f9:	4c 8b bc 24 88 01 00 	mov    0x188(%rsp),%r15
    7100:	00 
    7101:	4d 39 7d 00          	cmp    %r15,0x0(%r13)
    7105:	0f 87 87 01 00 00    	ja     7292 <lzma_stream_buffer_encode+0x1f2>
    710b:	49 89 fe             	mov    %rdi,%r14
    710e:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    7113:	4c 89 c5             	mov    %r8,%rbp
    7116:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    711b:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    7120:	89 f3                	mov    %esi,%ebx
    7122:	89 f7                	mov    %esi,%edi
    7124:	e8 07 38 00 00       	call   a930 <lzma_check_is_supported>
    7129:	84 c0                	test   %al,%al
    712b:	0f 84 5c 01 00 00    	je     728d <lzma_stream_buffer_encode+0x1ed>
    7131:	4d 8b 65 00          	mov    0x0(%r13),%r12
    7135:	4c 89 f9             	mov    %r15,%rcx
    7138:	4c 29 e1             	sub    %r12,%rcx
    713b:	b8 0a 00 00 00       	mov    $0xa,%eax
    7140:	48 83 f9 19          	cmp    $0x19,%rcx
    7144:	0f 82 48 01 00 00    	jb     7292 <lzma_stream_buffer_encode+0x1f2>
    714a:	0f 57 c0             	xorps  %xmm0,%xmm0
    714d:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    7152:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    7157:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    715c:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    7163:	00 00 
    7165:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
    7169:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    716e:	4a 8d 34 20          	lea    (%rax,%r12,1),%rsi
    7172:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    7177:	e8 94 08 00 00       	call   7a10 <lzma_stream_header_encode>
    717c:	89 c1                	mov    %eax,%ecx
    717e:	b8 0b 00 00 00       	mov    $0xb,%eax
    7183:	85 c9                	test   %ecx,%ecx
    7185:	0f 85 07 01 00 00    	jne    7292 <lzma_stream_buffer_encode+0x1f2>
    718b:	49 83 c7 f4          	add    $0xfffffffffffffff4,%r15
    718f:	49 83 c4 0c          	add    $0xc,%r12
    7193:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    7198:	0f 57 c0             	xorps  %xmm0,%xmm0
    719b:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    71a0:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    71a7:	00 
    71a8:	0f 29 84 24 30 01 00 	movaps %xmm0,0x130(%rsp)
    71af:	00 
    71b0:	0f 29 84 24 20 01 00 	movaps %xmm0,0x120(%rsp)
    71b7:	00 
    71b8:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    71bf:	00 
    71c0:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
    71c7:	00 
    71c8:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
    71cf:	00 
    71d0:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    71d7:	00 
    71d8:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    71df:	00 
    71e0:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    71e7:	00 
    71e8:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    71ef:	00 
    71f0:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    71f7:	00 
    71f8:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    71ff:	00 
    7200:	89 5c 24 78          	mov    %ebx,0x78(%rsp)
    7204:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
    720b:	00 
    720c:	48 85 ed             	test   %rbp,%rbp
    720f:	0f 84 8f 00 00 00    	je     72a4 <lzma_stream_buffer_encode+0x204>
    7215:	48 89 e9             	mov    %rbp,%rcx
    7218:	4c 89 3c 24          	mov    %r15,(%rsp)
    721c:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    7221:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
    7226:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    722b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    7230:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    7235:	e8 c6 e5 ff ff       	call   5800 <lzma_block_buffer_encode>
    723a:	85 c0                	test   %eax,%eax
    723c:	75 54                	jne    7292 <lzma_stream_buffer_encode+0x1f2>
    723e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    7243:	e8 18 cd ff ff       	call   3f60 <lzma_index_init>
    7248:	48 85 c0             	test   %rax,%rax
    724b:	0f 84 cf 00 00 00    	je     7320 <lzma_stream_buffer_encode+0x280>
    7251:	49 89 c4             	mov    %rax,%r12
    7254:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
    7259:	e8 52 c4 ff ff       	call   36b0 <lzma_block_unpadded_size>
    725e:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    7265:	00 
    7266:	4c 89 e7             	mov    %r12,%rdi
    7269:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    726e:	48 89 c2             	mov    %rax,%rdx
    7271:	e8 4a d3 ff ff       	call   45c0 <lzma_index_append>
    7276:	85 c0                	test   %eax,%eax
    7278:	74 3c                	je     72b6 <lzma_stream_buffer_encode+0x216>
    727a:	4c 89 e7             	mov    %r12,%rdi
    727d:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    7282:	89 c3                	mov    %eax,%ebx
    7284:	e8 47 cf ff ff       	call   41d0 <lzma_index_end>
    7289:	89 d8                	mov    %ebx,%eax
    728b:	eb 05                	jmp    7292 <lzma_stream_buffer_encode+0x1f2>
    728d:	b8 03 00 00 00       	mov    $0x3,%eax
    7292:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
    7299:	5b                   	pop    %rbx
    729a:	41 5c                	pop    %r12
    729c:	41 5d                	pop    %r13
    729e:	41 5e                	pop    %r14
    72a0:	41 5f                	pop    %r15
    72a2:	5d                   	pop    %rbp
    72a3:	c3                   	ret    
    72a4:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    72a9:	e8 b2 cc ff ff       	call   3f60 <lzma_index_init>
    72ae:	49 89 c4             	mov    %rax,%r12
    72b1:	48 85 c0             	test   %rax,%rax
    72b4:	74 6a                	je     7320 <lzma_stream_buffer_encode+0x280>
    72b6:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    72bb:	4c 89 e7             	mov    %r12,%rdi
    72be:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    72c3:	4c 89 f9             	mov    %r15,%rcx
    72c6:	e8 e5 fc ff ff       	call   6fb0 <lzma_index_buffer_encode>
    72cb:	89 c5                	mov    %eax,%ebp
    72cd:	4c 89 e7             	mov    %r12,%rdi
    72d0:	e8 5b d0 ff ff       	call   4330 <lzma_index_size>
    72d5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    72da:	4c 89 e7             	mov    %r12,%rdi
    72dd:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    72e2:	e8 e9 ce ff ff       	call   41d0 <lzma_index_end>
    72e7:	89 e8                	mov    %ebp,%eax
    72e9:	85 ed                	test   %ebp,%ebp
    72eb:	75 a5                	jne    7292 <lzma_stream_buffer_encode+0x1f2>
    72ed:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    72f2:	48 03 74 24 20       	add    0x20(%rsp),%rsi
    72f7:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    72fc:	e8 6f 07 00 00       	call   7a70 <lzma_stream_footer_encode>
    7301:	89 c1                	mov    %eax,%ecx
    7303:	b8 0b 00 00 00       	mov    $0xb,%eax
    7308:	85 c9                	test   %ecx,%ecx
    730a:	75 86                	jne    7292 <lzma_stream_buffer_encode+0x1f2>
    730c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    7311:	48 83 c0 0c          	add    $0xc,%rax
    7315:	49 89 45 00          	mov    %rax,0x0(%r13)
    7319:	31 c0                	xor    %eax,%eax
    731b:	e9 72 ff ff ff       	jmp    7292 <lzma_stream_buffer_encode+0x1f2>
    7320:	b8 05 00 00 00       	mov    $0x5,%eax
    7325:	e9 68 ff ff ff       	jmp    7292 <lzma_stream_buffer_encode+0x1f2>
    732a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007330 <lzma_stream_encoder_init>:
    7330:	55                   	push   %rbp
    7331:	41 57                	push   %r15
    7333:	41 56                	push   %r14
    7335:	41 54                	push   %r12
    7337:	53                   	push   %rbx
    7338:	48 83 ec 40          	sub    $0x40,%rsp
    733c:	89 cd                	mov    %ecx,%ebp
    733e:	48 89 d3             	mov    %rdx,%rbx
    7341:	49 89 f6             	mov    %rsi,%r14
    7344:	49 89 ff             	mov    %rdi,%r15
    7347:	4c 8d 25 e2 ff ff ff 	lea    -0x1e(%rip),%r12        # 7330 <lzma_stream_encoder_init>
    734e:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    7352:	74 0b                	je     735f <lzma_stream_encoder_init+0x2f>
    7354:	4c 89 ff             	mov    %r15,%rdi
    7357:	4c 89 f6             	mov    %r14,%rsi
    735a:	e8 e1 bc ff ff       	call   3040 <lzma_next_end>
    735f:	4d 89 67 10          	mov    %r12,0x10(%r15)
    7363:	48 85 db             	test   %rbx,%rbx
    7366:	0f 84 58 01 00 00    	je     74c4 <lzma_stream_encoder_init+0x194>
    736c:	49 8b 07             	mov    (%r15),%rax
    736f:	48 85 c0             	test   %rax,%rax
    7372:	0f 85 a6 00 00 00    	jne    741e <lzma_stream_encoder_init+0xee>
    7378:	bf c0 05 00 00       	mov    $0x5c0,%edi
    737d:	4c 89 f6             	mov    %r14,%rsi
    7380:	e8 3b bb ff ff       	call   2ec0 <lzma_alloc>
    7385:	49 89 07             	mov    %rax,(%r15)
    7388:	48 85 c0             	test   %rax,%rax
    738b:	0f 84 3a 01 00 00    	je     74cb <lzma_stream_encoder_init+0x19b>
    7391:	48 8d 0d 48 01 00 00 	lea    0x148(%rip),%rcx        # 74e0 <stream_encode>
    7398:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    739c:	48 8d 0d 8d 04 00 00 	lea    0x48d(%rip),%rcx        # 7830 <stream_encoder_end>
    73a3:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    73a7:	48 8d 0d 02 05 00 00 	lea    0x502(%rip),%rcx        # 78b0 <stream_encoder_update>
    73ae:	49 89 4f 38          	mov    %rcx,0x38(%r15)
    73b2:	48 c7 80 18 01 00 00 	movq   $0xffffffffffffffff,0x118(%rax)
    73b9:	ff ff ff ff 
    73bd:	49 8b 07             	mov    (%r15),%rax
    73c0:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    73c7:	00 
    73c8:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    73cf:	ff 
    73d0:	0f 57 c0             	xorps  %xmm0,%xmm0
    73d3:	0f 11 40 18          	movups %xmm0,0x18(%rax)
    73d7:	0f 11 40 28          	movups %xmm0,0x28(%rax)
    73db:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    73df:	49 8b 07             	mov    (%r15),%rax
    73e2:	48 c7 80 68 01 00 00 	movq   $0x0,0x168(%rax)
    73e9:	00 00 00 00 
    73ed:	48 c7 80 70 01 00 00 	movq   $0xffffffffffffffff,0x170(%rax)
    73f4:	ff ff ff ff 
    73f8:	0f 11 80 78 01 00 00 	movups %xmm0,0x178(%rax)
    73ff:	0f 11 80 88 01 00 00 	movups %xmm0,0x188(%rax)
    7406:	0f 11 80 98 01 00 00 	movups %xmm0,0x198(%rax)
    740d:	49 8b 07             	mov    (%r15),%rax
    7410:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
    7417:	00 00 00 00 
    741b:	49 8b 07             	mov    (%r15),%rax
    741e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    7424:	49 8b 07             	mov    (%r15),%rax
    7427:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
    742e:	49 8b 07             	mov    (%r15),%rax
    7431:	89 68 50             	mov    %ebp,0x50(%rax)
    7434:	49 8b 07             	mov    (%r15),%rax
    7437:	48 8b b8 a8 01 00 00 	mov    0x1a8(%rax),%rdi
    743e:	4c 89 f6             	mov    %r14,%rsi
    7441:	e8 8a cd ff ff       	call   41d0 <lzma_index_end>
    7446:	4c 89 f7             	mov    %r14,%rdi
    7449:	e8 12 cb ff ff       	call   3f60 <lzma_index_init>
    744e:	49 8b 0f             	mov    (%r15),%rcx
    7451:	48 89 81 a8 01 00 00 	mov    %rax,0x1a8(%rcx)
    7458:	49 8b 37             	mov    (%r15),%rsi
    745b:	48 83 be a8 01 00 00 	cmpq   $0x0,0x1a8(%rsi)
    7462:	00 
    7463:	74 66                	je     74cb <lzma_stream_encoder_init+0x19b>
    7465:	0f 57 c0             	xorps  %xmm0,%xmm0
    7468:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    746d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    7472:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7476:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    747d:	00 00 
    747f:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
    7483:	48 81 c6 c0 01 00 00 	add    $0x1c0,%rsi
    748a:	48 89 e7             	mov    %rsp,%rdi
    748d:	e8 7e 05 00 00       	call   7a10 <lzma_stream_header_encode>
    7492:	85 c0                	test   %eax,%eax
    7494:	75 3a                	jne    74d0 <lzma_stream_encoder_init+0x1a0>
    7496:	49 8b 07             	mov    (%r15),%rax
    7499:	48 c7 80 b0 01 00 00 	movq   $0x0,0x1b0(%rax)
    74a0:	00 00 00 00 
    74a4:	49 8b 07             	mov    (%r15),%rax
    74a7:	48 c7 80 b8 01 00 00 	movq   $0xc,0x1b8(%rax)
    74ae:	0c 00 00 00 
    74b2:	49 8b 3f             	mov    (%r15),%rdi
    74b5:	4c 89 f6             	mov    %r14,%rsi
    74b8:	48 89 da             	mov    %rbx,%rdx
    74bb:	31 c9                	xor    %ecx,%ecx
    74bd:	e8 ee 03 00 00       	call   78b0 <stream_encoder_update>
    74c2:	eb 0c                	jmp    74d0 <lzma_stream_encoder_init+0x1a0>
    74c4:	b8 0b 00 00 00       	mov    $0xb,%eax
    74c9:	eb 05                	jmp    74d0 <lzma_stream_encoder_init+0x1a0>
    74cb:	b8 05 00 00 00       	mov    $0x5,%eax
    74d0:	48 83 c4 40          	add    $0x40,%rsp
    74d4:	5b                   	pop    %rbx
    74d5:	41 5c                	pop    %r12
    74d7:	41 5e                	pop    %r14
    74d9:	41 5f                	pop    %r15
    74db:	5d                   	pop    %rbp
    74dc:	c3                   	ret    
    74dd:	0f 1f 00             	nopl   (%rax)

00000000000074e0 <stream_encode>:
    74e0:	55                   	push   %rbp
    74e1:	41 57                	push   %r15
    74e3:	41 56                	push   %r14
    74e5:	41 55                	push   %r13
    74e7:	41 54                	push   %r12
    74e9:	53                   	push   %rbx
    74ea:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    74f1:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    74f6:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    74fb:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    7500:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    7505:	48 89 34 24          	mov    %rsi,(%rsp)
    7509:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    7510:	00 
    7511:	4c 8b b4 24 c0 00 00 	mov    0xc0(%rsp),%r14
    7518:	00 
    7519:	45 31 ed             	xor    %r13d,%r13d
    751c:	49 39 06             	cmp    %rax,(%r14)
    751f:	0f 83 e1 02 00 00    	jae    7806 <stream_encode+0x326>
    7525:	48 89 fd             	mov    %rdi,%rbp
    7528:	48 8d 87 68 01 00 00 	lea    0x168(%rdi),%rax
    752f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7534:	48 8d 87 c0 01 00 00 	lea    0x1c0(%rdi),%rax
    753b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7540:	48 8d 47 08          	lea    0x8(%rdi),%rax
    7544:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7549:	4c 8d 67 48          	lea    0x48(%rdi),%r12
    754d:	48 8d 47 58          	lea    0x58(%rdi),%rax
    7551:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7556:	48 8d 87 b0 01 00 00 	lea    0x1b0(%rdi),%rax
    755d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    7562:	8b 07                	mov    (%rdi),%eax
    7564:	4c 8d 3d 35 c8 01 00 	lea    0x1c835(%rip),%r15        # 23da0 <stream_encode.convert+0x10>
    756b:	4c 89 e3             	mov    %r12,%rbx
    756e:	eb 20                	jmp    7590 <stream_encode+0xb0>
    7570:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
    7577:	b8 01 00 00 00       	mov    $0x1,%eax
    757c:	49 89 dc             	mov    %rbx,%r12
    757f:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
    7586:	00 
    7587:	49 39 0e             	cmp    %rcx,(%r14)
    758a:	0f 83 66 02 00 00    	jae    77f6 <stream_encode+0x316>
    7590:	41 bd 0b 00 00 00    	mov    $0xb,%r13d
    7596:	83 f8 05             	cmp    $0x5,%eax
    7599:	0f 87 67 02 00 00    	ja     7806 <stream_encode+0x326>
    759f:	89 c0                	mov    %eax,%eax
    75a1:	49 63 04 87          	movslq (%r15,%rax,4),%rax
    75a5:	4c 01 f8             	add    %r15,%rax
    75a8:	ff e0                	jmp    *%rax
    75aa:	48 8b 95 b8 01 00 00 	mov    0x1b8(%rbp),%rdx
    75b1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    75b6:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    75bb:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    75c0:	4d 89 f0             	mov    %r14,%r8
    75c3:	4c 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%r9
    75ca:	00 
    75cb:	e8 50 b9 ff ff       	call   2f20 <lzma_bufcpy>
    75d0:	48 8b 85 b0 01 00 00 	mov    0x1b0(%rbp),%rax
    75d7:	48 3b 85 b8 01 00 00 	cmp    0x1b8(%rbp),%rax
    75de:	0f 82 12 02 00 00    	jb     77f6 <stream_encode+0x316>
    75e4:	8b 45 00             	mov    0x0(%rbp),%eax
    75e7:	83 f8 05             	cmp    $0x5,%eax
    75ea:	0f 84 0b 02 00 00    	je     77fb <stream_encode+0x31b>
    75f0:	49 89 dc             	mov    %rbx,%r12
    75f3:	48 c7 85 b0 01 00 00 	movq   $0x0,0x1b0(%rbp)
    75fa:	00 00 00 00 
    75fe:	ff c0                	inc    %eax
    7600:	89 45 00             	mov    %eax,0x0(%rbp)
    7603:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
    760a:	00 
    760b:	49 39 0e             	cmp    %rcx,(%r14)
    760e:	72 80                	jb     7590 <stream_encode+0xb0>
    7610:	e9 e1 01 00 00       	jmp    77f6 <stream_encode+0x316>
    7615:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    761a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    761f:	48 39 01             	cmp    %rax,(%rcx)
    7622:	0f 85 6a 01 00 00    	jne    7792 <stream_encode+0x2b2>
    7628:	83 bc 24 d0 00 00 00 	cmpl   $0x3,0xd0(%rsp)
    762f:	03 
    7630:	0f 85 e5 01 00 00    	jne    781b <stream_encode+0x33b>
    7636:	48 8b 95 a8 01 00 00 	mov    0x1a8(%rbp),%rdx
    763d:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    7642:	48 8b 34 24          	mov    (%rsp),%rsi
    7646:	e8 25 f5 ff ff       	call   6b70 <lzma_index_encoder_init>
    764b:	85 c0                	test   %eax,%eax
    764d:	0f 85 b0 01 00 00    	jne    7803 <stream_encode+0x323>
    7653:	c7 45 00 04 00 00 00 	movl   $0x4,0x0(%rbp)
    765a:	b8 04 00 00 00       	mov    $0x4,%eax
    765f:	e9 18 ff ff ff       	jmp    757c <stream_encode+0x9c>
    7664:	48 8b bd 68 01 00 00 	mov    0x168(%rbp),%rdi
    766b:	48 83 ec 08          	sub    $0x8,%rsp
    766f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7674:	31 d2                	xor    %edx,%edx
    7676:	31 c9                	xor    %ecx,%ecx
    7678:	45 31 c0             	xor    %r8d,%r8d
    767b:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    7680:	6a 00                	push   $0x0
    7682:	ff b4 24 d8 00 00 00 	push   0xd8(%rsp)
    7689:	41 56                	push   %r14
    768b:	ff 95 80 01 00 00    	call   *0x180(%rbp)
    7691:	48 83 c4 20          	add    $0x20,%rsp
    7695:	83 f8 01             	cmp    $0x1,%eax
    7698:	0f 85 65 01 00 00    	jne    7803 <stream_encode+0x323>
    769e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    76a2:	66 0f 7f 44 24 70    	movdqa %xmm0,0x70(%rsp)
    76a8:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    76ae:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    76b4:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
    76bb:	00 00 00 00 00 
    76c0:	48 8b bd a8 01 00 00 	mov    0x1a8(%rbp),%rdi
    76c7:	e8 64 cc ff ff       	call   4330 <lzma_index_size>
    76cc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    76d1:	8b 45 50             	mov    0x50(%rbp),%eax
    76d4:	89 44 24 60          	mov    %eax,0x60(%rsp)
    76d8:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    76dd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    76e2:	e8 89 03 00 00       	call   7a70 <lzma_stream_footer_encode>
    76e7:	85 c0                	test   %eax,%eax
    76e9:	0f 85 17 01 00 00    	jne    7806 <stream_encode+0x326>
    76ef:	48 c7 85 b8 01 00 00 	movq   $0xc,0x1b8(%rbp)
    76f6:	0c 00 00 00 
    76fa:	c7 45 00 05 00 00 00 	movl   $0x5,0x0(%rbp)
    7701:	b8 05 00 00 00       	mov    $0x5,%eax
    7706:	e9 71 fe ff ff       	jmp    757c <stream_encode+0x9c>
    770b:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    770f:	8b 84 24 d0 00 00 00 	mov    0xd0(%rsp),%eax
    7716:	48 8d 0d 73 c6 01 00 	lea    0x1c673(%rip),%rcx        # 23d90 <stream_encode.convert>
    771d:	8b 04 81             	mov    (%rcx,%rax,4),%eax
    7720:	48 83 ec 08          	sub    $0x8,%rsp
    7724:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    7729:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    772e:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    7733:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    7738:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    773d:	50                   	push   %rax
    773e:	ff b4 24 d8 00 00 00 	push   0xd8(%rsp)
    7745:	41 56                	push   %r14
    7747:	ff 55 20             	call   *0x20(%rbp)
    774a:	48 83 c4 20          	add    $0x20,%rsp
    774e:	41 89 c5             	mov    %eax,%r13d
    7751:	83 bc 24 d0 00 00 00 	cmpl   $0x1,0xd0(%rsp)
    7758:	01 
    7759:	0f 84 a7 00 00 00    	je     7806 <stream_encode+0x326>
    775f:	41 83 fd 01          	cmp    $0x1,%r13d
    7763:	0f 85 9d 00 00 00    	jne    7806 <stream_encode+0x326>
    7769:	48 89 df             	mov    %rbx,%rdi
    776c:	e8 3f bf ff ff       	call   36b0 <lzma_block_unpadded_size>
    7771:	48 8b 4d 60          	mov    0x60(%rbp),%rcx
    7775:	48 8b bd a8 01 00 00 	mov    0x1a8(%rbp),%rdi
    777c:	48 8b 34 24          	mov    (%rsp),%rsi
    7780:	48 89 c2             	mov    %rax,%rdx
    7783:	e8 38 ce ff ff       	call   45c0 <lzma_index_append>
    7788:	85 c0                	test   %eax,%eax
    778a:	0f 84 e0 fd ff ff    	je     7570 <stream_encode+0x90>
    7790:	eb 71                	jmp    7803 <stream_encode+0x323>
    7792:	80 7d 04 00          	cmpb   $0x0,0x4(%rbp)
    7796:	75 2e                	jne    77c6 <stream_encode+0x2e6>
    7798:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    779d:	66 0f 76 c0          	pcmpeqd %xmm0,%xmm0
    77a1:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    77a5:	4c 89 e7             	mov    %r12,%rdi
    77a8:	e8 53 ea ff ff       	call   6200 <lzma_block_header_size>
    77ad:	85 c0                	test   %eax,%eax
    77af:	75 52                	jne    7803 <stream_encode+0x323>
    77b1:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    77b6:	48 8b 34 24          	mov    (%rsp),%rsi
    77ba:	4c 89 e2             	mov    %r12,%rdx
    77bd:	e8 fe e5 ff ff       	call   5dc0 <lzma_block_encoder_init>
    77c2:	85 c0                	test   %eax,%eax
    77c4:	75 3d                	jne    7803 <stream_encode+0x323>
    77c6:	c6 45 04 00          	movb   $0x0,0x4(%rbp)
    77ca:	4c 89 e7             	mov    %r12,%rdi
    77cd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    77d2:	e8 59 eb ff ff       	call   6330 <lzma_block_header_encode>
    77d7:	85 c0                	test   %eax,%eax
    77d9:	75 2b                	jne    7806 <stream_encode+0x326>
    77db:	8b 45 4c             	mov    0x4c(%rbp),%eax
    77de:	48 89 85 b8 01 00 00 	mov    %rax,0x1b8(%rbp)
    77e5:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%rbp)
    77ec:	b8 02 00 00 00       	mov    $0x2,%eax
    77f1:	e9 86 fd ff ff       	jmp    757c <stream_encode+0x9c>
    77f6:	45 31 ed             	xor    %r13d,%r13d
    77f9:	eb 0b                	jmp    7806 <stream_encode+0x326>
    77fb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    7801:	eb 03                	jmp    7806 <stream_encode+0x326>
    7803:	41 89 c5             	mov    %eax,%r13d
    7806:	44 89 e8             	mov    %r13d,%eax
    7809:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    7810:	5b                   	pop    %rbx
    7811:	41 5c                	pop    %r12
    7813:	41 5d                	pop    %r13
    7815:	41 5e                	pop    %r14
    7817:	41 5f                	pop    %r15
    7819:	5d                   	pop    %rbp
    781a:	c3                   	ret    
    781b:	45 31 ed             	xor    %r13d,%r13d
    781e:	83 bc 24 d0 00 00 00 	cmpl   $0x0,0xd0(%rsp)
    7825:	00 
    7826:	41 0f 95 c5          	setne  %r13b
    782a:	eb da                	jmp    7806 <stream_encode+0x326>
    782c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007830 <stream_encoder_end>:
    7830:	41 57                	push   %r15
    7832:	41 56                	push   %r14
    7834:	53                   	push   %rbx
    7835:	48 89 f3             	mov    %rsi,%rbx
    7838:	49 89 fe             	mov    %rdi,%r14
    783b:	48 83 c7 08          	add    $0x8,%rdi
    783f:	e8 fc b7 ff ff       	call   3040 <lzma_next_end>
    7844:	49 8d be 68 01 00 00 	lea    0x168(%r14),%rdi
    784b:	48 89 de             	mov    %rbx,%rsi
    784e:	e8 ed b7 ff ff       	call   3040 <lzma_next_end>
    7853:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    785a:	48 89 de             	mov    %rbx,%rsi
    785d:	e8 6e c9 ff ff       	call   41d0 <lzma_index_end>
    7862:	49 83 be 18 01 00 00 	cmpq   $0xffffffffffffffff,0x118(%r14)
    7869:	ff 
    786a:	74 2a                	je     7896 <stream_encoder_end+0x66>
    786c:	4d 8d be 28 01 00 00 	lea    0x128(%r14),%r15
    7873:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    787a:	84 00 00 00 00 00 
    7880:	49 8b 7f f8          	mov    -0x8(%r15),%rdi
    7884:	48 89 de             	mov    %rbx,%rsi
    7887:	e8 64 b6 ff ff       	call   2ef0 <lzma_free>
    788c:	49 83 3f ff          	cmpq   $0xffffffffffffffff,(%r15)
    7890:	4d 8d 7f 10          	lea    0x10(%r15),%r15
    7894:	75 ea                	jne    7880 <stream_encoder_end+0x50>
    7896:	4c 89 f7             	mov    %r14,%rdi
    7899:	48 89 de             	mov    %rbx,%rsi
    789c:	5b                   	pop    %rbx
    789d:	41 5e                	pop    %r14
    789f:	41 5f                	pop    %r15
    78a1:	e9 4a b6 ff ff       	jmp    2ef0 <lzma_free>
    78a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    78ad:	00 00 00 

00000000000078b0 <stream_encoder_update>:
    78b0:	41 57                	push   %r15
    78b2:	41 56                	push   %r14
    78b4:	41 54                	push   %r12
    78b6:	53                   	push   %rbx
    78b7:	50                   	push   %rax
    78b8:	49 89 d6             	mov    %rdx,%r14
    78bb:	48 89 f3             	mov    %rsi,%rbx
    78be:	49 89 ff             	mov    %rdi,%r15
    78c1:	8b 17                	mov    (%rdi),%edx
    78c3:	83 fa 01             	cmp    $0x1,%edx
    78c6:	77 30                	ja     78f8 <stream_encoder_update+0x48>
    78c8:	41 c6 47 04 00       	movb   $0x0,0x4(%r15)
    78cd:	4d 8d 67 48          	lea    0x48(%r15),%r12
    78d1:	4d 89 77 68          	mov    %r14,0x68(%r15)
    78d5:	66 0f 76 c0          	pcmpeqd %xmm0,%xmm0
    78d9:	f3 41 0f 7f 47 58    	movdqu %xmm0,0x58(%r15)
    78df:	4c 89 e7             	mov    %r12,%rdi
    78e2:	e8 19 e9 ff ff       	call   6200 <lzma_block_header_size>
    78e7:	85 c0                	test   %eax,%eax
    78e9:	74 3c                	je     7927 <stream_encoder_update+0x77>
    78eb:	49 8d 8f 18 01 00 00 	lea    0x118(%r15),%rcx
    78f2:	49 89 4f 68          	mov    %rcx,0x68(%r15)
    78f6:	eb 4d                	jmp    7945 <stream_encoder_update+0x95>
    78f8:	b8 0b 00 00 00       	mov    $0xb,%eax
    78fd:	83 fa 03             	cmp    $0x3,%edx
    7900:	77 43                	ja     7945 <stream_encoder_update+0x95>
    7902:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    7906:	48 89 de             	mov    %rbx,%rsi
    7909:	4c 89 f2             	mov    %r14,%rdx
    790c:	41 ff 57 40          	call   *0x40(%r15)
    7910:	85 c0                	test   %eax,%eax
    7912:	75 31                	jne    7945 <stream_encoder_update+0x95>
    7914:	4d 8d a7 18 01 00 00 	lea    0x118(%r15),%r12
    791b:	49 83 bf 18 01 00 00 	cmpq   $0xffffffffffffffff,0x118(%r15)
    7922:	ff 
    7923:	75 42                	jne    7967 <stream_encoder_update+0xb7>
    7925:	eb 5f                	jmp    7986 <stream_encoder_update+0xd6>
    7927:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    792b:	48 89 de             	mov    %rbx,%rsi
    792e:	4c 89 e2             	mov    %r12,%rdx
    7931:	e8 8a e4 ff ff       	call   5dc0 <lzma_block_encoder_init>
    7936:	49 8d 8f 18 01 00 00 	lea    0x118(%r15),%rcx
    793d:	49 89 4f 68          	mov    %rcx,0x68(%r15)
    7941:	85 c0                	test   %eax,%eax
    7943:	74 0c                	je     7951 <stream_encoder_update+0xa1>
    7945:	48 83 c4 08          	add    $0x8,%rsp
    7949:	5b                   	pop    %rbx
    794a:	41 5c                	pop    %r12
    794c:	41 5e                	pop    %r14
    794e:	41 5f                	pop    %r15
    7950:	c3                   	ret    
    7951:	41 c6 47 04 01       	movb   $0x1,0x4(%r15)
    7956:	4d 8d a7 18 01 00 00 	lea    0x118(%r15),%r12
    795d:	49 83 bf 18 01 00 00 	cmpq   $0xffffffffffffffff,0x118(%r15)
    7964:	ff 
    7965:	74 1f                	je     7986 <stream_encoder_update+0xd6>
    7967:	49 81 c7 28 01 00 00 	add    $0x128,%r15
    796e:	66 90                	xchg   %ax,%ax
    7970:	49 8b 7f f8          	mov    -0x8(%r15),%rdi
    7974:	48 89 de             	mov    %rbx,%rsi
    7977:	e8 74 b5 ff ff       	call   2ef0 <lzma_free>
    797c:	49 83 3f ff          	cmpq   $0xffffffffffffffff,(%r15)
    7980:	4d 8d 7f 10          	lea    0x10(%r15),%r15
    7984:	75 ea                	jne    7970 <stream_encoder_update+0xc0>
    7986:	4c 89 f7             	mov    %r14,%rdi
    7989:	4c 89 e6             	mov    %r12,%rsi
    798c:	48 89 da             	mov    %rbx,%rdx
    798f:	48 83 c4 08          	add    $0x8,%rsp
    7993:	5b                   	pop    %rbx
    7994:	41 5c                	pop    %r12
    7996:	41 5e                	pop    %r14
    7998:	41 5f                	pop    %r15
    799a:	e9 41 be ff ff       	jmp    37e0 <lzma_filters_copy>
    799f:	90                   	nop

00000000000079a0 <lzma_stream_encoder>:
    79a0:	55                   	push   %rbp
    79a1:	41 56                	push   %r14
    79a3:	53                   	push   %rbx
    79a4:	89 d5                	mov    %edx,%ebp
    79a6:	49 89 f6             	mov    %rsi,%r14
    79a9:	48 89 fb             	mov    %rdi,%rbx
    79ac:	e8 2f b7 ff ff       	call   30e0 <lzma_strm_init>
    79b1:	85 c0                	test   %eax,%eax
    79b3:	74 05                	je     79ba <lzma_stream_encoder+0x1a>
    79b5:	5b                   	pop    %rbx
    79b6:	41 5e                	pop    %r14
    79b8:	5d                   	pop    %rbp
    79b9:	c3                   	ret    
    79ba:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    79be:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    79c2:	4c 89 f2             	mov    %r14,%rdx
    79c5:	89 e9                	mov    %ebp,%ecx
    79c7:	e8 64 f9 ff ff       	call   7330 <lzma_stream_encoder_init>
    79cc:	85 c0                	test   %eax,%eax
    79ce:	74 11                	je     79e1 <lzma_stream_encoder+0x41>
    79d0:	48 89 df             	mov    %rbx,%rdi
    79d3:	89 c3                	mov    %eax,%ebx
    79d5:	e8 36 ba ff ff       	call   3410 <lzma_end>
    79da:	89 d8                	mov    %ebx,%eax
    79dc:	5b                   	pop    %rbx
    79dd:	41 5e                	pop    %r14
    79df:	5d                   	pop    %rbp
    79e0:	c3                   	ret    
    79e1:	48 8b 43 38          	mov    0x38(%rbx),%rax
    79e5:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    79e9:	48 8b 43 38          	mov    0x38(%rbx),%rax
    79ed:	c6 40 51 01          	movb   $0x1,0x51(%rax)
    79f1:	48 8b 43 38          	mov    0x38(%rbx),%rax
    79f5:	c6 40 52 01          	movb   $0x1,0x52(%rax)
    79f9:	48 8b 43 38          	mov    0x38(%rbx),%rax
    79fd:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    7a01:	31 c0                	xor    %eax,%eax
    7a03:	5b                   	pop    %rbx
    7a04:	41 5e                	pop    %r14
    7a06:	5d                   	pop    %rbp
    7a07:	c3                   	ret    
    7a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7a0f:	00 

0000000000007a10 <lzma_stream_header_encode>:
    7a10:	b8 08 00 00 00       	mov    $0x8,%eax
    7a15:	83 3f 00             	cmpl   $0x0,(%rdi)
    7a18:	74 01                	je     7a1b <lzma_stream_header_encode+0xb>
    7a1a:	c3                   	ret    
    7a1b:	48 8d 05 be c1 01 00 	lea    0x1c1be(%rip),%rax        # 23be0 <lzma_header_magic>
    7a22:	0f b7 48 04          	movzwl 0x4(%rax),%ecx
    7a26:	66 89 4e 04          	mov    %cx,0x4(%rsi)
    7a2a:	8b 00                	mov    (%rax),%eax
    7a2c:	89 06                	mov    %eax,(%rsi)
    7a2e:	b8 0b 00 00 00       	mov    $0xb,%eax
    7a33:	83 7f 10 0f          	cmpl   $0xf,0x10(%rdi)
    7a37:	77 e1                	ja     7a1a <lzma_stream_header_encode+0xa>
    7a39:	53                   	push   %rbx
    7a3a:	48 8d 46 06          	lea    0x6(%rsi),%rax
    7a3e:	c6 46 06 00          	movb   $0x0,0x6(%rsi)
    7a42:	0f b6 4f 10          	movzbl 0x10(%rdi),%ecx
    7a46:	88 4e 07             	mov    %cl,0x7(%rsi)
    7a49:	48 89 f3             	mov    %rsi,%rbx
    7a4c:	be 02 00 00 00       	mov    $0x2,%esi
    7a51:	48 89 c7             	mov    %rax,%rdi
    7a54:	31 d2                	xor    %edx,%edx
    7a56:	e8 c5 2f 00 00       	call   aa20 <lzma_crc32>
    7a5b:	89 c1                	mov    %eax,%ecx
    7a5d:	31 c0                	xor    %eax,%eax
    7a5f:	89 4b 08             	mov    %ecx,0x8(%rbx)
    7a62:	5b                   	pop    %rbx
    7a63:	c3                   	ret    
    7a64:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    7a6b:	00 00 00 00 00 

0000000000007a70 <lzma_stream_footer_encode>:
    7a70:	b8 08 00 00 00       	mov    $0x8,%eax
    7a75:	83 3f 00             	cmpl   $0x0,(%rdi)
    7a78:	74 01                	je     7a7b <lzma_stream_footer_encode+0xb>
    7a7a:	c3                   	ret    
    7a7b:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    7a7f:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
    7a83:	49 b8 fc ff ff ff 03 	movabs $0x3fffffffc,%r8
    7a8a:	00 00 00 
    7a8d:	b8 0b 00 00 00       	mov    $0xb,%eax
    7a92:	4c 39 c2             	cmp    %r8,%rdx
    7a95:	77 e3                	ja     7a7a <lzma_stream_footer_encode+0xa>
    7a97:	89 ca                	mov    %ecx,%edx
    7a99:	83 e2 03             	and    $0x3,%edx
    7a9c:	75 dc                	jne    7a7a <lzma_stream_footer_encode+0xa>
    7a9e:	48 c1 e9 02          	shr    $0x2,%rcx
    7aa2:	ff c9                	dec    %ecx
    7aa4:	89 4e 04             	mov    %ecx,0x4(%rsi)
    7aa7:	83 7f 10 0f          	cmpl   $0xf,0x10(%rdi)
    7aab:	77 cd                	ja     7a7a <lzma_stream_footer_encode+0xa>
    7aad:	53                   	push   %rbx
    7aae:	48 8d 46 04          	lea    0x4(%rsi),%rax
    7ab2:	c6 46 08 00          	movb   $0x0,0x8(%rsi)
    7ab6:	0f b6 4f 10          	movzbl 0x10(%rdi),%ecx
    7aba:	88 4e 09             	mov    %cl,0x9(%rsi)
    7abd:	48 89 f3             	mov    %rsi,%rbx
    7ac0:	be 06 00 00 00       	mov    $0x6,%esi
    7ac5:	48 89 c7             	mov    %rax,%rdi
    7ac8:	31 d2                	xor    %edx,%edx
    7aca:	e8 51 2f 00 00       	call   aa20 <lzma_crc32>
    7acf:	89 c1                	mov    %eax,%ecx
    7ad1:	31 c0                	xor    %eax,%eax
    7ad3:	88 0b                	mov    %cl,(%rbx)
    7ad5:	88 6b 01             	mov    %ch,0x1(%rbx)
    7ad8:	89 ca                	mov    %ecx,%edx
    7ada:	c1 ea 10             	shr    $0x10,%edx
    7add:	88 53 02             	mov    %dl,0x2(%rbx)
    7ae0:	c1 e9 18             	shr    $0x18,%ecx
    7ae3:	88 4b 03             	mov    %cl,0x3(%rbx)
    7ae6:	48 8d 0d f9 c0 01 00 	lea    0x1c0f9(%rip),%rcx        # 23be6 <lzma_footer_magic>
    7aed:	0f b7 09             	movzwl (%rcx),%ecx
    7af0:	66 89 4b 0a          	mov    %cx,0xa(%rbx)
    7af4:	5b                   	pop    %rbx
    7af5:	c3                   	ret    
    7af6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7afd:	00 00 00 

0000000000007b00 <lzma_vli_encode>:
    7b00:	53                   	push   %rbx
    7b01:	48 c7 44 24 f8 00 00 	movq   $0x0,-0x8(%rsp)
    7b08:	00 00 
    7b0a:	31 c0                	xor    %eax,%eax
    7b0c:	48 85 f6             	test   %rsi,%rsi
    7b0f:	41 0f 94 c3          	sete   %r11b
    7b13:	4c 8b 11             	mov    (%rcx),%r10
    7b16:	4c 8d 4c 24 f8       	lea    -0x8(%rsp),%r9
    7b1b:	49 0f 44 f1          	cmove  %r9,%rsi
    7b1f:	4d 39 c2             	cmp    %r8,%r10
    7b22:	73 7b                	jae    7b9f <lzma_vli_encode+0x9f>
    7b24:	b8 0b 00 00 00       	mov    $0xb,%eax
    7b29:	48 85 ff             	test   %rdi,%rdi
    7b2c:	0f 88 88 00 00 00    	js     7bba <lzma_vli_encode+0xba>
    7b32:	4c 8b 1e             	mov    (%rsi),%r11
    7b35:	49 83 fb 08          	cmp    $0x8,%r11
    7b39:	0f 87 7b 00 00 00    	ja     7bba <lzma_vli_encode+0xba>
    7b3f:	42 8d 04 dd 00 00 00 	lea    0x0(,%r11,8),%eax
    7b46:	00 
    7b47:	44 29 d8             	sub    %r11d,%eax
    7b4a:	48 89 cb             	mov    %rcx,%rbx
    7b4d:	89 c1                	mov    %eax,%ecx
    7b4f:	48 d3 ef             	shr    %cl,%rdi
    7b52:	48 89 d8             	mov    %rbx,%rax
    7b55:	49 ff c3             	inc    %r11
    7b58:	49 ff c2             	inc    %r10
    7b5b:	49 f7 d8             	neg    %r8
    7b5e:	66 90                	xchg   %ax,%ax
    7b60:	48 81 ff 80 00 00 00 	cmp    $0x80,%rdi
    7b67:	72 3e                	jb     7ba7 <lzma_vli_encode+0xa7>
    7b69:	4c 89 1e             	mov    %r11,(%rsi)
    7b6c:	89 f9                	mov    %edi,%ecx
    7b6e:	80 c9 80             	or     $0x80,%cl
    7b71:	42 88 4c 12 ff       	mov    %cl,-0x1(%rdx,%r10,1)
    7b76:	48 c1 ef 07          	shr    $0x7,%rdi
    7b7a:	4c 89 10             	mov    %r10,(%rax)
    7b7d:	49 ff c3             	inc    %r11
    7b80:	4b 8d 0c 10          	lea    (%r8,%r10,1),%rcx
    7b84:	48 ff c1             	inc    %rcx
    7b87:	49 ff c2             	inc    %r10
    7b8a:	48 83 f9 01          	cmp    $0x1,%rcx
    7b8e:	75 d0                	jne    7b60 <lzma_vli_encode+0x60>
    7b90:	31 c9                	xor    %ecx,%ecx
    7b92:	4c 39 ce             	cmp    %r9,%rsi
    7b95:	b8 0b 00 00 00       	mov    $0xb,%eax
    7b9a:	0f 45 c1             	cmovne %ecx,%eax
    7b9d:	5b                   	pop    %rbx
    7b9e:	c3                   	ret    
    7b9f:	44 88 d8             	mov    %r11b,%al
    7ba2:	83 c8 0a             	or     $0xa,%eax
    7ba5:	5b                   	pop    %rbx
    7ba6:	c3                   	ret    
    7ba7:	42 88 7c 12 ff       	mov    %dil,-0x1(%rdx,%r10,1)
    7bac:	4c 89 10             	mov    %r10,(%rax)
    7baf:	4c 89 1e             	mov    %r11,(%rsi)
    7bb2:	31 c0                	xor    %eax,%eax
    7bb4:	4c 39 ce             	cmp    %r9,%rsi
    7bb7:	0f 95 c0             	setne  %al
    7bba:	5b                   	pop    %rbx
    7bbb:	c3                   	ret    
    7bbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007bc0 <lzma_alone_decoder_init>:
    7bc0:	55                   	push   %rbp
    7bc1:	41 57                	push   %r15
    7bc3:	41 56                	push   %r14
    7bc5:	41 54                	push   %r12
    7bc7:	53                   	push   %rbx
    7bc8:	89 cd                	mov    %ecx,%ebp
    7bca:	48 89 d3             	mov    %rdx,%rbx
    7bcd:	49 89 f7             	mov    %rsi,%r15
    7bd0:	49 89 fe             	mov    %rdi,%r14
    7bd3:	4c 8d 25 e6 ff ff ff 	lea    -0x1a(%rip),%r12        # 7bc0 <lzma_alone_decoder_init>
    7bda:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    7bde:	74 0b                	je     7beb <lzma_alone_decoder_init+0x2b>
    7be0:	4c 89 f7             	mov    %r14,%rdi
    7be3:	4c 89 fe             	mov    %r15,%rsi
    7be6:	e8 55 b4 ff ff       	call   3040 <lzma_next_end>
    7beb:	4d 89 66 10          	mov    %r12,0x10(%r14)
    7bef:	48 85 db             	test   %rbx,%rbx
    7bf2:	0f 84 bc 00 00 00    	je     7cb4 <lzma_alone_decoder_init+0xf4>
    7bf8:	49 8b 06             	mov    (%r14),%rax
    7bfb:	48 85 c0             	test   %rax,%rax
    7bfe:	75 5b                	jne    7c5b <lzma_alone_decoder_init+0x9b>
    7c00:	bf d8 00 00 00       	mov    $0xd8,%edi
    7c05:	4c 89 fe             	mov    %r15,%rsi
    7c08:	e8 b3 b2 ff ff       	call   2ec0 <lzma_alloc>
    7c0d:	49 89 06             	mov    %rax,(%r14)
    7c10:	48 85 c0             	test   %rax,%rax
    7c13:	0f 84 a9 00 00 00    	je     7cc2 <lzma_alone_decoder_init+0x102>
    7c19:	48 8d 0d b0 00 00 00 	lea    0xb0(%rip),%rcx        # 7cd0 <alone_decode>
    7c20:	49 89 4e 18          	mov    %rcx,0x18(%r14)
    7c24:	48 8d 0d 55 03 00 00 	lea    0x355(%rip),%rcx        # 7f80 <alone_decoder_end>
    7c2b:	49 89 4e 20          	mov    %rcx,0x20(%r14)
    7c2f:	48 8d 0d 7a 03 00 00 	lea    0x37a(%rip),%rcx        # 7fb0 <alone_decoder_memconfig>
    7c36:	49 89 4e 30          	mov    %rcx,0x30(%r14)
    7c3a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7c41:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    7c48:	ff 
    7c49:	0f 57 c0             	xorps  %xmm0,%xmm0
    7c4c:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7c50:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7c54:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    7c58:	49 8b 06             	mov    (%r14),%rax
    7c5b:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    7c62:	49 8b 06             	mov    (%r14),%rax
    7c65:	40 88 68 44          	mov    %bpl,0x44(%rax)
    7c69:	49 8b 06             	mov    (%r14),%rax
    7c6c:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    7c73:	00 
    7c74:	49 8b 06             	mov    (%r14),%rax
    7c77:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)
    7c7e:	49 8b 06             	mov    (%r14),%rax
    7c81:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
    7c88:	00 
    7c89:	49 8b 06             	mov    (%r14),%rax
    7c8c:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)
    7c93:	49 8b 06             	mov    (%r14),%rax
    7c96:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7c9d:	00 
    7c9e:	49 8b 06             	mov    (%r14),%rax
    7ca1:	48 89 58 58          	mov    %rbx,0x58(%rax)
    7ca5:	49 8b 06             	mov    (%r14),%rax
    7ca8:	48 c7 40 60 00 80 00 	movq   $0x8000,0x60(%rax)
    7caf:	00 
    7cb0:	31 c0                	xor    %eax,%eax
    7cb2:	eb 05                	jmp    7cb9 <lzma_alone_decoder_init+0xf9>
    7cb4:	b8 0b 00 00 00       	mov    $0xb,%eax
    7cb9:	5b                   	pop    %rbx
    7cba:	41 5c                	pop    %r12
    7cbc:	41 5e                	pop    %r14
    7cbe:	41 5f                	pop    %r15
    7cc0:	5d                   	pop    %rbp
    7cc1:	c3                   	ret    
    7cc2:	b8 05 00 00 00       	mov    $0x5,%eax
    7cc7:	eb f0                	jmp    7cb9 <lzma_alone_decoder_init+0xf9>
    7cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007cd0 <alone_decode>:
    7cd0:	55                   	push   %rbp
    7cd1:	41 57                	push   %r15
    7cd3:	41 56                	push   %r14
    7cd5:	41 55                	push   %r13
    7cd7:	41 54                	push   %r12
    7cd9:	53                   	push   %rbx
    7cda:	48 83 ec 58          	sub    $0x58,%rsp
    7cde:	49 89 cd             	mov    %rcx,%r13
    7ce1:	48 89 d5             	mov    %rdx,%rbp
    7ce4:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    7ce9:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    7cf0:	00 
    7cf1:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    7cf8:	00 
    7cf9:	31 c0                	xor    %eax,%eax
    7cfb:	48 39 11             	cmp    %rdx,(%rcx)
    7cfe:	73 4b                	jae    7d4b <alone_decode+0x7b>
    7d00:	4d 89 c4             	mov    %r8,%r12
    7d03:	49 89 fe             	mov    %rdi,%r14
    7d06:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    7d0b:	8b 4f 40             	mov    0x40(%rdi),%ecx
    7d0e:	83 f9 04             	cmp    $0x4,%ecx
    7d11:	75 47                	jne    7d5a <alone_decode+0x8a>
    7d13:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    7d1a:	49 8b 3e             	mov    (%r14),%rdi
    7d1d:	48 83 ec 08          	sub    $0x8,%rsp
    7d21:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    7d26:	48 89 ea             	mov    %rbp,%rdx
    7d29:	4c 89 e9             	mov    %r13,%rcx
    7d2c:	4d 89 e0             	mov    %r12,%r8
    7d2f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    7d34:	50                   	push   %rax
    7d35:	ff b4 24 a8 00 00 00 	push   0xa8(%rsp)
    7d3c:	ff b4 24 a8 00 00 00 	push   0xa8(%rsp)
    7d43:	41 ff 56 18          	call   *0x18(%r14)
    7d47:	48 83 c4 20          	add    $0x20,%rsp
    7d4b:	48 83 c4 58          	add    $0x58,%rsp
    7d4f:	5b                   	pop    %rbx
    7d50:	41 5c                	pop    %r12
    7d52:	41 5d                	pop    %r13
    7d54:	41 5e                	pop    %r14
    7d56:	41 5f                	pop    %r15
    7d58:	5d                   	pop    %rbp
    7d59:	c3                   	ret    
    7d5a:	49 8d 46 68          	lea    0x68(%r14),%rax
    7d5e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7d63:	4c 8d 3d 4e c0 01 00 	lea    0x1c04e(%rip),%r15        # 23db8 <stream_encode.convert+0x28>
    7d6a:	eb 21                	jmp    7d8d <alone_decode+0xbd>
    7d6c:	49 c7 46 48 00 00 00 	movq   $0x0,0x48(%r14)
    7d73:	00 
    7d74:	41 c7 46 40 02 00 00 	movl   $0x2,0x40(%r14)
    7d7b:	00 
    7d7c:	b9 02 00 00 00       	mov    $0x2,%ecx
    7d81:	48 ff c3             	inc    %rbx
    7d84:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7d88:	83 f9 04             	cmp    $0x4,%ecx
    7d8b:	74 86                	je     7d13 <alone_decode+0x43>
    7d8d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7d91:	4c 39 e3             	cmp    %r12,%rbx
    7d94:	0f 83 c5 01 00 00    	jae    7f5f <alone_decode+0x28f>
    7d9a:	83 f9 03             	cmp    $0x3,%ecx
    7d9d:	0f 87 cd 01 00 00    	ja     7f70 <alone_decode+0x2a0>
    7da3:	89 c8                	mov    %ecx,%eax
    7da5:	49 63 04 87          	movslq (%r15,%rax,4),%rax
    7da9:	4c 01 f8             	add    %r15,%rax
    7dac:	ff e0                	jmp    *%rax
    7dae:	0f b6 74 1d 00       	movzbl 0x0(%rbp,%rbx,1),%esi
    7db3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7db8:	e8 83 17 01 00       	call   19540 <lzma_lzma_lclppb_decode>
    7dbd:	84 c0                	test   %al,%al
    7dbf:	0f 85 90 01 00 00    	jne    7f55 <alone_decode+0x285>
    7dc5:	41 c7 46 40 01 00 00 	movl   $0x1,0x40(%r14)
    7dcc:	00 
    7dcd:	48 ff c3             	inc    %rbx
    7dd0:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7dd4:	b9 01 00 00 00       	mov    $0x1,%ecx
    7dd9:	eb ad                	jmp    7d88 <alone_decode+0xb8>
    7ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7de0:	0f b6 44 1d 00       	movzbl 0x0(%rbp,%rbx,1),%eax
    7de5:	49 8b 56 48          	mov    0x48(%r14),%rdx
    7de9:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
    7df0:	48 d3 e0             	shl    %cl,%rax
    7df3:	49 0b 46 50          	or     0x50(%r14),%rax
    7df7:	49 89 46 50          	mov    %rax,0x50(%r14)
    7dfb:	48 ff c3             	inc    %rbx
    7dfe:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7e02:	48 ff c2             	inc    %rdx
    7e05:	49 89 56 48          	mov    %rdx,0x48(%r14)
    7e09:	b9 02 00 00 00       	mov    $0x2,%ecx
    7e0e:	48 83 fa 08          	cmp    $0x8,%rdx
    7e12:	0f 82 70 ff ff ff    	jb     7d88 <alone_decode+0xb8>
    7e18:	41 80 7e 44 00       	cmpb   $0x0,0x44(%r14)
    7e1d:	74 19                	je     7e38 <alone_decode+0x168>
    7e1f:	48 b9 ff ff ff ff bf 	movabs $0xffffffbfffffffff,%rcx
    7e26:	ff ff ff 
    7e29:	48 01 c8             	add    %rcx,%rax
    7e2c:	48 ff c0             	inc    %rax
    7e2f:	48 39 c8             	cmp    %rcx,%rax
    7e32:	0f 82 1d 01 00 00    	jb     7f55 <alone_decode+0x285>
    7e38:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7e3d:	e8 5e 17 01 00       	call   195a0 <lzma_lzma_decoder_memusage>
    7e42:	48 05 00 80 00 00    	add    $0x8000,%rax
    7e48:	49 89 46 60          	mov    %rax,0x60(%r14)
    7e4c:	49 c7 46 48 00 00 00 	movq   $0x0,0x48(%r14)
    7e53:	00 
    7e54:	41 c7 46 40 03 00 00 	movl   $0x3,0x40(%r14)
    7e5b:	00 
    7e5c:	eb 06                	jmp    7e64 <alone_decode+0x194>
    7e5e:	66 90                	xchg   %ax,%ax
    7e60:	49 8b 46 60          	mov    0x60(%r14),%rax
    7e64:	49 3b 46 58          	cmp    0x58(%r14),%rax
    7e68:	0f 87 f8 00 00 00    	ja     7f66 <alone_decode+0x296>
    7e6e:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7e75:	00 00 
    7e77:	48 8d 05 e2 15 01 00 	lea    0x115e2(%rip),%rax        # 19460 <lzma_lzma_decoder_init>
    7e7e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7e83:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7e88:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    7e8d:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
    7e92:	0f 57 c0             	xorps  %xmm0,%xmm0
    7e95:	0f 11 00             	movups %xmm0,(%rax)
    7e98:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7e9f:	00 
    7ea0:	4c 89 f7             	mov    %r14,%rdi
    7ea3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    7ea8:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    7ead:	e8 ce b0 ff ff       	call   2f80 <lzma_next_filter_init>
    7eb2:	85 c0                	test   %eax,%eax
    7eb4:	0f 85 91 fe ff ff    	jne    7d4b <alone_decode+0x7b>
    7eba:	49 8b 3e             	mov    (%r14),%rdi
    7ebd:	49 8b 76 50          	mov    0x50(%r14),%rsi
    7ec1:	e8 5a 72 00 00       	call   f120 <lzma_lz_decoder_uncompressed>
    7ec6:	41 c7 46 40 04 00 00 	movl   $0x4,0x40(%r14)
    7ecd:	00 
    7ece:	b9 04 00 00 00       	mov    $0x4,%ecx
    7ed3:	e9 b0 fe ff ff       	jmp    7d88 <alone_decode+0xb8>
    7ed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7edf:	00 
    7ee0:	0f b6 44 1d 00       	movzbl 0x0(%rbp,%rbx,1),%eax
    7ee5:	49 8b 56 48          	mov    0x48(%r14),%rdx
    7ee9:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
    7ef0:	48 d3 e0             	shl    %cl,%rax
    7ef3:	41 0b 46 68          	or     0x68(%r14),%eax
    7ef7:	41 89 46 68          	mov    %eax,0x68(%r14)
    7efb:	48 ff c2             	inc    %rdx
    7efe:	49 89 56 48          	mov    %rdx,0x48(%r14)
    7f02:	b9 01 00 00 00       	mov    $0x1,%ecx
    7f07:	48 83 fa 04          	cmp    $0x4,%rdx
    7f0b:	0f 85 70 fe ff ff    	jne    7d81 <alone_decode+0xb1>
    7f11:	41 80 7e 44 00       	cmpb   $0x0,0x44(%r14)
    7f16:	0f 84 50 fe ff ff    	je     7d6c <alone_decode+0x9c>
    7f1c:	83 f8 ff             	cmp    $0xffffffff,%eax
    7f1f:	0f 84 47 fe ff ff    	je     7d6c <alone_decode+0x9c>
    7f25:	8d 48 ff             	lea    -0x1(%rax),%ecx
    7f28:	89 ca                	mov    %ecx,%edx
    7f2a:	c1 ea 02             	shr    $0x2,%edx
    7f2d:	09 ca                	or     %ecx,%edx
    7f2f:	89 d1                	mov    %edx,%ecx
    7f31:	c1 e9 03             	shr    $0x3,%ecx
    7f34:	09 d1                	or     %edx,%ecx
    7f36:	89 ca                	mov    %ecx,%edx
    7f38:	c1 ea 04             	shr    $0x4,%edx
    7f3b:	09 ca                	or     %ecx,%edx
    7f3d:	89 d1                	mov    %edx,%ecx
    7f3f:	c1 e9 08             	shr    $0x8,%ecx
    7f42:	09 d1                	or     %edx,%ecx
    7f44:	89 ca                	mov    %ecx,%edx
    7f46:	c1 ea 10             	shr    $0x10,%edx
    7f49:	09 ca                	or     %ecx,%edx
    7f4b:	ff c2                	inc    %edx
    7f4d:	39 c2                	cmp    %eax,%edx
    7f4f:	0f 84 17 fe ff ff    	je     7d6c <alone_decode+0x9c>
    7f55:	b8 07 00 00 00       	mov    $0x7,%eax
    7f5a:	e9 ec fd ff ff       	jmp    7d4b <alone_decode+0x7b>
    7f5f:	31 c0                	xor    %eax,%eax
    7f61:	e9 e5 fd ff ff       	jmp    7d4b <alone_decode+0x7b>
    7f66:	b8 06 00 00 00       	mov    $0x6,%eax
    7f6b:	e9 db fd ff ff       	jmp    7d4b <alone_decode+0x7b>
    7f70:	b8 0b 00 00 00       	mov    $0xb,%eax
    7f75:	e9 d1 fd ff ff       	jmp    7d4b <alone_decode+0x7b>
    7f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007f80 <alone_decoder_end>:
    7f80:	41 56                	push   %r14
    7f82:	53                   	push   %rbx
    7f83:	50                   	push   %rax
    7f84:	48 89 f3             	mov    %rsi,%rbx
    7f87:	49 89 fe             	mov    %rdi,%r14
    7f8a:	e8 b1 b0 ff ff       	call   3040 <lzma_next_end>
    7f8f:	4c 89 f7             	mov    %r14,%rdi
    7f92:	48 89 de             	mov    %rbx,%rsi
    7f95:	48 83 c4 08          	add    $0x8,%rsp
    7f99:	5b                   	pop    %rbx
    7f9a:	41 5e                	pop    %r14
    7f9c:	e9 4f af ff ff       	jmp    2ef0 <lzma_free>
    7fa1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7fa8:	0f 1f 84 00 00 00 00 
    7faf:	00 

0000000000007fb0 <alone_decoder_memconfig>:
    7fb0:	48 8b 47 60          	mov    0x60(%rdi),%rax
    7fb4:	48 89 06             	mov    %rax,(%rsi)
    7fb7:	48 8b 47 58          	mov    0x58(%rdi),%rax
    7fbb:	48 89 02             	mov    %rax,(%rdx)
    7fbe:	31 c0                	xor    %eax,%eax
    7fc0:	48 85 c9             	test   %rcx,%rcx
    7fc3:	74 11                	je     7fd6 <alone_decoder_memconfig+0x26>
    7fc5:	b8 06 00 00 00       	mov    $0x6,%eax
    7fca:	48 39 4f 60          	cmp    %rcx,0x60(%rdi)
    7fce:	77 06                	ja     7fd6 <alone_decoder_memconfig+0x26>
    7fd0:	48 89 4f 58          	mov    %rcx,0x58(%rdi)
    7fd4:	31 c0                	xor    %eax,%eax
    7fd6:	c3                   	ret    
    7fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7fde:	00 00 

0000000000007fe0 <lzma_alone_decoder>:
    7fe0:	55                   	push   %rbp
    7fe1:	41 57                	push   %r15
    7fe3:	41 56                	push   %r14
    7fe5:	41 55                	push   %r13
    7fe7:	41 54                	push   %r12
    7fe9:	53                   	push   %rbx
    7fea:	50                   	push   %rax
    7feb:	49 89 f6             	mov    %rsi,%r14
    7fee:	48 89 fb             	mov    %rdi,%rbx
    7ff1:	e8 ea b0 ff ff       	call   30e0 <lzma_strm_init>
    7ff6:	85 c0                	test   %eax,%eax
    7ff8:	0f 85 08 01 00 00    	jne    8106 <lzma_alone_decoder+0x126>
    7ffe:	4c 8b 63 30          	mov    0x30(%rbx),%r12
    8002:	4c 8b 7b 38          	mov    0x38(%rbx),%r15
    8006:	4c 8d 2d b3 fb ff ff 	lea    -0x44d(%rip),%r13        # 7bc0 <lzma_alone_decoder_init>
    800d:	4d 39 6f 10          	cmp    %r13,0x10(%r15)
    8011:	74 0b                	je     801e <lzma_alone_decoder+0x3e>
    8013:	4c 89 ff             	mov    %r15,%rdi
    8016:	4c 89 e6             	mov    %r12,%rsi
    8019:	e8 22 b0 ff ff       	call   3040 <lzma_next_end>
    801e:	4d 89 6f 10          	mov    %r13,0x10(%r15)
    8022:	4d 85 f6             	test   %r14,%r14
    8025:	0f 84 cc 00 00 00    	je     80f7 <lzma_alone_decoder+0x117>
    802b:	49 8b 07             	mov    (%r15),%rax
    802e:	48 85 c0             	test   %rax,%rax
    8031:	75 5b                	jne    808e <lzma_alone_decoder+0xae>
    8033:	bf d8 00 00 00       	mov    $0xd8,%edi
    8038:	4c 89 e6             	mov    %r12,%rsi
    803b:	e8 80 ae ff ff       	call   2ec0 <lzma_alloc>
    8040:	49 89 07             	mov    %rax,(%r15)
    8043:	48 85 c0             	test   %rax,%rax
    8046:	0f 84 c9 00 00 00    	je     8115 <lzma_alone_decoder+0x135>
    804c:	48 8d 0d 7d fc ff ff 	lea    -0x383(%rip),%rcx        # 7cd0 <alone_decode>
    8053:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    8057:	48 8d 0d 22 ff ff ff 	lea    -0xde(%rip),%rcx        # 7f80 <alone_decoder_end>
    805e:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    8062:	48 8d 0d 47 ff ff ff 	lea    -0xb9(%rip),%rcx        # 7fb0 <alone_decoder_memconfig>
    8069:	49 89 4f 30          	mov    %rcx,0x30(%r15)
    806d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8074:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    807b:	ff 
    807c:	0f 57 c0             	xorps  %xmm0,%xmm0
    807f:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    8083:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    8087:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    808b:	49 8b 07             	mov    (%r15),%rax
    808e:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    8095:	49 8b 07             	mov    (%r15),%rax
    8098:	c6 40 44 00          	movb   $0x0,0x44(%rax)
    809c:	49 8b 07             	mov    (%r15),%rax
    809f:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    80a6:	00 
    80a7:	49 8b 07             	mov    (%r15),%rax
    80aa:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%rax)
    80b1:	49 8b 07             	mov    (%r15),%rax
    80b4:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
    80bb:	00 
    80bc:	49 8b 07             	mov    (%r15),%rax
    80bf:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%rax)
    80c6:	49 8b 07             	mov    (%r15),%rax
    80c9:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    80d0:	00 
    80d1:	49 8b 07             	mov    (%r15),%rax
    80d4:	4c 89 70 58          	mov    %r14,0x58(%rax)
    80d8:	49 8b 07             	mov    (%r15),%rax
    80db:	48 c7 40 60 00 80 00 	movq   $0x8000,0x60(%rax)
    80e2:	00 
    80e3:	48 8b 43 38          	mov    0x38(%rbx),%rax
    80e7:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    80eb:	48 8b 43 38          	mov    0x38(%rbx),%rax
    80ef:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    80f3:	31 c0                	xor    %eax,%eax
    80f5:	eb 0f                	jmp    8106 <lzma_alone_decoder+0x126>
    80f7:	bd 0b 00 00 00       	mov    $0xb,%ebp
    80fc:	48 89 df             	mov    %rbx,%rdi
    80ff:	e8 0c b3 ff ff       	call   3410 <lzma_end>
    8104:	89 e8                	mov    %ebp,%eax
    8106:	48 83 c4 08          	add    $0x8,%rsp
    810a:	5b                   	pop    %rbx
    810b:	41 5c                	pop    %r12
    810d:	41 5d                	pop    %r13
    810f:	41 5e                	pop    %r14
    8111:	41 5f                	pop    %r15
    8113:	5d                   	pop    %rbp
    8114:	c3                   	ret    
    8115:	bd 05 00 00 00       	mov    $0x5,%ebp
    811a:	eb e0                	jmp    80fc <lzma_alone_decoder+0x11c>
    811c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008120 <lzma_auto_decoder>:
    8120:	55                   	push   %rbp
    8121:	41 57                	push   %r15
    8123:	41 56                	push   %r14
    8125:	41 55                	push   %r13
    8127:	41 54                	push   %r12
    8129:	53                   	push   %rbx
    812a:	50                   	push   %rax
    812b:	89 d5                	mov    %edx,%ebp
    812d:	49 89 f6             	mov    %rsi,%r14
    8130:	48 89 fb             	mov    %rdi,%rbx
    8133:	e8 a8 af ff ff       	call   30e0 <lzma_strm_init>
    8138:	85 c0                	test   %eax,%eax
    813a:	0f 85 e2 00 00 00    	jne    8222 <lzma_auto_decoder+0x102>
    8140:	4c 8b 63 30          	mov    0x30(%rbx),%r12
    8144:	4c 8b 7b 38          	mov    0x38(%rbx),%r15
    8148:	4c 8d 2d f1 00 00 00 	lea    0xf1(%rip),%r13        # 8240 <auto_decoder_init>
    814f:	4d 39 6f 10          	cmp    %r13,0x10(%r15)
    8153:	74 0b                	je     8160 <lzma_auto_decoder+0x40>
    8155:	4c 89 ff             	mov    %r15,%rdi
    8158:	4c 89 e6             	mov    %r12,%rsi
    815b:	e8 e0 ae ff ff       	call   3040 <lzma_next_end>
    8160:	4d 89 6f 10          	mov    %r13,0x10(%r15)
    8164:	4d 85 f6             	test   %r14,%r14
    8167:	0f 84 a4 00 00 00    	je     8211 <lzma_auto_decoder+0xf1>
    816d:	b8 08 00 00 00       	mov    $0x8,%eax
    8172:	83 fd 0f             	cmp    $0xf,%ebp
    8175:	0f 87 9b 00 00 00    	ja     8216 <lzma_auto_decoder+0xf6>
    817b:	49 8b 07             	mov    (%r15),%rax
    817e:	48 85 c0             	test   %rax,%rax
    8181:	75 66                	jne    81e9 <lzma_auto_decoder+0xc9>
    8183:	bf 50 00 00 00       	mov    $0x50,%edi
    8188:	4c 89 e6             	mov    %r12,%rsi
    818b:	e8 30 ad ff ff       	call   2ec0 <lzma_alloc>
    8190:	49 89 07             	mov    %rax,(%r15)
    8193:	48 85 c0             	test   %rax,%rax
    8196:	0f 84 95 00 00 00    	je     8231 <lzma_auto_decoder+0x111>
    819c:	48 8d 0d 7d 01 00 00 	lea    0x17d(%rip),%rcx        # 8320 <auto_decode>
    81a3:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    81a7:	48 8d 0d 92 02 00 00 	lea    0x292(%rip),%rcx        # 8440 <auto_decoder_end>
    81ae:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    81b2:	48 8d 0d b7 02 00 00 	lea    0x2b7(%rip),%rcx        # 8470 <auto_decoder_get_check>
    81b9:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    81bd:	48 8d 0d cc 02 00 00 	lea    0x2cc(%rip),%rcx        # 8490 <auto_decoder_memconfig>
    81c4:	49 89 4f 30          	mov    %rcx,0x30(%r15)
    81c8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    81cf:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    81d6:	ff 
    81d7:	0f 57 c0             	xorps  %xmm0,%xmm0
    81da:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    81de:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    81e2:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    81e6:	49 8b 07             	mov    (%r15),%rax
    81e9:	4c 89 70 40          	mov    %r14,0x40(%rax)
    81ed:	49 8b 07             	mov    (%r15),%rax
    81f0:	89 68 48             	mov    %ebp,0x48(%rax)
    81f3:	49 8b 07             	mov    (%r15),%rax
    81f6:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%rax)
    81fd:	48 8b 43 38          	mov    0x38(%rbx),%rax
    8201:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    8205:	48 8b 43 38          	mov    0x38(%rbx),%rax
    8209:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    820d:	31 c0                	xor    %eax,%eax
    820f:	eb 11                	jmp    8222 <lzma_auto_decoder+0x102>
    8211:	b8 0b 00 00 00       	mov    $0xb,%eax
    8216:	48 89 df             	mov    %rbx,%rdi
    8219:	89 c3                	mov    %eax,%ebx
    821b:	e8 f0 b1 ff ff       	call   3410 <lzma_end>
    8220:	89 d8                	mov    %ebx,%eax
    8222:	48 83 c4 08          	add    $0x8,%rsp
    8226:	5b                   	pop    %rbx
    8227:	41 5c                	pop    %r12
    8229:	41 5d                	pop    %r13
    822b:	41 5e                	pop    %r14
    822d:	41 5f                	pop    %r15
    822f:	5d                   	pop    %rbp
    8230:	c3                   	ret    
    8231:	b8 05 00 00 00       	mov    $0x5,%eax
    8236:	eb de                	jmp    8216 <lzma_auto_decoder+0xf6>
    8238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    823f:	00 

0000000000008240 <auto_decoder_init>:
    8240:	41 57                	push   %r15
    8242:	41 56                	push   %r14
    8244:	41 55                	push   %r13
    8246:	41 54                	push   %r12
    8248:	53                   	push   %rbx
    8249:	89 cb                	mov    %ecx,%ebx
    824b:	49 89 d7             	mov    %rdx,%r15
    824e:	49 89 f4             	mov    %rsi,%r12
    8251:	49 89 fe             	mov    %rdi,%r14
    8254:	4c 8d 2d e5 ff ff ff 	lea    -0x1b(%rip),%r13        # 8240 <auto_decoder_init>
    825b:	4c 39 6f 10          	cmp    %r13,0x10(%rdi)
    825f:	74 0b                	je     826c <auto_decoder_init+0x2c>
    8261:	4c 89 f7             	mov    %r14,%rdi
    8264:	4c 89 e6             	mov    %r12,%rsi
    8267:	e8 d4 ad ff ff       	call   3040 <lzma_next_end>
    826c:	4d 89 6e 10          	mov    %r13,0x10(%r14)
    8270:	4d 85 ff             	test   %r15,%r15
    8273:	0f 84 90 00 00 00    	je     8309 <auto_decoder_init+0xc9>
    8279:	b8 08 00 00 00       	mov    $0x8,%eax
    827e:	83 fb 0f             	cmp    $0xf,%ebx
    8281:	0f 87 87 00 00 00    	ja     830e <auto_decoder_init+0xce>
    8287:	49 8b 06             	mov    (%r14),%rax
    828a:	48 85 c0             	test   %rax,%rax
    828d:	75 62                	jne    82f1 <auto_decoder_init+0xb1>
    828f:	bf 50 00 00 00       	mov    $0x50,%edi
    8294:	4c 89 e6             	mov    %r12,%rsi
    8297:	e8 24 ac ff ff       	call   2ec0 <lzma_alloc>
    829c:	49 89 06             	mov    %rax,(%r14)
    829f:	48 85 c0             	test   %rax,%rax
    82a2:	74 74                	je     8318 <auto_decoder_init+0xd8>
    82a4:	48 8d 0d 75 00 00 00 	lea    0x75(%rip),%rcx        # 8320 <auto_decode>
    82ab:	49 89 4e 18          	mov    %rcx,0x18(%r14)
    82af:	48 8d 0d 8a 01 00 00 	lea    0x18a(%rip),%rcx        # 8440 <auto_decoder_end>
    82b6:	49 89 4e 20          	mov    %rcx,0x20(%r14)
    82ba:	48 8d 0d af 01 00 00 	lea    0x1af(%rip),%rcx        # 8470 <auto_decoder_get_check>
    82c1:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    82c5:	48 8d 0d c4 01 00 00 	lea    0x1c4(%rip),%rcx        # 8490 <auto_decoder_memconfig>
    82cc:	49 89 4e 30          	mov    %rcx,0x30(%r14)
    82d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    82d7:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    82de:	ff 
    82df:	0f 57 c0             	xorps  %xmm0,%xmm0
    82e2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    82e6:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    82ea:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    82ee:	49 8b 06             	mov    (%r14),%rax
    82f1:	4c 89 78 40          	mov    %r15,0x40(%rax)
    82f5:	49 8b 06             	mov    (%r14),%rax
    82f8:	89 58 48             	mov    %ebx,0x48(%rax)
    82fb:	49 8b 06             	mov    (%r14),%rax
    82fe:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%rax)
    8305:	31 c0                	xor    %eax,%eax
    8307:	eb 05                	jmp    830e <auto_decoder_init+0xce>
    8309:	b8 0b 00 00 00       	mov    $0xb,%eax
    830e:	5b                   	pop    %rbx
    830f:	41 5c                	pop    %r12
    8311:	41 5d                	pop    %r13
    8313:	41 5e                	pop    %r14
    8315:	41 5f                	pop    %r15
    8317:	c3                   	ret    
    8318:	b8 05 00 00 00       	mov    $0x5,%eax
    831d:	eb ef                	jmp    830e <auto_decoder_init+0xce>
    831f:	90                   	nop

0000000000008320 <auto_decode>:
    8320:	55                   	push   %rbp
    8321:	41 57                	push   %r15
    8323:	41 56                	push   %r14
    8325:	41 55                	push   %r13
    8327:	41 54                	push   %r12
    8329:	53                   	push   %rbx
    832a:	50                   	push   %rax
    832b:	4c 89 c3             	mov    %r8,%rbx
    832e:	49 89 ce             	mov    %rcx,%r14
    8331:	44 8b 6c 24 50       	mov    0x50(%rsp),%r13d
    8336:	8b 4f 4c             	mov    0x4c(%rdi),%ecx
    8339:	83 f9 02             	cmp    $0x2,%ecx
    833c:	0f 84 91 00 00 00    	je     83d3 <auto_decode+0xb3>
    8342:	49 89 ff             	mov    %rdi,%r15
    8345:	83 f9 01             	cmp    $0x1,%ecx
    8348:	74 51                	je     839b <auto_decode+0x7b>
    834a:	b8 0b 00 00 00       	mov    $0xb,%eax
    834f:	85 c9                	test   %ecx,%ecx
    8351:	0f 85 8f 00 00 00    	jne    83e6 <auto_decode+0xc6>
    8357:	49 8b 0e             	mov    (%r14),%rcx
    835a:	31 c0                	xor    %eax,%eax
    835c:	48 39 d9             	cmp    %rbx,%rcx
    835f:	0f 83 81 00 00 00    	jae    83e6 <auto_decode+0xc6>
    8365:	4c 89 0c 24          	mov    %r9,(%rsp)
    8369:	41 c7 47 4c 01 00 00 	movl   $0x1,0x4c(%r15)
    8370:	00 
    8371:	48 89 d5             	mov    %rdx,%rbp
    8374:	80 3c 0a fd          	cmpb   $0xfd,(%rdx,%rcx,1)
    8378:	49 8b 57 40          	mov    0x40(%r15),%rdx
    837c:	75 77                	jne    83f5 <auto_decode+0xd5>
    837e:	41 8b 4f 48          	mov    0x48(%r15),%ecx
    8382:	4c 89 ff             	mov    %r15,%rdi
    8385:	49 89 f4             	mov    %rsi,%r12
    8388:	e8 d3 1b 00 00       	call   9f60 <lzma_stream_decoder_init>
    838d:	4c 89 e6             	mov    %r12,%rsi
    8390:	85 c0                	test   %eax,%eax
    8392:	4c 8b 0c 24          	mov    (%rsp),%r9
    8396:	48 89 ea             	mov    %rbp,%rdx
    8399:	75 4b                	jne    83e6 <auto_decode+0xc6>
    839b:	49 8b 3f             	mov    (%r15),%rdi
    839e:	48 83 ec 08          	sub    $0x8,%rsp
    83a2:	4c 89 f1             	mov    %r14,%rcx
    83a5:	49 89 d8             	mov    %rbx,%r8
    83a8:	41 55                	push   %r13
    83aa:	ff 74 24 58          	push   0x58(%rsp)
    83ae:	ff 74 24 58          	push   0x58(%rsp)
    83b2:	41 ff 57 18          	call   *0x18(%r15)
    83b6:	48 83 c4 20          	add    $0x20,%rsp
    83ba:	83 f8 01             	cmp    $0x1,%eax
    83bd:	75 27                	jne    83e6 <auto_decode+0xc6>
    83bf:	b8 01 00 00 00       	mov    $0x1,%eax
    83c4:	41 f6 47 48 08       	testb  $0x8,0x48(%r15)
    83c9:	74 1b                	je     83e6 <auto_decode+0xc6>
    83cb:	41 c7 47 4c 02 00 00 	movl   $0x2,0x4c(%r15)
    83d2:	00 
    83d3:	b8 09 00 00 00       	mov    $0x9,%eax
    83d8:	49 39 1e             	cmp    %rbx,(%r14)
    83db:	72 09                	jb     83e6 <auto_decode+0xc6>
    83dd:	31 c0                	xor    %eax,%eax
    83df:	41 83 fd 03          	cmp    $0x3,%r13d
    83e3:	0f 94 c0             	sete   %al
    83e6:	48 83 c4 08          	add    $0x8,%rsp
    83ea:	5b                   	pop    %rbx
    83eb:	41 5c                	pop    %r12
    83ed:	41 5d                	pop    %r13
    83ef:	41 5e                	pop    %r14
    83f1:	41 5f                	pop    %r15
    83f3:	5d                   	pop    %rbp
    83f4:	c3                   	ret    
    83f5:	4c 89 ff             	mov    %r15,%rdi
    83f8:	49 89 f4             	mov    %rsi,%r12
    83fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    8400:	e8 bb f7 ff ff       	call   7bc0 <lzma_alone_decoder_init>
    8405:	85 c0                	test   %eax,%eax
    8407:	4c 8b 0c 24          	mov    (%rsp),%r9
    840b:	75 d9                	jne    83e6 <auto_decode+0xc6>
    840d:	41 8b 4f 48          	mov    0x48(%r15),%ecx
    8411:	b8 02 00 00 00       	mov    $0x2,%eax
    8416:	f6 c1 01             	test   $0x1,%cl
    8419:	75 cb                	jne    83e6 <auto_decode+0xc6>
    841b:	4c 89 e6             	mov    %r12,%rsi
    841e:	48 89 ea             	mov    %rbp,%rdx
    8421:	b8 04 00 00 00       	mov    $0x4,%eax
    8426:	f6 c1 04             	test   $0x4,%cl
    8429:	0f 84 6c ff ff ff    	je     839b <auto_decode+0x7b>
    842f:	eb b5                	jmp    83e6 <auto_decode+0xc6>
    8431:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    8438:	0f 1f 84 00 00 00 00 
    843f:	00 

0000000000008440 <auto_decoder_end>:
    8440:	41 56                	push   %r14
    8442:	53                   	push   %rbx
    8443:	50                   	push   %rax
    8444:	48 89 f3             	mov    %rsi,%rbx
    8447:	49 89 fe             	mov    %rdi,%r14
    844a:	e8 f1 ab ff ff       	call   3040 <lzma_next_end>
    844f:	4c 89 f7             	mov    %r14,%rdi
    8452:	48 89 de             	mov    %rbx,%rsi
    8455:	48 83 c4 08          	add    $0x8,%rsp
    8459:	5b                   	pop    %rbx
    845a:	41 5e                	pop    %r14
    845c:	e9 8f aa ff ff       	jmp    2ef0 <lzma_free>
    8461:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    8468:	0f 1f 84 00 00 00 00 
    846f:	00 

0000000000008470 <auto_decoder_get_check>:
    8470:	48 8b 47 28          	mov    0x28(%rdi),%rax
    8474:	48 85 c0             	test   %rax,%rax
    8477:	74 05                	je     847e <auto_decoder_get_check+0xe>
    8479:	48 8b 3f             	mov    (%rdi),%rdi
    847c:	ff e0                	jmp    *%rax
    847e:	31 c0                	xor    %eax,%eax
    8480:	c3                   	ret    
    8481:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    8488:	0f 1f 84 00 00 00 00 
    848f:	00 

0000000000008490 <auto_decoder_memconfig>:
    8490:	41 56                	push   %r14
    8492:	53                   	push   %rbx
    8493:	50                   	push   %rax
    8494:	48 89 cb             	mov    %rcx,%rbx
    8497:	49 89 fe             	mov    %rdi,%r14
    849a:	48 8b 47 30          	mov    0x30(%rdi),%rax
    849e:	48 85 c0             	test   %rax,%rax
    84a1:	74 15                	je     84b8 <auto_decoder_memconfig+0x28>
    84a3:	49 8b 3e             	mov    (%r14),%rdi
    84a6:	48 89 d9             	mov    %rbx,%rcx
    84a9:	ff d0                	call   *%rax
    84ab:	48 85 db             	test   %rbx,%rbx
    84ae:	75 1d                	jne    84cd <auto_decoder_memconfig+0x3d>
    84b0:	48 83 c4 08          	add    $0x8,%rsp
    84b4:	5b                   	pop    %rbx
    84b5:	41 5e                	pop    %r14
    84b7:	c3                   	ret    
    84b8:	48 c7 06 00 80 00 00 	movq   $0x8000,(%rsi)
    84bf:	49 8b 46 40          	mov    0x40(%r14),%rax
    84c3:	48 89 02             	mov    %rax,(%rdx)
    84c6:	31 c0                	xor    %eax,%eax
    84c8:	48 85 db             	test   %rbx,%rbx
    84cb:	74 e3                	je     84b0 <auto_decoder_memconfig+0x20>
    84cd:	85 c0                	test   %eax,%eax
    84cf:	75 df                	jne    84b0 <auto_decoder_memconfig+0x20>
    84d1:	49 89 5e 40          	mov    %rbx,0x40(%r14)
    84d5:	48 83 c4 08          	add    $0x8,%rsp
    84d9:	5b                   	pop    %rbx
    84da:	41 5e                	pop    %r14
    84dc:	c3                   	ret    
    84dd:	0f 1f 00             	nopl   (%rax)

00000000000084e0 <lzma_block_buffer_decode>:
    84e0:	b8 0b 00 00 00       	mov    $0xb,%eax
    84e5:	48 85 c9             	test   %rcx,%rcx
    84e8:	74 0d                	je     84f7 <lzma_block_buffer_decode+0x17>
    84ea:	4c 8b 11             	mov    (%rcx),%r10
    84ed:	48 85 d2             	test   %rdx,%rdx
    84f0:	75 06                	jne    84f8 <lzma_block_buffer_decode+0x18>
    84f2:	4d 39 c2             	cmp    %r8,%r10
    84f5:	74 01                	je     84f8 <lzma_block_buffer_decode+0x18>
    84f7:	c3                   	ret    
    84f8:	55                   	push   %rbp
    84f9:	41 57                	push   %r15
    84fb:	41 56                	push   %r14
    84fd:	41 55                	push   %r13
    84ff:	41 54                	push   %r12
    8501:	53                   	push   %rbx
    8502:	48 83 ec 68          	sub    $0x68,%rsp
    8506:	4c 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%r13
    850d:	00 
    850e:	4d 85 ed             	test   %r13,%r13
    8511:	0f 84 f0 00 00 00    	je     8607 <lzma_block_buffer_decode+0x127>
    8517:	4d 39 c2             	cmp    %r8,%r10
    851a:	0f 87 e7 00 00 00    	ja     8607 <lzma_block_buffer_decode+0x127>
    8520:	48 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%rbp
    8527:	00 
    8528:	4d 85 c9             	test   %r9,%r9
    852b:	41 0f 94 c3          	sete   %r11b
    852f:	4d 8b 55 00          	mov    0x0(%r13),%r10
    8533:	49 39 ea             	cmp    %rbp,%r10
    8536:	0f 95 c3             	setne  %bl
    8539:	41 84 db             	test   %bl,%r11b
    853c:	0f 85 c5 00 00 00    	jne    8607 <lzma_block_buffer_decode+0x127>
    8542:	49 39 ea             	cmp    %rbp,%r10
    8545:	0f 87 bc 00 00 00    	ja     8607 <lzma_block_buffer_decode+0x127>
    854b:	49 89 d4             	mov    %rdx,%r12
    854e:	4d 89 cf             	mov    %r9,%r15
    8551:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    8556:	49 89 ce             	mov    %rcx,%r14
    8559:	0f 57 c0             	xorps  %xmm0,%xmm0
    855c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    8561:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    8566:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    856b:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    8570:	48 c7 44 24 28 ff ff 	movq   $0xffffffffffffffff,0x28(%rsp)
    8577:	ff ff 
    8579:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    857e:	48 89 fa             	mov    %rdi,%rdx
    8581:	48 89 c7             	mov    %rax,%rdi
    8584:	48 89 f3             	mov    %rsi,%rbx
    8587:	e8 94 00 00 00       	call   8620 <lzma_block_decoder_init>
    858c:	48 89 de             	mov    %rbx,%rsi
    858f:	85 c0                	test   %eax,%eax
    8591:	75 66                	jne    85f9 <lzma_block_buffer_decode+0x119>
    8593:	4c 89 f1             	mov    %r14,%rcx
    8596:	49 8b 06             	mov    (%r14),%rax
    8599:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    859e:	49 8b 45 00          	mov    0x0(%r13),%rax
    85a2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    85a7:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    85ac:	48 83 ec 08          	sub    $0x8,%rsp
    85b0:	4c 89 e2             	mov    %r12,%rdx
    85b3:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    85b8:	4d 89 f9             	mov    %r15,%r9
    85bb:	6a 03                	push   $0x3
    85bd:	55                   	push   %rbp
    85be:	41 55                	push   %r13
    85c0:	ff 54 24 58          	call   *0x58(%rsp)
    85c4:	48 83 c4 20          	add    $0x20,%rsp
    85c8:	83 f8 01             	cmp    $0x1,%eax
    85cb:	74 27                	je     85f4 <lzma_block_buffer_decode+0x114>
    85cd:	85 c0                	test   %eax,%eax
    85cf:	75 10                	jne    85e1 <lzma_block_buffer_decode+0x101>
    85d1:	31 c0                	xor    %eax,%eax
    85d3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    85d8:	49 39 0e             	cmp    %rcx,(%r14)
    85db:	0f 95 c0             	setne  %al
    85de:	83 c0 09             	add    $0x9,%eax
    85e1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    85e6:	49 89 0e             	mov    %rcx,(%r14)
    85e9:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    85ee:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    85f2:	eb 02                	jmp    85f6 <lzma_block_buffer_decode+0x116>
    85f4:	31 c0                	xor    %eax,%eax
    85f6:	48 89 de             	mov    %rbx,%rsi
    85f9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    85fe:	89 c3                	mov    %eax,%ebx
    8600:	e8 3b aa ff ff       	call   3040 <lzma_next_end>
    8605:	89 d8                	mov    %ebx,%eax
    8607:	48 83 c4 68          	add    $0x68,%rsp
    860b:	5b                   	pop    %rbx
    860c:	41 5c                	pop    %r12
    860e:	41 5d                	pop    %r13
    8610:	41 5e                	pop    %r14
    8612:	41 5f                	pop    %r15
    8614:	5d                   	pop    %rbp
    8615:	c3                   	ret    
    8616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    861d:	00 00 00 

0000000000008620 <lzma_block_decoder_init>:
    8620:	41 57                	push   %r15
    8622:	41 56                	push   %r14
    8624:	41 54                	push   %r12
    8626:	53                   	push   %rbx
    8627:	50                   	push   %rax
    8628:	49 89 d6             	mov    %rdx,%r14
    862b:	48 89 f3             	mov    %rsi,%rbx
    862e:	49 89 ff             	mov    %rdi,%r15
    8631:	4c 8d 25 e8 ff ff ff 	lea    -0x18(%rip),%r12        # 8620 <lzma_block_decoder_init>
    8638:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    863c:	74 0b                	je     8649 <lzma_block_decoder_init+0x29>
    863e:	4c 89 ff             	mov    %r15,%rdi
    8641:	48 89 de             	mov    %rbx,%rsi
    8644:	e8 f7 a9 ff ff       	call   3040 <lzma_next_end>
    8649:	4d 89 67 10          	mov    %r12,0x10(%r15)
    864d:	4c 89 f7             	mov    %r14,%rdi
    8650:	e8 5b b0 ff ff       	call   36b0 <lzma_block_unpadded_size>
    8655:	48 89 c1             	mov    %rax,%rcx
    8658:	b8 0b 00 00 00       	mov    $0xb,%eax
    865d:	48 85 c9             	test   %rcx,%rcx
    8660:	0f 84 f5 00 00 00    	je     875b <lzma_block_decoder_init+0x13b>
    8666:	49 83 7e 18 ff       	cmpq   $0xffffffffffffffff,0x18(%r14)
    866b:	0f 8c ea 00 00 00    	jl     875b <lzma_block_decoder_init+0x13b>
    8671:	49 8b 07             	mov    (%r15),%rax
    8674:	48 85 c0             	test   %rax,%rax
    8677:	75 51                	jne    86ca <lzma_block_decoder_init+0xaa>
    8679:	bf d8 00 00 00       	mov    $0xd8,%edi
    867e:	48 89 de             	mov    %rbx,%rsi
    8681:	e8 3a a8 ff ff       	call   2ec0 <lzma_alloc>
    8686:	49 89 07             	mov    %rax,(%r15)
    8689:	48 85 c0             	test   %rax,%rax
    868c:	0f 84 c4 00 00 00    	je     8756 <lzma_block_decoder_init+0x136>
    8692:	48 8d 0d d7 00 00 00 	lea    0xd7(%rip),%rcx        # 8770 <block_decode>
    8699:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    869d:	48 8d 0d 6c 03 00 00 	lea    0x36c(%rip),%rcx        # 8a10 <block_decoder_end>
    86a4:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    86a8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    86af:	00 
    86b0:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    86b7:	ff 
    86b8:	0f 57 c0             	xorps  %xmm0,%xmm0
    86bb:	0f 11 40 18          	movups %xmm0,0x18(%rax)
    86bf:	0f 11 40 28          	movups %xmm0,0x28(%rax)
    86c3:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    86c7:	49 8b 07             	mov    (%r15),%rax
    86ca:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    86d0:	49 8b 07             	mov    (%r15),%rax
    86d3:	4c 89 70 48          	mov    %r14,0x48(%rax)
    86d7:	49 8b 07             	mov    (%r15),%rax
    86da:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    86e1:	00 
    86e2:	49 8b 07             	mov    (%r15),%rax
    86e5:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
    86ec:	00 
    86ed:	49 8b 46 10          	mov    0x10(%r14),%rax
    86f1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    86f5:	75 1f                	jne    8716 <lzma_block_decoder_init+0xf6>
    86f7:	45 8b 66 04          	mov    0x4(%r14),%r12d
    86fb:	41 8b 7e 08          	mov    0x8(%r14),%edi
    86ff:	e8 4c 22 00 00       	call   a950 <lzma_check_size>
    8704:	89 c1                	mov    %eax,%ecx
    8706:	4c 01 e1             	add    %r12,%rcx
    8709:	48 b8 fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rax
    8710:	ff ff 7f 
    8713:	48 29 c8             	sub    %rcx,%rax
    8716:	49 8b 0f             	mov    (%r15),%rcx
    8719:	48 89 41 60          	mov    %rax,0x60(%rcx)
    871d:	49 8b 07             	mov    (%r15),%rax
    8720:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
    8727:	00 
    8728:	49 8b 3f             	mov    (%r15),%rdi
    872b:	48 83 c7 70          	add    $0x70,%rdi
    872f:	41 8b 76 08          	mov    0x8(%r14),%esi
    8733:	e8 38 22 00 00       	call   a970 <lzma_check_init>
    8738:	49 8b 3f             	mov    (%r15),%rdi
    873b:	48 83 c7 08          	add    $0x8,%rdi
    873f:	49 8b 56 20          	mov    0x20(%r14),%rdx
    8743:	48 89 de             	mov    %rbx,%rsi
    8746:	48 83 c4 08          	add    $0x8,%rsp
    874a:	5b                   	pop    %rbx
    874b:	41 5c                	pop    %r12
    874d:	41 5e                	pop    %r14
    874f:	41 5f                	pop    %r15
    8751:	e9 3a 09 00 00       	jmp    9090 <lzma_raw_decoder_init>
    8756:	b8 05 00 00 00       	mov    $0x5,%eax
    875b:	48 83 c4 08          	add    $0x8,%rsp
    875f:	5b                   	pop    %rbx
    8760:	41 5c                	pop    %r12
    8762:	41 5e                	pop    %r14
    8764:	41 5f                	pop    %r15
    8766:	c3                   	ret    
    8767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    876e:	00 00 

0000000000008770 <block_decode>:
    8770:	55                   	push   %rbp
    8771:	41 57                	push   %r15
    8773:	41 56                	push   %r14
    8775:	41 55                	push   %r13
    8777:	41 54                	push   %r12
    8779:	53                   	push   %rbx
    877a:	48 83 ec 18          	sub    $0x18,%rsp
    877e:	4d 89 c7             	mov    %r8,%r15
    8781:	49 89 ce             	mov    %rcx,%r14
    8784:	49 89 d4             	mov    %rdx,%r12
    8787:	48 89 fb             	mov    %rdi,%rbx
    878a:	8b 0f                	mov    (%rdi),%ecx
    878c:	83 f9 02             	cmp    $0x2,%ecx
    878f:	0f 84 f4 01 00 00    	je     8989 <block_decode+0x219>
    8795:	83 f9 01             	cmp    $0x1,%ecx
    8798:	0f 84 1c 01 00 00    	je     88ba <block_decode+0x14a>
    879e:	b8 0b 00 00 00       	mov    $0xb,%eax
    87a3:	85 c9                	test   %ecx,%ecx
    87a5:	0f 85 49 02 00 00    	jne    89f4 <block_decode+0x284>
    87ab:	8b 44 24 60          	mov    0x60(%rsp),%eax
    87af:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
    87b4:	4d 8b 2e             	mov    (%r14),%r13
    87b7:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    87bb:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    87c0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    87c4:	48 83 ec 08          	sub    $0x8,%rsp
    87c8:	4c 89 e2             	mov    %r12,%rdx
    87cb:	4c 89 f1             	mov    %r14,%rcx
    87ce:	4d 89 f8             	mov    %r15,%r8
    87d1:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    87d6:	50                   	push   %rax
    87d7:	ff 74 24 68          	push   0x68(%rsp)
    87db:	55                   	push   %rbp
    87dc:	ff 53 20             	call   *0x20(%rbx)
    87df:	48 83 c4 20          	add    $0x20,%rsp
    87e3:	48 8b 73 50          	mov    0x50(%rbx),%rsi
    87e7:	48 8b 4b 60          	mov    0x60(%rbx),%rcx
    87eb:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
    87f2:	ff ff 7f 
    87f5:	48 39 d1             	cmp    %rdx,%rcx
    87f8:	48 0f 43 ca          	cmovae %rdx,%rcx
    87fc:	48 29 f1             	sub    %rsi,%rcx
    87ff:	0f 82 e6 00 00 00    	jb     88eb <block_decode+0x17b>
    8805:	49 8b 3e             	mov    (%r14),%rdi
    8808:	4c 29 ef             	sub    %r13,%rdi
    880b:	48 39 f9             	cmp    %rdi,%rcx
    880e:	0f 82 d7 00 00 00    	jb     88eb <block_decode+0x17b>
    8814:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    8818:	48 01 fe             	add    %rdi,%rsi
    881b:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    881f:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    8823:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
    8827:	4c 8b 46 18          	mov    0x18(%rsi),%r8
    882b:	49 39 d0             	cmp    %rdx,%r8
    882e:	49 0f 42 d0          	cmovb  %r8,%rdx
    8832:	48 29 fa             	sub    %rdi,%rdx
    8835:	0f 82 b0 00 00 00    	jb     88eb <block_decode+0x17b>
    883b:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    8840:	4c 29 c1             	sub    %r8,%rcx
    8843:	48 39 ca             	cmp    %rcx,%rdx
    8846:	0f 82 9f 00 00 00    	jb     88eb <block_decode+0x17b>
    884c:	48 01 cf             	add    %rcx,%rdi
    884f:	48 89 7b 58          	mov    %rdi,0x58(%rbx)
    8853:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    8857:	8b 76 08             	mov    0x8(%rsi),%esi
    885a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    885f:	4c 01 c2             	add    %r8,%rdx
    8862:	89 c5                	mov    %eax,%ebp
    8864:	e8 37 21 00 00       	call   a9a0 <lzma_check_update>
    8869:	89 e8                	mov    %ebp,%eax
    886b:	83 fd 01             	cmp    $0x1,%ebp
    886e:	0f 85 80 01 00 00    	jne    89f4 <block_decode+0x284>
    8874:	48 8b 4b 48          	mov    0x48(%rbx),%rcx
    8878:	48 8b 53 50          	mov    0x50(%rbx),%rdx
    887c:	48 8b 41 10          	mov    0x10(%rcx),%rax
    8880:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    8884:	74 05                	je     888b <block_decode+0x11b>
    8886:	48 39 d0             	cmp    %rdx,%rax
    8889:	75 60                	jne    88eb <block_decode+0x17b>
    888b:	48 8b 71 18          	mov    0x18(%rcx),%rsi
    888f:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    8893:	74 0f                	je     88a4 <block_decode+0x134>
    8895:	b8 09 00 00 00       	mov    $0x9,%eax
    889a:	48 3b 73 58          	cmp    0x58(%rbx),%rsi
    889e:	0f 85 50 01 00 00    	jne    89f4 <block_decode+0x284>
    88a4:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    88a8:	48 8b 43 48          	mov    0x48(%rbx),%rax
    88ac:	48 8b 4b 58          	mov    0x58(%rbx),%rcx
    88b0:	48 89 48 18          	mov    %rcx,0x18(%rax)
    88b4:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    88ba:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    88be:	f6 c1 03             	test   $0x3,%cl
    88c1:	0f 84 a8 00 00 00    	je     896f <block_decode+0x1ff>
    88c7:	49 8b 16             	mov    (%r14),%rdx
    88ca:	31 c0                	xor    %eax,%eax
    88cc:	4c 39 fa             	cmp    %r15,%rdx
    88cf:	0f 83 1f 01 00 00    	jae    89f4 <block_decode+0x284>
    88d5:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    88d9:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    88dd:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
    88e1:	49 89 3e             	mov    %rdi,(%r14)
    88e4:	41 80 3c 14 00       	cmpb   $0x0,(%r12,%rdx,1)
    88e9:	74 0a                	je     88f5 <block_decode+0x185>
    88eb:	b8 09 00 00 00       	mov    $0x9,%eax
    88f0:	e9 ff 00 00 00       	jmp    89f4 <block_decode+0x284>
    88f5:	40 f6 c6 03          	test   $0x3,%sil
    88f9:	74 74                	je     896f <block_decode+0x1ff>
    88fb:	49 8b 16             	mov    (%r14),%rdx
    88fe:	4c 39 fa             	cmp    %r15,%rdx
    8901:	0f 83 ed 00 00 00    	jae    89f4 <block_decode+0x284>
    8907:	48 8d 71 02          	lea    0x2(%rcx),%rsi
    890b:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    890f:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
    8913:	49 89 3e             	mov    %rdi,(%r14)
    8916:	41 80 3c 14 00       	cmpb   $0x0,(%r12,%rdx,1)
    891b:	75 ce                	jne    88eb <block_decode+0x17b>
    891d:	40 f6 c6 03          	test   $0x3,%sil
    8921:	74 4c                	je     896f <block_decode+0x1ff>
    8923:	49 8b 16             	mov    (%r14),%rdx
    8926:	4c 39 fa             	cmp    %r15,%rdx
    8929:	0f 83 c5 00 00 00    	jae    89f4 <block_decode+0x284>
    892f:	48 8d 71 03          	lea    0x3(%rcx),%rsi
    8933:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    8937:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
    893b:	49 89 3e             	mov    %rdi,(%r14)
    893e:	41 80 3c 14 00       	cmpb   $0x0,(%r12,%rdx,1)
    8943:	75 a6                	jne    88eb <block_decode+0x17b>
    8945:	40 f6 c6 03          	test   $0x3,%sil
    8949:	74 24                	je     896f <block_decode+0x1ff>
    894b:	49 8b 16             	mov    (%r14),%rdx
    894e:	4c 39 fa             	cmp    %r15,%rdx
    8951:	0f 83 9d 00 00 00    	jae    89f4 <block_decode+0x284>
    8957:	48 83 c1 04          	add    $0x4,%rcx
    895b:	48 89 4b 50          	mov    %rcx,0x50(%rbx)
    895f:	48 ff c2             	inc    %rdx
    8962:	49 89 16             	mov    %rdx,(%r14)
    8965:	b8 09 00 00 00       	mov    $0x9,%eax
    896a:	e9 85 00 00 00       	jmp    89f4 <block_decode+0x284>
    896f:	48 8b 43 48          	mov    0x48(%rbx),%rax
    8973:	8b 70 08             	mov    0x8(%rax),%esi
    8976:	85 f6                	test   %esi,%esi
    8978:	74 75                	je     89ef <block_decode+0x27f>
    897a:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    897e:	e8 6d 20 00 00       	call   a9f0 <lzma_check_finish>
    8983:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    8989:	48 8b 43 48          	mov    0x48(%rbx),%rax
    898d:	8b 78 08             	mov    0x8(%rax),%edi
    8990:	e8 bb 1f 00 00       	call   a950 <lzma_check_size>
    8995:	41 89 c5             	mov    %eax,%r13d
    8998:	48 8b 4b 48          	mov    0x48(%rbx),%rcx
    899c:	48 83 c1 28          	add    $0x28,%rcx
    89a0:	4c 8d 43 68          	lea    0x68(%rbx),%r8
    89a4:	4c 89 e7             	mov    %r12,%rdi
    89a7:	4c 89 f6             	mov    %r14,%rsi
    89aa:	4c 89 fa             	mov    %r15,%rdx
    89ad:	4d 89 e9             	mov    %r13,%r9
    89b0:	e8 6b a5 ff ff       	call   2f20 <lzma_bufcpy>
    89b5:	31 c0                	xor    %eax,%eax
    89b7:	4c 39 6b 68          	cmp    %r13,0x68(%rbx)
    89bb:	72 37                	jb     89f4 <block_decode+0x284>
    89bd:	48 8b 43 48          	mov    0x48(%rbx),%rax
    89c1:	8b 78 08             	mov    0x8(%rax),%edi
    89c4:	e8 67 1f 00 00       	call   a930 <lzma_check_is_supported>
    89c9:	84 c0                	test   %al,%al
    89cb:	74 22                	je     89ef <block_decode+0x27f>
    89cd:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    89d1:	48 83 c7 28          	add    $0x28,%rdi
    89d5:	48 83 c3 70          	add    $0x70,%rbx
    89d9:	48 89 de             	mov    %rbx,%rsi
    89dc:	4c 89 ea             	mov    %r13,%rdx
    89df:	e8 9c 97 ff ff       	call   2180 <bcmp@plt>
    89e4:	89 c1                	mov    %eax,%ecx
    89e6:	b8 09 00 00 00       	mov    $0x9,%eax
    89eb:	85 c9                	test   %ecx,%ecx
    89ed:	75 05                	jne    89f4 <block_decode+0x284>
    89ef:	b8 01 00 00 00       	mov    $0x1,%eax
    89f4:	48 83 c4 18          	add    $0x18,%rsp
    89f8:	5b                   	pop    %rbx
    89f9:	41 5c                	pop    %r12
    89fb:	41 5d                	pop    %r13
    89fd:	41 5e                	pop    %r14
    89ff:	41 5f                	pop    %r15
    8a01:	5d                   	pop    %rbp
    8a02:	c3                   	ret    
    8a03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    8a0a:	84 00 00 00 00 00 

0000000000008a10 <block_decoder_end>:
    8a10:	41 56                	push   %r14
    8a12:	53                   	push   %rbx
    8a13:	50                   	push   %rax
    8a14:	48 89 f3             	mov    %rsi,%rbx
    8a17:	49 89 fe             	mov    %rdi,%r14
    8a1a:	48 83 c7 08          	add    $0x8,%rdi
    8a1e:	e8 1d a6 ff ff       	call   3040 <lzma_next_end>
    8a23:	4c 89 f7             	mov    %r14,%rdi
    8a26:	48 89 de             	mov    %rbx,%rsi
    8a29:	48 83 c4 08          	add    $0x8,%rsp
    8a2d:	5b                   	pop    %rbx
    8a2e:	41 5e                	pop    %r14
    8a30:	e9 bb a4 ff ff       	jmp    2ef0 <lzma_free>
    8a35:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    8a3c:	00 00 00 00 

0000000000008a40 <lzma_block_decoder>:
    8a40:	41 56                	push   %r14
    8a42:	53                   	push   %rbx
    8a43:	50                   	push   %rax
    8a44:	49 89 f6             	mov    %rsi,%r14
    8a47:	48 89 fb             	mov    %rdi,%rbx
    8a4a:	e8 91 a6 ff ff       	call   30e0 <lzma_strm_init>
    8a4f:	85 c0                	test   %eax,%eax
    8a51:	74 08                	je     8a5b <lzma_block_decoder+0x1b>
    8a53:	48 83 c4 08          	add    $0x8,%rsp
    8a57:	5b                   	pop    %rbx
    8a58:	41 5e                	pop    %r14
    8a5a:	c3                   	ret    
    8a5b:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    8a5f:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    8a63:	4c 89 f2             	mov    %r14,%rdx
    8a66:	e8 b5 fb ff ff       	call   8620 <lzma_block_decoder_init>
    8a6b:	85 c0                	test   %eax,%eax
    8a6d:	74 14                	je     8a83 <lzma_block_decoder+0x43>
    8a6f:	48 89 df             	mov    %rbx,%rdi
    8a72:	89 c3                	mov    %eax,%ebx
    8a74:	e8 97 a9 ff ff       	call   3410 <lzma_end>
    8a79:	89 d8                	mov    %ebx,%eax
    8a7b:	48 83 c4 08          	add    $0x8,%rsp
    8a7f:	5b                   	pop    %rbx
    8a80:	41 5e                	pop    %r14
    8a82:	c3                   	ret    
    8a83:	48 8b 43 38          	mov    0x38(%rbx),%rax
    8a87:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    8a8b:	48 8b 43 38          	mov    0x38(%rbx),%rax
    8a8f:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    8a93:	31 c0                	xor    %eax,%eax
    8a95:	48 83 c4 08          	add    $0x8,%rsp
    8a99:	5b                   	pop    %rbx
    8a9a:	41 5e                	pop    %r14
    8a9c:	c3                   	ret    
    8a9d:	0f 1f 00             	nopl   (%rax)

0000000000008aa0 <lzma_block_header_decode>:
    8aa0:	55                   	push   %rbp
    8aa1:	41 57                	push   %r15
    8aa3:	41 56                	push   %r14
    8aa5:	41 55                	push   %r13
    8aa7:	41 54                	push   %r12
    8aa9:	53                   	push   %rbx
    8aaa:	50                   	push   %rax
    8aab:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8aaf:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
    8ab6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8aba:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8ac1:	00 
    8ac2:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8ac6:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    8acd:	ff 
    8ace:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8ad2:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    8ad9:	00 
    8ada:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8ade:	48 c7 40 20 ff ff ff 	movq   $0xffffffffffffffff,0x20(%rax)
    8ae5:	ff 
    8ae6:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8aea:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8af1:	00 
    8af2:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8af6:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
    8afd:	ff 
    8afe:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8b02:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    8b09:	00 
    8b0a:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8b0e:	48 c7 40 40 ff ff ff 	movq   $0xffffffffffffffff,0x40(%rax)
    8b15:	ff 
    8b16:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8b1a:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    8b21:	00 
    8b22:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    8b28:	44 0f b6 22          	movzbl (%rdx),%r12d
    8b2c:	42 8d 0c a5 04 00 00 	lea    0x4(,%r12,4),%ecx
    8b33:	00 
    8b34:	b8 0b 00 00 00       	mov    $0xb,%eax
    8b39:	3b 4f 04             	cmp    0x4(%rdi),%ecx
    8b3c:	75 3c                	jne    8b7a <lzma_block_header_decode+0xda>
    8b3e:	48 89 fb             	mov    %rdi,%rbx
    8b41:	83 7f 08 0f          	cmpl   $0xf,0x8(%rdi)
    8b45:	77 33                	ja     8b7a <lzma_block_header_decode+0xda>
    8b47:	49 89 d7             	mov    %rdx,%r15
    8b4a:	49 89 f6             	mov    %rsi,%r14
    8b4d:	41 c1 e4 02          	shl    $0x2,%r12d
    8b51:	48 89 d7             	mov    %rdx,%rdi
    8b54:	4c 89 e6             	mov    %r12,%rsi
    8b57:	31 d2                	xor    %edx,%edx
    8b59:	e8 c2 1e 00 00       	call   aa20 <lzma_crc32>
    8b5e:	89 c1                	mov    %eax,%ecx
    8b60:	b8 09 00 00 00       	mov    $0x9,%eax
    8b65:	43 3b 0c 27          	cmp    (%r15,%r12,1),%ecx
    8b69:	75 0f                	jne    8b7a <lzma_block_header_decode+0xda>
    8b6b:	41 0f b6 4f 01       	movzbl 0x1(%r15),%ecx
    8b70:	b8 08 00 00 00       	mov    $0x8,%eax
    8b75:	f6 c1 3c             	test   $0x3c,%cl
    8b78:	74 0f                	je     8b89 <lzma_block_header_decode+0xe9>
    8b7a:	48 83 c4 08          	add    $0x8,%rsp
    8b7e:	5b                   	pop    %rbx
    8b7f:	41 5c                	pop    %r12
    8b81:	41 5d                	pop    %r13
    8b83:	41 5e                	pop    %r14
    8b85:	41 5f                	pop    %r15
    8b87:	5d                   	pop    %rbp
    8b88:	c3                   	ret    
    8b89:	48 c7 04 24 02 00 00 	movq   $0x2,(%rsp)
    8b90:	00 
    8b91:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    8b95:	f6 c1 40             	test   $0x40,%cl
    8b98:	0f 85 8b 00 00 00    	jne    8c29 <lzma_block_header_decode+0x189>
    8b9e:	48 c7 07 ff ff ff ff 	movq   $0xffffffffffffffff,(%rdi)
    8ba5:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
    8ba9:	41 80 7f 01 00       	cmpb   $0x0,0x1(%r15)
    8bae:	0f 88 50 01 00 00    	js     8d04 <lzma_block_header_decode+0x264>
    8bb4:	48 c7 07 ff ff ff ff 	movq   $0xffffffffffffffff,(%rdi)
    8bbb:	41 0f b6 6f 01       	movzbl 0x1(%r15),%ebp
    8bc0:	83 e5 03             	and    $0x3,%ebp
    8bc3:	c1 e5 04             	shl    $0x4,%ebp
    8bc6:	48 83 c5 10          	add    $0x10,%rbp
    8bca:	45 31 ed             	xor    %r13d,%r13d
    8bcd:	0f 1f 00             	nopl   (%rax)
    8bd0:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    8bd4:	4c 01 ef             	add    %r13,%rdi
    8bd7:	4c 89 f6             	mov    %r14,%rsi
    8bda:	4c 89 fa             	mov    %r15,%rdx
    8bdd:	48 89 e1             	mov    %rsp,%rcx
    8be0:	4d 89 e0             	mov    %r12,%r8
    8be3:	e8 c8 05 00 00       	call   91b0 <lzma_filter_flags_decode>
    8be8:	85 c0                	test   %eax,%eax
    8bea:	75 70                	jne    8c5c <lzma_block_header_decode+0x1bc>
    8bec:	49 83 c5 10          	add    $0x10,%r13
    8bf0:	4c 39 ed             	cmp    %r13,%rbp
    8bf3:	75 db                	jne    8bd0 <lzma_block_header_decode+0x130>
    8bf5:	48 8b 04 24          	mov    (%rsp),%rax
    8bf9:	4c 39 e0             	cmp    %r12,%rax
    8bfc:	0f 83 1f 01 00 00    	jae    8d21 <lzma_block_header_decode+0x281>
    8c02:	48 8d 48 01          	lea    0x1(%rax),%rcx
    8c06:	48 89 0c 24          	mov    %rcx,(%rsp)
    8c0a:	41 80 3c 07 00       	cmpb   $0x0,(%r15,%rax,1)
    8c0f:	48 89 c8             	mov    %rcx,%rax
    8c12:	74 e5                	je     8bf9 <lzma_block_header_decode+0x159>
    8c14:	48 89 df             	mov    %rbx,%rdi
    8c17:	4c 89 f6             	mov    %r14,%rsi
    8c1a:	e8 11 01 00 00       	call   8d30 <free_properties>
    8c1f:	b8 08 00 00 00       	mov    $0x8,%eax
    8c24:	e9 51 ff ff ff       	jmp    8b7a <lzma_block_header_decode+0xda>
    8c29:	48 89 e1             	mov    %rsp,%rcx
    8c2c:	31 f6                	xor    %esi,%esi
    8c2e:	4c 89 fa             	mov    %r15,%rdx
    8c31:	4d 89 e0             	mov    %r12,%r8
    8c34:	e8 87 1b 00 00       	call   a7c0 <lzma_vli_decode>
    8c39:	85 c0                	test   %eax,%eax
    8c3b:	0f 85 39 ff ff ff    	jne    8b7a <lzma_block_header_decode+0xda>
    8c41:	48 89 df             	mov    %rbx,%rdi
    8c44:	e8 67 aa ff ff       	call   36b0 <lzma_block_unpadded_size>
    8c49:	48 85 c0             	test   %rax,%rax
    8c4c:	0f 85 53 ff ff ff    	jne    8ba5 <lzma_block_header_decode+0x105>
    8c52:	b8 09 00 00 00       	mov    $0x9,%eax
    8c57:	e9 1e ff ff ff       	jmp    8b7a <lzma_block_header_decode+0xda>
    8c5c:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    8c60:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    8c64:	4c 89 f6             	mov    %r14,%rsi
    8c67:	89 c5                	mov    %eax,%ebp
    8c69:	e8 82 a2 ff ff       	call   2ef0 <lzma_free>
    8c6e:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8c72:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
    8c79:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8c7d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8c84:	00 
    8c85:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8c89:	48 8b 78 18          	mov    0x18(%rax),%rdi
    8c8d:	4c 89 f6             	mov    %r14,%rsi
    8c90:	e8 5b a2 ff ff       	call   2ef0 <lzma_free>
    8c95:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8c99:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    8ca0:	ff 
    8ca1:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8ca5:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    8cac:	00 
    8cad:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8cb1:	48 8b 78 28          	mov    0x28(%rax),%rdi
    8cb5:	4c 89 f6             	mov    %r14,%rsi
    8cb8:	e8 33 a2 ff ff       	call   2ef0 <lzma_free>
    8cbd:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8cc1:	48 c7 40 20 ff ff ff 	movq   $0xffffffffffffffff,0x20(%rax)
    8cc8:	ff 
    8cc9:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8ccd:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8cd4:	00 
    8cd5:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8cd9:	48 8b 78 38          	mov    0x38(%rax),%rdi
    8cdd:	4c 89 f6             	mov    %r14,%rsi
    8ce0:	e8 0b a2 ff ff       	call   2ef0 <lzma_free>
    8ce5:	89 e8                	mov    %ebp,%eax
    8ce7:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    8ceb:	48 c7 41 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rcx)
    8cf2:	ff 
    8cf3:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    8cf7:	48 c7 41 38 00 00 00 	movq   $0x0,0x38(%rcx)
    8cfe:	00 
    8cff:	e9 76 fe ff ff       	jmp    8b7a <lzma_block_header_decode+0xda>
    8d04:	48 89 e1             	mov    %rsp,%rcx
    8d07:	31 f6                	xor    %esi,%esi
    8d09:	4c 89 fa             	mov    %r15,%rdx
    8d0c:	4d 89 e0             	mov    %r12,%r8
    8d0f:	e8 ac 1a 00 00       	call   a7c0 <lzma_vli_decode>
    8d14:	85 c0                	test   %eax,%eax
    8d16:	0f 85 5e fe ff ff    	jne    8b7a <lzma_block_header_decode+0xda>
    8d1c:	e9 9a fe ff ff       	jmp    8bbb <lzma_block_header_decode+0x11b>
    8d21:	31 c0                	xor    %eax,%eax
    8d23:	e9 52 fe ff ff       	jmp    8b7a <lzma_block_header_decode+0xda>
    8d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d2f:	00 

0000000000008d30 <free_properties>:
    8d30:	41 56                	push   %r14
    8d32:	53                   	push   %rbx
    8d33:	50                   	push   %rax
    8d34:	49 89 f6             	mov    %rsi,%r14
    8d37:	48 89 fb             	mov    %rdi,%rbx
    8d3a:	48 8b 47 20          	mov    0x20(%rdi),%rax
    8d3e:	48 8b 78 08          	mov    0x8(%rax),%rdi
    8d42:	e8 a9 a1 ff ff       	call   2ef0 <lzma_free>
    8d47:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d4b:	48 c7 00 ff ff ff ff 	movq   $0xffffffffffffffff,(%rax)
    8d52:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d56:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8d5d:	00 
    8d5e:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d62:	48 8b 78 18          	mov    0x18(%rax),%rdi
    8d66:	4c 89 f6             	mov    %r14,%rsi
    8d69:	e8 82 a1 ff ff       	call   2ef0 <lzma_free>
    8d6e:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d72:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    8d79:	ff 
    8d7a:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d7e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    8d85:	00 
    8d86:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d8a:	48 8b 78 28          	mov    0x28(%rax),%rdi
    8d8e:	4c 89 f6             	mov    %r14,%rsi
    8d91:	e8 5a a1 ff ff       	call   2ef0 <lzma_free>
    8d96:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8d9a:	48 c7 40 20 ff ff ff 	movq   $0xffffffffffffffff,0x20(%rax)
    8da1:	ff 
    8da2:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8da6:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8dad:	00 
    8dae:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8db2:	48 8b 78 38          	mov    0x38(%rax),%rdi
    8db6:	4c 89 f6             	mov    %r14,%rsi
    8db9:	e8 32 a1 ff ff       	call   2ef0 <lzma_free>
    8dbe:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8dc2:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
    8dc9:	ff 
    8dca:	48 8b 43 20          	mov    0x20(%rbx),%rax
    8dce:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    8dd5:	00 
    8dd6:	48 83 c4 08          	add    $0x8,%rsp
    8dda:	5b                   	pop    %rbx
    8ddb:	41 5e                	pop    %r14
    8ddd:	c3                   	ret    
    8dde:	66 90                	xchg   %ax,%ax

0000000000008de0 <lzma_easy_decoder_memusage>:
    8de0:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    8de7:	89 fe                	mov    %edi,%esi
    8de9:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8dee:	e8 ad a9 ff ff       	call   37a0 <lzma_easy_preset>
    8df3:	89 c1                	mov    %eax,%ecx
    8df5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8dfa:	84 c9                	test   %cl,%cl
    8dfc:	75 0a                	jne    8e08 <lzma_easy_decoder_memusage+0x28>
    8dfe:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8e03:	e8 f8 02 00 00       	call   9100 <lzma_raw_decoder_memusage>
    8e08:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    8e0f:	c3                   	ret    

0000000000008e10 <lzma_raw_buffer_decode>:
    8e10:	55                   	push   %rbp
    8e11:	41 57                	push   %r15
    8e13:	41 56                	push   %r14
    8e15:	41 55                	push   %r13
    8e17:	41 54                	push   %r12
    8e19:	53                   	push   %rbx
    8e1a:	48 83 ec 78          	sub    $0x78,%rsp
    8e1e:	49 89 d7             	mov    %rdx,%r15
    8e21:	b8 0b 00 00 00       	mov    $0xb,%eax
    8e26:	48 85 d2             	test   %rdx,%rdx
    8e29:	0f 84 4a 01 00 00    	je     8f79 <lzma_raw_buffer_decode+0x169>
    8e2f:	48 85 c9             	test   %rcx,%rcx
    8e32:	0f 84 41 01 00 00    	je     8f79 <lzma_raw_buffer_decode+0x169>
    8e38:	48 8b ac 24 b0 00 00 	mov    0xb0(%rsp),%rbp
    8e3f:	00 
    8e40:	48 85 ed             	test   %rbp,%rbp
    8e43:	0f 84 30 01 00 00    	je     8f79 <lzma_raw_buffer_decode+0x169>
    8e49:	4d 85 c9             	test   %r9,%r9
    8e4c:	0f 84 27 01 00 00    	je     8f79 <lzma_raw_buffer_decode+0x169>
    8e52:	4c 39 01             	cmp    %r8,(%rcx)
    8e55:	0f 87 1e 01 00 00    	ja     8f79 <lzma_raw_buffer_decode+0x169>
    8e5b:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
    8e62:	00 
    8e63:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    8e67:	0f 87 0c 01 00 00    	ja     8f79 <lzma_raw_buffer_decode+0x169>
    8e6d:	48 89 fa             	mov    %rdi,%rdx
    8e70:	4d 89 cd             	mov    %r9,%r13
    8e73:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    8e78:	4d 89 c4             	mov    %r8,%r12
    8e7b:	49 89 ce             	mov    %rcx,%r14
    8e7e:	0f 57 c0             	xorps  %xmm0,%xmm0
    8e81:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    8e86:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    8e8b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    8e90:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    8e95:	48 c7 44 24 38 ff ff 	movq   $0xffffffffffffffff,0x38(%rsp)
    8e9c:	ff ff 
    8e9e:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    8ea3:	49 89 f7             	mov    %rsi,%r15
    8ea6:	e8 e5 01 00 00       	call   9090 <lzma_raw_decoder_init>
    8eab:	85 c0                	test   %eax,%eax
    8ead:	0f 85 c6 00 00 00    	jne    8f79 <lzma_raw_buffer_decode+0x169>
    8eb3:	4c 89 f1             	mov    %r14,%rcx
    8eb6:	49 8b 06             	mov    (%r14),%rax
    8eb9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    8ebe:	48 8b 45 00          	mov    0x0(%rbp),%rax
    8ec2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    8ec7:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8ecc:	48 83 ec 08          	sub    $0x8,%rsp
    8ed0:	4c 89 fe             	mov    %r15,%rsi
    8ed3:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8ed8:	4d 89 e0             	mov    %r12,%r8
    8edb:	4d 89 e9             	mov    %r13,%r9
    8ede:	6a 03                	push   $0x3
    8ee0:	53                   	push   %rbx
    8ee1:	55                   	push   %rbp
    8ee2:	ff 54 24 68          	call   *0x68(%rsp)
    8ee6:	48 83 c4 20          	add    $0x20,%rsp
    8eea:	83 f8 01             	cmp    $0x1,%eax
    8eed:	74 79                	je     8f68 <lzma_raw_buffer_decode+0x158>
    8eef:	85 c0                	test   %eax,%eax
    8ef1:	4c 89 f1             	mov    %r14,%rcx
    8ef4:	75 5d                	jne    8f53 <lzma_raw_buffer_decode+0x143>
    8ef6:	b8 0a 00 00 00       	mov    $0xa,%eax
    8efb:	4c 39 21             	cmp    %r12,(%rcx)
    8efe:	75 53                	jne    8f53 <lzma_raw_buffer_decode+0x143>
    8f00:	b8 09 00 00 00       	mov    $0x9,%eax
    8f05:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    8f09:	75 48                	jne    8f53 <lzma_raw_buffer_decode+0x143>
    8f0b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    8f12:	00 00 
    8f14:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    8f19:	48 83 ec 08          	sub    $0x8,%rsp
    8f1d:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    8f22:	4c 8d 4c 24 17       	lea    0x17(%rsp),%r9
    8f27:	4c 89 fe             	mov    %r15,%rsi
    8f2a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8f2f:	4c 89 f1             	mov    %r14,%rcx
    8f32:	4d 89 e0             	mov    %r12,%r8
    8f35:	6a 03                	push   $0x3
    8f37:	6a 01                	push   $0x1
    8f39:	50                   	push   %rax
    8f3a:	ff 54 24 68          	call   *0x68(%rsp)
    8f3e:	4c 89 f1             	mov    %r14,%rcx
    8f41:	48 83 c4 20          	add    $0x20,%rsp
    8f45:	31 c0                	xor    %eax,%eax
    8f47:	48 83 7c 24 18 01    	cmpq   $0x1,0x18(%rsp)
    8f4d:	0f 94 c0             	sete   %al
    8f50:	83 c0 09             	add    $0x9,%eax
    8f53:	89 c3                	mov    %eax,%ebx
    8f55:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    8f5a:	48 89 01             	mov    %rax,(%rcx)
    8f5d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    8f62:	48 89 45 00          	mov    %rax,0x0(%rbp)
    8f66:	eb 02                	jmp    8f6a <lzma_raw_buffer_decode+0x15a>
    8f68:	31 db                	xor    %ebx,%ebx
    8f6a:	4c 89 fe             	mov    %r15,%rsi
    8f6d:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    8f72:	e8 c9 a0 ff ff       	call   3040 <lzma_next_end>
    8f77:	89 d8                	mov    %ebx,%eax
    8f79:	48 83 c4 78          	add    $0x78,%rsp
    8f7d:	5b                   	pop    %rbx
    8f7e:	41 5c                	pop    %r12
    8f80:	41 5d                	pop    %r13
    8f82:	41 5e                	pop    %r14
    8f84:	41 5f                	pop    %r15
    8f86:	5d                   	pop    %rbp
    8f87:	c3                   	ret    
    8f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8f8f:	00 

0000000000008f90 <lzma_filter_decoder_is_supported>:
    8f90:	48 8d 47 fd          	lea    -0x3(%rdi),%rax
    8f94:	48 83 f8 07          	cmp    $0x7,%rax
    8f98:	73 03                	jae    8f9d <lzma_filter_decoder_is_supported+0xd>
    8f9a:	b0 01                	mov    $0x1,%al
    8f9c:	c3                   	ret    
    8f9d:	48 b8 01 00 00 00 00 	movabs $0x4000000000000001,%rax
    8fa4:	00 00 40 
    8fa7:	48 39 c7             	cmp    %rax,%rdi
    8faa:	74 ee                	je     8f9a <lzma_filter_decoder_is_supported+0xa>
    8fac:	48 83 ff 21          	cmp    $0x21,%rdi
    8fb0:	74 e8                	je     8f9a <lzma_filter_decoder_is_supported+0xa>
    8fb2:	31 c0                	xor    %eax,%eax
    8fb4:	c3                   	ret    
    8fb5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    8fbc:	00 00 00 00 

0000000000008fc0 <decoder_find>:
    8fc0:	31 c0                	xor    %eax,%eax
    8fc2:	48 8d 4f fd          	lea    -0x3(%rdi),%rcx
    8fc6:	48 83 f9 1e          	cmp    $0x1e,%rcx
    8fca:	77 23                	ja     8fef <decoder_find+0x2f>
    8fcc:	48 8d 15 f5 ad 01 00 	lea    0x1adf5(%rip),%rdx        # 23dc8 <stream_encode.convert+0x38>
    8fd3:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
    8fd7:	48 01 d1             	add    %rdx,%rcx
    8fda:	ff e1                	jmp    *%rcx
    8fdc:	b8 08 00 00 00       	mov    $0x8,%eax
    8fe1:	c1 e0 05             	shl    $0x5,%eax
    8fe4:	48 8d 0d 85 aa 02 00 	lea    0x2aa85(%rip),%rcx        # 33a70 <decoders>
    8feb:	48 01 c8             	add    %rcx,%rax
    8fee:	c3                   	ret    
    8fef:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
    8ff6:	00 00 40 
    8ff9:	48 39 cf             	cmp    %rcx,%rdi
    8ffc:	74 06                	je     9004 <decoder_find+0x44>
    8ffe:	c3                   	ret    
    8fff:	b8 01 00 00 00       	mov    $0x1,%eax
    9004:	c1 e0 05             	shl    $0x5,%eax
    9007:	48 8d 0d 62 aa 02 00 	lea    0x2aa62(%rip),%rcx        # 33a70 <decoders>
    900e:	48 01 c8             	add    %rcx,%rax
    9011:	c3                   	ret    
    9012:	b8 07 00 00 00       	mov    $0x7,%eax
    9017:	c1 e0 05             	shl    $0x5,%eax
    901a:	48 8d 0d 4f aa 02 00 	lea    0x2aa4f(%rip),%rcx        # 33a70 <decoders>
    9021:	48 01 c8             	add    %rcx,%rax
    9024:	c3                   	ret    
    9025:	b8 03 00 00 00       	mov    $0x3,%eax
    902a:	c1 e0 05             	shl    $0x5,%eax
    902d:	48 8d 0d 3c aa 02 00 	lea    0x2aa3c(%rip),%rcx        # 33a70 <decoders>
    9034:	48 01 c8             	add    %rcx,%rax
    9037:	c3                   	ret    
    9038:	b8 02 00 00 00       	mov    $0x2,%eax
    903d:	c1 e0 05             	shl    $0x5,%eax
    9040:	48 8d 0d 29 aa 02 00 	lea    0x2aa29(%rip),%rcx        # 33a70 <decoders>
    9047:	48 01 c8             	add    %rcx,%rax
    904a:	c3                   	ret    
    904b:	b8 05 00 00 00       	mov    $0x5,%eax
    9050:	c1 e0 05             	shl    $0x5,%eax
    9053:	48 8d 0d 16 aa 02 00 	lea    0x2aa16(%rip),%rcx        # 33a70 <decoders>
    905a:	48 01 c8             	add    %rcx,%rax
    905d:	c3                   	ret    
    905e:	b8 04 00 00 00       	mov    $0x4,%eax
    9063:	c1 e0 05             	shl    $0x5,%eax
    9066:	48 8d 0d 03 aa 02 00 	lea    0x2aa03(%rip),%rcx        # 33a70 <decoders>
    906d:	48 01 c8             	add    %rcx,%rax
    9070:	c3                   	ret    
    9071:	b8 06 00 00 00       	mov    $0x6,%eax
    9076:	c1 e0 05             	shl    $0x5,%eax
    9079:	48 8d 0d f0 a9 02 00 	lea    0x2a9f0(%rip),%rcx        # 33a70 <decoders>
    9080:	48 01 c8             	add    %rcx,%rax
    9083:	c3                   	ret    
    9084:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    908b:	00 00 00 00 00 

0000000000009090 <lzma_raw_decoder_init>:
    9090:	48 8d 0d 29 ff ff ff 	lea    -0xd7(%rip),%rcx        # 8fc0 <decoder_find>
    9097:	45 31 c0             	xor    %r8d,%r8d
    909a:	e9 b1 ab ff ff       	jmp    3c50 <lzma_raw_coder_init>
    909f:	90                   	nop

00000000000090a0 <lzma_raw_decoder>:
    90a0:	55                   	push   %rbp
    90a1:	41 56                	push   %r14
    90a3:	53                   	push   %rbx
    90a4:	49 89 f6             	mov    %rsi,%r14
    90a7:	48 89 fb             	mov    %rdi,%rbx
    90aa:	e8 31 a0 ff ff       	call   30e0 <lzma_strm_init>
    90af:	85 c0                	test   %eax,%eax
    90b1:	74 05                	je     90b8 <lzma_raw_decoder+0x18>
    90b3:	5b                   	pop    %rbx
    90b4:	41 5e                	pop    %r14
    90b6:	5d                   	pop    %rbp
    90b7:	c3                   	ret    
    90b8:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    90bc:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    90c0:	48 8d 0d f9 fe ff ff 	lea    -0x107(%rip),%rcx        # 8fc0 <decoder_find>
    90c7:	4c 89 f2             	mov    %r14,%rdx
    90ca:	45 31 c0             	xor    %r8d,%r8d
    90cd:	e8 7e ab ff ff       	call   3c50 <lzma_raw_coder_init>
    90d2:	85 c0                	test   %eax,%eax
    90d4:	74 11                	je     90e7 <lzma_raw_decoder+0x47>
    90d6:	89 c5                	mov    %eax,%ebp
    90d8:	48 89 df             	mov    %rbx,%rdi
    90db:	e8 30 a3 ff ff       	call   3410 <lzma_end>
    90e0:	89 e8                	mov    %ebp,%eax
    90e2:	5b                   	pop    %rbx
    90e3:	41 5e                	pop    %r14
    90e5:	5d                   	pop    %rbp
    90e6:	c3                   	ret    
    90e7:	48 8b 43 38          	mov    0x38(%rbx),%rax
    90eb:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    90ef:	48 8b 43 38          	mov    0x38(%rbx),%rax
    90f3:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    90f7:	31 c0                	xor    %eax,%eax
    90f9:	5b                   	pop    %rbx
    90fa:	41 5e                	pop    %r14
    90fc:	5d                   	pop    %rbp
    90fd:	c3                   	ret    
    90fe:	66 90                	xchg   %ax,%ax

0000000000009100 <lzma_raw_decoder_memusage>:
    9100:	48 89 fe             	mov    %rdi,%rsi
    9103:	48 8d 3d b6 fe ff ff 	lea    -0x14a(%rip),%rdi        # 8fc0 <decoder_find>
    910a:	e9 11 ad ff ff       	jmp    3e20 <lzma_raw_coder_memusage>
    910f:	90                   	nop

0000000000009110 <lzma_properties_decode>:
    9110:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    9117:	00 
    9118:	4c 8b 07             	mov    (%rdi),%r8
    911b:	b8 08 00 00 00       	mov    $0x8,%eax
    9120:	4d 8d 48 fd          	lea    -0x3(%r8),%r9
    9124:	49 83 f9 1e          	cmp    $0x1e,%r9
    9128:	77 18                	ja     9142 <lzma_properties_decode+0x32>
    912a:	4c 8d 05 13 ad 01 00 	lea    0x1ad13(%rip),%r8        # 23e44 <stream_encode.convert+0xb4>
    9131:	4f 63 0c 88          	movslq (%r8,%r9,4),%r9
    9135:	4d 01 c1             	add    %r8,%r9
    9138:	41 ff e1             	jmp    *%r9
    913b:	b8 08 00 00 00       	mov    $0x8,%eax
    9140:	eb 42                	jmp    9184 <lzma_properties_decode+0x74>
    9142:	49 b9 01 00 00 00 00 	movabs $0x4000000000000001,%r9
    9149:	00 00 40 
    914c:	4d 39 c8             	cmp    %r9,%r8
    914f:	75 58                	jne    91a9 <lzma_properties_decode+0x99>
    9151:	31 c0                	xor    %eax,%eax
    9153:	eb 2f                	jmp    9184 <lzma_properties_decode+0x74>
    9155:	b8 01 00 00 00       	mov    $0x1,%eax
    915a:	eb 28                	jmp    9184 <lzma_properties_decode+0x74>
    915c:	b8 07 00 00 00       	mov    $0x7,%eax
    9161:	eb 21                	jmp    9184 <lzma_properties_decode+0x74>
    9163:	b8 03 00 00 00       	mov    $0x3,%eax
    9168:	eb 1a                	jmp    9184 <lzma_properties_decode+0x74>
    916a:	b8 02 00 00 00       	mov    $0x2,%eax
    916f:	eb 13                	jmp    9184 <lzma_properties_decode+0x74>
    9171:	b8 05 00 00 00       	mov    $0x5,%eax
    9176:	eb 0c                	jmp    9184 <lzma_properties_decode+0x74>
    9178:	b8 04 00 00 00       	mov    $0x4,%eax
    917d:	eb 05                	jmp    9184 <lzma_properties_decode+0x74>
    917f:	b8 06 00 00 00       	mov    $0x6,%eax
    9184:	c1 e0 05             	shl    $0x5,%eax
    9187:	4c 8d 05 e2 a8 02 00 	lea    0x2a8e2(%rip),%r8        # 33a70 <decoders>
    918e:	4a 8b 44 00 18       	mov    0x18(%rax,%r8,1),%rax
    9193:	48 85 c0             	test   %rax,%rax
    9196:	74 06                	je     919e <lzma_properties_decode+0x8e>
    9198:	48 83 c7 08          	add    $0x8,%rdi
    919c:	ff e0                	jmp    *%rax
    919e:	31 c0                	xor    %eax,%eax
    91a0:	48 85 c9             	test   %rcx,%rcx
    91a3:	0f 95 c0             	setne  %al
    91a6:	c1 e0 03             	shl    $0x3,%eax
    91a9:	c3                   	ret    
    91aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000091b0 <lzma_filter_flags_decode>:
    91b0:	41 57                	push   %r15
    91b2:	41 56                	push   %r14
    91b4:	41 55                	push   %r13
    91b6:	41 54                	push   %r12
    91b8:	53                   	push   %rbx
    91b9:	48 83 ec 10          	sub    $0x10,%rsp
    91bd:	4d 89 c5             	mov    %r8,%r13
    91c0:	48 89 cb             	mov    %rcx,%rbx
    91c3:	49 89 d6             	mov    %rdx,%r14
    91c6:	49 89 f7             	mov    %rsi,%r15
    91c9:	49 89 fc             	mov    %rdi,%r12
    91cc:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    91d3:	00 
    91d4:	31 f6                	xor    %esi,%esi
    91d6:	e8 e5 15 00 00       	call   a7c0 <lzma_vli_decode>
    91db:	85 c0                	test   %eax,%eax
    91dd:	75 56                	jne    9235 <lzma_filter_flags_decode+0x85>
    91df:	49 8b 04 24          	mov    (%r12),%rax
    91e3:	48 c1 e8 3e          	shr    $0x3e,%rax
    91e7:	b8 09 00 00 00       	mov    $0x9,%eax
    91ec:	75 47                	jne    9235 <lzma_filter_flags_decode+0x85>
    91ee:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    91f3:	31 f6                	xor    %esi,%esi
    91f5:	4c 89 f2             	mov    %r14,%rdx
    91f8:	48 89 d9             	mov    %rbx,%rcx
    91fb:	4d 89 e8             	mov    %r13,%r8
    91fe:	e8 bd 15 00 00       	call   a7c0 <lzma_vli_decode>
    9203:	85 c0                	test   %eax,%eax
    9205:	75 2e                	jne    9235 <lzma_filter_flags_decode+0x85>
    9207:	48 8b 13             	mov    (%rbx),%rdx
    920a:	49 29 d5             	sub    %rdx,%r13
    920d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9212:	b8 09 00 00 00       	mov    $0x9,%eax
    9217:	49 39 cd             	cmp    %rcx,%r13
    921a:	72 19                	jb     9235 <lzma_filter_flags_decode+0x85>
    921c:	49 01 d6             	add    %rdx,%r14
    921f:	4c 89 e7             	mov    %r12,%rdi
    9222:	4c 89 fe             	mov    %r15,%rsi
    9225:	4c 89 f2             	mov    %r14,%rdx
    9228:	e8 e3 fe ff ff       	call   9110 <lzma_properties_decode>
    922d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9232:	48 01 0b             	add    %rcx,(%rbx)
    9235:	48 83 c4 10          	add    $0x10,%rsp
    9239:	5b                   	pop    %rbx
    923a:	41 5c                	pop    %r12
    923c:	41 5d                	pop    %r13
    923e:	41 5e                	pop    %r14
    9240:	41 5f                	pop    %r15
    9242:	c3                   	ret    
    9243:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    924a:	00 00 00 
    924d:	0f 1f 00             	nopl   (%rax)

0000000000009250 <lzma_index_decoder>:
    9250:	41 57                	push   %r15
    9252:	41 56                	push   %r14
    9254:	53                   	push   %rbx
    9255:	49 89 d6             	mov    %rdx,%r14
    9258:	49 89 f7             	mov    %rsi,%r15
    925b:	48 89 fb             	mov    %rdi,%rbx
    925e:	e8 7d 9e ff ff       	call   30e0 <lzma_strm_init>
    9263:	85 c0                	test   %eax,%eax
    9265:	74 06                	je     926d <lzma_index_decoder+0x1d>
    9267:	5b                   	pop    %rbx
    9268:	41 5e                	pop    %r14
    926a:	41 5f                	pop    %r15
    926c:	c3                   	ret    
    926d:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    9271:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    9275:	4c 89 fa             	mov    %r15,%rdx
    9278:	4c 89 f1             	mov    %r14,%rcx
    927b:	e8 30 00 00 00       	call   92b0 <index_decoder_init>
    9280:	85 c0                	test   %eax,%eax
    9282:	74 12                	je     9296 <lzma_index_decoder+0x46>
    9284:	48 89 df             	mov    %rbx,%rdi
    9287:	89 c3                	mov    %eax,%ebx
    9289:	e8 82 a1 ff ff       	call   3410 <lzma_end>
    928e:	89 d8                	mov    %ebx,%eax
    9290:	5b                   	pop    %rbx
    9291:	41 5e                	pop    %r14
    9293:	41 5f                	pop    %r15
    9295:	c3                   	ret    
    9296:	48 8b 43 38          	mov    0x38(%rbx),%rax
    929a:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    929e:	48 8b 43 38          	mov    0x38(%rbx),%rax
    92a2:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    92a6:	31 c0                	xor    %eax,%eax
    92a8:	5b                   	pop    %rbx
    92a9:	41 5e                	pop    %r14
    92ab:	41 5f                	pop    %r15
    92ad:	c3                   	ret    
    92ae:	66 90                	xchg   %ax,%ax

00000000000092b0 <index_decoder_init>:
    92b0:	41 57                	push   %r15
    92b2:	41 56                	push   %r14
    92b4:	41 55                	push   %r13
    92b6:	41 54                	push   %r12
    92b8:	53                   	push   %rbx
    92b9:	48 89 cb             	mov    %rcx,%rbx
    92bc:	49 89 d7             	mov    %rdx,%r15
    92bf:	49 89 f6             	mov    %rsi,%r14
    92c2:	49 89 fc             	mov    %rdi,%r12
    92c5:	4c 8d 2d e4 ff ff ff 	lea    -0x1c(%rip),%r13        # 92b0 <index_decoder_init>
    92cc:	4c 39 6f 10          	cmp    %r13,0x10(%rdi)
    92d0:	74 0b                	je     92dd <index_decoder_init+0x2d>
    92d2:	4c 89 e7             	mov    %r12,%rdi
    92d5:	4c 89 f6             	mov    %r14,%rsi
    92d8:	e8 63 9d ff ff       	call   3040 <lzma_next_end>
    92dd:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
    92e2:	b8 0b 00 00 00       	mov    $0xb,%eax
    92e7:	4d 85 ff             	test   %r15,%r15
    92ea:	0f 84 b5 00 00 00    	je     93a5 <index_decoder_init+0xf5>
    92f0:	48 85 db             	test   %rbx,%rbx
    92f3:	0f 84 ac 00 00 00    	je     93a5 <index_decoder_init+0xf5>
    92f9:	49 8b 04 24          	mov    (%r12),%rax
    92fd:	48 85 c0             	test   %rax,%rax
    9300:	74 0e                	je     9310 <index_decoder_init+0x60>
    9302:	48 8b 78 10          	mov    0x10(%rax),%rdi
    9306:	4c 89 f6             	mov    %r14,%rsi
    9309:	e8 c2 ae ff ff       	call   41d0 <lzma_index_end>
    930e:	eb 42                	jmp    9352 <index_decoder_init+0xa2>
    9310:	bf 48 00 00 00       	mov    $0x48,%edi
    9315:	4c 89 f6             	mov    %r14,%rsi
    9318:	e8 a3 9b ff ff       	call   2ec0 <lzma_alloc>
    931d:	49 89 04 24          	mov    %rax,(%r12)
    9321:	48 85 c0             	test   %rax,%rax
    9324:	74 7a                	je     93a0 <index_decoder_init+0xf0>
    9326:	48 8d 0d b3 01 00 00 	lea    0x1b3(%rip),%rcx        # 94e0 <index_decode>
    932d:	49 89 4c 24 18       	mov    %rcx,0x18(%r12)
    9332:	48 8d 0d 87 04 00 00 	lea    0x487(%rip),%rcx        # 97c0 <index_decoder_end>
    9339:	49 89 4c 24 20       	mov    %rcx,0x20(%r12)
    933e:	48 8d 0d ab 04 00 00 	lea    0x4ab(%rip),%rcx        # 97f0 <index_decoder_memconfig>
    9345:	49 89 4c 24 30       	mov    %rcx,0x30(%r12)
    934a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9351:	00 
    9352:	4d 8b 24 24          	mov    (%r12),%r12
    9356:	4d 89 7c 24 18       	mov    %r15,0x18(%r12)
    935b:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9362:	4c 89 f7             	mov    %r14,%rdi
    9365:	e8 f6 ab ff ff       	call   3f60 <lzma_index_init>
    936a:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    936f:	48 85 c0             	test   %rax,%rax
    9372:	74 2c                	je     93a0 <index_decoder_init+0xf0>
    9374:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
    937b:	00 
    937c:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    9381:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    9388:	00 00 
    938a:	49 c7 44 24 38 00 00 	movq   $0x0,0x38(%r12)
    9391:	00 00 
    9393:	41 c7 44 24 40 00 00 	movl   $0x0,0x40(%r12)
    939a:	00 00 
    939c:	31 c0                	xor    %eax,%eax
    939e:	eb 05                	jmp    93a5 <index_decoder_init+0xf5>
    93a0:	b8 05 00 00 00       	mov    $0x5,%eax
    93a5:	5b                   	pop    %rbx
    93a6:	41 5c                	pop    %r12
    93a8:	41 5d                	pop    %r13
    93aa:	41 5e                	pop    %r14
    93ac:	41 5f                	pop    %r15
    93ae:	c3                   	ret    
    93af:	90                   	nop

00000000000093b0 <lzma_index_buffer_decode>:
    93b0:	66 48 0f 6e c7       	movq   %rdi,%xmm0
    93b5:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    93ba:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    93be:	66 49 0f 6e c0       	movq   %r8,%xmm0
    93c3:	66 48 0f 6e d1       	movq   %rcx,%xmm2
    93c8:	66 0f 6c d0          	punpcklqdq %xmm0,%xmm2
    93cc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    93d0:	66 0f 76 d0          	pcmpeqd %xmm0,%xmm2
    93d4:	66 0f 76 c8          	pcmpeqd %xmm0,%xmm1
    93d8:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    93dc:	0f c6 c2 dd          	shufps $0xdd,%xmm2,%xmm0
    93e0:	0f c6 ca 88          	shufps $0x88,%xmm2,%xmm1
    93e4:	0f 54 c8             	andps  %xmm0,%xmm1
    93e7:	44 0f 50 d1          	movmskps %xmm1,%r10d
    93eb:	b8 0b 00 00 00       	mov    $0xb,%eax
    93f0:	45 85 d2             	test   %r10d,%r10d
    93f3:	74 01                	je     93f6 <lzma_index_buffer_decode+0x46>
    93f5:	c3                   	ret    
    93f6:	4d 39 08             	cmp    %r9,(%r8)
    93f9:	77 fa                	ja     93f5 <lzma_index_buffer_decode+0x45>
    93fb:	55                   	push   %rbp
    93fc:	41 57                	push   %r15
    93fe:	41 56                	push   %r14
    9400:	41 55                	push   %r13
    9402:	41 54                	push   %r12
    9404:	53                   	push   %rbx
    9405:	48 83 ec 68          	sub    $0x68,%rsp
    9409:	49 89 cf             	mov    %rcx,%r15
    940c:	4d 89 ce             	mov    %r9,%r14
    940f:	4d 89 c5             	mov    %r8,%r13
    9412:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9417:	4c 8b 26             	mov    (%rsi),%r12
    941a:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    941f:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    9426:	48 89 d3             	mov    %rdx,%rbx
    9429:	48 89 d7             	mov    %rdx,%rdi
    942c:	e8 2f ab ff ff       	call   3f60 <lzma_index_init>
    9431:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    9436:	48 85 c0             	test   %rax,%rax
    9439:	0f 84 82 00 00 00    	je     94c1 <lzma_index_buffer_decode+0x111>
    943f:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
    9446:	00 
    9447:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    944c:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    9453:	00 00 
    9455:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    945c:	00 00 
    945e:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
    9465:	00 
    9466:	4c 89 e9             	mov    %r13,%rcx
    9469:	4d 8b 65 00          	mov    0x0(%r13),%r12
    946d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    9472:	48 89 de             	mov    %rbx,%rsi
    9475:	4c 89 fa             	mov    %r15,%rdx
    9478:	4d 89 f0             	mov    %r14,%r8
    947b:	e8 60 00 00 00       	call   94e0 <index_decode>
    9480:	89 c5                	mov    %eax,%ebp
    9482:	31 c0                	xor    %eax,%eax
    9484:	83 fd 01             	cmp    $0x1,%ebp
    9487:	74 48                	je     94d1 <lzma_index_buffer_decode+0x121>
    9489:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    948e:	48 89 de             	mov    %rbx,%rsi
    9491:	e8 3a ad ff ff       	call   41d0 <lzma_index_end>
    9496:	4d 89 65 00          	mov    %r12,0x0(%r13)
    949a:	85 ed                	test   %ebp,%ebp
    949c:	74 2a                	je     94c8 <lzma_index_buffer_decode+0x118>
    949e:	83 fd 06             	cmp    $0x6,%ebp
    94a1:	75 2c                	jne    94cf <lzma_index_buffer_decode+0x11f>
    94a3:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    94a8:	bf 01 00 00 00       	mov    $0x1,%edi
    94ad:	e8 9e ad ff ff       	call   4250 <lzma_index_memusage>
    94b2:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    94b7:	48 89 01             	mov    %rax,(%rcx)
    94ba:	b8 06 00 00 00       	mov    $0x6,%eax
    94bf:	eb 10                	jmp    94d1 <lzma_index_buffer_decode+0x121>
    94c1:	b8 05 00 00 00       	mov    $0x5,%eax
    94c6:	eb 09                	jmp    94d1 <lzma_index_buffer_decode+0x121>
    94c8:	b8 09 00 00 00       	mov    $0x9,%eax
    94cd:	eb 02                	jmp    94d1 <lzma_index_buffer_decode+0x121>
    94cf:	89 e8                	mov    %ebp,%eax
    94d1:	48 83 c4 68          	add    $0x68,%rsp
    94d5:	5b                   	pop    %rbx
    94d6:	41 5c                	pop    %r12
    94d8:	41 5d                	pop    %r13
    94da:	41 5e                	pop    %r14
    94dc:	41 5f                	pop    %r15
    94de:	5d                   	pop    %rbp
    94df:	c3                   	ret    

00000000000094e0 <index_decode>:
    94e0:	55                   	push   %rbp
    94e1:	41 57                	push   %r15
    94e3:	41 56                	push   %r14
    94e5:	41 55                	push   %r13
    94e7:	41 54                	push   %r12
    94e9:	53                   	push   %rbx
    94ea:	48 83 ec 38          	sub    $0x38,%rsp
    94ee:	49 89 d6             	mov    %rdx,%r14
    94f1:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    94f6:	48 89 fb             	mov    %rdi,%rbx
    94f9:	48 8b 01             	mov    (%rcx),%rax
    94fc:	31 ed                	xor    %ebp,%ebp
    94fe:	48 89 c6             	mov    %rax,%rsi
    9501:	4c 39 c0             	cmp    %r8,%rax
    9504:	0f 83 78 02 00 00    	jae    9782 <index_decode+0x2a2>
    950a:	4d 89 c4             	mov    %r8,%r12
    950d:	49 89 cf             	mov    %rcx,%r15
    9510:	48 8d 6b 38          	lea    0x38(%rbx),%rbp
    9514:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    9518:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    951d:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
    9521:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    9526:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    952a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    952f:	8b 0b                	mov    (%rbx),%ecx
    9531:	4c 8d 2d 88 a9 01 00 	lea    0x1a988(%rip),%r13        # 23ec0 <stream_encode.convert+0x130>
    9538:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    953d:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    9542:	eb 25                	jmp    9569 <index_decode+0x89>
    9544:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9548:	49 89 0f             	mov    %rcx,(%r15)
    954b:	b9 01 00 00 00       	mov    $0x1,%ecx
    9550:	41 80 3c 06 00       	cmpb   $0x0,(%r14,%rax,1)
    9555:	0f 85 13 02 00 00    	jne    976e <index_decode+0x28e>
    955b:	89 0b                	mov    %ecx,(%rbx)
    955d:	49 8b 07             	mov    (%r15),%rax
    9560:	4c 39 e0             	cmp    %r12,%rax
    9563:	0f 83 73 01 00 00    	jae    96dc <index_decode+0x1fc>
    9569:	83 f9 07             	cmp    $0x7,%ecx
    956c:	0f 87 39 02 00 00    	ja     97ab <index_decode+0x2cb>
    9572:	89 ca                	mov    %ecx,%edx
    9574:	49 63 54 95 00       	movslq 0x0(%r13,%rdx,4),%rdx
    9579:	4c 01 ea             	add    %r13,%rdx
    957c:	ff e2                	jmp    *%rdx
    957e:	83 f9 03             	cmp    $0x3,%ecx
    9581:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    9586:	48 0f 44 7c 24 20    	cmove  0x20(%rsp),%rdi
    958c:	48 89 ee             	mov    %rbp,%rsi
    958f:	4c 89 f2             	mov    %r14,%rdx
    9592:	4c 89 f9             	mov    %r15,%rcx
    9595:	4d 89 e0             	mov    %r12,%r8
    9598:	e8 23 12 00 00       	call   a7c0 <lzma_vli_decode>
    959d:	83 f8 01             	cmp    $0x1,%eax
    95a0:	0f 85 3d 01 00 00    	jne    96e3 <index_decode+0x203>
    95a6:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    95ad:	00 
    95ae:	83 3b 03             	cmpl   $0x3,(%rbx)
    95b1:	0f 85 e9 00 00 00    	jne    96a0 <index_decode+0x1c0>
    95b7:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    95bc:	48 8b 00             	mov    (%rax),%rax
    95bf:	48 b9 03 00 00 00 00 	movabs $0x8000000000000003,%rcx
    95c6:	00 00 80 
    95c9:	48 01 c8             	add    %rcx,%rax
    95cc:	48 8d 51 05          	lea    0x5(%rcx),%rdx
    95d0:	b9 04 00 00 00       	mov    $0x4,%ecx
    95d5:	48 39 d0             	cmp    %rdx,%rax
    95d8:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    95dd:	0f 83 78 ff ff ff    	jae    955b <index_decode+0x7b>
    95e3:	e9 86 01 00 00       	jmp    976e <index_decode+0x28e>
    95e8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    95ed:	48 89 ee             	mov    %rbp,%rsi
    95f0:	4c 89 f2             	mov    %r14,%rdx
    95f3:	4c 89 f9             	mov    %r15,%rcx
    95f6:	4d 89 e0             	mov    %r12,%r8
    95f9:	e8 c2 11 00 00       	call   a7c0 <lzma_vli_decode>
    95fe:	83 f8 01             	cmp    $0x1,%eax
    9601:	0f 85 dc 00 00 00    	jne    96e3 <index_decode+0x203>
    9607:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    960e:	00 
    960f:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    9615:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    961a:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    961e:	bf 01 00 00 00       	mov    $0x1,%edi
    9623:	e8 28 ac ff ff       	call   4250 <lzma_index_memusage>
    9628:	48 3b 43 08          	cmp    0x8(%rbx),%rax
    962c:	0f 87 43 01 00 00    	ja     9775 <index_decode+0x295>
    9632:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9636:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    963a:	e8 f1 ab ff ff       	call   4230 <lzma_index_prealloc>
    963f:	31 c0                	xor    %eax,%eax
    9641:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    9646:	0f 94 c0             	sete   %al
    9649:	8d 0c 45 03 00 00 00 	lea    0x3(,%rax,2),%ecx
    9650:	e9 06 ff ff ff       	jmp    955b <index_decode+0x7b>
    9655:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9659:	e8 02 ae ff ff       	call   4460 <lzma_index_padding_size>
    965e:	89 c0                	mov    %eax,%eax
    9660:	48 89 43 38          	mov    %rax,0x38(%rbx)
    9664:	c7 03 06 00 00 00    	movl   $0x6,(%rbx)
    966a:	48 85 c0             	test   %rax,%rax
    966d:	75 0b                	jne    967a <index_decode+0x19a>
    966f:	eb 79                	jmp    96ea <index_decode+0x20a>
    9671:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9675:	48 85 c0             	test   %rax,%rax
    9678:	74 70                	je     96ea <index_decode+0x20a>
    967a:	48 ff c8             	dec    %rax
    967d:	48 89 45 00          	mov    %rax,0x0(%rbp)
    9681:	49 8b 07             	mov    (%r15),%rax
    9684:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9688:	49 89 0f             	mov    %rcx,(%r15)
    968b:	b9 06 00 00 00       	mov    $0x6,%ecx
    9690:	41 80 3c 06 00       	cmpb   $0x0,(%r14,%rax,1)
    9695:	0f 84 c2 fe ff ff    	je     955d <index_decode+0x7d>
    969b:	e9 ce 00 00 00       	jmp    976e <index_decode+0x28e>
    96a0:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    96a4:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    96a8:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
    96ac:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    96b1:	e8 0a af ff ff       	call   45c0 <lzma_index_append>
    96b6:	85 c0                	test   %eax,%eax
    96b8:	0f 85 f4 00 00 00    	jne    97b2 <index_decode+0x2d2>
    96be:	31 c0                	xor    %eax,%eax
    96c0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    96c5:	48 ff 09             	decq   (%rcx)
    96c8:	0f 94 c0             	sete   %al
    96cb:	8d 0c 45 03 00 00 00 	lea    0x3(,%rax,2),%ecx
    96d2:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    96d7:	e9 7f fe ff ff       	jmp    955b <index_decode+0x7b>
    96dc:	31 ed                	xor    %ebp,%ebp
    96de:	e9 97 00 00 00       	jmp    977a <index_decode+0x29a>
    96e3:	89 c5                	mov    %eax,%ebp
    96e5:	e9 90 00 00 00       	jmp    977a <index_decode+0x29a>
    96ea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    96ef:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
    96f3:	49 8b 37             	mov    (%r15),%rsi
    96f6:	48 29 c6             	sub    %rax,%rsi
    96f9:	8b 53 40             	mov    0x40(%rbx),%edx
    96fc:	e8 1f 13 00 00       	call   aa20 <lzma_crc32>
    9701:	89 43 40             	mov    %eax,0x40(%rbx)
    9704:	c7 03 07 00 00 00    	movl   $0x7,(%rbx)
    970a:	49 8b 07             	mov    (%r15),%rax
    970d:	49 f7 dc             	neg    %r12
    9710:	48 ff c0             	inc    %rax
    9713:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    971a:	84 00 00 00 00 00 
    9720:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    9724:	48 83 f9 01          	cmp    $0x1,%rcx
    9728:	74 7d                	je     97a7 <index_decode+0x2c7>
    972a:	8b 73 40             	mov    0x40(%rbx),%esi
    972d:	48 8b 53 38          	mov    0x38(%rbx),%rdx
    9731:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
    9738:	d3 ee                	shr    %cl,%esi
    973a:	49 89 07             	mov    %rax,(%r15)
    973d:	41 38 74 06 ff       	cmp    %sil,-0x1(%r14,%rax,1)
    9742:	75 2a                	jne    976e <index_decode+0x28e>
    9744:	48 ff c2             	inc    %rdx
    9747:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    974b:	48 ff c0             	inc    %rax
    974e:	48 83 fa 04          	cmp    $0x4,%rdx
    9752:	72 cc                	jb     9720 <index_decode+0x240>
    9754:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9758:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    975c:	48 89 01             	mov    %rax,(%rcx)
    975f:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    9766:	00 
    9767:	bd 01 00 00 00       	mov    $0x1,%ebp
    976c:	eb 28                	jmp    9796 <index_decode+0x2b6>
    976e:	bd 09 00 00 00       	mov    $0x9,%ebp
    9773:	eb 21                	jmp    9796 <index_decode+0x2b6>
    9775:	bd 06 00 00 00       	mov    $0x6,%ebp
    977a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    977f:	49 8b 37             	mov    (%r15),%rsi
    9782:	49 01 c6             	add    %rax,%r14
    9785:	48 29 c6             	sub    %rax,%rsi
    9788:	8b 53 40             	mov    0x40(%rbx),%edx
    978b:	4c 89 f7             	mov    %r14,%rdi
    978e:	e8 8d 12 00 00       	call   aa20 <lzma_crc32>
    9793:	89 43 40             	mov    %eax,0x40(%rbx)
    9796:	89 e8                	mov    %ebp,%eax
    9798:	48 83 c4 38          	add    $0x38,%rsp
    979c:	5b                   	pop    %rbx
    979d:	41 5c                	pop    %r12
    979f:	41 5d                	pop    %r13
    97a1:	41 5e                	pop    %r14
    97a3:	41 5f                	pop    %r15
    97a5:	5d                   	pop    %rbp
    97a6:	c3                   	ret    
    97a7:	31 ed                	xor    %ebp,%ebp
    97a9:	eb eb                	jmp    9796 <index_decode+0x2b6>
    97ab:	bd 0b 00 00 00       	mov    $0xb,%ebp
    97b0:	eb e4                	jmp    9796 <index_decode+0x2b6>
    97b2:	89 c5                	mov    %eax,%ebp
    97b4:	eb e0                	jmp    9796 <index_decode+0x2b6>
    97b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97bd:	00 00 00 

00000000000097c0 <index_decoder_end>:
    97c0:	41 56                	push   %r14
    97c2:	53                   	push   %rbx
    97c3:	50                   	push   %rax
    97c4:	48 89 f3             	mov    %rsi,%rbx
    97c7:	49 89 fe             	mov    %rdi,%r14
    97ca:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    97ce:	e8 fd a9 ff ff       	call   41d0 <lzma_index_end>
    97d3:	4c 89 f7             	mov    %r14,%rdi
    97d6:	48 89 de             	mov    %rbx,%rsi
    97d9:	48 83 c4 08          	add    $0x8,%rsp
    97dd:	5b                   	pop    %rbx
    97de:	41 5e                	pop    %r14
    97e0:	e9 0b 97 ff ff       	jmp    2ef0 <lzma_free>
    97e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    97ec:	00 00 00 00 

00000000000097f0 <index_decoder_memconfig>:
    97f0:	41 57                	push   %r15
    97f2:	41 56                	push   %r14
    97f4:	41 54                	push   %r12
    97f6:	53                   	push   %rbx
    97f7:	50                   	push   %rax
    97f8:	48 89 cb             	mov    %rcx,%rbx
    97fb:	49 89 d4             	mov    %rdx,%r12
    97fe:	49 89 f7             	mov    %rsi,%r15
    9801:	49 89 fe             	mov    %rdi,%r14
    9804:	48 8b 77 20          	mov    0x20(%rdi),%rsi
    9808:	bf 01 00 00 00       	mov    $0x1,%edi
    980d:	e8 3e aa ff ff       	call   4250 <lzma_index_memusage>
    9812:	49 89 07             	mov    %rax,(%r15)
    9815:	49 8b 46 08          	mov    0x8(%r14),%rax
    9819:	49 89 04 24          	mov    %rax,(%r12)
    981d:	31 c0                	xor    %eax,%eax
    981f:	48 85 db             	test   %rbx,%rbx
    9822:	74 10                	je     9834 <index_decoder_memconfig+0x44>
    9824:	b8 06 00 00 00       	mov    $0x6,%eax
    9829:	49 39 1f             	cmp    %rbx,(%r15)
    982c:	77 06                	ja     9834 <index_decoder_memconfig+0x44>
    982e:	49 89 5e 08          	mov    %rbx,0x8(%r14)
    9832:	31 c0                	xor    %eax,%eax
    9834:	48 83 c4 08          	add    $0x8,%rsp
    9838:	5b                   	pop    %rbx
    9839:	41 5c                	pop    %r12
    983b:	41 5e                	pop    %r14
    983d:	41 5f                	pop    %r15
    983f:	c3                   	ret    

0000000000009840 <lzma_index_hash_init>:
    9840:	53                   	push   %rbx
    9841:	48 89 fb             	mov    %rdi,%rbx
    9844:	48 85 ff             	test   %rdi,%rdi
    9847:	75 12                	jne    985b <lzma_index_hash_init+0x1b>
    9849:	bf 40 01 00 00       	mov    $0x140,%edi
    984e:	e8 6d 96 ff ff       	call   2ec0 <lzma_alloc>
    9853:	48 89 c3             	mov    %rax,%rbx
    9856:	48 85 c0             	test   %rax,%rax
    9859:	74 51                	je     98ac <lzma_index_hash_init+0x6c>
    985b:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    9861:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    9865:	0f 57 c0             	xorps  %xmm0,%xmm0
    9868:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    986c:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
    9870:	0f 11 83 90 00 00 00 	movups %xmm0,0x90(%rbx)
    9877:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
    987e:	0f 11 83 20 01 00 00 	movups %xmm0,0x120(%rbx)
    9885:	0f 11 83 2c 01 00 00 	movups %xmm0,0x12c(%rbx)
    988c:	be 0a 00 00 00       	mov    $0xa,%esi
    9891:	e8 da 10 00 00       	call   a970 <lzma_check_init>
    9896:	48 8d bb b0 00 00 00 	lea    0xb0(%rbx),%rdi
    989d:	be 0a 00 00 00       	mov    $0xa,%esi
    98a2:	e8 c9 10 00 00       	call   a970 <lzma_check_init>
    98a7:	48 89 d8             	mov    %rbx,%rax
    98aa:	5b                   	pop    %rbx
    98ab:	c3                   	ret    
    98ac:	31 db                	xor    %ebx,%ebx
    98ae:	48 89 d8             	mov    %rbx,%rax
    98b1:	5b                   	pop    %rbx
    98b2:	c3                   	ret    
    98b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    98ba:	84 00 00 00 00 00 

00000000000098c0 <lzma_index_hash_end>:
    98c0:	e9 2b 96 ff ff       	jmp    2ef0 <lzma_free>
    98c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    98cc:	00 00 00 00 

00000000000098d0 <lzma_index_hash_size>:
    98d0:	53                   	push   %rbx
    98d1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    98d5:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    98d9:	48 89 c7             	mov    %rax,%rdi
    98dc:	e8 ff bb ff ff       	call   54e0 <lzma_vli_size>
    98e1:	ff c0                	inc    %eax
    98e3:	48 01 d8             	add    %rbx,%rax
    98e6:	48 83 c0 07          	add    $0x7,%rax
    98ea:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    98ee:	5b                   	pop    %rbx
    98ef:	c3                   	ret    

00000000000098f0 <lzma_index_hash_append>:
    98f0:	55                   	push   %rbp
    98f1:	41 57                	push   %r15
    98f3:	41 56                	push   %r14
    98f5:	53                   	push   %rbx
    98f6:	48 83 ec 18          	sub    $0x18,%rsp
    98fa:	41 be 0b 00 00 00    	mov    $0xb,%r14d
    9900:	48 85 d2             	test   %rdx,%rdx
    9903:	0f 88 f8 00 00 00    	js     9a01 <lzma_index_hash_append+0x111>
    9909:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    9910:	00 00 80 
    9913:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    9917:	48 83 c0 05          	add    $0x5,%rax
    991b:	48 39 c1             	cmp    %rax,%rcx
    991e:	0f 82 dd 00 00 00    	jb     9a01 <lzma_index_hash_append+0x111>
    9924:	48 89 fb             	mov    %rdi,%rbx
    9927:	83 3f 00             	cmpl   $0x0,(%rdi)
    992a:	0f 85 d1 00 00 00    	jne    9a01 <lzma_index_hash_append+0x111>
    9930:	48 8d 46 03          	lea    0x3(%rsi),%rax
    9934:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    9938:	48 01 43 08          	add    %rax,0x8(%rbx)
    993c:	48 01 53 10          	add    %rdx,0x10(%rbx)
    9940:	48 89 f7             	mov    %rsi,%rdi
    9943:	49 89 d6             	mov    %rdx,%r14
    9946:	49 89 f7             	mov    %rsi,%r15
    9949:	e8 92 bb ff ff       	call   54e0 <lzma_vli_size>
    994e:	89 c5                	mov    %eax,%ebp
    9950:	4c 89 f7             	mov    %r14,%rdi
    9953:	e8 88 bb ff ff       	call   54e0 <lzma_vli_size>
    9958:	01 e8                	add    %ebp,%eax
    995a:	f3 0f 6f 43 18       	movdqu 0x18(%rbx),%xmm0
    995f:	66 0f 6e c8          	movd   %eax,%xmm1
    9963:	66 0f 6f 15 45 a2 01 	movdqa 0x1a245(%rip),%xmm2        # 23bb0 <features+0xf0>
    996a:	00 
    996b:	66 0f 6c d1          	punpcklqdq %xmm1,%xmm2
    996f:	66 0f d4 d0          	paddq  %xmm0,%xmm2
    9973:	f3 0f 7f 53 18       	movdqu %xmm2,0x18(%rbx)
    9978:	4c 89 3c 24          	mov    %r15,(%rsp)
    997c:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
    9981:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    9985:	48 89 e2             	mov    %rsp,%rdx
    9988:	b9 10 00 00 00       	mov    $0x10,%ecx
    998d:	be 0a 00 00 00       	mov    $0xa,%esi
    9992:	e8 09 10 00 00       	call   a9a0 <lzma_check_update>
    9997:	41 be 09 00 00 00    	mov    $0x9,%r14d
    999d:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    99a2:	78 5d                	js     9a01 <lzma_index_hash_append+0x111>
    99a4:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    99a9:	78 56                	js     9a01 <lzma_index_hash_append+0x111>
    99ab:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    99af:	4c 8b 7b 20          	mov    0x20(%rbx),%r15
    99b3:	e8 28 bb ff ff       	call   54e0 <lzma_vli_size>
    99b8:	ff c0                	inc    %eax
    99ba:	4c 01 f8             	add    %r15,%rax
    99bd:	48 83 c0 07          	add    $0x7,%rax
    99c1:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    99c5:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
    99cc:	00 00 00 
    99cf:	48 39 c8             	cmp    %rcx,%rax
    99d2:	77 2d                	ja     9a01 <lzma_index_hash_append+0x111>
    99d4:	4c 8b 73 08          	mov    0x8(%rbx),%r14
    99d8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    99dc:	48 8b 5b 20          	mov    0x20(%rbx),%rbx
    99e0:	e8 fb ba ff ff       	call   54e0 <lzma_vli_size>
    99e5:	ff c0                	inc    %eax
    99e7:	48 01 d8             	add    %rbx,%rax
    99ea:	48 83 c0 07          	add    $0x7,%rax
    99ee:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    99f2:	49 01 c6             	add    %rax,%r14
    99f5:	49 83 c6 18          	add    $0x18,%r14
    99f9:	49 c1 fe 3f          	sar    $0x3f,%r14
    99fd:	41 83 e6 09          	and    $0x9,%r14d
    9a01:	44 89 f0             	mov    %r14d,%eax
    9a04:	48 83 c4 18          	add    $0x18,%rsp
    9a08:	5b                   	pop    %rbx
    9a09:	41 5e                	pop    %r14
    9a0b:	41 5f                	pop    %r15
    9a0d:	5d                   	pop    %rbp
    9a0e:	c3                   	ret    
    9a0f:	90                   	nop

0000000000009a10 <lzma_index_hash_decode>:
    9a10:	55                   	push   %rbp
    9a11:	41 57                	push   %r15
    9a13:	41 56                	push   %r14
    9a15:	41 55                	push   %r13
    9a17:	41 54                	push   %r12
    9a19:	53                   	push   %rbx
    9a1a:	48 83 ec 58          	sub    $0x58,%rsp
    9a1e:	48 8b 02             	mov    (%rdx),%rax
    9a21:	bd 0a 00 00 00       	mov    $0xa,%ebp
    9a26:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9a2b:	48 39 c8             	cmp    %rcx,%rax
    9a2e:	0f 83 99 03 00 00    	jae    9dcd <lzma_index_hash_decode+0x3bd>
    9a34:	49 89 cc             	mov    %rcx,%r12
    9a37:	49 89 d7             	mov    %rdx,%r15
    9a3a:	49 89 f5             	mov    %rsi,%r13
    9a3d:	48 89 fb             	mov    %rdi,%rbx
    9a40:	4c 8d b7 30 01 00 00 	lea    0x130(%rdi),%r14
    9a47:	48 8d 87 20 01 00 00 	lea    0x120(%rdi),%rax
    9a4e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    9a53:	48 8d 87 28 01 00 00 	lea    0x128(%rdi),%rax
    9a5a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    9a5f:	48 8d 87 b0 00 00 00 	lea    0xb0(%rdi),%rax
    9a66:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9a6b:	48 8d 87 18 01 00 00 	lea    0x118(%rdi),%rax
    9a72:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    9a77:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9a7c:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    9a81:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    9a86:	eb 26                	jmp    9aae <lzma_index_hash_decode+0x9e>
    9a88:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9a8c:	49 89 0f             	mov    %rcx,(%r15)
    9a8f:	b9 01 00 00 00       	mov    $0x1,%ecx
    9a94:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
    9a9a:	0f 85 28 03 00 00    	jne    9dc8 <lzma_index_hash_decode+0x3b8>
    9aa0:	89 0b                	mov    %ecx,(%rbx)
    9aa2:	49 8b 07             	mov    (%r15),%rax
    9aa5:	4c 39 e0             	cmp    %r12,%rax
    9aa8:	0f 83 06 02 00 00    	jae    9cb4 <lzma_index_hash_decode+0x2a4>
    9aae:	8b 0b                	mov    (%rbx),%ecx
    9ab0:	48 83 f9 06          	cmp    $0x6,%rcx
    9ab4:	0f 87 24 03 00 00    	ja     9dde <lzma_index_hash_decode+0x3ce>
    9aba:	48 8d 35 1f a4 01 00 	lea    0x1a41f(%rip),%rsi        # 23ee0 <stream_encode.convert+0x150>
    9ac1:	48 63 14 8e          	movslq (%rsi,%rcx,4),%rdx
    9ac5:	48 01 f2             	add    %rsi,%rdx
    9ac8:	ff e2                	jmp    *%rdx
    9aca:	83 f9 02             	cmp    $0x2,%ecx
    9acd:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    9ad2:	48 0f 44 7c 24 38    	cmove  0x38(%rsp),%rdi
    9ad8:	4c 89 f6             	mov    %r14,%rsi
    9adb:	4c 89 ea             	mov    %r13,%rdx
    9ade:	4c 89 f9             	mov    %r15,%rcx
    9ae1:	4d 89 e0             	mov    %r12,%r8
    9ae4:	e8 d7 0c 00 00       	call   a7c0 <lzma_vli_decode>
    9ae9:	83 f8 01             	cmp    $0x1,%eax
    9aec:	0f 85 c6 01 00 00    	jne    9cb8 <lzma_index_hash_decode+0x2a8>
    9af2:	48 c7 83 30 01 00 00 	movq   $0x0,0x130(%rbx)
    9af9:	00 00 00 00 
    9afd:	83 3b 02             	cmpl   $0x2,(%rbx)
    9b00:	48 8b ab 20 01 00 00 	mov    0x120(%rbx),%rbp
    9b07:	0f 85 cc 00 00 00    	jne    9bd9 <lzma_index_hash_decode+0x1c9>
    9b0d:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    9b14:	00 00 80 
    9b17:	48 01 c5             	add    %rax,%rbp
    9b1a:	48 83 c0 05          	add    $0x5,%rax
    9b1e:	b9 03 00 00 00       	mov    $0x3,%ecx
    9b23:	48 39 c5             	cmp    %rax,%rbp
    9b26:	0f 83 74 ff ff ff    	jae    9aa0 <lzma_index_hash_decode+0x90>
    9b2c:	e9 97 02 00 00       	jmp    9dc8 <lzma_index_hash_decode+0x3b8>
    9b31:	48 8b bb a0 00 00 00 	mov    0xa0(%rbx),%rdi
    9b38:	8b ab a8 00 00 00    	mov    0xa8(%rbx),%ebp
    9b3e:	e8 9d b9 ff ff       	call   54e0 <lzma_vli_size>
    9b43:	01 e8                	add    %ebp,%eax
    9b45:	f7 d0                	not    %eax
    9b47:	83 e0 03             	and    $0x3,%eax
    9b4a:	48 89 83 30 01 00 00 	mov    %rax,0x130(%rbx)
    9b51:	c7 03 05 00 00 00    	movl   $0x5,(%rbx)
    9b57:	48 85 c0             	test   %rax,%rax
    9b5a:	75 5c                	jne    9bb8 <lzma_index_hash_decode+0x1a8>
    9b5c:	e9 80 01 00 00       	jmp    9ce1 <lzma_index_hash_decode+0x2d1>
    9b61:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    9b66:	4c 89 f6             	mov    %r14,%rsi
    9b69:	4c 89 ea             	mov    %r13,%rdx
    9b6c:	4c 89 f9             	mov    %r15,%rcx
    9b6f:	4d 89 e0             	mov    %r12,%r8
    9b72:	e8 49 0c 00 00       	call   a7c0 <lzma_vli_decode>
    9b77:	83 f8 01             	cmp    $0x1,%eax
    9b7a:	0f 85 38 01 00 00    	jne    9cb8 <lzma_index_hash_decode+0x2a8>
    9b80:	48 8b 83 18 01 00 00 	mov    0x118(%rbx),%rax
    9b87:	48 3b 43 18          	cmp    0x18(%rbx),%rax
    9b8b:	0f 85 37 02 00 00    	jne    9dc8 <lzma_index_hash_decode+0x3b8>
    9b91:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    9b98:	31 c9                	xor    %ecx,%ecx
    9b9a:	48 85 c0             	test   %rax,%rax
    9b9d:	0f 94 c1             	sete   %cl
    9ba0:	8d 0c 4d 02 00 00 00 	lea    0x2(,%rcx,2),%ecx
    9ba7:	e9 f4 fe ff ff       	jmp    9aa0 <lzma_index_hash_decode+0x90>
    9bac:	49 8b 06             	mov    (%r14),%rax
    9baf:	48 85 c0             	test   %rax,%rax
    9bb2:	0f 84 29 01 00 00    	je     9ce1 <lzma_index_hash_decode+0x2d1>
    9bb8:	48 ff c8             	dec    %rax
    9bbb:	49 89 06             	mov    %rax,(%r14)
    9bbe:	49 8b 07             	mov    (%r15),%rax
    9bc1:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9bc5:	49 89 0f             	mov    %rcx,(%r15)
    9bc8:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
    9bce:	0f 84 ce fe ff ff    	je     9aa2 <lzma_index_hash_decode+0x92>
    9bd4:	e9 ef 01 00 00       	jmp    9dc8 <lzma_index_hash_decode+0x3b8>
    9bd9:	4d 89 ec             	mov    %r13,%r12
    9bdc:	4c 8b b3 28 01 00 00 	mov    0x128(%rbx),%r14
    9be3:	48 8d 45 03          	lea    0x3(%rbp),%rax
    9be7:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    9beb:	48 01 83 90 00 00 00 	add    %rax,0x90(%rbx)
    9bf2:	4c 01 b3 98 00 00 00 	add    %r14,0x98(%rbx)
    9bf9:	48 89 ef             	mov    %rbp,%rdi
    9bfc:	e8 df b8 ff ff       	call   54e0 <lzma_vli_size>
    9c01:	41 89 c5             	mov    %eax,%r13d
    9c04:	4c 89 f7             	mov    %r14,%rdi
    9c07:	e8 d4 b8 ff ff       	call   54e0 <lzma_vli_size>
    9c0c:	44 01 e8             	add    %r13d,%eax
    9c0f:	f3 0f 6f 83 a0 00 00 	movdqu 0xa0(%rbx),%xmm0
    9c16:	00 
    9c17:	66 0f 6e c8          	movd   %eax,%xmm1
    9c1b:	66 0f 6f 15 8d 9f 01 	movdqa 0x19f8d(%rip),%xmm2        # 23bb0 <features+0xf0>
    9c22:	00 
    9c23:	66 0f 6c d1          	punpcklqdq %xmm1,%xmm2
    9c27:	66 0f d4 d0          	paddq  %xmm0,%xmm2
    9c2b:	f3 0f 7f 93 a0 00 00 	movdqu %xmm2,0xa0(%rbx)
    9c32:	00 
    9c33:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
    9c38:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
    9c3d:	b9 10 00 00 00       	mov    $0x10,%ecx
    9c42:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9c47:	be 0a 00 00 00       	mov    $0xa,%esi
    9c4c:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    9c51:	e8 4a 0d 00 00       	call   a9a0 <lzma_check_update>
    9c56:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9c5a:	bd 09 00 00 00       	mov    $0x9,%ebp
    9c5f:	48 3b 83 90 00 00 00 	cmp    0x90(%rbx),%rax
    9c66:	0f 82 61 01 00 00    	jb     9dcd <lzma_index_hash_decode+0x3bd>
    9c6c:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9c70:	48 3b 83 98 00 00 00 	cmp    0x98(%rbx),%rax
    9c77:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    9c7c:	0f 82 4b 01 00 00    	jb     9dcd <lzma_index_hash_decode+0x3bd>
    9c82:	4d 89 e5             	mov    %r12,%r13
    9c85:	48 8b 43 20          	mov    0x20(%rbx),%rax
    9c89:	48 3b 83 a8 00 00 00 	cmp    0xa8(%rbx),%rax
    9c90:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    9c95:	0f 82 32 01 00 00    	jb     9dcd <lzma_index_hash_decode+0x3bd>
    9c9b:	31 c0                	xor    %eax,%eax
    9c9d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    9ca2:	48 ff 09             	decq   (%rcx)
    9ca5:	0f 94 c0             	sete   %al
    9ca8:	8d 0c 45 02 00 00 00 	lea    0x2(,%rax,2),%ecx
    9caf:	e9 ec fd ff ff       	jmp    9aa0 <lzma_index_hash_decode+0x90>
    9cb4:	31 ed                	xor    %ebp,%ebp
    9cb6:	eb 02                	jmp    9cba <lzma_index_hash_decode+0x2aa>
    9cb8:	89 c5                	mov    %eax,%ebp
    9cba:	49 8b 37             	mov    (%r15),%rsi
    9cbd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9cc2:	49 01 c5             	add    %rax,%r13
    9cc5:	48 29 c6             	sub    %rax,%rsi
    9cc8:	8b 93 38 01 00 00    	mov    0x138(%rbx),%edx
    9cce:	4c 89 ef             	mov    %r13,%rdi
    9cd1:	e8 4a 0d 00 00       	call   aa20 <lzma_crc32>
    9cd6:	89 83 38 01 00 00    	mov    %eax,0x138(%rbx)
    9cdc:	e9 ec 00 00 00       	jmp    9dcd <lzma_index_hash_decode+0x3bd>
    9ce1:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9ce5:	bd 09 00 00 00       	mov    $0x9,%ebp
    9cea:	48 3b 83 90 00 00 00 	cmp    0x90(%rbx),%rax
    9cf1:	0f 85 d6 00 00 00    	jne    9dcd <lzma_index_hash_decode+0x3bd>
    9cf7:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9cfb:	48 3b 83 98 00 00 00 	cmp    0x98(%rbx),%rax
    9d02:	0f 85 c5 00 00 00    	jne    9dcd <lzma_index_hash_decode+0x3bd>
    9d08:	48 8b 43 20          	mov    0x20(%rbx),%rax
    9d0c:	48 3b 83 a8 00 00 00 	cmp    0xa8(%rbx),%rax
    9d13:	0f 85 b4 00 00 00    	jne    9dcd <lzma_index_hash_decode+0x3bd>
    9d19:	4c 8d 73 28          	lea    0x28(%rbx),%r14
    9d1d:	4c 89 f7             	mov    %r14,%rdi
    9d20:	be 0a 00 00 00       	mov    $0xa,%esi
    9d25:	e8 c6 0c 00 00       	call   a9f0 <lzma_check_finish>
    9d2a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9d2f:	be 0a 00 00 00       	mov    $0xa,%esi
    9d34:	e8 b7 0c 00 00       	call   a9f0 <lzma_check_finish>
    9d39:	bf 0a 00 00 00       	mov    $0xa,%edi
    9d3e:	e8 0d 0c 00 00       	call   a950 <lzma_check_size>
    9d43:	89 c2                	mov    %eax,%edx
    9d45:	4c 89 f7             	mov    %r14,%rdi
    9d48:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    9d4d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    9d52:	e8 29 84 ff ff       	call   2180 <bcmp@plt>
    9d57:	85 c0                	test   %eax,%eax
    9d59:	75 72                	jne    9dcd <lzma_index_hash_decode+0x3bd>
    9d5b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9d60:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    9d64:	49 8b 37             	mov    (%r15),%rsi
    9d67:	48 29 c6             	sub    %rax,%rsi
    9d6a:	8b 93 38 01 00 00    	mov    0x138(%rbx),%edx
    9d70:	e8 ab 0c 00 00       	call   aa20 <lzma_crc32>
    9d75:	89 83 38 01 00 00    	mov    %eax,0x138(%rbx)
    9d7b:	c7 03 06 00 00 00    	movl   $0x6,(%rbx)
    9d81:	bd 01 00 00 00       	mov    $0x1,%ebp
    9d86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9d8d:	00 00 00 
    9d90:	49 8b 07             	mov    (%r15),%rax
    9d93:	4c 39 e0             	cmp    %r12,%rax
    9d96:	74 4d                	je     9de5 <lzma_index_hash_decode+0x3d5>
    9d98:	8b 8b 30 01 00 00    	mov    0x130(%rbx),%ecx
    9d9e:	8b 93 38 01 00 00    	mov    0x138(%rbx),%edx
    9da4:	c1 e1 03             	shl    $0x3,%ecx
    9da7:	d3 ea                	shr    %cl,%edx
    9da9:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9dad:	49 89 0f             	mov    %rcx,(%r15)
    9db0:	41 38 54 05 00       	cmp    %dl,0x0(%r13,%rax,1)
    9db5:	75 11                	jne    9dc8 <lzma_index_hash_decode+0x3b8>
    9db7:	49 8b 06             	mov    (%r14),%rax
    9dba:	48 ff c0             	inc    %rax
    9dbd:	49 89 06             	mov    %rax,(%r14)
    9dc0:	48 83 f8 04          	cmp    $0x4,%rax
    9dc4:	72 ca                	jb     9d90 <lzma_index_hash_decode+0x380>
    9dc6:	eb 05                	jmp    9dcd <lzma_index_hash_decode+0x3bd>
    9dc8:	bd 09 00 00 00       	mov    $0x9,%ebp
    9dcd:	89 e8                	mov    %ebp,%eax
    9dcf:	48 83 c4 58          	add    $0x58,%rsp
    9dd3:	5b                   	pop    %rbx
    9dd4:	41 5c                	pop    %r12
    9dd6:	41 5d                	pop    %r13
    9dd8:	41 5e                	pop    %r14
    9dda:	41 5f                	pop    %r15
    9ddc:	5d                   	pop    %rbp
    9ddd:	c3                   	ret    
    9dde:	bd 0b 00 00 00       	mov    $0xb,%ebp
    9de3:	eb e8                	jmp    9dcd <lzma_index_hash_decode+0x3bd>
    9de5:	31 ed                	xor    %ebp,%ebp
    9de7:	eb e4                	jmp    9dcd <lzma_index_hash_decode+0x3bd>
    9de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009df0 <lzma_stream_buffer_decode>:
    9df0:	b8 0b 00 00 00       	mov    $0xb,%eax
    9df5:	4d 85 c0             	test   %r8,%r8
    9df8:	74 0d                	je     9e07 <lzma_stream_buffer_decode+0x17>
    9dfa:	4d 8b 10             	mov    (%r8),%r10
    9dfd:	48 85 c9             	test   %rcx,%rcx
    9e00:	75 06                	jne    9e08 <lzma_stream_buffer_decode+0x18>
    9e02:	4d 39 ca             	cmp    %r9,%r10
    9e05:	74 01                	je     9e08 <lzma_stream_buffer_decode+0x18>
    9e07:	c3                   	ret    
    9e08:	55                   	push   %rbp
    9e09:	41 57                	push   %r15
    9e0b:	41 56                	push   %r14
    9e0d:	41 55                	push   %r13
    9e0f:	41 54                	push   %r12
    9e11:	53                   	push   %rbx
    9e12:	48 83 ec 68          	sub    $0x68,%rsp
    9e16:	48 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%rbp
    9e1d:	00 
    9e1e:	48 85 ed             	test   %rbp,%rbp
    9e21:	0f 84 29 01 00 00    	je     9f50 <lzma_stream_buffer_decode+0x160>
    9e27:	4d 39 ca             	cmp    %r9,%r10
    9e2a:	0f 87 20 01 00 00    	ja     9f50 <lzma_stream_buffer_decode+0x160>
    9e30:	4c 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%r14
    9e37:	00 
    9e38:	4c 8b a4 24 a0 00 00 	mov    0xa0(%rsp),%r12
    9e3f:	00 
    9e40:	4c 8b 55 00          	mov    0x0(%rbp),%r10
    9e44:	4d 85 e4             	test   %r12,%r12
    9e47:	75 09                	jne    9e52 <lzma_stream_buffer_decode+0x62>
    9e49:	4d 39 f2             	cmp    %r14,%r10
    9e4c:	0f 85 fe 00 00 00    	jne    9f50 <lzma_stream_buffer_decode+0x160>
    9e52:	40 f6 c6 04          	test   $0x4,%sil
    9e56:	0f 85 f4 00 00 00    	jne    9f50 <lzma_stream_buffer_decode+0x160>
    9e5c:	4d 39 f2             	cmp    %r14,%r10
    9e5f:	0f 87 eb 00 00 00    	ja     9f50 <lzma_stream_buffer_decode+0x160>
    9e65:	49 89 cd             	mov    %rcx,%r13
    9e68:	4d 89 c7             	mov    %r8,%r15
    9e6b:	4c 89 0c 24          	mov    %r9,(%rsp)
    9e6f:	0f 57 c0             	xorps  %xmm0,%xmm0
    9e72:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    9e77:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    9e7c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    9e81:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    9e86:	48 c7 44 24 28 ff ff 	movq   $0xffffffffffffffff,0x28(%rsp)
    9e8d:	ff ff 
    9e8f:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    9e94:	48 8b 07             	mov    (%rdi),%rax
    9e97:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    9e9c:	48 89 d3             	mov    %rdx,%rbx
    9e9f:	89 f1                	mov    %esi,%ecx
    9ea1:	48 89 d6             	mov    %rdx,%rsi
    9ea4:	48 89 c2             	mov    %rax,%rdx
    9ea7:	e8 b4 00 00 00       	call   9f60 <lzma_stream_decoder_init>
    9eac:	85 c0                	test   %eax,%eax
    9eae:	0f 85 8b 00 00 00    	jne    9f3f <lzma_stream_buffer_decode+0x14f>
    9eb4:	4c 89 f9             	mov    %r15,%rcx
    9eb7:	49 8b 07             	mov    (%r15),%rax
    9eba:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9ebf:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9ec3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9ec8:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    9ecd:	48 83 ec 08          	sub    $0x8,%rsp
    9ed1:	48 89 de             	mov    %rbx,%rsi
    9ed4:	4c 89 ea             	mov    %r13,%rdx
    9ed7:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9edc:	4d 89 e1             	mov    %r12,%r9
    9edf:	6a 03                	push   $0x3
    9ee1:	41 56                	push   %r14
    9ee3:	55                   	push   %rbp
    9ee4:	ff 54 24 58          	call   *0x58(%rsp)
    9ee8:	48 83 c4 20          	add    $0x20,%rsp
    9eec:	89 c1                	mov    %eax,%ecx
    9eee:	31 c0                	xor    %eax,%eax
    9ef0:	83 f9 01             	cmp    $0x1,%ecx
    9ef3:	74 4a                	je     9f3f <lzma_stream_buffer_decode+0x14f>
    9ef5:	4c 89 f8             	mov    %r15,%rax
    9ef8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    9efd:	49 89 17             	mov    %rdx,(%r15)
    9f00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9f05:	48 89 45 00          	mov    %rax,0x0(%rbp)
    9f09:	83 f9 06             	cmp    $0x6,%ecx
    9f0c:	74 17                	je     9f25 <lzma_stream_buffer_decode+0x135>
    9f0e:	89 c8                	mov    %ecx,%eax
    9f10:	85 c9                	test   %ecx,%ecx
    9f12:	75 2b                	jne    9f3f <lzma_stream_buffer_decode+0x14f>
    9f14:	31 c0                	xor    %eax,%eax
    9f16:	48 8b 0c 24          	mov    (%rsp),%rcx
    9f1a:	49 39 0f             	cmp    %rcx,(%r15)
    9f1d:	0f 95 c0             	setne  %al
    9f20:	83 c0 09             	add    $0x9,%eax
    9f23:	eb 1a                	jmp    9f3f <lzma_stream_buffer_decode+0x14f>
    9f25:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    9f2a:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
    9f2f:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    9f34:	31 c9                	xor    %ecx,%ecx
    9f36:	ff 54 24 50          	call   *0x50(%rsp)
    9f3a:	b8 06 00 00 00       	mov    $0x6,%eax
    9f3f:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    9f44:	48 89 de             	mov    %rbx,%rsi
    9f47:	89 c3                	mov    %eax,%ebx
    9f49:	e8 f2 90 ff ff       	call   3040 <lzma_next_end>
    9f4e:	89 d8                	mov    %ebx,%eax
    9f50:	48 83 c4 68          	add    $0x68,%rsp
    9f54:	5b                   	pop    %rbx
    9f55:	41 5c                	pop    %r12
    9f57:	41 5d                	pop    %r13
    9f59:	41 5e                	pop    %r14
    9f5b:	41 5f                	pop    %r15
    9f5d:	5d                   	pop    %rbp
    9f5e:	c3                   	ret    
    9f5f:	90                   	nop

0000000000009f60 <lzma_stream_decoder_init>:
    9f60:	55                   	push   %rbp
    9f61:	41 57                	push   %r15
    9f63:	41 56                	push   %r14
    9f65:	41 54                	push   %r12
    9f67:	53                   	push   %rbx
    9f68:	89 cd                	mov    %ecx,%ebp
    9f6a:	49 89 d7             	mov    %rdx,%r15
    9f6d:	48 89 f3             	mov    %rsi,%rbx
    9f70:	49 89 fe             	mov    %rdi,%r14
    9f73:	4c 8d 25 e6 ff ff ff 	lea    -0x1a(%rip),%r12        # 9f60 <lzma_stream_decoder_init>
    9f7a:	4c 39 67 10          	cmp    %r12,0x10(%rdi)
    9f7e:	74 0b                	je     9f8b <lzma_stream_decoder_init+0x2b>
    9f80:	4c 89 f7             	mov    %r14,%rdi
    9f83:	48 89 de             	mov    %rbx,%rsi
    9f86:	e8 b5 90 ff ff       	call   3040 <lzma_next_end>
    9f8b:	4d 89 66 10          	mov    %r12,0x10(%r14)
    9f8f:	4d 85 ff             	test   %r15,%r15
    9f92:	0f 84 1a 01 00 00    	je     a0b2 <lzma_stream_decoder_init+0x152>
    9f98:	b8 08 00 00 00       	mov    $0x8,%eax
    9f9d:	83 fd 0f             	cmp    $0xf,%ebp
    9fa0:	0f 87 18 01 00 00    	ja     a0be <lzma_stream_decoder_init+0x15e>
    9fa6:	49 8b 06             	mov    (%r14),%rax
    9fa9:	48 85 c0             	test   %rax,%rax
    9fac:	75 75                	jne    a023 <lzma_stream_decoder_init+0xc3>
    9fae:	bf 78 05 00 00       	mov    $0x578,%edi
    9fb3:	48 89 de             	mov    %rbx,%rsi
    9fb6:	e8 05 8f ff ff       	call   2ec0 <lzma_alloc>
    9fbb:	49 89 06             	mov    %rax,(%r14)
    9fbe:	48 85 c0             	test   %rax,%rax
    9fc1:	0f 84 f2 00 00 00    	je     a0b9 <lzma_stream_decoder_init+0x159>
    9fc7:	48 8d 0d 02 01 00 00 	lea    0x102(%rip),%rcx        # a0d0 <stream_decode>
    9fce:	49 89 4e 18          	mov    %rcx,0x18(%r14)
    9fd2:	48 8d 0d d7 05 00 00 	lea    0x5d7(%rip),%rcx        # a5b0 <stream_decoder_end>
    9fd9:	49 89 4e 20          	mov    %rcx,0x20(%r14)
    9fdd:	48 8d 0d 0c 06 00 00 	lea    0x60c(%rip),%rcx        # a5f0 <stream_decoder_get_check>
    9fe4:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    9fe8:	48 8d 0d 11 06 00 00 	lea    0x611(%rip),%rcx        # a600 <stream_decoder_memconfig>
    9fef:	49 89 4e 30          	mov    %rcx,0x30(%r14)
    9ff3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9ffa:	00 
    9ffb:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    a002:	ff 
    a003:	0f 57 c0             	xorps  %xmm0,%xmm0
    a006:	0f 11 40 18          	movups %xmm0,0x18(%rax)
    a00a:	0f 11 40 28          	movups %xmm0,0x28(%rax)
    a00e:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    a012:	49 8b 06             	mov    (%r14),%rax
    a015:	48 c7 80 50 01 00 00 	movq   $0x0,0x150(%rax)
    a01c:	00 00 00 00 
    a020:	49 8b 06             	mov    (%r14),%rax
    a023:	4c 89 b8 58 01 00 00 	mov    %r15,0x158(%rax)
    a02a:	49 8b 06             	mov    (%r14),%rax
    a02d:	48 c7 80 60 01 00 00 	movq   $0x8000,0x160(%rax)
    a034:	00 80 00 00 
    a038:	49 8b 06             	mov    (%r14),%rax
    a03b:	89 e9                	mov    %ebp,%ecx
    a03d:	80 e1 01             	and    $0x1,%cl
    a040:	88 88 68 01 00 00    	mov    %cl,0x168(%rax)
    a046:	49 8b 06             	mov    (%r14),%rax
    a049:	89 e9                	mov    %ebp,%ecx
    a04b:	d0 e9                	shr    %cl
    a04d:	80 e1 01             	and    $0x1,%cl
    a050:	88 88 69 01 00 00    	mov    %cl,0x169(%rax)
    a056:	49 8b 06             	mov    (%r14),%rax
    a059:	89 e9                	mov    %ebp,%ecx
    a05b:	c0 e9 02             	shr    $0x2,%cl
    a05e:	80 e1 01             	and    $0x1,%cl
    a061:	88 88 6a 01 00 00    	mov    %cl,0x16a(%rax)
    a067:	83 fd 08             	cmp    $0x8,%ebp
    a06a:	49 8b 06             	mov    (%r14),%rax
    a06d:	0f 93 80 6b 01 00 00 	setae  0x16b(%rax)
    a074:	49 8b 06             	mov    (%r14),%rax
    a077:	c6 80 6c 01 00 00 01 	movb   $0x1,0x16c(%rax)
    a07e:	4d 8b 36             	mov    (%r14),%r14
    a081:	49 8b be 50 01 00 00 	mov    0x150(%r14),%rdi
    a088:	48 89 de             	mov    %rbx,%rsi
    a08b:	e8 b0 f7 ff ff       	call   9840 <lzma_index_hash_init>
    a090:	49 89 86 50 01 00 00 	mov    %rax,0x150(%r14)
    a097:	48 85 c0             	test   %rax,%rax
    a09a:	74 1d                	je     a0b9 <lzma_stream_decoder_init+0x159>
    a09c:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
    a0a3:	49 c7 86 70 01 00 00 	movq   $0x0,0x170(%r14)
    a0aa:	00 00 00 00 
    a0ae:	31 c0                	xor    %eax,%eax
    a0b0:	eb 0c                	jmp    a0be <lzma_stream_decoder_init+0x15e>
    a0b2:	b8 0b 00 00 00       	mov    $0xb,%eax
    a0b7:	eb 05                	jmp    a0be <lzma_stream_decoder_init+0x15e>
    a0b9:	b8 05 00 00 00       	mov    $0x5,%eax
    a0be:	5b                   	pop    %rbx
    a0bf:	41 5c                	pop    %r12
    a0c1:	41 5e                	pop    %r14
    a0c3:	41 5f                	pop    %r15
    a0c5:	5d                   	pop    %rbp
    a0c6:	c3                   	ret    
    a0c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a0ce:	00 00 

000000000000a0d0 <stream_decode>:
    a0d0:	55                   	push   %rbp
    a0d1:	41 57                	push   %r15
    a0d3:	41 56                	push   %r14
    a0d5:	41 55                	push   %r13
    a0d7:	41 54                	push   %r12
    a0d9:	53                   	push   %rbx
    a0da:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    a0e1:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    a0e6:	49 89 cf             	mov    %rcx,%r15
    a0e9:	48 89 d5             	mov    %rdx,%rbp
    a0ec:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a0f1:	48 89 fb             	mov    %rdi,%rbx
    a0f4:	4c 8b a4 24 d8 00 00 	mov    0xd8(%rsp),%r12
    a0fb:	00 
    a0fc:	48 8d 87 78 01 00 00 	lea    0x178(%rdi),%rax
    a103:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    a108:	4c 8d af 70 01 00 00 	lea    0x170(%rdi),%r13
    a10f:	48 8d 87 18 01 00 00 	lea    0x118(%rdi),%rax
    a116:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    a11b:	48 8d 47 48          	lea    0x48(%rdi),%rax
    a11f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    a124:	48 8d 47 08          	lea    0x8(%rdi),%rax
    a128:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a12d:	4c 89 c0             	mov    %r8,%rax
    a130:	48 f7 d8             	neg    %rax
    a133:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    a138:	8b 07                	mov    (%rdi),%eax
    a13a:	4c 89 04 24          	mov    %r8,(%rsp)
    a13e:	83 f8 05             	cmp    $0x5,%eax
    a141:	0f 87 30 04 00 00    	ja     a577 <stream_decode+0x4a7>
    a147:	89 c0                	mov    %eax,%eax
    a149:	48 8d 0d ac 9d 01 00 	lea    0x19dac(%rip),%rcx        # 23efc <stream_encode.convert+0x16c>
    a150:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a154:	48 01 c8             	add    %rcx,%rax
    a157:	ff e0                	jmp    *%rax
    a159:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
    a15f:	48 89 ef             	mov    %rbp,%rdi
    a162:	4c 89 fe             	mov    %r15,%rsi
    a165:	4c 89 c2             	mov    %r8,%rdx
    a168:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    a16d:	4c 89 f1             	mov    %r14,%rcx
    a170:	4d 89 e8             	mov    %r13,%r8
    a173:	e8 a8 8d ff ff       	call   2f20 <lzma_bufcpy>
    a178:	49 83 7d 00 0c       	cmpq   $0xc,0x0(%r13)
    a17d:	0f 82 a7 03 00 00    	jb     a52a <stream_decode+0x45a>
    a183:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    a18a:	00 
    a18b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    a190:	4c 89 f6             	mov    %r14,%rsi
    a193:	e8 08 05 00 00       	call   a6a0 <lzma_stream_header_decode>
    a198:	85 c0                	test   %eax,%eax
    a19a:	0f 85 8f 03 00 00    	jne    a52f <stream_decode+0x45f>
    a1a0:	c6 83 6c 01 00 00 00 	movb   $0x0,0x16c(%rbx)
    a1a7:	8b bb 28 01 00 00    	mov    0x128(%rbx),%edi
    a1ad:	89 7b 50             	mov    %edi,0x50(%rbx)
    a1b0:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    a1b6:	80 bb 68 01 00 00 00 	cmpb   $0x0,0x168(%rbx)
    a1bd:	74 08                	je     a1c7 <stream_decode+0xf7>
    a1bf:	85 ff                	test   %edi,%edi
    a1c1:	0f 84 b8 03 00 00    	je     a57f <stream_decode+0x4af>
    a1c7:	80 bb 69 01 00 00 00 	cmpb   $0x0,0x169(%rbx)
    a1ce:	74 0d                	je     a1dd <stream_decode+0x10d>
    a1d0:	e8 5b 07 00 00       	call   a930 <lzma_check_is_supported>
    a1d5:	84 c0                	test   %al,%al
    a1d7:	0f 84 b2 03 00 00    	je     a58f <stream_decode+0x4bf>
    a1dd:	80 bb 6a 01 00 00 00 	cmpb   $0x0,0x16a(%rbx)
    a1e4:	4c 8b 04 24          	mov    (%rsp),%r8
    a1e8:	0f 85 99 03 00 00    	jne    a587 <stream_decode+0x4b7>
    a1ee:	49 8b 07             	mov    (%r15),%rax
    a1f1:	45 31 f6             	xor    %r14d,%r14d
    a1f4:	4c 39 c0             	cmp    %r8,%rax
    a1f7:	0f 83 98 03 00 00    	jae    a595 <stream_decode+0x4c5>
    a1fd:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    a202:	0f 84 60 01 00 00    	je     a368 <stream_decode+0x298>
    a208:	8b 43 4c             	mov    0x4c(%rbx),%eax
    a20b:	e9 6f 01 00 00       	jmp    a37f <stream_decode+0x2af>
    a210:	4d 39 07             	cmp    %r8,(%r15)
    a213:	0f 83 11 03 00 00    	jae    a52a <stream_decode+0x45a>
    a219:	48 8b bb 50 01 00 00 	mov    0x150(%rbx),%rdi
    a220:	48 89 ee             	mov    %rbp,%rsi
    a223:	4c 89 fa             	mov    %r15,%rdx
    a226:	4c 89 c1             	mov    %r8,%rcx
    a229:	e8 e2 f7 ff ff       	call   9a10 <lzma_index_hash_decode>
    a22e:	83 f8 01             	cmp    $0x1,%eax
    a231:	0f 85 ee 02 00 00    	jne    a525 <stream_decode+0x455>
    a237:	c7 03 04 00 00 00    	movl   $0x4,(%rbx)
    a23d:	4c 8b 04 24          	mov    (%rsp),%r8
    a241:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
    a247:	48 89 ef             	mov    %rbp,%rdi
    a24a:	4c 89 fe             	mov    %r15,%rsi
    a24d:	4c 89 c2             	mov    %r8,%rdx
    a250:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    a255:	4c 89 f1             	mov    %r14,%rcx
    a258:	4d 89 e8             	mov    %r13,%r8
    a25b:	e8 c0 8c ff ff       	call   2f20 <lzma_bufcpy>
    a260:	49 83 7d 00 0c       	cmpq   $0xc,0x0(%r13)
    a265:	0f 82 bf 02 00 00    	jb     a52a <stream_decode+0x45a>
    a26b:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    a272:	00 
    a273:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a278:	4c 89 f6             	mov    %r14,%rsi
    a27b:	e8 b0 04 00 00       	call   a730 <lzma_stream_footer_decode>
    a280:	85 c0                	test   %eax,%eax
    a282:	0f 85 c5 02 00 00    	jne    a54d <stream_decode+0x47d>
    a288:	48 8b bb 50 01 00 00 	mov    0x150(%rbx),%rdi
    a28f:	e8 3c f6 ff ff       	call   98d0 <lzma_index_hash_size>
    a294:	48 3b 44 24 48       	cmp    0x48(%rsp),%rax
    a299:	0f 85 c8 02 00 00    	jne    a567 <stream_decode+0x497>
    a29f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    a2a4:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    a2a9:	e8 b2 b1 ff ff       	call   5460 <lzma_stream_flags_compare>
    a2ae:	85 c0                	test   %eax,%eax
    a2b0:	0f 85 6f 02 00 00    	jne    a525 <stream_decode+0x455>
    a2b6:	80 bb 6b 01 00 00 00 	cmpb   $0x0,0x16b(%rbx)
    a2bd:	0f 84 99 02 00 00    	je     a55c <stream_decode+0x48c>
    a2c3:	c7 03 05 00 00 00    	movl   $0x5,(%rbx)
    a2c9:	4c 8b 04 24          	mov    (%rsp),%r8
    a2cd:	49 8b 07             	mov    (%r15),%rax
    a2d0:	4c 39 c0             	cmp    %r8,%rax
    a2d3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    a2d8:	0f 83 20 02 00 00    	jae    a4fe <stream_decode+0x42e>
    a2de:	48 ff c0             	inc    %rax
    a2e1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    a2e8:	0f 1f 84 00 00 00 00 
    a2ef:	00 
    a2f0:	80 7c 05 ff 00       	cmpb   $0x0,-0x1(%rbp,%rax,1)
    a2f5:	75 29                	jne    a320 <stream_decode+0x250>
    a2f7:	49 89 07             	mov    %rax,(%r15)
    a2fa:	41 8b 4d 00          	mov    0x0(%r13),%ecx
    a2fe:	ff c1                	inc    %ecx
    a300:	83 e1 03             	and    $0x3,%ecx
    a303:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    a307:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a30b:	48 ff c1             	inc    %rcx
    a30e:	48 ff c0             	inc    %rax
    a311:	48 83 f9 01          	cmp    $0x1,%rcx
    a315:	75 d9                	jne    a2f0 <stream_decode+0x220>
    a317:	e9 e2 01 00 00       	jmp    a4fe <stream_decode+0x42e>
    a31c:	0f 1f 40 00          	nopl   0x0(%rax)
    a320:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    a325:	0f 85 39 02 00 00    	jne    a564 <stream_decode+0x494>
    a32b:	48 8b bb 50 01 00 00 	mov    0x150(%rbx),%rdi
    a332:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a337:	e8 04 f5 ff ff       	call   9840 <lzma_index_hash_init>
    a33c:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
    a343:	48 85 c0             	test   %rax,%rax
    a346:	0f 84 23 02 00 00    	je     a56f <stream_decode+0x49f>
    a34c:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    a352:	48 c7 83 70 01 00 00 	movq   $0x0,0x170(%rbx)
    a359:	00 00 00 00 
    a35d:	31 c0                	xor    %eax,%eax
    a35f:	4c 8b 04 24          	mov    (%rsp),%r8
    a363:	e9 d6 fd ff ff       	jmp    a13e <stream_decode+0x6e>
    a368:	0f b6 44 05 00       	movzbl 0x0(%rbp,%rax,1),%eax
    a36d:	85 c0                	test   %eax,%eax
    a36f:	0f 84 79 01 00 00    	je     a4ee <stream_decode+0x41e>
    a375:	8d 04 85 04 00 00 00 	lea    0x4(,%rax,4),%eax
    a37c:	89 43 4c             	mov    %eax,0x4c(%rbx)
    a37f:	41 89 c1             	mov    %eax,%r9d
    a382:	48 89 ef             	mov    %rbp,%rdi
    a385:	4c 89 fe             	mov    %r15,%rsi
    a388:	4c 89 c2             	mov    %r8,%rdx
    a38b:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    a390:	4c 89 e1             	mov    %r12,%rcx
    a393:	4d 89 e8             	mov    %r13,%r8
    a396:	e8 85 8b ff ff       	call   2f20 <lzma_bufcpy>
    a39b:	8b 43 4c             	mov    0x4c(%rbx),%eax
    a39e:	48 39 83 70 01 00 00 	cmp    %rax,0x170(%rbx)
    a3a5:	0f 82 ea 01 00 00    	jb     a595 <stream_decode+0x4c5>
    a3ab:	48 c7 83 70 01 00 00 	movq   $0x0,0x170(%rbx)
    a3b2:	00 00 00 00 
    a3b6:	c7 43 48 00 00 00 00 	movl   $0x0,0x48(%rbx)
    a3bd:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    a3c2:	48 89 43 68          	mov    %rax,0x68(%rbx)
    a3c6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    a3cb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a3d0:	4c 89 e2             	mov    %r12,%rdx
    a3d3:	e8 c8 e6 ff ff       	call   8aa0 <lzma_block_header_decode>
    a3d8:	85 c0                	test   %eax,%eax
    a3da:	0f 85 45 01 00 00    	jne    a525 <stream_decode+0x455>
    a3e0:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a3e5:	e8 16 ed ff ff       	call   9100 <lzma_raw_decoder_memusage>
    a3ea:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    a3ee:	74 2f                	je     a41f <stream_decode+0x34f>
    a3f0:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
    a3f7:	41 be 06 00 00 00    	mov    $0x6,%r14d
    a3fd:	48 3b 83 58 01 00 00 	cmp    0x158(%rbx),%rax
    a404:	77 1f                	ja     a425 <stream_decode+0x355>
    a406:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a40b:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a410:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    a415:	e8 06 e2 ff ff       	call   8620 <lzma_block_decoder_init>
    a41a:	41 89 c6             	mov    %eax,%r14d
    a41d:	eb 06                	jmp    a425 <stream_decode+0x355>
    a41f:	41 be 08 00 00 00    	mov    $0x8,%r14d
    a425:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    a42a:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    a42f:	4c 89 e6             	mov    %r12,%rsi
    a432:	e8 b9 8a ff ff       	call   2ef0 <lzma_free>
    a437:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    a43c:	4c 89 e6             	mov    %r12,%rsi
    a43f:	e8 ac 8a ff ff       	call   2ef0 <lzma_free>
    a444:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    a449:	4c 89 e6             	mov    %r12,%rsi
    a44c:	e8 9f 8a ff ff       	call   2ef0 <lzma_free>
    a451:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    a456:	4c 89 e6             	mov    %r12,%rsi
    a459:	e8 92 8a ff ff       	call   2ef0 <lzma_free>
    a45e:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
    a465:	00 
    a466:	45 85 f6             	test   %r14d,%r14d
    a469:	0f 85 26 01 00 00    	jne    a595 <stream_decode+0x4c5>
    a46f:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    a475:	4c 8b 04 24          	mov    (%rsp),%r8
    a479:	4c 8b a4 24 d8 00 00 	mov    0xd8(%rsp),%r12
    a480:	00 
    a481:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    a485:	48 83 ec 08          	sub    $0x8,%rsp
    a489:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a48e:	48 89 ea             	mov    %rbp,%rdx
    a491:	4c 89 f9             	mov    %r15,%rcx
    a494:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    a499:	8b 84 24 e8 00 00 00 	mov    0xe8(%rsp),%eax
    a4a0:	50                   	push   %rax
    a4a1:	41 54                	push   %r12
    a4a3:	ff b4 24 e8 00 00 00 	push   0xe8(%rsp)
    a4aa:	ff 53 20             	call   *0x20(%rbx)
    a4ad:	48 83 c4 20          	add    $0x20,%rsp
    a4b1:	83 f8 01             	cmp    $0x1,%eax
    a4b4:	75 6f                	jne    a525 <stream_decode+0x455>
    a4b6:	4c 8b b3 50 01 00 00 	mov    0x150(%rbx),%r14
    a4bd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    a4c2:	e8 e9 91 ff ff       	call   36b0 <lzma_block_unpadded_size>
    a4c7:	48 8b 53 60          	mov    0x60(%rbx),%rdx
    a4cb:	4c 89 f7             	mov    %r14,%rdi
    a4ce:	48 89 c6             	mov    %rax,%rsi
    a4d1:	e8 1a f4 ff ff       	call   98f0 <lzma_index_hash_append>
    a4d6:	85 c0                	test   %eax,%eax
    a4d8:	75 4b                	jne    a525 <stream_decode+0x455>
    a4da:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    a4e0:	b8 01 00 00 00       	mov    $0x1,%eax
    a4e5:	4c 8b 04 24          	mov    (%rsp),%r8
    a4e9:	e9 50 fc ff ff       	jmp    a13e <stream_decode+0x6e>
    a4ee:	c7 03 03 00 00 00    	movl   $0x3,(%rbx)
    a4f4:	b8 03 00 00 00       	mov    $0x3,%eax
    a4f9:	e9 40 fc ff ff       	jmp    a13e <stream_decode+0x6e>
    a4fe:	45 31 f6             	xor    %r14d,%r14d
    a501:	8b 84 24 e0 00 00 00 	mov    0xe0(%rsp),%eax
    a508:	83 f8 03             	cmp    $0x3,%eax
    a50b:	0f 85 84 00 00 00    	jne    a595 <stream_decode+0x4c5>
    a511:	31 c0                	xor    %eax,%eax
    a513:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    a518:	0f 95 c0             	setne  %al
    a51b:	44 8d 34 c5 01 00 00 	lea    0x1(,%rax,8),%r14d
    a522:	00 
    a523:	eb 70                	jmp    a595 <stream_decode+0x4c5>
    a525:	41 89 c6             	mov    %eax,%r14d
    a528:	eb 6b                	jmp    a595 <stream_decode+0x4c5>
    a52a:	45 31 f6             	xor    %r14d,%r14d
    a52d:	eb 66                	jmp    a595 <stream_decode+0x4c5>
    a52f:	41 89 c6             	mov    %eax,%r14d
    a532:	83 f8 07             	cmp    $0x7,%eax
    a535:	75 5e                	jne    a595 <stream_decode+0x4c5>
    a537:	31 c0                	xor    %eax,%eax
    a539:	80 bb 6c 01 00 00 00 	cmpb   $0x0,0x16c(%rbx)
    a540:	0f 94 c0             	sete   %al
    a543:	44 8d 34 45 07 00 00 	lea    0x7(,%rax,2),%r14d
    a54a:	00 
    a54b:	eb 48                	jmp    a595 <stream_decode+0x4c5>
    a54d:	83 f8 07             	cmp    $0x7,%eax
    a550:	41 be 09 00 00 00    	mov    $0x9,%r14d
    a556:	44 0f 45 f0          	cmovne %eax,%r14d
    a55a:	eb 39                	jmp    a595 <stream_decode+0x4c5>
    a55c:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a562:	eb 31                	jmp    a595 <stream_decode+0x4c5>
    a564:	49 89 07             	mov    %rax,(%r15)
    a567:	41 be 09 00 00 00    	mov    $0x9,%r14d
    a56d:	eb 26                	jmp    a595 <stream_decode+0x4c5>
    a56f:	41 be 05 00 00 00    	mov    $0x5,%r14d
    a575:	eb 1e                	jmp    a595 <stream_decode+0x4c5>
    a577:	41 be 0b 00 00 00    	mov    $0xb,%r14d
    a57d:	eb 16                	jmp    a595 <stream_decode+0x4c5>
    a57f:	41 be 02 00 00 00    	mov    $0x2,%r14d
    a585:	eb 0e                	jmp    a595 <stream_decode+0x4c5>
    a587:	41 be 04 00 00 00    	mov    $0x4,%r14d
    a58d:	eb 06                	jmp    a595 <stream_decode+0x4c5>
    a58f:	41 be 03 00 00 00    	mov    $0x3,%r14d
    a595:	44 89 f0             	mov    %r14d,%eax
    a598:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    a59f:	5b                   	pop    %rbx
    a5a0:	41 5c                	pop    %r12
    a5a2:	41 5d                	pop    %r13
    a5a4:	41 5e                	pop    %r14
    a5a6:	41 5f                	pop    %r15
    a5a8:	5d                   	pop    %rbp
    a5a9:	c3                   	ret    
    a5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a5b0 <stream_decoder_end>:
    a5b0:	41 56                	push   %r14
    a5b2:	53                   	push   %rbx
    a5b3:	50                   	push   %rax
    a5b4:	48 89 f3             	mov    %rsi,%rbx
    a5b7:	49 89 fe             	mov    %rdi,%r14
    a5ba:	48 83 c7 08          	add    $0x8,%rdi
    a5be:	e8 7d 8a ff ff       	call   3040 <lzma_next_end>
    a5c3:	49 8b be 50 01 00 00 	mov    0x150(%r14),%rdi
    a5ca:	48 89 de             	mov    %rbx,%rsi
    a5cd:	e8 ee f2 ff ff       	call   98c0 <lzma_index_hash_end>
    a5d2:	4c 89 f7             	mov    %r14,%rdi
    a5d5:	48 89 de             	mov    %rbx,%rsi
    a5d8:	48 83 c4 08          	add    $0x8,%rsp
    a5dc:	5b                   	pop    %rbx
    a5dd:	41 5e                	pop    %r14
    a5df:	e9 0c 89 ff ff       	jmp    2ef0 <lzma_free>
    a5e4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    a5eb:	00 00 00 00 00 

000000000000a5f0 <stream_decoder_get_check>:
    a5f0:	8b 87 28 01 00 00    	mov    0x128(%rdi),%eax
    a5f6:	c3                   	ret    
    a5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a5fe:	00 00 

000000000000a600 <stream_decoder_memconfig>:
    a600:	48 8b 87 60 01 00 00 	mov    0x160(%rdi),%rax
    a607:	48 89 06             	mov    %rax,(%rsi)
    a60a:	48 8b 87 58 01 00 00 	mov    0x158(%rdi),%rax
    a611:	48 89 02             	mov    %rax,(%rdx)
    a614:	31 c0                	xor    %eax,%eax
    a616:	48 85 c9             	test   %rcx,%rcx
    a619:	74 17                	je     a632 <stream_decoder_memconfig+0x32>
    a61b:	b8 06 00 00 00       	mov    $0x6,%eax
    a620:	48 39 8f 60 01 00 00 	cmp    %rcx,0x160(%rdi)
    a627:	77 09                	ja     a632 <stream_decoder_memconfig+0x32>
    a629:	48 89 8f 58 01 00 00 	mov    %rcx,0x158(%rdi)
    a630:	31 c0                	xor    %eax,%eax
    a632:	c3                   	ret    
    a633:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    a63a:	84 00 00 00 00 00 

000000000000a640 <lzma_stream_decoder>:
    a640:	55                   	push   %rbp
    a641:	41 56                	push   %r14
    a643:	53                   	push   %rbx
    a644:	89 d5                	mov    %edx,%ebp
    a646:	49 89 f6             	mov    %rsi,%r14
    a649:	48 89 fb             	mov    %rdi,%rbx
    a64c:	e8 8f 8a ff ff       	call   30e0 <lzma_strm_init>
    a651:	85 c0                	test   %eax,%eax
    a653:	74 05                	je     a65a <lzma_stream_decoder+0x1a>
    a655:	5b                   	pop    %rbx
    a656:	41 5e                	pop    %r14
    a658:	5d                   	pop    %rbp
    a659:	c3                   	ret    
    a65a:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    a65e:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    a662:	4c 89 f2             	mov    %r14,%rdx
    a665:	89 e9                	mov    %ebp,%ecx
    a667:	e8 f4 f8 ff ff       	call   9f60 <lzma_stream_decoder_init>
    a66c:	85 c0                	test   %eax,%eax
    a66e:	74 11                	je     a681 <lzma_stream_decoder+0x41>
    a670:	48 89 df             	mov    %rbx,%rdi
    a673:	89 c3                	mov    %eax,%ebx
    a675:	e8 96 8d ff ff       	call   3410 <lzma_end>
    a67a:	89 d8                	mov    %ebx,%eax
    a67c:	5b                   	pop    %rbx
    a67d:	41 5e                	pop    %r14
    a67f:	5d                   	pop    %rbp
    a680:	c3                   	ret    
    a681:	48 8b 43 38          	mov    0x38(%rbx),%rax
    a685:	c6 40 50 01          	movb   $0x1,0x50(%rax)
    a689:	48 8b 43 38          	mov    0x38(%rbx),%rax
    a68d:	c6 40 53 01          	movb   $0x1,0x53(%rax)
    a691:	31 c0                	xor    %eax,%eax
    a693:	5b                   	pop    %rbx
    a694:	41 5e                	pop    %r14
    a696:	5d                   	pop    %rbp
    a697:	c3                   	ret    
    a698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a69f:	00 

000000000000a6a0 <lzma_stream_header_decode>:
    a6a0:	41 57                	push   %r15
    a6a2:	41 56                	push   %r14
    a6a4:	53                   	push   %rbx
    a6a5:	8b 06                	mov    (%rsi),%eax
    a6a7:	48 8d 0d 32 95 01 00 	lea    0x19532(%rip),%rcx        # 23be0 <lzma_header_magic>
    a6ae:	33 01                	xor    (%rcx),%eax
    a6b0:	0f b7 56 04          	movzwl 0x4(%rsi),%edx
    a6b4:	66 33 51 04          	xor    0x4(%rcx),%dx
    a6b8:	0f b7 ca             	movzwl %dx,%ecx
    a6bb:	09 c1                	or     %eax,%ecx
    a6bd:	b8 07 00 00 00       	mov    $0x7,%eax
    a6c2:	74 06                	je     a6ca <lzma_stream_header_decode+0x2a>
    a6c4:	5b                   	pop    %rbx
    a6c5:	41 5e                	pop    %r14
    a6c7:	41 5f                	pop    %r15
    a6c9:	c3                   	ret    
    a6ca:	48 89 f3             	mov    %rsi,%rbx
    a6cd:	49 89 fe             	mov    %rdi,%r14
    a6d0:	4c 8d 7e 06          	lea    0x6(%rsi),%r15
    a6d4:	be 02 00 00 00       	mov    $0x2,%esi
    a6d9:	4c 89 ff             	mov    %r15,%rdi
    a6dc:	31 d2                	xor    %edx,%edx
    a6de:	e8 3d 03 00 00       	call   aa20 <lzma_crc32>
    a6e3:	89 c1                	mov    %eax,%ecx
    a6e5:	b8 09 00 00 00       	mov    $0x9,%eax
    a6ea:	3b 4b 08             	cmp    0x8(%rbx),%ecx
    a6ed:	75 d5                	jne    a6c4 <lzma_stream_header_decode+0x24>
    a6ef:	b8 08 00 00 00       	mov    $0x8,%eax
    a6f4:	41 80 3f 00          	cmpb   $0x0,(%r15)
    a6f8:	75 ca                	jne    a6c4 <lzma_stream_header_decode+0x24>
    a6fa:	80 7b 07 0f          	cmpb   $0xf,0x7(%rbx)
    a6fe:	77 c4                	ja     a6c4 <lzma_stream_header_decode+0x24>
    a700:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
    a707:	0f b6 43 07          	movzbl 0x7(%rbx),%eax
    a70b:	83 e0 0f             	and    $0xf,%eax
    a70e:	41 89 46 10          	mov    %eax,0x10(%r14)
    a712:	49 c7 46 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%r14)
    a719:	ff 
    a71a:	31 c0                	xor    %eax,%eax
    a71c:	5b                   	pop    %rbx
    a71d:	41 5e                	pop    %r14
    a71f:	41 5f                	pop    %r15
    a721:	c3                   	ret    
    a722:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    a729:	1f 84 00 00 00 00 00 

000000000000a730 <lzma_stream_footer_decode>:
    a730:	41 56                	push   %r14
    a732:	53                   	push   %rbx
    a733:	50                   	push   %rax
    a734:	0f b7 4e 0a          	movzwl 0xa(%rsi),%ecx
    a738:	48 8d 15 a7 94 01 00 	lea    0x194a7(%rip),%rdx        # 23be6 <lzma_footer_magic>
    a73f:	b8 07 00 00 00       	mov    $0x7,%eax
    a744:	66 3b 0a             	cmp    (%rdx),%cx
    a747:	74 08                	je     a751 <lzma_stream_footer_decode+0x21>
    a749:	48 83 c4 08          	add    $0x8,%rsp
    a74d:	5b                   	pop    %rbx
    a74e:	41 5e                	pop    %r14
    a750:	c3                   	ret    
    a751:	49 89 f6             	mov    %rsi,%r14
    a754:	48 89 fb             	mov    %rdi,%rbx
    a757:	48 8d 7e 04          	lea    0x4(%rsi),%rdi
    a75b:	be 06 00 00 00       	mov    $0x6,%esi
    a760:	31 d2                	xor    %edx,%edx
    a762:	e8 b9 02 00 00       	call   aa20 <lzma_crc32>
    a767:	89 c1                	mov    %eax,%ecx
    a769:	b8 09 00 00 00       	mov    $0x9,%eax
    a76e:	41 3b 0e             	cmp    (%r14),%ecx
    a771:	75 d6                	jne    a749 <lzma_stream_footer_decode+0x19>
    a773:	b8 08 00 00 00       	mov    $0x8,%eax
    a778:	41 80 7e 08 00       	cmpb   $0x0,0x8(%r14)
    a77d:	75 ca                	jne    a749 <lzma_stream_footer_decode+0x19>
    a77f:	41 80 7e 09 0f       	cmpb   $0xf,0x9(%r14)
    a784:	77 c3                	ja     a749 <lzma_stream_footer_decode+0x19>
    a786:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    a78c:	41 0f b6 46 09       	movzbl 0x9(%r14),%eax
    a791:	83 e0 0f             	and    $0xf,%eax
    a794:	89 43 10             	mov    %eax,0x10(%rbx)
    a797:	41 8b 46 04          	mov    0x4(%r14),%eax
    a79b:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    a7a2:	00 
    a7a3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    a7a7:	31 c0                	xor    %eax,%eax
    a7a9:	48 83 c4 08          	add    $0x8,%rsp
    a7ad:	5b                   	pop    %rbx
    a7ae:	41 5e                	pop    %r14
    a7b0:	c3                   	ret    
    a7b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a7b8:	00 00 00 
    a7bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a7c0 <lzma_vli_decode>:
    a7c0:	41 57                	push   %r15
    a7c2:	41 56                	push   %r14
    a7c4:	41 55                	push   %r13
    a7c6:	41 54                	push   %r12
    a7c8:	53                   	push   %rbx
    a7c9:	49 89 c9             	mov    %rcx,%r9
    a7cc:	48 85 f6             	test   %rsi,%rsi
    a7cf:	74 1c                	je     a7ed <lzma_vli_decode+0x2d>
    a7d1:	4c 8b 16             	mov    (%rsi),%r10
    a7d4:	4d 85 d2             	test   %r10,%r10
    a7d7:	74 39                	je     a812 <lzma_vli_decode+0x52>
    a7d9:	b8 0b 00 00 00       	mov    $0xb,%eax
    a7de:	49 83 fa 08          	cmp    $0x8,%r10
    a7e2:	0f 87 31 01 00 00    	ja     a919 <lzma_vli_decode+0x159>
    a7e8:	4c 8b 1f             	mov    (%rdi),%r11
    a7eb:	eb 2f                	jmp    a81c <lzma_vli_decode+0x5c>
    a7ed:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a7f4:	49 8b 19             	mov    (%r9),%rbx
    a7f7:	b8 09 00 00 00       	mov    $0x9,%eax
    a7fc:	4c 39 c3             	cmp    %r8,%rbx
    a7ff:	0f 83 14 01 00 00    	jae    a919 <lzma_vli_decode+0x159>
    a805:	48 8d 74 24 f8       	lea    -0x8(%rsp),%rsi
    a80a:	45 31 db             	xor    %r11d,%r11d
    a80d:	45 31 d2             	xor    %r10d,%r10d
    a810:	eb 3a                	jmp    a84c <lzma_vli_decode+0x8c>
    a812:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    a819:	45 31 db             	xor    %r11d,%r11d
    a81c:	42 8d 0c d5 00 00 00 	lea    0x0(,%r10,8),%ecx
    a823:	00 
    a824:	44 29 d1             	sub    %r10d,%ecx
    a827:	4c 89 db             	mov    %r11,%rbx
    a82a:	48 d3 eb             	shr    %cl,%rbx
    a82d:	b8 0b 00 00 00       	mov    $0xb,%eax
    a832:	48 85 db             	test   %rbx,%rbx
    a835:	0f 85 de 00 00 00    	jne    a919 <lzma_vli_decode+0x159>
    a83b:	49 8b 19             	mov    (%r9),%rbx
    a83e:	b8 0a 00 00 00       	mov    $0xa,%eax
    a843:	4c 39 c3             	cmp    %r8,%rbx
    a846:	0f 83 cd 00 00 00    	jae    a919 <lzma_vli_decode+0x159>
    a84c:	48 89 d8             	mov    %rbx,%rax
    a84f:	4c 29 d0             	sub    %r10,%rax
    a852:	48 83 c0 09          	add    $0x9,%rax
    a856:	4c 8d 73 01          	lea    0x1(%rbx),%r14
    a85a:	4d 39 f0             	cmp    %r14,%r8
    a85d:	4d 0f 47 f0          	cmova  %r8,%r14
    a861:	4a 8d 0c d5 00 00 00 	lea    0x0(,%r10,8),%rcx
    a868:	00 
    a869:	4c 29 d1             	sub    %r10,%rcx
    a86c:	48 01 da             	add    %rbx,%rdx
    a86f:	45 31 ff             	xor    %r15d,%r15d
    a872:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    a879:	1f 84 00 00 00 00 00 
    a880:	4d 89 dc             	mov    %r11,%r12
    a883:	46 0f b6 2c 3a       	movzbl (%rdx,%r15,1),%r13d
    a888:	45 89 eb             	mov    %r13d,%r11d
    a88b:	41 83 e3 7f          	and    $0x7f,%r11d
    a88f:	49 d3 e3             	shl    %cl,%r11
    a892:	4d 01 e3             	add    %r12,%r11
    a895:	45 84 ed             	test   %r13b,%r13b
    a898:	79 3e                	jns    a8d8 <lzma_vli_decode+0x118>
    a89a:	4f 8d 24 3a          	lea    (%r10,%r15,1),%r12
    a89e:	49 83 c4 f8          	add    $0xfffffffffffffff8,%r12
    a8a2:	4d 85 e4             	test   %r12,%r12
    a8a5:	74 60                	je     a907 <lzma_vli_decode+0x147>
    a8a7:	48 83 c1 07          	add    $0x7,%rcx
    a8ab:	4e 8d 24 3b          	lea    (%rbx,%r15,1),%r12
    a8af:	49 ff c4             	inc    %r12
    a8b2:	49 ff c7             	inc    %r15
    a8b5:	4d 39 c4             	cmp    %r8,%r12
    a8b8:	72 c6                	jb     a880 <lzma_vli_decode+0xc0>
    a8ba:	4d 89 31             	mov    %r14,(%r9)
    a8bd:	4d 01 fa             	add    %r15,%r10
    a8c0:	4c 89 16             	mov    %r10,(%rsi)
    a8c3:	4c 89 1f             	mov    %r11,(%rdi)
    a8c6:	48 8d 44 24 f8       	lea    -0x8(%rsp),%rax
    a8cb:	31 c9                	xor    %ecx,%ecx
    a8cd:	48 39 c6             	cmp    %rax,%rsi
    a8d0:	0f 94 c1             	sete   %cl
    a8d3:	8d 04 c9             	lea    (%rcx,%rcx,8),%eax
    a8d6:	eb 41                	jmp    a919 <lzma_vli_decode+0x159>
    a8d8:	4a 8d 44 3b 01       	lea    0x1(%rbx,%r15,1),%rax
    a8dd:	49 89 01             	mov    %rax,(%r9)
    a8e0:	4b 8d 4c 3a 01       	lea    0x1(%r10,%r15,1),%rcx
    a8e5:	48 89 0e             	mov    %rcx,(%rsi)
    a8e8:	4c 89 1f             	mov    %r11,(%rdi)
    a8eb:	75 0b                	jne    a8f8 <lzma_vli_decode+0x138>
    a8ed:	b8 09 00 00 00       	mov    $0x9,%eax
    a8f2:	48 83 f9 01          	cmp    $0x1,%rcx
    a8f6:	77 21                	ja     a919 <lzma_vli_decode+0x159>
    a8f8:	48 8d 4c 24 f8       	lea    -0x8(%rsp),%rcx
    a8fd:	31 c0                	xor    %eax,%eax
    a8ff:	48 39 ce             	cmp    %rcx,%rsi
    a902:	0f 95 c0             	setne  %al
    a905:	eb 12                	jmp    a919 <lzma_vli_decode+0x159>
    a907:	49 89 01             	mov    %rax,(%r9)
    a90a:	48 c7 06 09 00 00 00 	movq   $0x9,(%rsi)
    a911:	4c 89 1f             	mov    %r11,(%rdi)
    a914:	b8 09 00 00 00       	mov    $0x9,%eax
    a919:	5b                   	pop    %rbx
    a91a:	41 5c                	pop    %r12
    a91c:	41 5d                	pop    %r13
    a91e:	41 5e                	pop    %r14
    a920:	41 5f                	pop    %r15
    a922:	c3                   	ret    
    a923:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a92a:	00 00 00 
    a92d:	0f 1f 00             	nopl   (%rax)

000000000000a930 <lzma_check_is_supported>:
    a930:	83 ff 0f             	cmp    $0xf,%edi
    a933:	76 03                	jbe    a938 <lzma_check_is_supported+0x8>
    a935:	31 c0                	xor    %eax,%eax
    a937:	c3                   	ret    
    a938:	89 f8                	mov    %edi,%eax
    a93a:	48 8d 0d df 95 01 00 	lea    0x195df(%rip),%rcx        # 23f20 <lzma_check_is_supported.available_checks>
    a941:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    a945:	c3                   	ret    
    a946:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a94d:	00 00 00 

000000000000a950 <lzma_check_size>:
    a950:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a955:	83 ff 0f             	cmp    $0xf,%edi
    a958:	77 0d                	ja     a967 <lzma_check_size+0x17>
    a95a:	89 f8                	mov    %edi,%eax
    a95c:	48 8d 0d cd 95 01 00 	lea    0x195cd(%rip),%rcx        # 23f30 <lzma_check_size.check_sizes>
    a963:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    a967:	c3                   	ret    
    a968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a96f:	00 

000000000000a970 <lzma_check_init>:
    a970:	83 fe 0a             	cmp    $0xa,%esi
    a973:	0f 84 e7 04 00 00    	je     ae60 <lzma_sha256_init>
    a979:	83 fe 04             	cmp    $0x4,%esi
    a97c:	74 0d                	je     a98b <lzma_check_init+0x1b>
    a97e:	83 fe 01             	cmp    $0x1,%esi
    a981:	75 10                	jne    a993 <lzma_check_init+0x23>
    a983:	c7 47 40 00 00 00 00 	movl   $0x0,0x40(%rdi)
    a98a:	c3                   	ret    
    a98b:	48 c7 47 40 00 00 00 	movq   $0x0,0x40(%rdi)
    a992:	00 
    a993:	c3                   	ret    
    a994:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    a99b:	00 00 00 00 00 

000000000000a9a0 <lzma_check_update>:
    a9a0:	53                   	push   %rbx
    a9a1:	48 89 fb             	mov    %rdi,%rbx
    a9a4:	83 fe 0a             	cmp    $0xa,%esi
    a9a7:	74 37                	je     a9e0 <lzma_check_update+0x40>
    a9a9:	83 fe 04             	cmp    $0x4,%esi
    a9ac:	74 1a                	je     a9c8 <lzma_check_update+0x28>
    a9ae:	83 fe 01             	cmp    $0x1,%esi
    a9b1:	75 2b                	jne    a9de <lzma_check_update+0x3e>
    a9b3:	8b 43 40             	mov    0x40(%rbx),%eax
    a9b6:	48 89 d7             	mov    %rdx,%rdi
    a9b9:	48 89 ce             	mov    %rcx,%rsi
    a9bc:	89 c2                	mov    %eax,%edx
    a9be:	e8 5d 00 00 00       	call   aa20 <lzma_crc32>
    a9c3:	89 43 40             	mov    %eax,0x40(%rbx)
    a9c6:	5b                   	pop    %rbx
    a9c7:	c3                   	ret    
    a9c8:	48 8b 43 40          	mov    0x40(%rbx),%rax
    a9cc:	48 89 d7             	mov    %rdx,%rdi
    a9cf:	48 89 ce             	mov    %rcx,%rsi
    a9d2:	48 89 c2             	mov    %rax,%rdx
    a9d5:	e8 b6 02 00 00       	call   ac90 <lzma_crc64>
    a9da:	48 89 43 40          	mov    %rax,0x40(%rbx)
    a9de:	5b                   	pop    %rbx
    a9df:	c3                   	ret    
    a9e0:	48 89 d7             	mov    %rdx,%rdi
    a9e3:	48 89 ce             	mov    %rcx,%rsi
    a9e6:	48 89 da             	mov    %rbx,%rdx
    a9e9:	5b                   	pop    %rbx
    a9ea:	e9 91 04 00 00       	jmp    ae80 <lzma_sha256_update>
    a9ef:	90                   	nop

000000000000a9f0 <lzma_check_finish>:
    a9f0:	83 fe 0a             	cmp    $0xa,%esi
    a9f3:	0f 84 67 13 00 00    	je     bd60 <lzma_sha256_finish>
    a9f9:	83 fe 04             	cmp    $0x4,%esi
    a9fc:	74 0b                	je     aa09 <lzma_check_finish+0x19>
    a9fe:	83 fe 01             	cmp    $0x1,%esi
    aa01:	75 0d                	jne    aa10 <lzma_check_finish+0x20>
    aa03:	8b 47 40             	mov    0x40(%rdi),%eax
    aa06:	89 07                	mov    %eax,(%rdi)
    aa08:	c3                   	ret    
    aa09:	48 8b 47 40          	mov    0x40(%rdi),%rax
    aa0d:	48 89 07             	mov    %rax,(%rdi)
    aa10:	c3                   	ret    
    aa11:	0f 1f 00             	nopl   (%rax)
    aa14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa1b:	00 00 00 
    aa1e:	66 90                	xchg   %ax,%ax

000000000000aa20 <lzma_crc32>:
    aa20:	55                   	push   %rbp
    aa21:	41 56                	push   %r14
    aa23:	53                   	push   %rbx
    aa24:	89 d0                	mov    %edx,%eax
    aa26:	f7 d0                	not    %eax
    aa28:	48 83 fe 09          	cmp    $0x9,%rsi
    aa2c:	0f 82 cd 01 00 00    	jb     abff <lzma_crc32+0x1df>
    aa32:	40 f6 c7 07          	test   $0x7,%dil
    aa36:	0f 84 f3 00 00 00    	je     ab2f <lzma_crc32+0x10f>
    aa3c:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
    aa40:	0f b6 17             	movzbl (%rdi),%edx
    aa43:	44 0f b6 c0          	movzbl %al,%r8d
    aa47:	41 31 d0             	xor    %edx,%r8d
    aa4a:	48 8d 15 ef 94 01 00 	lea    0x194ef(%rip),%rdx        # 23f40 <lzma_crc32_table>
    aa51:	c1 e8 08             	shr    $0x8,%eax
    aa54:	42 33 04 82          	xor    (%rdx,%r8,4),%eax
    aa58:	f6 c1 07             	test   $0x7,%cl
    aa5b:	0f 84 d3 00 00 00    	je     ab34 <lzma_crc32+0x114>
    aa61:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
    aa65:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
    aa6a:	44 0f b6 c8          	movzbl %al,%r9d
    aa6e:	45 31 c1             	xor    %r8d,%r9d
    aa71:	c1 e8 08             	shr    $0x8,%eax
    aa74:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    aa78:	f6 c1 07             	test   $0x7,%cl
    aa7b:	0f 84 b8 00 00 00    	je     ab39 <lzma_crc32+0x119>
    aa81:	48 8d 4f 03          	lea    0x3(%rdi),%rcx
    aa85:	44 0f b6 47 02       	movzbl 0x2(%rdi),%r8d
    aa8a:	44 0f b6 c8          	movzbl %al,%r9d
    aa8e:	45 31 c1             	xor    %r8d,%r9d
    aa91:	c1 e8 08             	shr    $0x8,%eax
    aa94:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    aa98:	f6 c1 07             	test   $0x7,%cl
    aa9b:	0f 84 9e 00 00 00    	je     ab3f <lzma_crc32+0x11f>
    aaa1:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
    aaa5:	44 0f b6 47 03       	movzbl 0x3(%rdi),%r8d
    aaaa:	44 0f b6 c8          	movzbl %al,%r9d
    aaae:	45 31 c1             	xor    %r8d,%r9d
    aab1:	c1 e8 08             	shr    $0x8,%eax
    aab4:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    aab8:	f6 c1 07             	test   $0x7,%cl
    aabb:	0f 84 84 00 00 00    	je     ab45 <lzma_crc32+0x125>
    aac1:	48 8d 4f 05          	lea    0x5(%rdi),%rcx
    aac5:	44 0f b6 47 04       	movzbl 0x4(%rdi),%r8d
    aaca:	44 0f b6 c8          	movzbl %al,%r9d
    aace:	45 31 c1             	xor    %r8d,%r9d
    aad1:	c1 e8 08             	shr    $0x8,%eax
    aad4:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    aad8:	f6 c1 07             	test   $0x7,%cl
    aadb:	74 6e                	je     ab4b <lzma_crc32+0x12b>
    aadd:	48 8d 4f 06          	lea    0x6(%rdi),%rcx
    aae1:	44 0f b6 47 05       	movzbl 0x5(%rdi),%r8d
    aae6:	44 0f b6 c8          	movzbl %al,%r9d
    aaea:	45 31 c1             	xor    %r8d,%r9d
    aaed:	c1 e8 08             	shr    $0x8,%eax
    aaf0:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    aaf4:	f6 c1 07             	test   $0x7,%cl
    aaf7:	74 58                	je     ab51 <lzma_crc32+0x131>
    aaf9:	48 8d 4f 07          	lea    0x7(%rdi),%rcx
    aafd:	44 0f b6 47 06       	movzbl 0x6(%rdi),%r8d
    ab02:	44 0f b6 c8          	movzbl %al,%r9d
    ab06:	45 31 c1             	xor    %r8d,%r9d
    ab09:	c1 e8 08             	shr    $0x8,%eax
    ab0c:	42 33 04 8a          	xor    (%rdx,%r9,4),%eax
    ab10:	f6 c1 07             	test   $0x7,%cl
    ab13:	74 42                	je     ab57 <lzma_crc32+0x137>
    ab15:	0f b6 4f 07          	movzbl 0x7(%rdi),%ecx
    ab19:	48 83 c7 08          	add    $0x8,%rdi
    ab1d:	44 0f b6 c0          	movzbl %al,%r8d
    ab21:	41 31 c8             	xor    %ecx,%r8d
    ab24:	c1 e8 08             	shr    $0x8,%eax
    ab27:	42 33 04 82          	xor    (%rdx,%r8,4),%eax
    ab2b:	48 83 c6 f8          	add    $0xfffffffffffffff8,%rsi
    ab2f:	48 89 f9             	mov    %rdi,%rcx
    ab32:	eb 27                	jmp    ab5b <lzma_crc32+0x13b>
    ab34:	48 ff ce             	dec    %rsi
    ab37:	eb 22                	jmp    ab5b <lzma_crc32+0x13b>
    ab39:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
    ab3d:	eb 1c                	jmp    ab5b <lzma_crc32+0x13b>
    ab3f:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
    ab43:	eb 16                	jmp    ab5b <lzma_crc32+0x13b>
    ab45:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    ab49:	eb 10                	jmp    ab5b <lzma_crc32+0x13b>
    ab4b:	48 83 c6 fb          	add    $0xfffffffffffffffb,%rsi
    ab4f:	eb 0a                	jmp    ab5b <lzma_crc32+0x13b>
    ab51:	48 83 c6 fa          	add    $0xfffffffffffffffa,%rsi
    ab55:	eb 04                	jmp    ab5b <lzma_crc32+0x13b>
    ab57:	48 83 c6 f9          	add    $0xfffffffffffffff9,%rsi
    ab5b:	48 89 f2             	mov    %rsi,%rdx
    ab5e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ab62:	83 e6 07             	and    $0x7,%esi
    ab65:	48 85 d2             	test   %rdx,%rdx
    ab68:	0f 8e 8e 00 00 00    	jle    abfc <lzma_crc32+0x1dc>
    ab6e:	48 01 ca             	add    %rcx,%rdx
    ab71:	48 8d 3d c8 93 01 00 	lea    0x193c8(%rip),%rdi        # 23f40 <lzma_crc32_table>
    ab78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab7f:	00 
    ab80:	33 01                	xor    (%rcx),%eax
    ab82:	44 0f b6 c8          	movzbl %al,%r9d
    ab86:	0f b6 dc             	movzbl %ah,%ebx
    ab89:	44 8b 84 9f 00 18 00 	mov    0x1800(%rdi,%rbx,4),%r8d
    ab90:	00 
    ab91:	41 89 c2             	mov    %eax,%r10d
    ab94:	41 c1 ea 0e          	shr    $0xe,%r10d
    ab98:	41 81 e2 fc 03 00 00 	and    $0x3fc,%r10d
    ab9f:	c1 e8 18             	shr    $0x18,%eax
    aba2:	8b 59 04             	mov    0x4(%rcx),%ebx
    aba5:	48 83 c1 08          	add    $0x8,%rcx
    aba9:	44 0f b6 db          	movzbl %bl,%r11d
    abad:	0f b6 ef             	movzbl %bh,%ebp
    abb0:	41 89 de             	mov    %ebx,%r14d
    abb3:	41 c1 ee 0e          	shr    $0xe,%r14d
    abb7:	41 81 e6 fc 03 00 00 	and    $0x3fc,%r14d
    abbe:	c1 eb 18             	shr    $0x18,%ebx
    abc1:	46 33 84 8f 00 1c 00 	xor    0x1c00(%rdi,%r9,4),%r8d
    abc8:	00 
    abc9:	46 33 84 17 00 14 00 	xor    0x1400(%rdi,%r10,1),%r8d
    abd0:	00 
    abd1:	44 33 84 87 00 10 00 	xor    0x1000(%rdi,%rax,4),%r8d
    abd8:	00 
    abd9:	46 33 84 9f 00 0c 00 	xor    0xc00(%rdi,%r11,4),%r8d
    abe0:	00 
    abe1:	44 33 84 af 00 08 00 	xor    0x800(%rdi,%rbp,4),%r8d
    abe8:	00 
    abe9:	46 33 84 37 00 04 00 	xor    0x400(%rdi,%r14,1),%r8d
    abf0:	00 
    abf1:	44 89 c0             	mov    %r8d,%eax
    abf4:	33 04 9f             	xor    (%rdi,%rbx,4),%eax
    abf7:	48 39 d1             	cmp    %rdx,%rcx
    abfa:	72 84                	jb     ab80 <lzma_crc32+0x160>
    abfc:	48 89 cf             	mov    %rcx,%rdi
    abff:	48 85 f6             	test   %rsi,%rsi
    ac02:	74 7c                	je     ac80 <lzma_crc32+0x260>
    ac04:	40 f6 c6 01          	test   $0x1,%sil
    ac08:	75 0b                	jne    ac15 <lzma_crc32+0x1f5>
    ac0a:	48 89 f1             	mov    %rsi,%rcx
    ac0d:	48 83 fe 01          	cmp    $0x1,%rsi
    ac11:	75 27                	jne    ac3a <lzma_crc32+0x21a>
    ac13:	eb 6b                	jmp    ac80 <lzma_crc32+0x260>
    ac15:	48 8d 4e ff          	lea    -0x1(%rsi),%rcx
    ac19:	0f b6 17             	movzbl (%rdi),%edx
    ac1c:	48 ff c7             	inc    %rdi
    ac1f:	44 0f b6 c0          	movzbl %al,%r8d
    ac23:	41 31 d0             	xor    %edx,%r8d
    ac26:	48 8d 15 13 93 01 00 	lea    0x19313(%rip),%rdx        # 23f40 <lzma_crc32_table>
    ac2d:	c1 e8 08             	shr    $0x8,%eax
    ac30:	42 33 04 82          	xor    (%rdx,%r8,4),%eax
    ac34:	48 83 fe 01          	cmp    $0x1,%rsi
    ac38:	74 46                	je     ac80 <lzma_crc32+0x260>
    ac3a:	31 d2                	xor    %edx,%edx
    ac3c:	48 8d 35 fd 92 01 00 	lea    0x192fd(%rip),%rsi        # 23f40 <lzma_crc32_table>
    ac43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    ac4a:	84 00 00 00 00 00 
    ac50:	44 0f b6 04 17       	movzbl (%rdi,%rdx,1),%r8d
    ac55:	44 0f b6 c8          	movzbl %al,%r9d
    ac59:	45 31 c1             	xor    %r8d,%r9d
    ac5c:	c1 e8 08             	shr    $0x8,%eax
    ac5f:	42 33 04 8e          	xor    (%rsi,%r9,4),%eax
    ac63:	44 0f b6 44 17 01    	movzbl 0x1(%rdi,%rdx,1),%r8d
    ac69:	44 0f b6 c8          	movzbl %al,%r9d
    ac6d:	45 31 c1             	xor    %r8d,%r9d
    ac70:	c1 e8 08             	shr    $0x8,%eax
    ac73:	42 33 04 8e          	xor    (%rsi,%r9,4),%eax
    ac77:	48 83 c2 02          	add    $0x2,%rdx
    ac7b:	48 39 d1             	cmp    %rdx,%rcx
    ac7e:	75 d0                	jne    ac50 <lzma_crc32+0x230>
    ac80:	f7 d0                	not    %eax
    ac82:	5b                   	pop    %rbx
    ac83:	41 5e                	pop    %r14
    ac85:	5d                   	pop    %rbp
    ac86:	c3                   	ret    
    ac87:	90                   	nop
    ac88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ac8f:	00 

000000000000ac90 <lzma_crc64>:
    ac90:	55                   	push   %rbp
    ac91:	53                   	push   %rbx
    ac92:	48 89 d0             	mov    %rdx,%rax
    ac95:	48 f7 d0             	not    %rax
    ac98:	48 83 fe 05          	cmp    $0x5,%rsi
    ac9c:	0f 82 f6 00 00 00    	jb     ad98 <lzma_crc64+0x108>
    aca2:	40 f6 c7 03          	test   $0x3,%dil
    aca6:	74 77                	je     ad1f <lzma_crc64+0x8f>
    aca8:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
    acac:	0f b6 17             	movzbl (%rdi),%edx
    acaf:	44 0f b6 c0          	movzbl %al,%r8d
    acb3:	41 31 d0             	xor    %edx,%r8d
    acb6:	48 8d 15 83 b2 01 00 	lea    0x1b283(%rip),%rdx        # 25f40 <lzma_crc64_table>
    acbd:	48 c1 e8 08          	shr    $0x8,%rax
    acc1:	4a 33 04 c2          	xor    (%rdx,%r8,8),%rax
    acc5:	f6 c1 03             	test   $0x3,%cl
    acc8:	74 5a                	je     ad24 <lzma_crc64+0x94>
    acca:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
    acce:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
    acd3:	44 0f b6 c8          	movzbl %al,%r9d
    acd7:	45 31 c1             	xor    %r8d,%r9d
    acda:	48 c1 e8 08          	shr    $0x8,%rax
    acde:	4a 33 04 ca          	xor    (%rdx,%r9,8),%rax
    ace2:	f6 c1 03             	test   $0x3,%cl
    ace5:	74 42                	je     ad29 <lzma_crc64+0x99>
    ace7:	48 8d 4f 03          	lea    0x3(%rdi),%rcx
    aceb:	44 0f b6 47 02       	movzbl 0x2(%rdi),%r8d
    acf0:	44 0f b6 c8          	movzbl %al,%r9d
    acf4:	45 31 c1             	xor    %r8d,%r9d
    acf7:	48 c1 e8 08          	shr    $0x8,%rax
    acfb:	4a 33 04 ca          	xor    (%rdx,%r9,8),%rax
    acff:	f6 c1 03             	test   $0x3,%cl
    ad02:	74 2b                	je     ad2f <lzma_crc64+0x9f>
    ad04:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
    ad08:	48 83 c7 04          	add    $0x4,%rdi
    ad0c:	44 0f b6 c0          	movzbl %al,%r8d
    ad10:	41 31 c8             	xor    %ecx,%r8d
    ad13:	48 c1 e8 08          	shr    $0x8,%rax
    ad17:	4a 33 04 c2          	xor    (%rdx,%r8,8),%rax
    ad1b:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    ad1f:	48 89 f9             	mov    %rdi,%rcx
    ad22:	eb 0f                	jmp    ad33 <lzma_crc64+0xa3>
    ad24:	48 ff ce             	dec    %rsi
    ad27:	eb 0a                	jmp    ad33 <lzma_crc64+0xa3>
    ad29:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
    ad2d:	eb 04                	jmp    ad33 <lzma_crc64+0xa3>
    ad2f:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
    ad33:	48 89 f2             	mov    %rsi,%rdx
    ad36:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    ad3a:	83 e6 03             	and    $0x3,%esi
    ad3d:	48 85 d2             	test   %rdx,%rdx
    ad40:	7e 53                	jle    ad95 <lzma_crc64+0x105>
    ad42:	48 01 ca             	add    %rcx,%rdx
    ad45:	48 8d 3d f4 b1 01 00 	lea    0x1b1f4(%rip),%rdi        # 25f40 <lzma_crc64_table>
    ad4c:	0f 1f 40 00          	nopl   0x0(%rax)
    ad50:	8b 19                	mov    (%rcx),%ebx
    ad52:	31 c3                	xor    %eax,%ebx
    ad54:	48 83 c1 04          	add    $0x4,%rcx
    ad58:	44 0f b6 c3          	movzbl %bl,%r8d
    ad5c:	0f b6 ef             	movzbl %bh,%ebp
    ad5f:	48 c1 e8 20          	shr    $0x20,%rax
    ad63:	41 89 d9             	mov    %ebx,%r9d
    ad66:	41 c1 e9 0d          	shr    $0xd,%r9d
    ad6a:	41 81 e1 f8 07 00 00 	and    $0x7f8,%r9d
    ad71:	4a 33 84 c7 00 18 00 	xor    0x1800(%rdi,%r8,8),%rax
    ad78:	00 
    ad79:	48 33 84 ef 00 10 00 	xor    0x1000(%rdi,%rbp,8),%rax
    ad80:	00 
    ad81:	4a 33 84 0f 00 08 00 	xor    0x800(%rdi,%r9,1),%rax
    ad88:	00 
    ad89:	c1 eb 18             	shr    $0x18,%ebx
    ad8c:	48 33 04 df          	xor    (%rdi,%rbx,8),%rax
    ad90:	48 39 d1             	cmp    %rdx,%rcx
    ad93:	72 bb                	jb     ad50 <lzma_crc64+0xc0>
    ad95:	48 89 cf             	mov    %rcx,%rdi
    ad98:	48 85 f6             	test   %rsi,%rsi
    ad9b:	0f 84 af 00 00 00    	je     ae50 <lzma_crc64+0x1c0>
    ada1:	0f b6 0f             	movzbl (%rdi),%ecx
    ada4:	0f b6 d0             	movzbl %al,%edx
    ada7:	31 ca                	xor    %ecx,%edx
    ada9:	48 8d 0d 90 b1 01 00 	lea    0x1b190(%rip),%rcx        # 25f40 <lzma_crc64_table>
    adb0:	48 c1 e8 08          	shr    $0x8,%rax
    adb4:	48 33 04 d1          	xor    (%rcx,%rdx,8),%rax
    adb8:	48 83 fe 01          	cmp    $0x1,%rsi
    adbc:	0f 84 8e 00 00 00    	je     ae50 <lzma_crc64+0x1c0>
    adc2:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
    adc6:	44 0f b6 c0          	movzbl %al,%r8d
    adca:	41 31 d0             	xor    %edx,%r8d
    adcd:	48 c1 e8 08          	shr    $0x8,%rax
    add1:	4a 33 04 c1          	xor    (%rcx,%r8,8),%rax
    add5:	48 83 fe 02          	cmp    $0x2,%rsi
    add9:	74 75                	je     ae50 <lzma_crc64+0x1c0>
    addb:	0f b6 57 02          	movzbl 0x2(%rdi),%edx
    addf:	44 0f b6 c0          	movzbl %al,%r8d
    ade3:	41 31 d0             	xor    %edx,%r8d
    ade6:	48 c1 e8 08          	shr    $0x8,%rax
    adea:	4a 33 04 c1          	xor    (%rcx,%r8,8),%rax
    adee:	48 83 fe 03          	cmp    $0x3,%rsi
    adf2:	74 5c                	je     ae50 <lzma_crc64+0x1c0>
    adf4:	0f b6 57 03          	movzbl 0x3(%rdi),%edx
    adf8:	44 0f b6 c0          	movzbl %al,%r8d
    adfc:	41 31 d0             	xor    %edx,%r8d
    adff:	48 c1 e8 08          	shr    $0x8,%rax
    ae03:	4a 33 04 c1          	xor    (%rcx,%r8,8),%rax
    ae07:	48 83 fe 04          	cmp    $0x4,%rsi
    ae0b:	74 43                	je     ae50 <lzma_crc64+0x1c0>
    ae0d:	0f b6 57 04          	movzbl 0x4(%rdi),%edx
    ae11:	44 0f b6 c0          	movzbl %al,%r8d
    ae15:	41 31 d0             	xor    %edx,%r8d
    ae18:	48 c1 e8 08          	shr    $0x8,%rax
    ae1c:	4a 33 04 c1          	xor    (%rcx,%r8,8),%rax
    ae20:	48 83 fe 05          	cmp    $0x5,%rsi
    ae24:	74 2a                	je     ae50 <lzma_crc64+0x1c0>
    ae26:	0f b6 57 05          	movzbl 0x5(%rdi),%edx
    ae2a:	44 0f b6 c0          	movzbl %al,%r8d
    ae2e:	41 31 d0             	xor    %edx,%r8d
    ae31:	48 c1 e8 08          	shr    $0x8,%rax
    ae35:	4a 33 04 c1          	xor    (%rcx,%r8,8),%rax
    ae39:	48 83 fe 06          	cmp    $0x6,%rsi
    ae3d:	74 11                	je     ae50 <lzma_crc64+0x1c0>
    ae3f:	0f b6 57 06          	movzbl 0x6(%rdi),%edx
    ae43:	0f b6 f0             	movzbl %al,%esi
    ae46:	31 d6                	xor    %edx,%esi
    ae48:	48 c1 e8 08          	shr    $0x8,%rax
    ae4c:	48 33 04 f1          	xor    (%rcx,%rsi,8),%rax
    ae50:	48 f7 d0             	not    %rax
    ae53:	5b                   	pop    %rbx
    ae54:	5d                   	pop    %rbp
    ae55:	c3                   	ret    
    ae56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ae5d:	00 00 00 

000000000000ae60 <lzma_sha256_init>:
    ae60:	0f 28 05 e9 d0 01 00 	movaps 0x1d0e9(%rip),%xmm0        # 27f50 <lzma_sha256_init.s+0x10>
    ae67:	0f 11 47 50          	movups %xmm0,0x50(%rdi)
    ae6b:	0f 28 05 ce d0 01 00 	movaps 0x1d0ce(%rip),%xmm0        # 27f40 <lzma_sha256_init.s>
    ae72:	0f 11 47 40          	movups %xmm0,0x40(%rdi)
    ae76:	48 c7 47 60 00 00 00 	movq   $0x0,0x60(%rdi)
    ae7d:	00 
    ae7e:	c3                   	ret    
    ae7f:	90                   	nop

000000000000ae80 <lzma_sha256_update>:
    ae80:	48 85 f6             	test   %rsi,%rsi
    ae83:	74 6c                	je     aef1 <lzma_sha256_update+0x71>
    ae85:	41 57                	push   %r15
    ae87:	41 56                	push   %r14
    ae89:	41 54                	push   %r12
    ae8b:	53                   	push   %rbx
    ae8c:	50                   	push   %rax
    ae8d:	48 89 d3             	mov    %rdx,%rbx
    ae90:	49 89 f6             	mov    %rsi,%r14
    ae93:	49 89 ff             	mov    %rdi,%r15
    ae96:	eb 10                	jmp    aea8 <lzma_sha256_update+0x28>
    ae98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ae9f:	00 
    aea0:	4d 01 e7             	add    %r12,%r15
    aea3:	4d 29 e6             	sub    %r12,%r14
    aea6:	74 3e                	je     aee6 <lzma_sha256_update+0x66>
    aea8:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
    aeac:	83 e7 3f             	and    $0x3f,%edi
    aeaf:	41 bc 40 00 00 00    	mov    $0x40,%r12d
    aeb5:	49 29 fc             	sub    %rdi,%r12
    aeb8:	4d 39 f4             	cmp    %r14,%r12
    aebb:	4d 0f 43 e6          	cmovae %r14,%r12
    aebf:	48 01 df             	add    %rbx,%rdi
    aec2:	4c 89 fe             	mov    %r15,%rsi
    aec5:	4c 89 e2             	mov    %r12,%rdx
    aec8:	e8 83 72 ff ff       	call   2150 <memcpy@plt>
    aecd:	48 8b 43 60          	mov    0x60(%rbx),%rax
    aed1:	4c 01 e0             	add    %r12,%rax
    aed4:	48 89 43 60          	mov    %rax,0x60(%rbx)
    aed8:	a8 3f                	test   $0x3f,%al
    aeda:	75 c4                	jne    aea0 <lzma_sha256_update+0x20>
    aedc:	48 89 df             	mov    %rbx,%rdi
    aedf:	e8 1c 00 00 00       	call   af00 <process>
    aee4:	eb ba                	jmp    aea0 <lzma_sha256_update+0x20>
    aee6:	48 83 c4 08          	add    $0x8,%rsp
    aeea:	5b                   	pop    %rbx
    aeeb:	41 5c                	pop    %r12
    aeed:	41 5e                	pop    %r14
    aeef:	41 5f                	pop    %r15
    aef1:	c3                   	ret    
    aef2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    aef9:	1f 84 00 00 00 00 00 

000000000000af00 <process>:
    af00:	55                   	push   %rbp
    af01:	41 57                	push   %r15
    af03:	41 56                	push   %r14
    af05:	41 55                	push   %r13
    af07:	41 54                	push   %r12
    af09:	53                   	push   %rbx
    af0a:	48 83 ec 68          	sub    $0x68,%rsp
    af0e:	8b 07                	mov    (%rdi),%eax
    af10:	8b 4f 04             	mov    0x4(%rdi),%ecx
    af13:	0f c8                	bswap  %eax
    af15:	89 44 24 48          	mov    %eax,0x48(%rsp)
    af19:	0f c9                	bswap  %ecx
    af1b:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
    af1f:	8b 47 08             	mov    0x8(%rdi),%eax
    af22:	0f c8                	bswap  %eax
    af24:	89 44 24 40          	mov    %eax,0x40(%rsp)
    af28:	8b 47 0c             	mov    0xc(%rdi),%eax
    af2b:	0f c8                	bswap  %eax
    af2d:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    af31:	8b 47 10             	mov    0x10(%rdi),%eax
    af34:	0f c8                	bswap  %eax
    af36:	89 44 24 38          	mov    %eax,0x38(%rsp)
    af3a:	8b 47 14             	mov    0x14(%rdi),%eax
    af3d:	0f c8                	bswap  %eax
    af3f:	89 44 24 34          	mov    %eax,0x34(%rsp)
    af43:	8b 47 18             	mov    0x18(%rdi),%eax
    af46:	0f c8                	bswap  %eax
    af48:	89 44 24 30          	mov    %eax,0x30(%rsp)
    af4c:	8b 47 1c             	mov    0x1c(%rdi),%eax
    af4f:	0f c8                	bswap  %eax
    af51:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    af55:	8b 47 20             	mov    0x20(%rdi),%eax
    af58:	0f c8                	bswap  %eax
    af5a:	89 44 24 28          	mov    %eax,0x28(%rsp)
    af5e:	8b 47 24             	mov    0x24(%rdi),%eax
    af61:	0f c8                	bswap  %eax
    af63:	89 44 24 24          	mov    %eax,0x24(%rsp)
    af67:	8b 47 28             	mov    0x28(%rdi),%eax
    af6a:	0f c8                	bswap  %eax
    af6c:	89 44 24 20          	mov    %eax,0x20(%rsp)
    af70:	8b 47 2c             	mov    0x2c(%rdi),%eax
    af73:	0f c8                	bswap  %eax
    af75:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    af79:	8b 47 30             	mov    0x30(%rdi),%eax
    af7c:	0f c8                	bswap  %eax
    af7e:	89 44 24 18          	mov    %eax,0x18(%rsp)
    af82:	8b 47 34             	mov    0x34(%rdi),%eax
    af85:	0f c8                	bswap  %eax
    af87:	89 44 24 14          	mov    %eax,0x14(%rsp)
    af8b:	8b 47 38             	mov    0x38(%rdi),%eax
    af8e:	0f c8                	bswap  %eax
    af90:	89 44 24 10          	mov    %eax,0x10(%rsp)
    af94:	8b 47 3c             	mov    0x3c(%rdi),%eax
    af97:	0f c8                	bswap  %eax
    af99:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    af9d:	8b 5f 40             	mov    0x40(%rdi),%ebx
    afa0:	44 8b 47 44          	mov    0x44(%rdi),%r8d
    afa4:	44 8b 4f 48          	mov    0x48(%rdi),%r9d
    afa8:	44 8b 57 4c          	mov    0x4c(%rdi),%r10d
    afac:	44 8b 6f 50          	mov    0x50(%rdi),%r13d
    afb0:	8b 47 54             	mov    0x54(%rdi),%eax
    afb3:	8b 4f 58             	mov    0x58(%rdi),%ecx
    afb6:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
    afbb:	44 8b 7f 5c          	mov    0x5c(%rdi),%r15d
    afbf:	48 c7 c5 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rbp
    afc6:	89 5c 24 ec          	mov    %ebx,-0x14(%rsp)
    afca:	44 89 44 24 f0       	mov    %r8d,-0x10(%rsp)
    afcf:	44 89 4c 24 f4       	mov    %r9d,-0xc(%rsp)
    afd4:	44 89 54 24 f8       	mov    %r10d,-0x8(%rsp)
    afd9:	44 89 6c 24 fc       	mov    %r13d,-0x4(%rsp)
    afde:	89 04 24             	mov    %eax,(%rsp)
    afe1:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
    afe5:	89 cf                	mov    %ecx,%edi
    afe7:	44 89 7c 24 08       	mov    %r15d,0x8(%rsp)
    afec:	e9 a5 06 00 00       	jmp    b696 <process+0x796>
    aff1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    aff8:	0f 1f 84 00 00 00 00 
    afff:	00 
    b000:	89 4c 24 80          	mov    %ecx,-0x80(%rsp)
    b004:	44 89 e9             	mov    %r13d,%ecx
    b007:	c1 c1 1a             	rol    $0x1a,%ecx
    b00a:	44 89 ea             	mov    %r13d,%edx
    b00d:	c1 c2 15             	rol    $0x15,%edx
    b010:	31 ca                	xor    %ecx,%edx
    b012:	44 89 ed             	mov    %r13d,%ebp
    b015:	c1 c5 07             	rol    $0x7,%ebp
    b018:	31 d5                	xor    %edx,%ebp
    b01a:	44 01 fd             	add    %r15d,%ebp
    b01d:	89 f9                	mov    %edi,%ecx
    b01f:	31 c1                	xor    %eax,%ecx
    b021:	44 21 e9             	and    %r13d,%ecx
    b024:	31 f9                	xor    %edi,%ecx
    b026:	01 e9                	add    %ebp,%ecx
    b028:	44 01 f1             	add    %r14d,%ecx
    b02b:	89 da                	mov    %ebx,%edx
    b02d:	c1 c2 1e             	rol    $0x1e,%edx
    b030:	89 dd                	mov    %ebx,%ebp
    b032:	c1 c5 13             	rol    $0x13,%ebp
    b035:	31 d5                	xor    %edx,%ebp
    b037:	41 89 df             	mov    %ebx,%r15d
    b03a:	41 c1 c7 0a          	rol    $0xa,%r15d
    b03e:	41 31 ef             	xor    %ebp,%r15d
    b041:	44 89 c5             	mov    %r8d,%ebp
    b044:	21 dd                	and    %ebx,%ebp
    b046:	44 89 c2             	mov    %r8d,%edx
    b049:	09 da                	or     %ebx,%edx
    b04b:	44 21 ca             	and    %r9d,%edx
    b04e:	09 ea                	or     %ebp,%edx
    b050:	44 01 fa             	add    %r15d,%edx
    b053:	03 4c 24 88          	add    -0x78(%rsp),%ecx
    b057:	41 01 ca             	add    %ecx,%r10d
    b05a:	01 ca                	add    %ecx,%edx
    b05c:	44 89 d1             	mov    %r10d,%ecx
    b05f:	c1 c1 1a             	rol    $0x1a,%ecx
    b062:	44 89 d5             	mov    %r10d,%ebp
    b065:	c1 c5 15             	rol    $0x15,%ebp
    b068:	31 cd                	xor    %ecx,%ebp
    b06a:	44 89 d1             	mov    %r10d,%ecx
    b06d:	c1 c1 07             	rol    $0x7,%ecx
    b070:	31 e9                	xor    %ebp,%ecx
    b072:	41 01 fb             	add    %edi,%r11d
    b075:	89 c7                	mov    %eax,%edi
    b077:	44 31 ef             	xor    %r13d,%edi
    b07a:	44 21 d7             	and    %r10d,%edi
    b07d:	31 c7                	xor    %eax,%edi
    b07f:	41 01 fb             	add    %edi,%r11d
    b082:	44 03 5c 24 a4       	add    -0x5c(%rsp),%r11d
    b087:	41 01 cb             	add    %ecx,%r11d
    b08a:	89 d1                	mov    %edx,%ecx
    b08c:	c1 c1 1e             	rol    $0x1e,%ecx
    b08f:	89 d7                	mov    %edx,%edi
    b091:	c1 c7 13             	rol    $0x13,%edi
    b094:	31 cf                	xor    %ecx,%edi
    b096:	89 d1                	mov    %edx,%ecx
    b098:	c1 c1 0a             	rol    $0xa,%ecx
    b09b:	31 f9                	xor    %edi,%ecx
    b09d:	89 d5                	mov    %edx,%ebp
    b09f:	21 dd                	and    %ebx,%ebp
    b0a1:	89 d7                	mov    %edx,%edi
    b0a3:	09 df                	or     %ebx,%edi
    b0a5:	44 21 c7             	and    %r8d,%edi
    b0a8:	09 ef                	or     %ebp,%edi
    b0aa:	01 cf                	add    %ecx,%edi
    b0ac:	45 01 d9             	add    %r11d,%r9d
    b0af:	44 01 df             	add    %r11d,%edi
    b0b2:	44 89 c9             	mov    %r9d,%ecx
    b0b5:	c1 c1 1a             	rol    $0x1a,%ecx
    b0b8:	45 89 cb             	mov    %r9d,%r11d
    b0bb:	41 c1 c3 15          	rol    $0x15,%r11d
    b0bf:	41 31 cb             	xor    %ecx,%r11d
    b0c2:	44 89 c9             	mov    %r9d,%ecx
    b0c5:	c1 c1 07             	rol    $0x7,%ecx
    b0c8:	44 31 d9             	xor    %r11d,%ecx
    b0cb:	41 01 c4             	add    %eax,%r12d
    b0ce:	44 89 d0             	mov    %r10d,%eax
    b0d1:	44 31 e8             	xor    %r13d,%eax
    b0d4:	44 21 c8             	and    %r9d,%eax
    b0d7:	44 31 e8             	xor    %r13d,%eax
    b0da:	41 01 c4             	add    %eax,%r12d
    b0dd:	89 f8                	mov    %edi,%eax
    b0df:	c1 c0 1e             	rol    $0x1e,%eax
    b0e2:	44 03 64 24 bc       	add    -0x44(%rsp),%r12d
    b0e7:	41 89 fb             	mov    %edi,%r11d
    b0ea:	41 c1 c3 13          	rol    $0x13,%r11d
    b0ee:	41 01 cc             	add    %ecx,%r12d
    b0f1:	89 f9                	mov    %edi,%ecx
    b0f3:	c1 c1 0a             	rol    $0xa,%ecx
    b0f6:	41 31 c3             	xor    %eax,%r11d
    b0f9:	44 31 d9             	xor    %r11d,%ecx
    b0fc:	41 89 fb             	mov    %edi,%r11d
    b0ff:	41 21 d3             	and    %edx,%r11d
    b102:	89 f8                	mov    %edi,%eax
    b104:	09 d0                	or     %edx,%eax
    b106:	21 d8                	and    %ebx,%eax
    b108:	44 09 d8             	or     %r11d,%eax
    b10b:	45 01 e0             	add    %r12d,%r8d
    b10e:	45 89 c3             	mov    %r8d,%r11d
    b111:	41 c1 c3 1a          	rol    $0x1a,%r11d
    b115:	01 c8                	add    %ecx,%eax
    b117:	44 89 c1             	mov    %r8d,%ecx
    b11a:	c1 c1 15             	rol    $0x15,%ecx
    b11d:	44 01 e0             	add    %r12d,%eax
    b120:	44 89 c5             	mov    %r8d,%ebp
    b123:	c1 c5 07             	rol    $0x7,%ebp
    b126:	44 31 d9             	xor    %r11d,%ecx
    b129:	31 cd                	xor    %ecx,%ebp
    b12b:	8b 74 24 4c          	mov    0x4c(%rsp),%esi
    b12f:	44 01 ee             	add    %r13d,%esi
    b132:	44 89 c9             	mov    %r9d,%ecx
    b135:	44 31 d1             	xor    %r10d,%ecx
    b138:	44 21 c1             	and    %r8d,%ecx
    b13b:	44 31 d1             	xor    %r10d,%ecx
    b13e:	01 ce                	add    %ecx,%esi
    b140:	03 74 24 84          	add    -0x7c(%rsp),%esi
    b144:	89 c1                	mov    %eax,%ecx
    b146:	c1 c1 1e             	rol    $0x1e,%ecx
    b149:	01 ee                	add    %ebp,%esi
    b14b:	41 89 c3             	mov    %eax,%r11d
    b14e:	41 c1 c3 13          	rol    $0x13,%r11d
    b152:	41 31 cb             	xor    %ecx,%r11d
    b155:	89 c1                	mov    %eax,%ecx
    b157:	c1 c1 0a             	rol    $0xa,%ecx
    b15a:	44 31 d9             	xor    %r11d,%ecx
    b15d:	41 89 c3             	mov    %eax,%r11d
    b160:	41 21 fb             	and    %edi,%r11d
    b163:	41 89 c4             	mov    %eax,%r12d
    b166:	41 09 fc             	or     %edi,%r12d
    b169:	41 21 d4             	and    %edx,%r12d
    b16c:	45 09 dc             	or     %r11d,%r12d
    b16f:	41 01 cc             	add    %ecx,%r12d
    b172:	01 f3                	add    %esi,%ebx
    b174:	89 d9                	mov    %ebx,%ecx
    b176:	c1 c1 1a             	rol    $0x1a,%ecx
    b179:	41 01 f4             	add    %esi,%r12d
    b17c:	89 de                	mov    %ebx,%esi
    b17e:	c1 c6 15             	rol    $0x15,%esi
    b181:	31 ce                	xor    %ecx,%esi
    b183:	89 d9                	mov    %ebx,%ecx
    b185:	c1 c1 07             	rol    $0x7,%ecx
    b188:	31 f1                	xor    %esi,%ecx
    b18a:	44 8b 5c 24 50       	mov    0x50(%rsp),%r11d
    b18f:	45 01 d3             	add    %r10d,%r11d
    b192:	44 89 c6             	mov    %r8d,%esi
    b195:	44 31 ce             	xor    %r9d,%esi
    b198:	21 de                	and    %ebx,%esi
    b19a:	44 31 ce             	xor    %r9d,%esi
    b19d:	41 01 f3             	add    %esi,%r11d
    b1a0:	44 03 5c 24 b8       	add    -0x48(%rsp),%r11d
    b1a5:	41 01 cb             	add    %ecx,%r11d
    b1a8:	44 89 e1             	mov    %r12d,%ecx
    b1ab:	c1 c1 1e             	rol    $0x1e,%ecx
    b1ae:	44 89 e6             	mov    %r12d,%esi
    b1b1:	c1 c6 13             	rol    $0x13,%esi
    b1b4:	31 ce                	xor    %ecx,%esi
    b1b6:	44 89 e1             	mov    %r12d,%ecx
    b1b9:	c1 c1 0a             	rol    $0xa,%ecx
    b1bc:	31 f1                	xor    %esi,%ecx
    b1be:	45 89 e2             	mov    %r12d,%r10d
    b1c1:	41 21 c2             	and    %eax,%r10d
    b1c4:	44 89 e6             	mov    %r12d,%esi
    b1c7:	09 c6                	or     %eax,%esi
    b1c9:	21 fe                	and    %edi,%esi
    b1cb:	44 09 d6             	or     %r10d,%esi
    b1ce:	01 ce                	add    %ecx,%esi
    b1d0:	44 01 da             	add    %r11d,%edx
    b1d3:	44 01 de             	add    %r11d,%esi
    b1d6:	89 d1                	mov    %edx,%ecx
    b1d8:	c1 c1 1a             	rol    $0x1a,%ecx
    b1db:	41 89 d2             	mov    %edx,%r10d
    b1de:	41 c1 c2 15          	rol    $0x15,%r10d
    b1e2:	41 31 ca             	xor    %ecx,%r10d
    b1e5:	89 d1                	mov    %edx,%ecx
    b1e7:	c1 c1 07             	rol    $0x7,%ecx
    b1ea:	44 31 d1             	xor    %r10d,%ecx
    b1ed:	44 8b 5c 24 54       	mov    0x54(%rsp),%r11d
    b1f2:	45 01 cb             	add    %r9d,%r11d
    b1f5:	41 89 d9             	mov    %ebx,%r9d
    b1f8:	45 31 c1             	xor    %r8d,%r9d
    b1fb:	41 21 d1             	and    %edx,%r9d
    b1fe:	45 31 c1             	xor    %r8d,%r9d
    b201:	45 01 cb             	add    %r9d,%r11d
    b204:	44 03 5c 24 b4       	add    -0x4c(%rsp),%r11d
    b209:	41 01 cb             	add    %ecx,%r11d
    b20c:	89 f1                	mov    %esi,%ecx
    b20e:	c1 c1 1e             	rol    $0x1e,%ecx
    b211:	41 89 f1             	mov    %esi,%r9d
    b214:	41 c1 c1 13          	rol    $0x13,%r9d
    b218:	41 31 c9             	xor    %ecx,%r9d
    b21b:	89 f1                	mov    %esi,%ecx
    b21d:	c1 c1 0a             	rol    $0xa,%ecx
    b220:	44 31 c9             	xor    %r9d,%ecx
    b223:	41 89 f2             	mov    %esi,%r10d
    b226:	45 21 e2             	and    %r12d,%r10d
    b229:	41 89 f1             	mov    %esi,%r9d
    b22c:	45 09 e1             	or     %r12d,%r9d
    b22f:	41 21 c1             	and    %eax,%r9d
    b232:	45 09 d1             	or     %r10d,%r9d
    b235:	41 01 c9             	add    %ecx,%r9d
    b238:	44 01 df             	add    %r11d,%edi
    b23b:	45 01 d9             	add    %r11d,%r9d
    b23e:	89 f9                	mov    %edi,%ecx
    b240:	c1 c1 1a             	rol    $0x1a,%ecx
    b243:	41 89 fa             	mov    %edi,%r10d
    b246:	41 c1 c2 15          	rol    $0x15,%r10d
    b24a:	41 31 ca             	xor    %ecx,%r10d
    b24d:	89 f9                	mov    %edi,%ecx
    b24f:	c1 c1 07             	rol    $0x7,%ecx
    b252:	44 31 d1             	xor    %r10d,%ecx
    b255:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    b25a:	45 01 c3             	add    %r8d,%r11d
    b25d:	41 89 d0             	mov    %edx,%r8d
    b260:	41 31 d8             	xor    %ebx,%r8d
    b263:	41 21 f8             	and    %edi,%r8d
    b266:	41 31 d8             	xor    %ebx,%r8d
    b269:	45 01 c3             	add    %r8d,%r11d
    b26c:	45 89 c8             	mov    %r9d,%r8d
    b26f:	41 c1 c0 1e          	rol    $0x1e,%r8d
    b273:	44 03 5c 24 b0       	add    -0x50(%rsp),%r11d
    b278:	45 89 ca             	mov    %r9d,%r10d
    b27b:	41 c1 c2 13          	rol    $0x13,%r10d
    b27f:	41 01 cb             	add    %ecx,%r11d
    b282:	44 89 c9             	mov    %r9d,%ecx
    b285:	c1 c1 0a             	rol    $0xa,%ecx
    b288:	45 31 c2             	xor    %r8d,%r10d
    b28b:	44 31 d1             	xor    %r10d,%ecx
    b28e:	45 89 ca             	mov    %r9d,%r10d
    b291:	41 21 f2             	and    %esi,%r10d
    b294:	45 89 c8             	mov    %r9d,%r8d
    b297:	41 09 f0             	or     %esi,%r8d
    b29a:	45 21 e0             	and    %r12d,%r8d
    b29d:	45 09 d0             	or     %r10d,%r8d
    b2a0:	44 01 d8             	add    %r11d,%eax
    b2a3:	41 89 c2             	mov    %eax,%r10d
    b2a6:	41 c1 c2 1a          	rol    $0x1a,%r10d
    b2aa:	41 01 c8             	add    %ecx,%r8d
    b2ad:	89 c1                	mov    %eax,%ecx
    b2af:	c1 c1 15             	rol    $0x15,%ecx
    b2b2:	45 01 d8             	add    %r11d,%r8d
    b2b5:	41 89 c3             	mov    %eax,%r11d
    b2b8:	41 c1 c3 07          	rol    $0x7,%r11d
    b2bc:	44 31 d1             	xor    %r10d,%ecx
    b2bf:	41 31 cb             	xor    %ecx,%r11d
    b2c2:	8b 6c 24 5c          	mov    0x5c(%rsp),%ebp
    b2c6:	01 dd                	add    %ebx,%ebp
    b2c8:	89 f9                	mov    %edi,%ecx
    b2ca:	31 d1                	xor    %edx,%ecx
    b2cc:	21 c1                	and    %eax,%ecx
    b2ce:	31 d1                	xor    %edx,%ecx
    b2d0:	01 cd                	add    %ecx,%ebp
    b2d2:	03 6c 24 ac          	add    -0x54(%rsp),%ebp
    b2d6:	44 89 c1             	mov    %r8d,%ecx
    b2d9:	c1 c1 1e             	rol    $0x1e,%ecx
    b2dc:	44 01 dd             	add    %r11d,%ebp
    b2df:	45 89 c2             	mov    %r8d,%r10d
    b2e2:	41 c1 c2 13          	rol    $0x13,%r10d
    b2e6:	41 31 ca             	xor    %ecx,%r10d
    b2e9:	44 89 c1             	mov    %r8d,%ecx
    b2ec:	c1 c1 0a             	rol    $0xa,%ecx
    b2ef:	44 31 d1             	xor    %r10d,%ecx
    b2f2:	45 89 c2             	mov    %r8d,%r10d
    b2f5:	45 21 ca             	and    %r9d,%r10d
    b2f8:	45 89 c3             	mov    %r8d,%r11d
    b2fb:	45 09 cb             	or     %r9d,%r11d
    b2fe:	41 21 f3             	and    %esi,%r11d
    b301:	45 09 d3             	or     %r10d,%r11d
    b304:	41 01 cb             	add    %ecx,%r11d
    b307:	41 01 ec             	add    %ebp,%r12d
    b30a:	44 89 e1             	mov    %r12d,%ecx
    b30d:	c1 c1 1a             	rol    $0x1a,%ecx
    b310:	41 01 eb             	add    %ebp,%r11d
    b313:	45 89 e2             	mov    %r12d,%r10d
    b316:	41 c1 c2 15          	rol    $0x15,%r10d
    b31a:	41 31 ca             	xor    %ecx,%r10d
    b31d:	44 89 e1             	mov    %r12d,%ecx
    b320:	c1 c1 07             	rol    $0x7,%ecx
    b323:	44 31 d1             	xor    %r10d,%ecx
    b326:	44 8b 54 24 cc       	mov    -0x34(%rsp),%r10d
    b32b:	41 01 d2             	add    %edx,%r10d
    b32e:	89 c2                	mov    %eax,%edx
    b330:	31 fa                	xor    %edi,%edx
    b332:	44 21 e2             	and    %r12d,%edx
    b335:	31 fa                	xor    %edi,%edx
    b337:	41 01 d2             	add    %edx,%r10d
    b33a:	44 03 54 24 a8       	add    -0x58(%rsp),%r10d
    b33f:	41 01 ca             	add    %ecx,%r10d
    b342:	44 89 d9             	mov    %r11d,%ecx
    b345:	c1 c1 1e             	rol    $0x1e,%ecx
    b348:	44 89 da             	mov    %r11d,%edx
    b34b:	c1 c2 13             	rol    $0x13,%edx
    b34e:	31 ca                	xor    %ecx,%edx
    b350:	44 89 d9             	mov    %r11d,%ecx
    b353:	c1 c1 0a             	rol    $0xa,%ecx
    b356:	31 d1                	xor    %edx,%ecx
    b358:	44 89 da             	mov    %r11d,%edx
    b35b:	44 21 c2             	and    %r8d,%edx
    b35e:	45 89 df             	mov    %r11d,%r15d
    b361:	45 09 c7             	or     %r8d,%r15d
    b364:	45 21 cf             	and    %r9d,%r15d
    b367:	41 09 d7             	or     %edx,%r15d
    b36a:	41 01 cf             	add    %ecx,%r15d
    b36d:	44 01 d6             	add    %r10d,%esi
    b370:	45 01 d7             	add    %r10d,%r15d
    b373:	89 f1                	mov    %esi,%ecx
    b375:	c1 c1 1a             	rol    $0x1a,%ecx
    b378:	89 f2                	mov    %esi,%edx
    b37a:	c1 c2 15             	rol    $0x15,%edx
    b37d:	31 ca                	xor    %ecx,%edx
    b37f:	89 f1                	mov    %esi,%ecx
    b381:	c1 c1 07             	rol    $0x7,%ecx
    b384:	31 d1                	xor    %edx,%ecx
    b386:	44 8b 54 24 d0       	mov    -0x30(%rsp),%r10d
    b38b:	41 01 fa             	add    %edi,%r10d
    b38e:	44 89 e2             	mov    %r12d,%edx
    b391:	31 c2                	xor    %eax,%edx
    b393:	21 f2                	and    %esi,%edx
    b395:	31 c2                	xor    %eax,%edx
    b397:	41 01 d2             	add    %edx,%r10d
    b39a:	44 03 54 24 e8       	add    -0x18(%rsp),%r10d
    b39f:	41 01 ca             	add    %ecx,%r10d
    b3a2:	44 89 f9             	mov    %r15d,%ecx
    b3a5:	c1 c1 1e             	rol    $0x1e,%ecx
    b3a8:	44 89 fa             	mov    %r15d,%edx
    b3ab:	c1 c2 13             	rol    $0x13,%edx
    b3ae:	31 ca                	xor    %ecx,%edx
    b3b0:	44 89 f9             	mov    %r15d,%ecx
    b3b3:	c1 c1 0a             	rol    $0xa,%ecx
    b3b6:	31 d1                	xor    %edx,%ecx
    b3b8:	44 89 fa             	mov    %r15d,%edx
    b3bb:	44 21 da             	and    %r11d,%edx
    b3be:	44 89 ff             	mov    %r15d,%edi
    b3c1:	44 09 df             	or     %r11d,%edi
    b3c4:	44 21 c7             	and    %r8d,%edi
    b3c7:	09 d7                	or     %edx,%edi
    b3c9:	01 cf                	add    %ecx,%edi
    b3cb:	45 01 d1             	add    %r10d,%r9d
    b3ce:	44 01 d7             	add    %r10d,%edi
    b3d1:	44 89 c9             	mov    %r9d,%ecx
    b3d4:	c1 c1 1a             	rol    $0x1a,%ecx
    b3d7:	44 89 ca             	mov    %r9d,%edx
    b3da:	c1 c2 15             	rol    $0x15,%edx
    b3dd:	31 ca                	xor    %ecx,%edx
    b3df:	44 89 c9             	mov    %r9d,%ecx
    b3e2:	c1 c1 07             	rol    $0x7,%ecx
    b3e5:	31 d1                	xor    %edx,%ecx
    b3e7:	44 8b 54 24 d4       	mov    -0x2c(%rsp),%r10d
    b3ec:	41 01 c2             	add    %eax,%r10d
    b3ef:	89 f0                	mov    %esi,%eax
    b3f1:	44 31 e0             	xor    %r12d,%eax
    b3f4:	44 21 c8             	and    %r9d,%eax
    b3f7:	44 31 e0             	xor    %r12d,%eax
    b3fa:	41 01 c2             	add    %eax,%r10d
    b3fd:	89 f8                	mov    %edi,%eax
    b3ff:	c1 c0 1e             	rol    $0x1e,%eax
    b402:	44 03 54 24 e4       	add    -0x1c(%rsp),%r10d
    b407:	89 fa                	mov    %edi,%edx
    b409:	c1 c2 13             	rol    $0x13,%edx
    b40c:	41 01 ca             	add    %ecx,%r10d
    b40f:	89 f9                	mov    %edi,%ecx
    b411:	c1 c1 0a             	rol    $0xa,%ecx
    b414:	31 c2                	xor    %eax,%edx
    b416:	31 d1                	xor    %edx,%ecx
    b418:	89 fa                	mov    %edi,%edx
    b41a:	44 21 fa             	and    %r15d,%edx
    b41d:	89 f8                	mov    %edi,%eax
    b41f:	44 09 f8             	or     %r15d,%eax
    b422:	44 21 d8             	and    %r11d,%eax
    b425:	09 d0                	or     %edx,%eax
    b427:	45 01 d0             	add    %r10d,%r8d
    b42a:	44 89 c2             	mov    %r8d,%edx
    b42d:	c1 c2 1a             	rol    $0x1a,%edx
    b430:	01 c8                	add    %ecx,%eax
    b432:	44 89 c1             	mov    %r8d,%ecx
    b435:	c1 c1 15             	rol    $0x15,%ecx
    b438:	44 01 d0             	add    %r10d,%eax
    b43b:	45 89 c2             	mov    %r8d,%r10d
    b43e:	41 c1 c2 07          	rol    $0x7,%r10d
    b442:	31 d1                	xor    %edx,%ecx
    b444:	41 31 ca             	xor    %ecx,%r10d
    b447:	8b 5c 24 8c          	mov    -0x74(%rsp),%ebx
    b44b:	44 01 e3             	add    %r12d,%ebx
    b44e:	44 89 c9             	mov    %r9d,%ecx
    b451:	31 f1                	xor    %esi,%ecx
    b453:	44 21 c1             	and    %r8d,%ecx
    b456:	31 f1                	xor    %esi,%ecx
    b458:	01 cb                	add    %ecx,%ebx
    b45a:	03 5c 24 e0          	add    -0x20(%rsp),%ebx
    b45e:	89 c1                	mov    %eax,%ecx
    b460:	c1 c1 1e             	rol    $0x1e,%ecx
    b463:	44 01 d3             	add    %r10d,%ebx
    b466:	89 c2                	mov    %eax,%edx
    b468:	c1 c2 13             	rol    $0x13,%edx
    b46b:	31 ca                	xor    %ecx,%edx
    b46d:	89 c1                	mov    %eax,%ecx
    b46f:	c1 c1 0a             	rol    $0xa,%ecx
    b472:	31 d1                	xor    %edx,%ecx
    b474:	89 c2                	mov    %eax,%edx
    b476:	21 fa                	and    %edi,%edx
    b478:	41 89 c5             	mov    %eax,%r13d
    b47b:	41 09 fd             	or     %edi,%r13d
    b47e:	45 21 fd             	and    %r15d,%r13d
    b481:	41 09 d5             	or     %edx,%r13d
    b484:	41 01 cd             	add    %ecx,%r13d
    b487:	41 01 db             	add    %ebx,%r11d
    b48a:	44 89 d9             	mov    %r11d,%ecx
    b48d:	c1 c1 1a             	rol    $0x1a,%ecx
    b490:	41 01 dd             	add    %ebx,%r13d
    b493:	44 89 da             	mov    %r11d,%edx
    b496:	c1 c2 15             	rol    $0x15,%edx
    b499:	31 ca                	xor    %ecx,%edx
    b49b:	44 89 d9             	mov    %r11d,%ecx
    b49e:	c1 c1 07             	rol    $0x7,%ecx
    b4a1:	31 d1                	xor    %edx,%ecx
    b4a3:	8b 5c 24 90          	mov    -0x70(%rsp),%ebx
    b4a7:	01 f3                	add    %esi,%ebx
    b4a9:	44 89 c2             	mov    %r8d,%edx
    b4ac:	44 31 ca             	xor    %r9d,%edx
    b4af:	44 21 da             	and    %r11d,%edx
    b4b2:	44 31 ca             	xor    %r9d,%edx
    b4b5:	01 d3                	add    %edx,%ebx
    b4b7:	03 5c 24 dc          	add    -0x24(%rsp),%ebx
    b4bb:	01 cb                	add    %ecx,%ebx
    b4bd:	44 89 e9             	mov    %r13d,%ecx
    b4c0:	c1 c1 1e             	rol    $0x1e,%ecx
    b4c3:	44 89 ea             	mov    %r13d,%edx
    b4c6:	c1 c2 13             	rol    $0x13,%edx
    b4c9:	31 ca                	xor    %ecx,%edx
    b4cb:	44 89 e9             	mov    %r13d,%ecx
    b4ce:	c1 c1 0a             	rol    $0xa,%ecx
    b4d1:	31 d1                	xor    %edx,%ecx
    b4d3:	44 89 ea             	mov    %r13d,%edx
    b4d6:	21 c2                	and    %eax,%edx
    b4d8:	45 89 ea             	mov    %r13d,%r10d
    b4db:	41 09 c2             	or     %eax,%r10d
    b4de:	41 21 fa             	and    %edi,%r10d
    b4e1:	41 09 d2             	or     %edx,%r10d
    b4e4:	41 01 ca             	add    %ecx,%r10d
    b4e7:	41 01 df             	add    %ebx,%r15d
    b4ea:	41 01 da             	add    %ebx,%r10d
    b4ed:	44 89 f9             	mov    %r15d,%ecx
    b4f0:	c1 c1 1a             	rol    $0x1a,%ecx
    b4f3:	44 89 fa             	mov    %r15d,%edx
    b4f6:	c1 c2 15             	rol    $0x15,%edx
    b4f9:	31 ca                	xor    %ecx,%edx
    b4fb:	44 89 f9             	mov    %r15d,%ecx
    b4fe:	c1 c1 07             	rol    $0x7,%ecx
    b501:	31 d1                	xor    %edx,%ecx
    b503:	8b 74 24 94          	mov    -0x6c(%rsp),%esi
    b507:	44 01 ce             	add    %r9d,%esi
    b50a:	44 89 da             	mov    %r11d,%edx
    b50d:	44 31 c2             	xor    %r8d,%edx
    b510:	44 21 fa             	and    %r15d,%edx
    b513:	44 31 c2             	xor    %r8d,%edx
    b516:	01 d6                	add    %edx,%esi
    b518:	03 74 24 d8          	add    -0x28(%rsp),%esi
    b51c:	01 ce                	add    %ecx,%esi
    b51e:	44 89 d1             	mov    %r10d,%ecx
    b521:	c1 c1 1e             	rol    $0x1e,%ecx
    b524:	44 89 d2             	mov    %r10d,%edx
    b527:	c1 c2 13             	rol    $0x13,%edx
    b52a:	31 ca                	xor    %ecx,%edx
    b52c:	44 89 d1             	mov    %r10d,%ecx
    b52f:	c1 c1 0a             	rol    $0xa,%ecx
    b532:	31 d1                	xor    %edx,%ecx
    b534:	44 89 d2             	mov    %r10d,%edx
    b537:	44 21 ea             	and    %r13d,%edx
    b53a:	45 89 d1             	mov    %r10d,%r9d
    b53d:	45 09 e9             	or     %r13d,%r9d
    b540:	41 21 c1             	and    %eax,%r9d
    b543:	41 09 d1             	or     %edx,%r9d
    b546:	41 01 c9             	add    %ecx,%r9d
    b549:	01 f7                	add    %esi,%edi
    b54b:	41 01 f1             	add    %esi,%r9d
    b54e:	89 f9                	mov    %edi,%ecx
    b550:	c1 c1 1a             	rol    $0x1a,%ecx
    b553:	89 fa                	mov    %edi,%edx
    b555:	c1 c2 15             	rol    $0x15,%edx
    b558:	31 ca                	xor    %ecx,%edx
    b55a:	89 f9                	mov    %edi,%ecx
    b55c:	c1 c1 07             	rol    $0x7,%ecx
    b55f:	31 d1                	xor    %edx,%ecx
    b561:	8b 5c 24 98          	mov    -0x68(%rsp),%ebx
    b565:	44 01 c3             	add    %r8d,%ebx
    b568:	44 89 fa             	mov    %r15d,%edx
    b56b:	44 31 da             	xor    %r11d,%edx
    b56e:	21 fa                	and    %edi,%edx
    b570:	44 31 da             	xor    %r11d,%edx
    b573:	01 d3                	add    %edx,%ebx
    b575:	44 89 ca             	mov    %r9d,%edx
    b578:	c1 c2 1e             	rol    $0x1e,%edx
    b57b:	03 5c 24 a0          	add    -0x60(%rsp),%ebx
    b57f:	44 89 ce             	mov    %r9d,%esi
    b582:	c1 c6 13             	rol    $0x13,%esi
    b585:	01 cb                	add    %ecx,%ebx
    b587:	44 89 c9             	mov    %r9d,%ecx
    b58a:	c1 c1 0a             	rol    $0xa,%ecx
    b58d:	31 d6                	xor    %edx,%esi
    b58f:	31 f1                	xor    %esi,%ecx
    b591:	44 89 ca             	mov    %r9d,%edx
    b594:	44 21 d2             	and    %r10d,%edx
    b597:	45 89 c8             	mov    %r9d,%r8d
    b59a:	45 09 d0             	or     %r10d,%r8d
    b59d:	45 21 e8             	and    %r13d,%r8d
    b5a0:	41 09 d0             	or     %edx,%r8d
    b5a3:	01 d8                	add    %ebx,%eax
    b5a5:	89 c2                	mov    %eax,%edx
    b5a7:	c1 c2 1a             	rol    $0x1a,%edx
    b5aa:	41 01 c8             	add    %ecx,%r8d
    b5ad:	89 c1                	mov    %eax,%ecx
    b5af:	c1 c1 15             	rol    $0x15,%ecx
    b5b2:	41 01 d8             	add    %ebx,%r8d
    b5b5:	89 c6                	mov    %eax,%esi
    b5b7:	c1 c6 07             	rol    $0x7,%esi
    b5ba:	31 d1                	xor    %edx,%ecx
    b5bc:	31 ce                	xor    %ecx,%esi
    b5be:	8b 6c 24 9c          	mov    -0x64(%rsp),%ebp
    b5c2:	44 01 dd             	add    %r11d,%ebp
    b5c5:	89 f9                	mov    %edi,%ecx
    b5c7:	44 31 f9             	xor    %r15d,%ecx
    b5ca:	21 c1                	and    %eax,%ecx
    b5cc:	44 31 f9             	xor    %r15d,%ecx
    b5cf:	01 cd                	add    %ecx,%ebp
    b5d1:	44 8b 74 24 80       	mov    -0x80(%rsp),%r14d
    b5d6:	44 01 f5             	add    %r14d,%ebp
    b5d9:	44 89 c1             	mov    %r8d,%ecx
    b5dc:	c1 c1 1e             	rol    $0x1e,%ecx
    b5df:	01 f5                	add    %esi,%ebp
    b5e1:	44 89 c2             	mov    %r8d,%edx
    b5e4:	c1 c2 13             	rol    $0x13,%edx
    b5e7:	31 ca                	xor    %ecx,%edx
    b5e9:	44 89 c1             	mov    %r8d,%ecx
    b5ec:	c1 c1 0a             	rol    $0xa,%ecx
    b5ef:	31 d1                	xor    %edx,%ecx
    b5f1:	44 89 c2             	mov    %r8d,%edx
    b5f4:	44 21 ca             	and    %r9d,%edx
    b5f7:	44 89 c3             	mov    %r8d,%ebx
    b5fa:	44 09 cb             	or     %r9d,%ebx
    b5fd:	44 21 d3             	and    %r10d,%ebx
    b600:	09 d3                	or     %edx,%ebx
    b602:	01 cb                	add    %ecx,%ebx
    b604:	41 01 ed             	add    %ebp,%r13d
    b607:	01 eb                	add    %ebp,%ebx
    b609:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b60e:	48 83 c5 10          	add    $0x10,%rbp
    b612:	8b 4c 24 88          	mov    -0x78(%rsp),%ecx
    b616:	8b 54 24 a4          	mov    -0x5c(%rsp),%edx
    b61a:	44 8b 5c 24 bc       	mov    -0x44(%rsp),%r11d
    b61f:	8b 74 24 84          	mov    -0x7c(%rsp),%esi
    b623:	44 8b 64 24 b8       	mov    -0x48(%rsp),%r12d
    b628:	44 89 64 24 cc       	mov    %r12d,-0x34(%rsp)
    b62d:	44 8b 64 24 b4       	mov    -0x4c(%rsp),%r12d
    b632:	44 89 64 24 d0       	mov    %r12d,-0x30(%rsp)
    b637:	44 8b 64 24 b0       	mov    -0x50(%rsp),%r12d
    b63c:	44 89 64 24 d4       	mov    %r12d,-0x2c(%rsp)
    b641:	44 8b 64 24 ac       	mov    -0x54(%rsp),%r12d
    b646:	44 89 64 24 84       	mov    %r12d,-0x7c(%rsp)
    b64b:	44 8b 64 24 a8       	mov    -0x58(%rsp),%r12d
    b650:	44 89 64 24 88       	mov    %r12d,-0x78(%rsp)
    b655:	44 8b 64 24 e8       	mov    -0x18(%rsp),%r12d
    b65a:	44 89 64 24 8c       	mov    %r12d,-0x74(%rsp)
    b65f:	44 8b 64 24 e4       	mov    -0x1c(%rsp),%r12d
    b664:	44 89 64 24 90       	mov    %r12d,-0x70(%rsp)
    b669:	44 8b 64 24 e0       	mov    -0x20(%rsp),%r12d
    b66e:	44 89 64 24 94       	mov    %r12d,-0x6c(%rsp)
    b673:	44 8b 64 24 dc       	mov    -0x24(%rsp),%r12d
    b678:	44 89 64 24 98       	mov    %r12d,-0x68(%rsp)
    b67d:	44 8b 64 24 d8       	mov    -0x28(%rsp),%r12d
    b682:	44 89 64 24 9c       	mov    %r12d,-0x64(%rsp)
    b687:	44 89 74 24 80       	mov    %r14d,-0x80(%rsp)
    b68c:	48 83 fd 30          	cmp    $0x30,%rbp
    b690:	0f 83 74 06 00 00    	jae    bd0a <process+0xe0a>
    b696:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
    b69b:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b69f:	48 89 6c 24 c0       	mov    %rbp,-0x40(%rsp)
    b6a4:	0f 85 b6 03 00 00    	jne    ba60 <process+0xb60>
    b6aa:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
    b6ae:	89 4c 24 a4          	mov    %ecx,-0x5c(%rsp)
    b6b2:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b6b6:	0f 85 fd 03 00 00    	jne    bab9 <process+0xbb9>
    b6bc:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
    b6c0:	89 4c 24 bc          	mov    %ecx,-0x44(%rsp)
    b6c4:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b6c8:	0f 85 44 04 00 00    	jne    bb12 <process+0xc12>
    b6ce:	44 8b 5c 24 3c       	mov    0x3c(%rsp),%r11d
    b6d3:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b6d7:	0f 85 82 04 00 00    	jne    bb5f <process+0xc5f>
    b6dd:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
    b6e1:	89 4c 24 b8          	mov    %ecx,-0x48(%rsp)
    b6e5:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b6e9:	0f 85 c8 04 00 00    	jne    bbb7 <process+0xcb7>
    b6ef:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    b6f3:	89 4c 24 b4          	mov    %ecx,-0x4c(%rsp)
    b6f7:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b6fb:	0f 85 0a 05 00 00    	jne    bc0b <process+0xd0b>
    b701:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    b705:	89 4c 24 b0          	mov    %ecx,-0x50(%rsp)
    b709:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b70d:	0f 85 4b 05 00 00    	jne    bc5e <process+0xd5e>
    b713:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    b717:	89 4c 24 ac          	mov    %ecx,-0x54(%rsp)
    b71b:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b71f:	0f 85 8d 05 00 00    	jne    bcb2 <process+0xdb2>
    b725:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    b729:	89 4c 24 a8          	mov    %ecx,-0x58(%rsp)
    b72d:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b731:	74 42                	je     b775 <process+0x875>
    b733:	8b 74 24 b0          	mov    -0x50(%rsp),%esi
    b737:	89 f1                	mov    %esi,%ecx
    b739:	c1 c1 0f             	rol    $0xf,%ecx
    b73c:	89 f2                	mov    %esi,%edx
    b73e:	c1 c2 0d             	rol    $0xd,%edx
    b741:	31 ca                	xor    %ecx,%edx
    b743:	89 f1                	mov    %esi,%ecx
    b745:	c1 e9 0a             	shr    $0xa,%ecx
    b748:	44 8b 74 24 8c       	mov    -0x74(%rsp),%r14d
    b74d:	44 89 f6             	mov    %r14d,%esi
    b750:	c1 c6 19             	rol    $0x19,%esi
    b753:	31 d1                	xor    %edx,%ecx
    b755:	44 89 f2             	mov    %r14d,%edx
    b758:	c1 c2 0e             	rol    $0xe,%edx
    b75b:	31 f2                	xor    %esi,%edx
    b75d:	41 c1 ee 03          	shr    $0x3,%r14d
    b761:	41 31 d6             	xor    %edx,%r14d
    b764:	8b 54 24 88          	mov    -0x78(%rsp),%edx
    b768:	03 54 24 a4          	add    -0x5c(%rsp),%edx
    b76c:	44 01 f2             	add    %r14d,%edx
    b76f:	01 ca                	add    %ecx,%edx
    b771:	89 54 24 a8          	mov    %edx,-0x58(%rsp)
    b775:	44 89 5c 24 84       	mov    %r11d,-0x7c(%rsp)
    b77a:	44 89 64 24 88       	mov    %r12d,-0x78(%rsp)
    b77f:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
    b783:	89 4c 24 e8          	mov    %ecx,-0x18(%rsp)
    b787:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b78b:	74 42                	je     b7cf <process+0x8cf>
    b78d:	8b 74 24 ac          	mov    -0x54(%rsp),%esi
    b791:	89 f1                	mov    %esi,%ecx
    b793:	c1 c1 0f             	rol    $0xf,%ecx
    b796:	89 f2                	mov    %esi,%edx
    b798:	c1 c2 0d             	rol    $0xd,%edx
    b79b:	31 ca                	xor    %ecx,%edx
    b79d:	89 f1                	mov    %esi,%ecx
    b79f:	c1 e9 0a             	shr    $0xa,%ecx
    b7a2:	44 8b 5c 24 90       	mov    -0x70(%rsp),%r11d
    b7a7:	44 89 de             	mov    %r11d,%esi
    b7aa:	c1 c6 19             	rol    $0x19,%esi
    b7ad:	31 d1                	xor    %edx,%ecx
    b7af:	44 89 da             	mov    %r11d,%edx
    b7b2:	c1 c2 0e             	rol    $0xe,%edx
    b7b5:	31 f2                	xor    %esi,%edx
    b7b7:	44 89 de             	mov    %r11d,%esi
    b7ba:	c1 ee 03             	shr    $0x3,%esi
    b7bd:	31 d6                	xor    %edx,%esi
    b7bf:	8b 54 24 8c          	mov    -0x74(%rsp),%edx
    b7c3:	03 54 24 bc          	add    -0x44(%rsp),%edx
    b7c7:	01 f2                	add    %esi,%edx
    b7c9:	01 ca                	add    %ecx,%edx
    b7cb:	89 54 24 e8          	mov    %edx,-0x18(%rsp)
    b7cf:	48 8d 0d 8a c7 01 00 	lea    0x1c78a(%rip),%rcx        # 27f60 <SHA256_K>
    b7d6:	44 8b 74 a9 40       	mov    0x40(%rcx,%rbp,4),%r14d
    b7db:	44 8b 5c a9 44       	mov    0x44(%rcx,%rbp,4),%r11d
    b7e0:	44 8b 64 a9 48       	mov    0x48(%rcx,%rbp,4),%r12d
    b7e5:	8b 54 a9 4c          	mov    0x4c(%rcx,%rbp,4),%edx
    b7e9:	89 54 24 4c          	mov    %edx,0x4c(%rsp)
    b7ed:	8b 54 a9 50          	mov    0x50(%rcx,%rbp,4),%edx
    b7f1:	89 54 24 50          	mov    %edx,0x50(%rsp)
    b7f5:	8b 54 a9 54          	mov    0x54(%rcx,%rbp,4),%edx
    b7f9:	89 54 24 54          	mov    %edx,0x54(%rsp)
    b7fd:	8b 54 a9 58          	mov    0x58(%rcx,%rbp,4),%edx
    b801:	89 54 24 58          	mov    %edx,0x58(%rsp)
    b805:	8b 54 a9 5c          	mov    0x5c(%rcx,%rbp,4),%edx
    b809:	89 54 24 5c          	mov    %edx,0x5c(%rsp)
    b80d:	8b 54 a9 60          	mov    0x60(%rcx,%rbp,4),%edx
    b811:	89 54 24 cc          	mov    %edx,-0x34(%rsp)
    b815:	8b 54 a9 64          	mov    0x64(%rcx,%rbp,4),%edx
    b819:	89 54 24 d0          	mov    %edx,-0x30(%rsp)
    b81d:	8b 4c a9 68          	mov    0x68(%rcx,%rbp,4),%ecx
    b821:	89 4c 24 d4          	mov    %ecx,-0x2c(%rsp)
    b825:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    b829:	89 4c 24 e4          	mov    %ecx,-0x1c(%rsp)
    b82d:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b831:	74 43                	je     b876 <process+0x976>
    b833:	8b 74 24 a8          	mov    -0x58(%rsp),%esi
    b837:	89 f1                	mov    %esi,%ecx
    b839:	c1 c1 0f             	rol    $0xf,%ecx
    b83c:	89 f2                	mov    %esi,%edx
    b83e:	c1 c2 0d             	rol    $0xd,%edx
    b841:	31 ca                	xor    %ecx,%edx
    b843:	89 f1                	mov    %esi,%ecx
    b845:	c1 e9 0a             	shr    $0xa,%ecx
    b848:	8b 74 24 94          	mov    -0x6c(%rsp),%esi
    b84c:	89 f5                	mov    %esi,%ebp
    b84e:	c1 c5 19             	rol    $0x19,%ebp
    b851:	31 d1                	xor    %edx,%ecx
    b853:	89 f2                	mov    %esi,%edx
    b855:	c1 c2 0e             	rol    $0xe,%edx
    b858:	31 ea                	xor    %ebp,%edx
    b85a:	89 f5                	mov    %esi,%ebp
    b85c:	c1 ed 03             	shr    $0x3,%ebp
    b85f:	31 d5                	xor    %edx,%ebp
    b861:	8b 54 24 90          	mov    -0x70(%rsp),%edx
    b865:	03 54 24 84          	add    -0x7c(%rsp),%edx
    b869:	01 ea                	add    %ebp,%edx
    b86b:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b870:	01 ca                	add    %ecx,%edx
    b872:	89 54 24 e4          	mov    %edx,-0x1c(%rsp)
    b876:	48 8d 0d e3 c6 01 00 	lea    0x1c6e3(%rip),%rcx        # 27f60 <SHA256_K>
    b87d:	8b 4c a9 6c          	mov    0x6c(%rcx,%rbp,4),%ecx
    b881:	89 4c 24 8c          	mov    %ecx,-0x74(%rsp)
    b885:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    b889:	89 4c 24 e0          	mov    %ecx,-0x20(%rsp)
    b88d:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b891:	74 43                	je     b8d6 <process+0x9d6>
    b893:	8b 74 24 e8          	mov    -0x18(%rsp),%esi
    b897:	89 f1                	mov    %esi,%ecx
    b899:	c1 c1 0f             	rol    $0xf,%ecx
    b89c:	89 f2                	mov    %esi,%edx
    b89e:	c1 c2 0d             	rol    $0xd,%edx
    b8a1:	31 ca                	xor    %ecx,%edx
    b8a3:	89 f1                	mov    %esi,%ecx
    b8a5:	c1 e9 0a             	shr    $0xa,%ecx
    b8a8:	8b 74 24 98          	mov    -0x68(%rsp),%esi
    b8ac:	89 f5                	mov    %esi,%ebp
    b8ae:	c1 c5 19             	rol    $0x19,%ebp
    b8b1:	31 d1                	xor    %edx,%ecx
    b8b3:	89 f2                	mov    %esi,%edx
    b8b5:	c1 c2 0e             	rol    $0xe,%edx
    b8b8:	31 ea                	xor    %ebp,%edx
    b8ba:	89 f5                	mov    %esi,%ebp
    b8bc:	c1 ed 03             	shr    $0x3,%ebp
    b8bf:	31 d5                	xor    %edx,%ebp
    b8c1:	8b 54 24 94          	mov    -0x6c(%rsp),%edx
    b8c5:	03 54 24 b8          	add    -0x48(%rsp),%edx
    b8c9:	01 ea                	add    %ebp,%edx
    b8cb:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b8d0:	01 ca                	add    %ecx,%edx
    b8d2:	89 54 24 e0          	mov    %edx,-0x20(%rsp)
    b8d6:	48 8d 0d 83 c6 01 00 	lea    0x1c683(%rip),%rcx        # 27f60 <SHA256_K>
    b8dd:	8b 4c a9 70          	mov    0x70(%rcx,%rbp,4),%ecx
    b8e1:	89 4c 24 90          	mov    %ecx,-0x70(%rsp)
    b8e5:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    b8e9:	89 4c 24 dc          	mov    %ecx,-0x24(%rsp)
    b8ed:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b8f1:	74 43                	je     b936 <process+0xa36>
    b8f3:	8b 74 24 e4          	mov    -0x1c(%rsp),%esi
    b8f7:	89 f1                	mov    %esi,%ecx
    b8f9:	c1 c1 0f             	rol    $0xf,%ecx
    b8fc:	89 f2                	mov    %esi,%edx
    b8fe:	c1 c2 0d             	rol    $0xd,%edx
    b901:	31 ca                	xor    %ecx,%edx
    b903:	89 f1                	mov    %esi,%ecx
    b905:	c1 e9 0a             	shr    $0xa,%ecx
    b908:	8b 74 24 9c          	mov    -0x64(%rsp),%esi
    b90c:	89 f5                	mov    %esi,%ebp
    b90e:	c1 c5 19             	rol    $0x19,%ebp
    b911:	31 d1                	xor    %edx,%ecx
    b913:	89 f2                	mov    %esi,%edx
    b915:	c1 c2 0e             	rol    $0xe,%edx
    b918:	31 ea                	xor    %ebp,%edx
    b91a:	89 f5                	mov    %esi,%ebp
    b91c:	c1 ed 03             	shr    $0x3,%ebp
    b91f:	31 d5                	xor    %edx,%ebp
    b921:	8b 54 24 98          	mov    -0x68(%rsp),%edx
    b925:	03 54 24 b4          	add    -0x4c(%rsp),%edx
    b929:	01 ea                	add    %ebp,%edx
    b92b:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b930:	01 ca                	add    %ecx,%edx
    b932:	89 54 24 dc          	mov    %edx,-0x24(%rsp)
    b936:	48 8d 0d 23 c6 01 00 	lea    0x1c623(%rip),%rcx        # 27f60 <SHA256_K>
    b93d:	8b 4c a9 74          	mov    0x74(%rcx,%rbp,4),%ecx
    b941:	89 4c 24 94          	mov    %ecx,-0x6c(%rsp)
    b945:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    b949:	89 4c 24 d8          	mov    %ecx,-0x28(%rsp)
    b94d:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b951:	74 43                	je     b996 <process+0xa96>
    b953:	8b 74 24 e0          	mov    -0x20(%rsp),%esi
    b957:	89 f1                	mov    %esi,%ecx
    b959:	c1 c1 0f             	rol    $0xf,%ecx
    b95c:	89 f2                	mov    %esi,%edx
    b95e:	c1 c2 0d             	rol    $0xd,%edx
    b961:	31 ca                	xor    %ecx,%edx
    b963:	89 f1                	mov    %esi,%ecx
    b965:	c1 e9 0a             	shr    $0xa,%ecx
    b968:	8b 74 24 a0          	mov    -0x60(%rsp),%esi
    b96c:	89 f5                	mov    %esi,%ebp
    b96e:	c1 c5 19             	rol    $0x19,%ebp
    b971:	31 d1                	xor    %edx,%ecx
    b973:	89 f2                	mov    %esi,%edx
    b975:	c1 c2 0e             	rol    $0xe,%edx
    b978:	31 ea                	xor    %ebp,%edx
    b97a:	89 f5                	mov    %esi,%ebp
    b97c:	c1 ed 03             	shr    $0x3,%ebp
    b97f:	31 d5                	xor    %edx,%ebp
    b981:	8b 54 24 9c          	mov    -0x64(%rsp),%edx
    b985:	03 54 24 b0          	add    -0x50(%rsp),%edx
    b989:	01 ea                	add    %ebp,%edx
    b98b:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b990:	01 ca                	add    %ecx,%edx
    b992:	89 54 24 d8          	mov    %edx,-0x28(%rsp)
    b996:	48 8d 0d c3 c5 01 00 	lea    0x1c5c3(%rip),%rcx        # 27f60 <SHA256_K>
    b99d:	8b 4c a9 78          	mov    0x78(%rcx,%rbp,4),%ecx
    b9a1:	89 4c 24 98          	mov    %ecx,-0x68(%rsp)
    b9a5:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    b9a9:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    b9ad:	74 41                	je     b9f0 <process+0xaf0>
    b9af:	8b 74 24 dc          	mov    -0x24(%rsp),%esi
    b9b3:	89 f1                	mov    %esi,%ecx
    b9b5:	c1 c1 0f             	rol    $0xf,%ecx
    b9b8:	89 f2                	mov    %esi,%edx
    b9ba:	c1 c2 0d             	rol    $0xd,%edx
    b9bd:	31 ca                	xor    %ecx,%edx
    b9bf:	89 f1                	mov    %esi,%ecx
    b9c1:	c1 e9 0a             	shr    $0xa,%ecx
    b9c4:	8b 74 24 80          	mov    -0x80(%rsp),%esi
    b9c8:	89 f5                	mov    %esi,%ebp
    b9ca:	c1 c5 19             	rol    $0x19,%ebp
    b9cd:	31 d1                	xor    %edx,%ecx
    b9cf:	89 f2                	mov    %esi,%edx
    b9d1:	c1 c2 0e             	rol    $0xe,%edx
    b9d4:	31 ea                	xor    %ebp,%edx
    b9d6:	89 f5                	mov    %esi,%ebp
    b9d8:	c1 ed 03             	shr    $0x3,%ebp
    b9db:	31 d5                	xor    %edx,%ebp
    b9dd:	8b 54 24 a0          	mov    -0x60(%rsp),%edx
    b9e1:	03 54 24 ac          	add    -0x54(%rsp),%edx
    b9e5:	01 ea                	add    %ebp,%edx
    b9e7:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    b9ec:	01 ca                	add    %ecx,%edx
    b9ee:	89 d1                	mov    %edx,%ecx
    b9f0:	89 4c 24 a0          	mov    %ecx,-0x60(%rsp)
    b9f4:	48 8d 0d 65 c5 01 00 	lea    0x1c565(%rip),%rcx        # 27f60 <SHA256_K>
    b9fb:	8b 4c a9 7c          	mov    0x7c(%rcx,%rbp,4),%ecx
    b9ff:	89 4c 24 9c          	mov    %ecx,-0x64(%rsp)
    ba03:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    ba07:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    ba0b:	0f 84 ef f5 ff ff    	je     b000 <process+0x100>
    ba11:	8b 74 24 d8          	mov    -0x28(%rsp),%esi
    ba15:	89 f1                	mov    %esi,%ecx
    ba17:	c1 c1 0f             	rol    $0xf,%ecx
    ba1a:	89 f2                	mov    %esi,%edx
    ba1c:	c1 c2 0d             	rol    $0xd,%edx
    ba1f:	31 ca                	xor    %ecx,%edx
    ba21:	89 f1                	mov    %esi,%ecx
    ba23:	c1 e9 0a             	shr    $0xa,%ecx
    ba26:	44 89 f6             	mov    %r14d,%esi
    ba29:	44 8b 74 24 88       	mov    -0x78(%rsp),%r14d
    ba2e:	44 89 f5             	mov    %r14d,%ebp
    ba31:	c1 c5 19             	rol    $0x19,%ebp
    ba34:	31 d1                	xor    %edx,%ecx
    ba36:	44 89 f2             	mov    %r14d,%edx
    ba39:	c1 c2 0e             	rol    $0xe,%edx
    ba3c:	31 ea                	xor    %ebp,%edx
    ba3e:	44 89 f5             	mov    %r14d,%ebp
    ba41:	41 89 f6             	mov    %esi,%r14d
    ba44:	c1 ed 03             	shr    $0x3,%ebp
    ba47:	31 d5                	xor    %edx,%ebp
    ba49:	8b 54 24 80          	mov    -0x80(%rsp),%edx
    ba4d:	03 54 24 a8          	add    -0x58(%rsp),%edx
    ba51:	01 ea                	add    %ebp,%edx
    ba53:	01 ca                	add    %ecx,%edx
    ba55:	89 d1                	mov    %edx,%ecx
    ba57:	e9 a4 f5 ff ff       	jmp    b000 <process+0x100>
    ba5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba60:	8b 6c 24 a0          	mov    -0x60(%rsp),%ebp
    ba64:	41 89 ee             	mov    %ebp,%r14d
    ba67:	41 c1 c6 0f          	rol    $0xf,%r14d
    ba6b:	41 89 ec             	mov    %ebp,%r12d
    ba6e:	41 c1 c4 0d          	rol    $0xd,%r12d
    ba72:	45 31 f4             	xor    %r14d,%r12d
    ba75:	41 89 ee             	mov    %ebp,%r14d
    ba78:	41 c1 ee 0a          	shr    $0xa,%r14d
    ba7c:	89 d5                	mov    %edx,%ebp
    ba7e:	c1 c5 19             	rol    $0x19,%ebp
    ba81:	45 31 e6             	xor    %r12d,%r14d
    ba84:	41 89 d4             	mov    %edx,%r12d
    ba87:	41 c1 c4 0e          	rol    $0xe,%r12d
    ba8b:	41 31 ec             	xor    %ebp,%r12d
    ba8e:	89 d5                	mov    %edx,%ebp
    ba90:	c1 ed 03             	shr    $0x3,%ebp
    ba93:	44 31 e5             	xor    %r12d,%ebp
    ba96:	03 4c 24 8c          	add    -0x74(%rsp),%ecx
    ba9a:	01 e9                	add    %ebp,%ecx
    ba9c:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    baa1:	44 01 f1             	add    %r14d,%ecx
    baa4:	41 89 cc             	mov    %ecx,%r12d
    baa7:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
    baab:	89 4c 24 a4          	mov    %ecx,-0x5c(%rsp)
    baaf:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bab3:	0f 84 03 fc ff ff    	je     b6bc <process+0x7bc>
    bab9:	44 8b 74 24 80       	mov    -0x80(%rsp),%r14d
    babe:	44 89 f1             	mov    %r14d,%ecx
    bac1:	c1 c1 0f             	rol    $0xf,%ecx
    bac4:	44 89 f5             	mov    %r14d,%ebp
    bac7:	c1 c5 0d             	rol    $0xd,%ebp
    baca:	31 cd                	xor    %ecx,%ebp
    bacc:	44 89 f1             	mov    %r14d,%ecx
    bacf:	c1 e9 0a             	shr    $0xa,%ecx
    bad2:	45 89 de             	mov    %r11d,%r14d
    bad5:	41 c1 c6 19          	rol    $0x19,%r14d
    bad9:	31 e9                	xor    %ebp,%ecx
    badb:	44 89 dd             	mov    %r11d,%ebp
    bade:	c1 c5 0e             	rol    $0xe,%ebp
    bae1:	44 31 f5             	xor    %r14d,%ebp
    bae4:	45 89 de             	mov    %r11d,%r14d
    bae7:	41 c1 ee 03          	shr    $0x3,%r14d
    baeb:	41 31 ee             	xor    %ebp,%r14d
    baee:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    baf3:	03 54 24 90          	add    -0x70(%rsp),%edx
    baf7:	44 01 f2             	add    %r14d,%edx
    bafa:	01 ca                	add    %ecx,%edx
    bafc:	89 54 24 a4          	mov    %edx,-0x5c(%rsp)
    bb00:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
    bb04:	89 4c 24 bc          	mov    %ecx,-0x44(%rsp)
    bb08:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bb0c:	0f 84 bc fb ff ff    	je     b6ce <process+0x7ce>
    bb12:	44 89 e1             	mov    %r12d,%ecx
    bb15:	c1 c1 0f             	rol    $0xf,%ecx
    bb18:	44 89 e2             	mov    %r12d,%edx
    bb1b:	c1 c2 0d             	rol    $0xd,%edx
    bb1e:	31 ca                	xor    %ecx,%edx
    bb20:	44 89 e1             	mov    %r12d,%ecx
    bb23:	c1 e9 0a             	shr    $0xa,%ecx
    bb26:	89 f5                	mov    %esi,%ebp
    bb28:	c1 c5 19             	rol    $0x19,%ebp
    bb2b:	31 d1                	xor    %edx,%ecx
    bb2d:	89 f2                	mov    %esi,%edx
    bb2f:	c1 c2 0e             	rol    $0xe,%edx
    bb32:	31 ea                	xor    %ebp,%edx
    bb34:	89 f5                	mov    %esi,%ebp
    bb36:	c1 ed 03             	shr    $0x3,%ebp
    bb39:	31 d5                	xor    %edx,%ebp
    bb3b:	44 03 5c 24 94       	add    -0x6c(%rsp),%r11d
    bb40:	41 01 eb             	add    %ebp,%r11d
    bb43:	48 8b 6c 24 c0       	mov    -0x40(%rsp),%rbp
    bb48:	41 01 cb             	add    %ecx,%r11d
    bb4b:	44 89 5c 24 bc       	mov    %r11d,-0x44(%rsp)
    bb50:	44 8b 5c 24 3c       	mov    0x3c(%rsp),%r11d
    bb55:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bb59:	0f 84 7e fb ff ff    	je     b6dd <process+0x7dd>
    bb5f:	44 8b 5c 24 a4       	mov    -0x5c(%rsp),%r11d
    bb64:	44 89 d9             	mov    %r11d,%ecx
    bb67:	c1 c1 0f             	rol    $0xf,%ecx
    bb6a:	44 89 da             	mov    %r11d,%edx
    bb6d:	c1 c2 0d             	rol    $0xd,%edx
    bb70:	31 ca                	xor    %ecx,%edx
    bb72:	44 89 d9             	mov    %r11d,%ecx
    bb75:	c1 e9 0a             	shr    $0xa,%ecx
    bb78:	44 8b 74 24 cc       	mov    -0x34(%rsp),%r14d
    bb7d:	45 89 f3             	mov    %r14d,%r11d
    bb80:	41 c1 c3 19          	rol    $0x19,%r11d
    bb84:	31 d1                	xor    %edx,%ecx
    bb86:	44 89 f2             	mov    %r14d,%edx
    bb89:	c1 c2 0e             	rol    $0xe,%edx
    bb8c:	44 31 da             	xor    %r11d,%edx
    bb8f:	45 89 f3             	mov    %r14d,%r11d
    bb92:	41 c1 eb 03          	shr    $0x3,%r11d
    bb96:	41 31 d3             	xor    %edx,%r11d
    bb99:	03 74 24 98          	add    -0x68(%rsp),%esi
    bb9d:	44 01 de             	add    %r11d,%esi
    bba0:	01 ce                	add    %ecx,%esi
    bba2:	41 89 f3             	mov    %esi,%r11d
    bba5:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
    bba9:	89 4c 24 b8          	mov    %ecx,-0x48(%rsp)
    bbad:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bbb1:	0f 84 38 fb ff ff    	je     b6ef <process+0x7ef>
    bbb7:	8b 74 24 bc          	mov    -0x44(%rsp),%esi
    bbbb:	89 f1                	mov    %esi,%ecx
    bbbd:	c1 c1 0f             	rol    $0xf,%ecx
    bbc0:	89 f2                	mov    %esi,%edx
    bbc2:	c1 c2 0d             	rol    $0xd,%edx
    bbc5:	31 ca                	xor    %ecx,%edx
    bbc7:	89 f1                	mov    %esi,%ecx
    bbc9:	c1 e9 0a             	shr    $0xa,%ecx
    bbcc:	44 8b 74 24 d0       	mov    -0x30(%rsp),%r14d
    bbd1:	44 89 f6             	mov    %r14d,%esi
    bbd4:	c1 c6 19             	rol    $0x19,%esi
    bbd7:	31 d1                	xor    %edx,%ecx
    bbd9:	44 89 f2             	mov    %r14d,%edx
    bbdc:	c1 c2 0e             	rol    $0xe,%edx
    bbdf:	31 f2                	xor    %esi,%edx
    bbe1:	44 89 f6             	mov    %r14d,%esi
    bbe4:	c1 ee 03             	shr    $0x3,%esi
    bbe7:	31 d6                	xor    %edx,%esi
    bbe9:	8b 54 24 cc          	mov    -0x34(%rsp),%edx
    bbed:	03 54 24 9c          	add    -0x64(%rsp),%edx
    bbf1:	01 f2                	add    %esi,%edx
    bbf3:	01 ca                	add    %ecx,%edx
    bbf5:	89 54 24 b8          	mov    %edx,-0x48(%rsp)
    bbf9:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    bbfd:	89 4c 24 b4          	mov    %ecx,-0x4c(%rsp)
    bc01:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bc05:	0f 84 f6 fa ff ff    	je     b701 <process+0x801>
    bc0b:	44 89 d9             	mov    %r11d,%ecx
    bc0e:	c1 c1 0f             	rol    $0xf,%ecx
    bc11:	44 89 da             	mov    %r11d,%edx
    bc14:	c1 c2 0d             	rol    $0xd,%edx
    bc17:	31 ca                	xor    %ecx,%edx
    bc19:	44 89 d9             	mov    %r11d,%ecx
    bc1c:	c1 e9 0a             	shr    $0xa,%ecx
    bc1f:	44 8b 74 24 d4       	mov    -0x2c(%rsp),%r14d
    bc24:	44 89 f6             	mov    %r14d,%esi
    bc27:	c1 c6 19             	rol    $0x19,%esi
    bc2a:	31 d1                	xor    %edx,%ecx
    bc2c:	44 89 f2             	mov    %r14d,%edx
    bc2f:	c1 c2 0e             	rol    $0xe,%edx
    bc32:	31 f2                	xor    %esi,%edx
    bc34:	44 89 f6             	mov    %r14d,%esi
    bc37:	c1 ee 03             	shr    $0x3,%esi
    bc3a:	31 d6                	xor    %edx,%esi
    bc3c:	8b 54 24 d0          	mov    -0x30(%rsp),%edx
    bc40:	03 54 24 a0          	add    -0x60(%rsp),%edx
    bc44:	01 f2                	add    %esi,%edx
    bc46:	01 ca                	add    %ecx,%edx
    bc48:	89 54 24 b4          	mov    %edx,-0x4c(%rsp)
    bc4c:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    bc50:	89 4c 24 b0          	mov    %ecx,-0x50(%rsp)
    bc54:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bc58:	0f 84 b5 fa ff ff    	je     b713 <process+0x813>
    bc5e:	8b 74 24 b8          	mov    -0x48(%rsp),%esi
    bc62:	89 f1                	mov    %esi,%ecx
    bc64:	c1 c1 0f             	rol    $0xf,%ecx
    bc67:	89 f2                	mov    %esi,%edx
    bc69:	c1 c2 0d             	rol    $0xd,%edx
    bc6c:	31 ca                	xor    %ecx,%edx
    bc6e:	89 f1                	mov    %esi,%ecx
    bc70:	c1 e9 0a             	shr    $0xa,%ecx
    bc73:	44 8b 74 24 84       	mov    -0x7c(%rsp),%r14d
    bc78:	44 89 f6             	mov    %r14d,%esi
    bc7b:	c1 c6 19             	rol    $0x19,%esi
    bc7e:	31 d1                	xor    %edx,%ecx
    bc80:	44 89 f2             	mov    %r14d,%edx
    bc83:	c1 c2 0e             	rol    $0xe,%edx
    bc86:	31 f2                	xor    %esi,%edx
    bc88:	44 89 f6             	mov    %r14d,%esi
    bc8b:	c1 ee 03             	shr    $0x3,%esi
    bc8e:	31 d6                	xor    %edx,%esi
    bc90:	8b 54 24 d4          	mov    -0x2c(%rsp),%edx
    bc94:	03 54 24 80          	add    -0x80(%rsp),%edx
    bc98:	01 f2                	add    %esi,%edx
    bc9a:	01 ca                	add    %ecx,%edx
    bc9c:	89 54 24 b0          	mov    %edx,-0x50(%rsp)
    bca0:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    bca4:	89 4c 24 ac          	mov    %ecx,-0x54(%rsp)
    bca8:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bcac:	0f 84 73 fa ff ff    	je     b725 <process+0x825>
    bcb2:	8b 74 24 b4          	mov    -0x4c(%rsp),%esi
    bcb6:	89 f1                	mov    %esi,%ecx
    bcb8:	c1 c1 0f             	rol    $0xf,%ecx
    bcbb:	89 f2                	mov    %esi,%edx
    bcbd:	c1 c2 0d             	rol    $0xd,%edx
    bcc0:	31 ca                	xor    %ecx,%edx
    bcc2:	89 f1                	mov    %esi,%ecx
    bcc4:	c1 e9 0a             	shr    $0xa,%ecx
    bcc7:	44 8b 74 24 88       	mov    -0x78(%rsp),%r14d
    bccc:	44 89 f6             	mov    %r14d,%esi
    bccf:	c1 c6 19             	rol    $0x19,%esi
    bcd2:	31 d1                	xor    %edx,%ecx
    bcd4:	44 89 f2             	mov    %r14d,%edx
    bcd7:	c1 c2 0e             	rol    $0xe,%edx
    bcda:	31 f2                	xor    %esi,%edx
    bcdc:	44 89 f6             	mov    %r14d,%esi
    bcdf:	c1 ee 03             	shr    $0x3,%esi
    bce2:	31 d6                	xor    %edx,%esi
    bce4:	8b 54 24 84          	mov    -0x7c(%rsp),%edx
    bce8:	44 01 e2             	add    %r12d,%edx
    bceb:	01 f2                	add    %esi,%edx
    bced:	01 ca                	add    %ecx,%edx
    bcef:	89 54 24 ac          	mov    %edx,-0x54(%rsp)
    bcf3:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    bcf7:	89 4c 24 a8          	mov    %ecx,-0x58(%rsp)
    bcfb:	48 83 fd f0          	cmp    $0xfffffffffffffff0,%rbp
    bcff:	0f 85 2e fa ff ff    	jne    b733 <process+0x833>
    bd05:	e9 6b fa ff ff       	jmp    b775 <process+0x875>
    bd0a:	03 5c 24 ec          	add    -0x14(%rsp),%ebx
    bd0e:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
    bd13:	89 59 40             	mov    %ebx,0x40(%rcx)
    bd16:	44 03 44 24 f0       	add    -0x10(%rsp),%r8d
    bd1b:	44 89 41 44          	mov    %r8d,0x44(%rcx)
    bd1f:	44 03 4c 24 f4       	add    -0xc(%rsp),%r9d
    bd24:	44 89 49 48          	mov    %r9d,0x48(%rcx)
    bd28:	44 03 54 24 f8       	add    -0x8(%rsp),%r10d
    bd2d:	44 89 51 4c          	mov    %r10d,0x4c(%rcx)
    bd31:	44 03 6c 24 fc       	add    -0x4(%rsp),%r13d
    bd36:	44 89 69 50          	mov    %r13d,0x50(%rcx)
    bd3a:	03 04 24             	add    (%rsp),%eax
    bd3d:	89 41 54             	mov    %eax,0x54(%rcx)
    bd40:	03 7c 24 04          	add    0x4(%rsp),%edi
    bd44:	89 79 58             	mov    %edi,0x58(%rcx)
    bd47:	44 03 7c 24 08       	add    0x8(%rsp),%r15d
    bd4c:	44 89 79 5c          	mov    %r15d,0x5c(%rcx)
    bd50:	48 83 c4 68          	add    $0x68,%rsp
    bd54:	5b                   	pop    %rbx
    bd55:	41 5c                	pop    %r12
    bd57:	41 5d                	pop    %r13
    bd59:	41 5e                	pop    %r14
    bd5b:	41 5f                	pop    %r15
    bd5d:	5d                   	pop    %rbp
    bd5e:	c3                   	ret    
    bd5f:	90                   	nop

000000000000bd60 <lzma_sha256_finish>:
    bd60:	53                   	push   %rbx
    bd61:	48 89 fb             	mov    %rdi,%rbx
    bd64:	48 8b 47 60          	mov    0x60(%rdi),%rax
    bd68:	83 e0 3f             	and    $0x3f,%eax
    bd6b:	c6 04 07 80          	movb   $0x80,(%rdi,%rax,1)
    bd6f:	48 83 f8 37          	cmp    $0x37,%rax
    bd73:	74 2a                	je     bd9f <lzma_sha256_finish+0x3f>
    bd75:	83 f8 3f             	cmp    $0x3f,%eax
    bd78:	0f 85 05 01 00 00    	jne    be83 <lzma_sha256_finish+0x123>
    bd7e:	48 89 df             	mov    %rbx,%rdi
    bd81:	e8 7a f1 ff ff       	call   af00 <process>
    bd86:	31 c0                	xor    %eax,%eax
    bd88:	c6 04 03 00          	movb   $0x0,(%rbx,%rax,1)
    bd8c:	48 83 f8 3f          	cmp    $0x3f,%rax
    bd90:	74 ec                	je     bd7e <lzma_sha256_finish+0x1e>
    bd92:	48 8d 48 01          	lea    0x1(%rax),%rcx
    bd96:	48 83 f8 37          	cmp    $0x37,%rax
    bd9a:	48 89 c8             	mov    %rcx,%rax
    bd9d:	75 e9                	jne    bd88 <lzma_sha256_finish+0x28>
    bd9f:	48 8b 43 60          	mov    0x60(%rbx),%rax
    bda3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    bdaa:	00 
    bdab:	48 89 4b 60          	mov    %rcx,0x60(%rbx)
    bdaf:	48 89 c2             	mov    %rax,%rdx
    bdb2:	48 c1 e2 3b          	shl    $0x3b,%rdx
    bdb6:	89 c6                	mov    %eax,%esi
    bdb8:	81 e6 e0 1f 00 00    	and    $0x1fe0,%esi
    bdbe:	48 c1 e6 2b          	shl    $0x2b,%rsi
    bdc2:	48 09 d6             	or     %rdx,%rsi
    bdc5:	89 c2                	mov    %eax,%edx
    bdc7:	81 e2 00 e0 1f 00    	and    $0x1fe000,%edx
    bdcd:	48 c1 e2 1b          	shl    $0x1b,%rdx
    bdd1:	48 09 f2             	or     %rsi,%rdx
    bdd4:	89 c6                	mov    %eax,%esi
    bdd6:	81 e6 00 00 e0 1f    	and    $0x1fe00000,%esi
    bddc:	48 c1 e6 0b          	shl    $0xb,%rsi
    bde0:	48 09 d6             	or     %rdx,%rsi
    bde3:	48 89 c2             	mov    %rax,%rdx
    bde6:	48 c1 ea 05          	shr    $0x5,%rdx
    bdea:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
    bdf0:	48 09 f2             	or     %rsi,%rdx
    bdf3:	48 89 c6             	mov    %rax,%rsi
    bdf6:	48 c1 ee 15          	shr    $0x15,%rsi
    bdfa:	81 e6 00 00 ff 00    	and    $0xff0000,%esi
    be00:	48 09 d6             	or     %rdx,%rsi
    be03:	48 c1 e8 25          	shr    $0x25,%rax
    be07:	25 00 ff 00 00       	and    $0xff00,%eax
    be0c:	48 09 f0             	or     %rsi,%rax
    be0f:	48 c1 e9 38          	shr    $0x38,%rcx
    be13:	48 09 c1             	or     %rax,%rcx
    be16:	48 89 4b 38          	mov    %rcx,0x38(%rbx)
    be1a:	48 89 df             	mov    %rbx,%rdi
    be1d:	e8 de f0 ff ff       	call   af00 <process>
    be22:	66 0f ef c0          	pxor   %xmm0,%xmm0
    be26:	f3 0f 6f 4b 40       	movdqu 0x40(%rbx),%xmm1
    be2b:	f3 0f 6f 53 50       	movdqu 0x50(%rbx),%xmm2
    be30:	66 0f 6f d9          	movdqa %xmm1,%xmm3
    be34:	66 0f 68 d8          	punpckhbw %xmm0,%xmm3
    be38:	f2 0f 70 db 1b       	pshuflw $0x1b,%xmm3,%xmm3
    be3d:	f3 0f 70 db 1b       	pshufhw $0x1b,%xmm3,%xmm3
    be42:	66 0f 60 c8          	punpcklbw %xmm0,%xmm1
    be46:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
    be4b:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
    be50:	66 0f 67 cb          	packuswb %xmm3,%xmm1
    be54:	f3 0f 7f 0b          	movdqu %xmm1,(%rbx)
    be58:	66 0f 6f ca          	movdqa %xmm2,%xmm1
    be5c:	66 0f 68 c8          	punpckhbw %xmm0,%xmm1
    be60:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
    be65:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
    be6a:	66 0f 60 d0          	punpcklbw %xmm0,%xmm2
    be6e:	f2 0f 70 c2 1b       	pshuflw $0x1b,%xmm2,%xmm0
    be73:	f3 0f 70 c0 1b       	pshufhw $0x1b,%xmm0,%xmm0
    be78:	66 0f 67 c1          	packuswb %xmm1,%xmm0
    be7c:	f3 0f 7f 43 10       	movdqu %xmm0,0x10(%rbx)
    be81:	5b                   	pop    %rbx
    be82:	c3                   	ret    
    be83:	48 ff c0             	inc    %rax
    be86:	e9 fd fe ff ff       	jmp    bd88 <lzma_sha256_finish+0x28>
    be8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000be90 <lzma_lz_encoder_memusage>:
    be90:	48 83 ec 78          	sub    $0x78,%rsp
    be94:	48 89 fa             	mov    %rdi,%rdx
    be97:	0f 57 c0             	xorps  %xmm0,%xmm0
    be9a:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    be9f:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    bea4:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    bea9:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    beae:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    beb3:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    beb8:	0f 29 04 24          	movaps %xmm0,(%rsp)
    bebc:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
    bec3:	00 00 
    bec5:	48 89 e7             	mov    %rsp,%rdi
    bec8:	31 f6                	xor    %esi,%esi
    beca:	e8 31 00 00 00       	call   bf00 <lz_encoder_prepare>
    becf:	89 c1                	mov    %eax,%ecx
    bed1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    bed8:	84 c9                	test   %cl,%cl
    beda:	75 16                	jne    bef2 <lzma_lz_encoder_memusage+0x62>
    bedc:	8b 44 24 08          	mov    0x8(%rsp),%eax
    bee0:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    bee4:	03 4c 24 6c          	add    0x6c(%rsp),%ecx
    bee8:	48 8d 04 88          	lea    (%rax,%rcx,4),%rax
    beec:	48 05 d8 00 00 00    	add    $0xd8,%rax
    bef2:	48 83 c4 78          	add    $0x78,%rsp
    bef6:	c3                   	ret    
    bef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    befe:	00 00 

000000000000bf00 <lz_encoder_prepare>:
    bf00:	55                   	push   %rbp
    bf01:	41 57                	push   %r15
    bf03:	41 56                	push   %r14
    bf05:	41 54                	push   %r12
    bf07:	53                   	push   %rbx
    bf08:	48 8b 42 08          	mov    0x8(%rdx),%rax
    bf0c:	48 8d 88 ff ff ff 9f 	lea    -0x60000001(%rax),%rcx
    bf13:	b3 01                	mov    $0x1,%bl
    bf15:	48 81 f9 ff 0f 00 a0 	cmp    $0xffffffffa0000fff,%rcx
    bf1c:	0f 82 14 02 00 00    	jb     c136 <lz_encoder_prepare+0x236>
    bf22:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    bf26:	48 3b 4a 18          	cmp    0x18(%rdx),%rcx
    bf2a:	0f 87 06 02 00 00    	ja     c136 <lz_encoder_prepare+0x236>
    bf30:	03 02                	add    (%rdx),%eax
    bf32:	89 47 0c             	mov    %eax,0xc(%rdi)
    bf35:	44 8b 42 18          	mov    0x18(%rdx),%r8d
    bf39:	44 03 42 10          	add    0x10(%rdx),%r8d
    bf3d:	44 89 47 10          	mov    %r8d,0x10(%rdi)
    bf41:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    bf45:	4c 8b 52 18          	mov    0x18(%rdx),%r10
    bf49:	49 d1 e9             	shr    %r9
    bf4c:	41 81 f9 01 00 00 40 	cmp    $0x40000001,%r9d
    bf53:	0f 93 c1             	setae  %cl
    bf56:	41 d3 e9             	shr    %cl,%r9d
    bf59:	4c 03 12             	add    (%rdx),%r10
    bf5c:	4c 03 52 10          	add    0x10(%rdx),%r10
    bf60:	49 d1 ea             	shr    %r10
    bf63:	8b 4f 08             	mov    0x8(%rdi),%ecx
    bf66:	41 01 c0             	add    %eax,%r8d
    bf69:	45 01 c8             	add    %r9d,%r8d
    bf6c:	45 01 d0             	add    %r10d,%r8d
    bf6f:	41 81 c0 00 00 08 00 	add    $0x80000,%r8d
    bf76:	44 89 47 08          	mov    %r8d,0x8(%rdi)
    bf7a:	48 8b 07             	mov    (%rdi),%rax
    bf7d:	48 85 c0             	test   %rax,%rax
    bf80:	74 26                	je     bfa8 <lz_encoder_prepare+0xa8>
    bf82:	44 39 c1             	cmp    %r8d,%ecx
    bf85:	74 21                	je     bfa8 <lz_encoder_prepare+0xa8>
    bf87:	49 89 ff             	mov    %rdi,%r15
    bf8a:	48 89 c7             	mov    %rax,%rdi
    bf8d:	49 89 f6             	mov    %rsi,%r14
    bf90:	49 89 d4             	mov    %rdx,%r12
    bf93:	e8 58 6f ff ff       	call   2ef0 <lzma_free>
    bf98:	4c 89 f6             	mov    %r14,%rsi
    bf9b:	4c 89 e2             	mov    %r12,%rdx
    bf9e:	4c 89 ff             	mov    %r15,%rdi
    bfa1:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    bfa8:	8b 42 18             	mov    0x18(%rdx),%eax
    bfab:	89 47 64             	mov    %eax,0x64(%rdi)
    bfae:	44 8b 42 20          	mov    0x20(%rdx),%r8d
    bfb2:	44 89 47 60          	mov    %r8d,0x60(%rdi)
    bfb6:	8b 42 08             	mov    0x8(%rdx),%eax
    bfb9:	ff c0                	inc    %eax
    bfbb:	89 47 54             	mov    %eax,0x54(%rdi)
    bfbe:	8b 4a 28             	mov    0x28(%rdx),%ecx
    bfc1:	83 c1 fd             	add    $0xfffffffd,%ecx
    bfc4:	83 f9 11             	cmp    $0x11,%ecx
    bfc7:	0f 87 69 01 00 00    	ja     c136 <lz_encoder_prepare+0x236>
    bfcd:	4c 8d 0d 8c c0 01 00 	lea    0x1c08c(%rip),%r9        # 28060 <SHA256_K+0x100>
    bfd4:	49 63 0c 89          	movslq (%r9,%rcx,4),%rcx
    bfd8:	4c 01 c9             	add    %r9,%rcx
    bfdb:	ff e1                	jmp    *%rcx
    bfdd:	48 8d 0d 7c 0b 00 00 	lea    0xb7c(%rip),%rcx        # cb60 <lzma_mf_hc3_skip>
    bfe4:	4c 8d 0d 45 07 00 00 	lea    0x745(%rip),%r9        # c730 <lzma_mf_hc3_find>
    bfeb:	eb 3e                	jmp    c02b <lz_encoder_prepare+0x12b>
    bfed:	48 8d 0d 7c 16 00 00 	lea    0x167c(%rip),%rcx        # d670 <lzma_mf_bt2_skip>
    bff4:	4c 8d 0d 55 13 00 00 	lea    0x1355(%rip),%r9        # d350 <lzma_mf_bt2_find>
    bffb:	eb 2e                	jmp    c02b <lz_encoder_prepare+0x12b>
    bffd:	48 8d 0d 9c 11 00 00 	lea    0x119c(%rip),%rcx        # d1a0 <lzma_mf_hc4_skip>
    c004:	4c 8d 0d e5 0c 00 00 	lea    0xce5(%rip),%r9        # ccf0 <lzma_mf_hc4_find>
    c00b:	eb 1e                	jmp    c02b <lz_encoder_prepare+0x12b>
    c00d:	48 8d 0d dc 1e 00 00 	lea    0x1edc(%rip),%rcx        # def0 <lzma_mf_bt3_skip>
    c014:	4c 8d 0d f5 18 00 00 	lea    0x18f5(%rip),%r9        # d910 <lzma_mf_bt3_find>
    c01b:	eb 0e                	jmp    c02b <lz_encoder_prepare+0x12b>
    c01d:	48 8d 0d fc 27 00 00 	lea    0x27fc(%rip),%rcx        # e820 <lzma_mf_bt4_skip>
    c024:	4c 8d 0d 95 21 00 00 	lea    0x2195(%rip),%r9        # e1c0 <lzma_mf_bt4_find>
    c02b:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
    c02f:	48 89 4f 38          	mov    %rcx,0x38(%rdi)
    c033:	8b 6a 28             	mov    0x28(%rdx),%ebp
    c036:	89 e9                	mov    %ebp,%ecx
    c038:	83 e1 0f             	and    $0xf,%ecx
    c03b:	44 39 c1             	cmp    %r8d,%ecx
    c03e:	0f 87 f2 00 00 00    	ja     c136 <lz_encoder_prepare+0x236>
    c044:	83 e5 10             	and    $0x10,%ebp
    c047:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
    c04d:	83 f9 02             	cmp    $0x2,%ecx
    c050:	74 51                	je     c0a3 <lz_encoder_prepare+0x1a3>
    c052:	44 8b 42 08          	mov    0x8(%rdx),%r8d
    c056:	41 ff c8             	dec    %r8d
    c059:	45 89 c1             	mov    %r8d,%r9d
    c05c:	41 d1 e9             	shr    %r9d
    c05f:	45 09 c1             	or     %r8d,%r9d
    c062:	45 89 ca             	mov    %r9d,%r10d
    c065:	41 c1 ea 02          	shr    $0x2,%r10d
    c069:	45 09 ca             	or     %r9d,%r10d
    c06c:	45 89 d0             	mov    %r10d,%r8d
    c06f:	41 c1 e8 04          	shr    $0x4,%r8d
    c073:	45 09 d0             	or     %r10d,%r8d
    c076:	45 89 c1             	mov    %r8d,%r9d
    c079:	41 c1 e9 09          	shr    $0x9,%r9d
    c07d:	41 d1 e8             	shr    %r8d
    c080:	45 09 c8             	or     %r9d,%r8d
    c083:	41 81 c8 ff ff 00 00 	or     $0xffff,%r8d
    c08a:	41 81 f8 01 00 00 01 	cmp    $0x1000001,%r8d
    c091:	72 10                	jb     c0a3 <lz_encoder_prepare+0x1a3>
    c093:	41 d1 e8             	shr    %r8d
    c096:	83 f9 03             	cmp    $0x3,%ecx
    c099:	41 b9 ff ff ff 00    	mov    $0xffffff,%r9d
    c09f:	45 0f 44 c1          	cmove  %r9d,%r8d
    c0a3:	44 89 47 58          	mov    %r8d,0x58(%rdi)
    c0a7:	45 31 c9             	xor    %r9d,%r9d
    c0aa:	83 f9 03             	cmp    $0x3,%ecx
    c0ad:	41 0f 93 c1          	setae  %r9b
    c0b1:	41 c1 e1 0a          	shl    $0xa,%r9d
    c0b5:	45 01 c1             	add    %r8d,%r9d
    c0b8:	45 31 c0             	xor    %r8d,%r8d
    c0bb:	83 f9 04             	cmp    $0x4,%ecx
    c0be:	41 0f 93 c0          	setae  %r8b
    c0c2:	41 c1 e0 10          	shl    $0x10,%r8d
    c0c6:	47 8d 14 08          	lea    (%r8,%r9,1),%r10d
    c0ca:	41 ff c2             	inc    %r10d
    c0cd:	45 01 c8             	add    %r9d,%r8d
    c0d0:	44 8b 4f 70          	mov    0x70(%rdi),%r9d
    c0d4:	44 03 4f 6c          	add    0x6c(%rdi),%r9d
    c0d8:	89 e9                	mov    %ebp,%ecx
    c0da:	c1 e9 04             	shr    $0x4,%ecx
    c0dd:	d3 e0                	shl    %cl,%eax
    c0df:	44 89 57 6c          	mov    %r10d,0x6c(%rdi)
    c0e3:	89 47 70             	mov    %eax,0x70(%rdi)
    c0e6:	44 01 c0             	add    %r8d,%eax
    c0e9:	ff c0                	inc    %eax
    c0eb:	41 39 c1             	cmp    %eax,%r9d
    c0ee:	74 20                	je     c110 <lz_encoder_prepare+0x210>
    c0f0:	48 8b 47 40          	mov    0x40(%rdi),%rax
    c0f4:	48 89 fb             	mov    %rdi,%rbx
    c0f7:	48 89 c7             	mov    %rax,%rdi
    c0fa:	49 89 d6             	mov    %rdx,%r14
    c0fd:	e8 ee 6d ff ff       	call   2ef0 <lzma_free>
    c102:	4c 89 f2             	mov    %r14,%rdx
    c105:	48 89 df             	mov    %rbx,%rdi
    c108:	48 c7 43 40 00 00 00 	movq   $0x0,0x40(%rbx)
    c10f:	00 
    c110:	8b 42 2c             	mov    0x2c(%rdx),%eax
    c113:	89 47 5c             	mov    %eax,0x5c(%rdi)
    c116:	85 c0                	test   %eax,%eax
    c118:	75 1a                	jne    c134 <lz_encoder_prepare+0x234>
    c11a:	85 ed                	test   %ebp,%ebp
    c11c:	0f 94 c1             	sete   %cl
    c11f:	8b 47 60             	mov    0x60(%rdi),%eax
    c122:	fe c1                	inc    %cl
    c124:	d3 e8                	shr    %cl,%eax
    c126:	8d 48 04             	lea    0x4(%rax),%ecx
    c129:	83 c0 10             	add    $0x10,%eax
    c12c:	85 ed                	test   %ebp,%ebp
    c12e:	0f 44 c1             	cmove  %ecx,%eax
    c131:	89 47 5c             	mov    %eax,0x5c(%rdi)
    c134:	31 db                	xor    %ebx,%ebx
    c136:	89 d8                	mov    %ebx,%eax
    c138:	5b                   	pop    %rbx
    c139:	41 5c                	pop    %r12
    c13b:	41 5e                	pop    %r14
    c13d:	41 5f                	pop    %r15
    c13f:	5d                   	pop    %rbp
    c140:	c3                   	ret    
    c141:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    c148:	0f 1f 84 00 00 00 00 
    c14f:	00 

000000000000c150 <lzma_lz_encoder_init>:
    c150:	41 57                	push   %r15
    c152:	41 56                	push   %r14
    c154:	41 55                	push   %r13
    c156:	41 54                	push   %r12
    c158:	53                   	push   %rbx
    c159:	48 83 ec 40          	sub    $0x40,%rsp
    c15d:	49 89 cc             	mov    %rcx,%r12
    c160:	48 89 d3             	mov    %rdx,%rbx
    c163:	49 89 f6             	mov    %rsi,%r14
    c166:	49 89 ff             	mov    %rdi,%r15
    c169:	48 8b 3f             	mov    (%rdi),%rdi
    c16c:	48 85 ff             	test   %rdi,%rdi
    c16f:	0f 85 bb 00 00 00    	jne    c230 <lzma_lz_encoder_init+0xe0>
    c175:	bf d8 00 00 00       	mov    $0xd8,%edi
    c17a:	4c 89 f6             	mov    %r14,%rsi
    c17d:	e8 3e 6d ff ff       	call   2ec0 <lzma_alloc>
    c182:	49 89 07             	mov    %rax,(%r15)
    c185:	48 85 c0             	test   %rax,%rax
    c188:	0f 84 d5 01 00 00    	je     c363 <lzma_lz_encoder_init+0x213>
    c18e:	48 8d 0d eb 01 00 00 	lea    0x1eb(%rip),%rcx        # c380 <lz_encode>
    c195:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    c199:	48 8d 0d 20 04 00 00 	lea    0x420(%rip),%rcx        # c5c0 <lz_encoder_end>
    c1a0:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    c1a4:	48 8d 0d 75 04 00 00 	lea    0x475(%rip),%rcx        # c620 <lz_encoder_update>
    c1ab:	49 89 4f 38          	mov    %rcx,0x38(%r15)
    c1af:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c1b6:	49 8b 07             	mov    (%r15),%rax
    c1b9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c1c0:	00 
    c1c1:	49 8b 07             	mov    (%r15),%rax
    c1c4:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c1cb:	00 
    c1cc:	49 8b 07             	mov    (%r15),%rax
    c1cf:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    c1d6:	00 
    c1d7:	49 8b 07             	mov    (%r15),%rax
    c1da:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    c1e1:	00 
    c1e2:	49 8b 07             	mov    (%r15),%rax
    c1e5:	c7 80 8c 00 00 00 00 	movl   $0x0,0x8c(%rax)
    c1ec:	00 00 00 
    c1ef:	49 8b 07             	mov    (%r15),%rax
    c1f2:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)
    c1f9:	00 00 00 
    c1fc:	49 8b 07             	mov    (%r15),%rax
    c1ff:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
    c206:	00 00 00 00 
    c20a:	48 c7 80 a0 00 00 00 	movq   $0xffffffffffffffff,0xa0(%rax)
    c211:	ff ff ff ff 
    c215:	0f 57 c0             	xorps  %xmm0,%xmm0
    c218:	0f 11 80 a8 00 00 00 	movups %xmm0,0xa8(%rax)
    c21f:	0f 11 80 b8 00 00 00 	movups %xmm0,0xb8(%rax)
    c226:	0f 11 80 c8 00 00 00 	movups %xmm0,0xc8(%rax)
    c22d:	49 8b 3f             	mov    (%r15),%rdi
    c230:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    c234:	48 89 e1             	mov    %rsp,%rcx
    c237:	4c 89 f6             	mov    %r14,%rsi
    c23a:	41 ff d4             	call   *%r12
    c23d:	85 c0                	test   %eax,%eax
    c23f:	0f 85 23 01 00 00    	jne    c368 <lzma_lz_encoder_init+0x218>
    c245:	49 8b 3f             	mov    (%r15),%rdi
    c248:	48 83 c7 20          	add    $0x20,%rdi
    c24c:	48 89 e2             	mov    %rsp,%rdx
    c24f:	4c 89 f6             	mov    %r14,%rsi
    c252:	e8 a9 fc ff ff       	call   bf00 <lz_encoder_prepare>
    c257:	89 c1                	mov    %eax,%ecx
    c259:	b8 08 00 00 00       	mov    $0x8,%eax
    c25e:	84 c9                	test   %cl,%cl
    c260:	0f 85 02 01 00 00    	jne    c368 <lzma_lz_encoder_init+0x218>
    c266:	4d 8b 2f             	mov    (%r15),%r13
    c269:	49 83 7d 20 00       	cmpq   $0x0,0x20(%r13)
    c26e:	75 19                	jne    c289 <lzma_lz_encoder_init+0x139>
    c270:	41 8b 7d 28          	mov    0x28(%r13),%edi
    c274:	4c 89 f6             	mov    %r14,%rsi
    c277:	e8 44 6c ff ff       	call   2ec0 <lzma_alloc>
    c27c:	49 89 45 20          	mov    %rax,0x20(%r13)
    c280:	48 85 c0             	test   %rax,%rax
    c283:	0f 84 da 00 00 00    	je     c363 <lzma_lz_encoder_init+0x213>
    c289:	41 8b 45 74          	mov    0x74(%r13),%eax
    c28d:	41 89 45 34          	mov    %eax,0x34(%r13)
    c291:	0f 57 c0             	xorps  %xmm0,%xmm0
    c294:	41 0f 11 45 38       	movups %xmm0,0x38(%r13)
    c299:	41 c7 45 48 00 00 00 	movl   $0x0,0x48(%r13)
    c2a0:	00 
    c2a1:	49 8b 7d 60          	mov    0x60(%r13),%rdi
    c2a5:	48 85 ff             	test   %rdi,%rdi
    c2a8:	75 2a                	jne    c2d4 <lzma_lz_encoder_init+0x184>
    c2aa:	41 8b bd 90 00 00 00 	mov    0x90(%r13),%edi
    c2b1:	41 03 bd 8c 00 00 00 	add    0x8c(%r13),%edi
    c2b8:	48 c1 e7 02          	shl    $0x2,%rdi
    c2bc:	4c 89 f6             	mov    %r14,%rsi
    c2bf:	e8 fc 6b ff ff       	call   2ec0 <lzma_alloc>
    c2c4:	48 89 c7             	mov    %rax,%rdi
    c2c7:	49 89 45 60          	mov    %rax,0x60(%r13)
    c2cb:	48 85 c0             	test   %rax,%rax
    c2ce:	0f 84 8f 00 00 00    	je     c363 <lzma_lz_encoder_init+0x213>
    c2d4:	41 8b 95 8c 00 00 00 	mov    0x8c(%r13),%edx
    c2db:	48 8d 04 97          	lea    (%rdi,%rdx,4),%rax
    c2df:	49 89 45 68          	mov    %rax,0x68(%r13)
    c2e3:	41 c7 45 70 00 00 00 	movl   $0x0,0x70(%r13)
    c2ea:	00 
    c2eb:	48 c1 e2 02          	shl    $0x2,%rdx
    c2ef:	31 f6                	xor    %esi,%esi
    c2f1:	e8 ca 5d ff ff       	call   20c0 <memset@plt>
    c2f6:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    c2fb:	48 85 f6             	test   %rsi,%rsi
    c2fe:	74 3f                	je     c33f <lzma_lz_encoder_init+0x1ef>
    c300:	8b 44 24 38          	mov    0x38(%rsp),%eax
    c304:	48 85 c0             	test   %rax,%rax
    c307:	74 36                	je     c33f <lzma_lz_encoder_init+0x1ef>
    c309:	4d 8d 65 20          	lea    0x20(%r13),%r12
    c30d:	41 8b 55 28          	mov    0x28(%r13),%edx
    c311:	39 d0                	cmp    %edx,%eax
    c313:	0f 42 d0             	cmovb  %eax,%edx
    c316:	41 89 55 44          	mov    %edx,0x44(%r13)
    c31a:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    c31e:	48 01 c6             	add    %rax,%rsi
    c321:	48 29 d6             	sub    %rdx,%rsi
    c324:	e8 27 5e ff ff       	call   2150 <memcpy@plt>
    c329:	41 c7 85 88 00 00 00 	movl   $0x1,0x88(%r13)
    c330:	01 00 00 00 
    c334:	41 8b 75 44          	mov    0x44(%r13),%esi
    c338:	4c 89 e7             	mov    %r12,%rdi
    c33b:	41 ff 55 58          	call   *0x58(%r13)
    c33f:	41 c7 85 88 00 00 00 	movl   $0x0,0x88(%r13)
    c346:	00 00 00 00 
    c34a:	bf 98 00 00 00       	mov    $0x98,%edi
    c34f:	49 03 3f             	add    (%r15),%rdi
    c352:	48 83 c3 18          	add    $0x18,%rbx
    c356:	4c 89 f6             	mov    %r14,%rsi
    c359:	48 89 da             	mov    %rbx,%rdx
    c35c:	e8 1f 6c ff ff       	call   2f80 <lzma_next_filter_init>
    c361:	eb 05                	jmp    c368 <lzma_lz_encoder_init+0x218>
    c363:	b8 05 00 00 00       	mov    $0x5,%eax
    c368:	48 83 c4 40          	add    $0x40,%rsp
    c36c:	5b                   	pop    %rbx
    c36d:	41 5c                	pop    %r12
    c36f:	41 5d                	pop    %r13
    c371:	41 5e                	pop    %r14
    c373:	41 5f                	pop    %r15
    c375:	c3                   	ret    
    c376:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c37d:	00 00 00 

000000000000c380 <lz_encode>:
    c380:	55                   	push   %rbp
    c381:	41 57                	push   %r15
    c383:	41 56                	push   %r14
    c385:	41 55                	push   %r13
    c387:	41 54                	push   %r12
    c389:	53                   	push   %rbx
    c38a:	48 83 ec 28          	sub    $0x28,%rsp
    c38e:	4c 89 cb             	mov    %r9,%rbx
    c391:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    c396:	48 89 0c 24          	mov    %rcx,(%rsp)
    c39a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    c39f:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    c3a4:	49 89 fc             	mov    %rdi,%r12
    c3a7:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    c3ac:	4c 8b 6c 24 60       	mov    0x60(%rsp),%r13
    c3b1:	4c 8d 77 20          	lea    0x20(%rdi),%r14
    c3b5:	eb 26                	jmp    c3dd <lz_encode+0x5d>
    c3b7:	45 85 ff             	test   %r15d,%r15d
    c3ba:	0f 85 e9 01 00 00    	jne    c5a9 <lz_encode+0x229>
    c3c0:	49 8b 3c 24          	mov    (%r12),%rdi
    c3c4:	4c 89 f6             	mov    %r14,%rsi
    c3c7:	48 89 da             	mov    %rbx,%rdx
    c3ca:	4c 89 e9             	mov    %r13,%rcx
    c3cd:	49 89 e8             	mov    %rbp,%r8
    c3d0:	41 ff 54 24 08       	call   *0x8(%r12)
    c3d5:	85 c0                	test   %eax,%eax
    c3d7:	0f 85 bd 01 00 00    	jne    c59a <lz_encode+0x21a>
    c3dd:	45 31 ff             	xor    %r15d,%r15d
    c3e0:	49 39 6d 00          	cmp    %rbp,0x0(%r13)
    c3e4:	0f 83 bf 01 00 00    	jae    c5a9 <lz_encode+0x229>
    c3ea:	8b 44 24 70          	mov    0x70(%rsp),%eax
    c3ee:	85 c0                	test   %eax,%eax
    c3f0:	75 12                	jne    c404 <lz_encode+0x84>
    c3f2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c3f7:	48 8b 0c 24          	mov    (%rsp),%rcx
    c3fb:	48 39 01             	cmp    %rax,(%rcx)
    c3fe:	0f 83 a5 01 00 00    	jae    c5a9 <lz_encode+0x229>
    c404:	41 83 bc 24 88 00 00 	cmpl   $0x0,0x88(%r12)
    c40b:	00 00 
    c40d:	75 b1                	jne    c3c0 <lz_encode+0x40>
    c40f:	45 8b 7c 24 38       	mov    0x38(%r12),%r15d
    c414:	45 3b 7c 24 40       	cmp    0x40(%r12),%r15d
    c419:	72 a5                	jb     c3c0 <lz_encode+0x40>
    c41b:	41 8b 44 24 28       	mov    0x28(%r12),%eax
    c420:	41 2b 44 24 30       	sub    0x30(%r12),%eax
    c425:	41 39 c7             	cmp    %eax,%r15d
    c428:	73 07                	jae    c431 <lz_encode+0xb1>
    c42a:	41 8b 44 24 44       	mov    0x44(%r12),%eax
    c42f:	eb 3b                	jmp    c46c <lz_encode+0xec>
    c431:	45 2b 7c 24 2c       	sub    0x2c(%r12),%r15d
    c436:	41 83 e7 f0          	and    $0xfffffff0,%r15d
    c43a:	41 8b 54 24 44       	mov    0x44(%r12),%edx
    c43f:	44 29 fa             	sub    %r15d,%edx
    c442:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    c447:	49 8d 34 3f          	lea    (%r15,%rdi,1),%rsi
    c44b:	e8 50 5d ff ff       	call   21a0 <memmove@plt>
    c450:	45 01 7c 24 34       	add    %r15d,0x34(%r12)
    c455:	45 29 7c 24 38       	sub    %r15d,0x38(%r12)
    c45a:	45 29 7c 24 40       	sub    %r15d,0x40(%r12)
    c45f:	41 8b 44 24 44       	mov    0x44(%r12),%eax
    c464:	44 29 f8             	sub    %r15d,%eax
    c467:	41 89 44 24 44       	mov    %eax,0x44(%r12)
    c46c:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    c471:	4c 8b 1c 24          	mov    (%rsp),%r11
    c475:	89 c0                	mov    %eax,%eax
    c477:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c47c:	49 8b 84 24 b0 00 00 	mov    0xb0(%r12),%rax
    c483:	00 
    c484:	48 85 c0             	test   %rax,%rax
    c487:	74 60                	je     c4e9 <lz_encode+0x169>
    c489:	49 8b bc 24 98 00 00 	mov    0x98(%r12),%rdi
    c490:	00 
    c491:	4d 8b 4c 24 20       	mov    0x20(%r12),%r9
    c496:	45 8b 54 24 28       	mov    0x28(%r12),%r10d
    c49b:	48 83 ec 08          	sub    $0x8,%rsp
    c49f:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    c4a4:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    c4a9:	4c 89 d9             	mov    %r11,%rcx
    c4ac:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
    c4b1:	41 53                	push   %r11
    c4b3:	41 52                	push   %r10
    c4b5:	4c 8d 54 24 20       	lea    0x20(%rsp),%r10
    c4ba:	41 52                	push   %r10
    c4bc:	ff d0                	call   *%rax
    c4be:	48 83 c4 20          	add    $0x20,%rsp
    c4c2:	41 89 c7             	mov    %eax,%r15d
    c4c5:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c4c9:	41 89 44 24 44       	mov    %eax,0x44(%r12)
    c4ce:	41 83 ff 01          	cmp    $0x1,%r15d
    c4d2:	74 5f                	je     c533 <lz_encode+0x1b3>
    c4d4:	41 2b 44 24 30       	sub    0x30(%r12),%eax
    c4d9:	77 67                	ja     c542 <lz_encode+0x1c2>
    c4db:	41 8b 74 24 48       	mov    0x48(%r12),%esi
    c4e0:	85 f6                	test   %esi,%esi
    c4e2:	75 70                	jne    c554 <lz_encode+0x1d4>
    c4e4:	e9 ce fe ff ff       	jmp    c3b7 <lz_encode+0x37>
    c4e9:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
    c4ee:	45 8b 4c 24 28       	mov    0x28(%r12),%r9d
    c4f3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    c4f8:	4c 89 de             	mov    %r11,%rsi
    c4fb:	4c 89 c2             	mov    %r8,%rdx
    c4fe:	4d 89 c7             	mov    %r8,%r15
    c501:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
    c506:	e8 15 6a ff ff       	call   2f20 <lzma_bufcpy>
    c50b:	8b 44 24 70          	mov    0x70(%rsp),%eax
    c50f:	85 c0                	test   %eax,%eax
    c511:	74 6e                	je     c581 <lz_encode+0x201>
    c513:	4c 89 f8             	mov    %r15,%rax
    c516:	45 31 ff             	xor    %r15d,%r15d
    c519:	48 8b 0c 24          	mov    (%rsp),%rcx
    c51d:	48 39 01             	cmp    %rax,(%rcx)
    c520:	41 0f 94 c7          	sete   %r15b
    c524:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c528:	41 89 44 24 44       	mov    %eax,0x44(%r12)
    c52d:	41 83 ff 01          	cmp    $0x1,%r15d
    c531:	75 a1                	jne    c4d4 <lz_encode+0x154>
    c533:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    c537:	41 89 8c 24 88 00 00 	mov    %ecx,0x88(%r12)
    c53e:	00 
    c53f:	45 31 ff             	xor    %r15d,%r15d
    c542:	41 89 44 24 40       	mov    %eax,0x40(%r12)
    c547:	41 8b 74 24 48       	mov    0x48(%r12),%esi
    c54c:	85 f6                	test   %esi,%esi
    c54e:	0f 84 63 fe ff ff    	je     c3b7 <lz_encode+0x37>
    c554:	41 8b 44 24 38       	mov    0x38(%r12),%eax
    c559:	41 3b 44 24 40       	cmp    0x40(%r12),%eax
    c55e:	0f 83 53 fe ff ff    	jae    c3b7 <lz_encode+0x37>
    c564:	41 c7 44 24 48 00 00 	movl   $0x0,0x48(%r12)
    c56b:	00 00 
    c56d:	29 f0                	sub    %esi,%eax
    c56f:	41 89 44 24 38       	mov    %eax,0x38(%r12)
    c574:	4c 89 f7             	mov    %r14,%rdi
    c577:	41 ff 54 24 58       	call   *0x58(%r12)
    c57c:	e9 36 fe ff ff       	jmp    c3b7 <lz_encode+0x37>
    c581:	8b 44 24 08          	mov    0x8(%rsp),%eax
    c585:	41 89 44 24 44       	mov    %eax,0x44(%r12)
    c58a:	45 31 ff             	xor    %r15d,%r15d
    c58d:	41 2b 44 24 30       	sub    0x30(%r12),%eax
    c592:	0f 86 43 ff ff ff    	jbe    c4db <lz_encode+0x15b>
    c598:	eb a8                	jmp    c542 <lz_encode+0x1c2>
    c59a:	41 89 c7             	mov    %eax,%r15d
    c59d:	41 c7 84 24 88 00 00 	movl   $0x0,0x88(%r12)
    c5a4:	00 00 00 00 00 
    c5a9:	44 89 f8             	mov    %r15d,%eax
    c5ac:	48 83 c4 28          	add    $0x28,%rsp
    c5b0:	5b                   	pop    %rbx
    c5b1:	41 5c                	pop    %r12
    c5b3:	41 5d                	pop    %r13
    c5b5:	41 5e                	pop    %r14
    c5b7:	41 5f                	pop    %r15
    c5b9:	5d                   	pop    %rbp
    c5ba:	c3                   	ret    
    c5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c5c0 <lz_encoder_end>:
    c5c0:	41 56                	push   %r14
    c5c2:	53                   	push   %rbx
    c5c3:	50                   	push   %rax
    c5c4:	48 89 f3             	mov    %rsi,%rbx
    c5c7:	49 89 fe             	mov    %rdi,%r14
    c5ca:	48 81 c7 98 00 00 00 	add    $0x98,%rdi
    c5d1:	e8 6a 6a ff ff       	call   3040 <lzma_next_end>
    c5d6:	49 8b 7e 60          	mov    0x60(%r14),%rdi
    c5da:	48 89 de             	mov    %rbx,%rsi
    c5dd:	e8 0e 69 ff ff       	call   2ef0 <lzma_free>
    c5e2:	49 8b 7e 20          	mov    0x20(%r14),%rdi
    c5e6:	48 89 de             	mov    %rbx,%rsi
    c5e9:	e8 02 69 ff ff       	call   2ef0 <lzma_free>
    c5ee:	49 8b 3e             	mov    (%r14),%rdi
    c5f1:	49 8b 46 10          	mov    0x10(%r14),%rax
    c5f5:	48 89 de             	mov    %rbx,%rsi
    c5f8:	48 85 c0             	test   %rax,%rax
    c5fb:	74 04                	je     c601 <lz_encoder_end+0x41>
    c5fd:	ff d0                	call   *%rax
    c5ff:	eb 05                	jmp    c606 <lz_encoder_end+0x46>
    c601:	e8 ea 68 ff ff       	call   2ef0 <lzma_free>
    c606:	4c 89 f7             	mov    %r14,%rdi
    c609:	48 89 de             	mov    %rbx,%rsi
    c60c:	48 83 c4 08          	add    $0x8,%rsp
    c610:	5b                   	pop    %rbx
    c611:	41 5e                	pop    %r14
    c613:	e9 d8 68 ff ff       	jmp    2ef0 <lzma_free>
    c618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c61f:	00 

000000000000c620 <lz_encoder_update>:
    c620:	41 57                	push   %r15
    c622:	41 56                	push   %r14
    c624:	53                   	push   %rbx
    c625:	48 8b 47 18          	mov    0x18(%rdi),%rax
    c629:	48 85 c0             	test   %rax,%rax
    c62c:	74 1b                	je     c649 <lz_encoder_update+0x29>
    c62e:	48 89 cb             	mov    %rcx,%rbx
    c631:	49 89 f6             	mov    %rsi,%r14
    c634:	49 89 ff             	mov    %rdi,%r15
    c637:	48 8b 3f             	mov    (%rdi),%rdi
    c63a:	48 89 ce             	mov    %rcx,%rsi
    c63d:	ff d0                	call   *%rax
    c63f:	85 c0                	test   %eax,%eax
    c641:	74 11                	je     c654 <lz_encoder_update+0x34>
    c643:	5b                   	pop    %rbx
    c644:	41 5e                	pop    %r14
    c646:	41 5f                	pop    %r15
    c648:	c3                   	ret    
    c649:	b8 0b 00 00 00       	mov    $0xb,%eax
    c64e:	5b                   	pop    %rbx
    c64f:	41 5e                	pop    %r14
    c651:	41 5f                	pop    %r15
    c653:	c3                   	ret    
    c654:	4c 89 ff             	mov    %r15,%rdi
    c657:	48 81 c7 98 00 00 00 	add    $0x98,%rdi
    c65e:	48 83 c3 10          	add    $0x10,%rbx
    c662:	4c 89 f6             	mov    %r14,%rsi
    c665:	48 89 da             	mov    %rbx,%rdx
    c668:	5b                   	pop    %rbx
    c669:	41 5e                	pop    %r14
    c66b:	41 5f                	pop    %r15
    c66d:	e9 3e 6a ff ff       	jmp    30b0 <lzma_next_filter_update>
    c672:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    c679:	1f 84 00 00 00 00 00 

000000000000c680 <lzma_mf_is_supported>:
    c680:	8d 47 fd             	lea    -0x3(%rdi),%eax
    c683:	83 f8 02             	cmp    $0x2,%eax
    c686:	0f 92 c1             	setb   %cl
    c689:	89 f8                	mov    %edi,%eax
    c68b:	83 e0 fe             	and    $0xfffffffe,%eax
    c68e:	83 f8 12             	cmp    $0x12,%eax
    c691:	0f 94 c2             	sete   %dl
    c694:	83 ff 14             	cmp    $0x14,%edi
    c697:	0f 94 c0             	sete   %al
    c69a:	08 d0                	or     %dl,%al
    c69c:	08 c8                	or     %cl,%al
    c69e:	c3                   	ret    
    c69f:	90                   	nop

000000000000c6a0 <lzma_mf_find>:
    c6a0:	41 57                	push   %r15
    c6a2:	41 56                	push   %r14
    c6a4:	53                   	push   %rbx
    c6a5:	49 89 d7             	mov    %rdx,%r15
    c6a8:	49 89 f6             	mov    %rsi,%r14
    c6ab:	48 89 fb             	mov    %rdi,%rbx
    c6ae:	48 89 d6             	mov    %rdx,%rsi
    c6b1:	ff 57 30             	call   *0x30(%rdi)
    c6b4:	85 c0                	test   %eax,%eax
    c6b6:	74 60                	je     c718 <lzma_mf_find+0x78>
    c6b8:	89 c7                	mov    %eax,%edi
    c6ba:	ff cf                	dec    %edi
    c6bc:	41 8b 0c ff          	mov    (%r15,%rdi,8),%ecx
    c6c0:	3b 4b 60             	cmp    0x60(%rbx),%ecx
    c6c3:	75 55                	jne    c71a <lzma_mf_find+0x7a>
    c6c5:	8b 53 18             	mov    0x18(%rbx),%edx
    c6c8:	8b 73 24             	mov    0x24(%rbx),%esi
    c6cb:	29 d6                	sub    %edx,%esi
    c6cd:	ff c6                	inc    %esi
    c6cf:	44 8b 43 64          	mov    0x64(%rbx),%r8d
    c6d3:	44 39 c6             	cmp    %r8d,%esi
    c6d6:	41 0f 43 f0          	cmovae %r8d,%esi
    c6da:	39 f1                	cmp    %esi,%ecx
    c6dc:	73 3c                	jae    c71a <lzma_mf_find+0x7a>
    c6de:	45 8b 44 ff 04       	mov    0x4(%r15,%rdi,8),%r8d
    c6e3:	48 01 ca             	add    %rcx,%rdx
    c6e6:	48 03 13             	add    (%rbx),%rdx
    c6e9:	48 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdi
    c6f0:	4c 29 c7             	sub    %r8,%rdi
    c6f3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    c6fa:	84 00 00 00 00 00 
    c700:	44 0f b6 42 ff       	movzbl -0x1(%rdx),%r8d
    c705:	44 3a 04 3a          	cmp    (%rdx,%rdi,1),%r8b
    c709:	75 0f                	jne    c71a <lzma_mf_find+0x7a>
    c70b:	ff c1                	inc    %ecx
    c70d:	48 ff c2             	inc    %rdx
    c710:	39 ce                	cmp    %ecx,%esi
    c712:	75 ec                	jne    c700 <lzma_mf_find+0x60>
    c714:	89 f1                	mov    %esi,%ecx
    c716:	eb 02                	jmp    c71a <lzma_mf_find+0x7a>
    c718:	31 c9                	xor    %ecx,%ecx
    c71a:	41 89 06             	mov    %eax,(%r14)
    c71d:	ff 43 1c             	incl   0x1c(%rbx)
    c720:	89 c8                	mov    %ecx,%eax
    c722:	5b                   	pop    %rbx
    c723:	41 5e                	pop    %r14
    c725:	41 5f                	pop    %r15
    c727:	c3                   	ret    
    c728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c72f:	00 

000000000000c730 <lzma_mf_hc3_find>:
    c730:	8b 47 18             	mov    0x18(%rdi),%eax
    c733:	8b 4f 24             	mov    0x24(%rdi),%ecx
    c736:	29 c1                	sub    %eax,%ecx
    c738:	44 8b 47 60          	mov    0x60(%rdi),%r8d
    c73c:	41 39 c8             	cmp    %ecx,%r8d
    c73f:	76 13                	jbe    c754 <lzma_mf_hc3_find+0x24>
    c741:	41 89 c8             	mov    %ecx,%r8d
    c744:	83 f9 02             	cmp    $0x2,%ecx
    c747:	77 0b                	ja     c754 <lzma_mf_hc3_find+0x24>
    c749:	ff c0                	inc    %eax
    c74b:	89 47 18             	mov    %eax,0x18(%rdi)
    c74e:	ff 47 28             	incl   0x28(%rdi)
    c751:	31 c0                	xor    %eax,%eax
    c753:	c3                   	ret    
    c754:	55                   	push   %rbp
    c755:	41 57                	push   %r15
    c757:	41 56                	push   %r14
    c759:	41 55                	push   %r13
    c75b:	41 54                	push   %r12
    c75d:	53                   	push   %rbx
    c75e:	48 8b 17             	mov    (%rdi),%rdx
    c761:	4c 8b 4f 40          	mov    0x40(%rdi),%r9
    c765:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c769:	44 8b 77 14          	mov    0x14(%rdi),%r14d
    c76d:	41 01 c6             	add    %eax,%r14d
    c770:	44 0f b6 14 02       	movzbl (%rdx,%rax,1),%r10d
    c775:	4c 8d 1d c4 77 01 00 	lea    0x177c4(%rip),%r11        # 23f40 <lzma_crc32_table>
    c77c:	0f b6 5c 02 01       	movzbl 0x1(%rdx,%rax,1),%ebx
    c781:	43 33 1c 93          	xor    (%r11,%r10,4),%ebx
    c785:	0f b6 54 02 02       	movzbl 0x2(%rdx,%rax,1),%edx
    c78a:	c1 e2 08             	shl    $0x8,%edx
    c78d:	31 da                	xor    %ebx,%edx
    c78f:	23 57 58             	and    0x58(%rdi),%edx
    c792:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx
    c798:	44 89 f0             	mov    %r14d,%eax
    c79b:	41 2b 04 99          	sub    (%r9,%rbx,4),%eax
    c79f:	81 c2 00 04 00 00    	add    $0x400,%edx
    c7a5:	41 8b 2c 91          	mov    (%r9,%rdx,4),%ebp
    c7a9:	45 89 34 99          	mov    %r14d,(%r9,%rbx,4)
    c7ad:	4c 8b 4f 40          	mov    0x40(%rdi),%r9
    c7b1:	44 89 74 24 ec       	mov    %r14d,-0x14(%rsp)
    c7b6:	45 89 34 91          	mov    %r14d,(%r9,%rdx,4)
    c7ba:	44 8b 4f 54          	mov    0x54(%rdi),%r9d
    c7be:	41 ba 02 00 00 00    	mov    $0x2,%r10d
    c7c4:	44 39 c8             	cmp    %r9d,%eax
    c7c7:	0f 83 b0 00 00 00    	jae    c87d <lzma_mf_hc3_find+0x14d>
    c7cd:	89 c2                	mov    %eax,%edx
    c7cf:	49 89 cb             	mov    %rcx,%r11
    c7d2:	49 29 d3             	sub    %rdx,%r11
    c7d5:	45 0f b6 1b          	movzbl (%r11),%r11d
    c7d9:	44 3a 19             	cmp    (%rcx),%r11b
    c7dc:	0f 85 9b 00 00 00    	jne    c87d <lzma_mf_hc3_find+0x14d>
    c7e2:	41 83 f8 02          	cmp    $0x2,%r8d
    c7e6:	74 26                	je     c80e <lzma_mf_hc3_find+0xde>
    c7e8:	48 f7 da             	neg    %rdx
    c7eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c7f0:	45 89 d1             	mov    %r10d,%r9d
    c7f3:	4e 8d 1c 09          	lea    (%rcx,%r9,1),%r11
    c7f7:	46 0f b6 1c 1a       	movzbl (%rdx,%r11,1),%r11d
    c7fc:	46 3a 1c 09          	cmp    (%rcx,%r9,1),%r11b
    c800:	0f 85 95 02 00 00    	jne    ca9b <lzma_mf_hc3_find+0x36b>
    c806:	41 ff c2             	inc    %r10d
    c809:	45 39 d0             	cmp    %r10d,%r8d
    c80c:	75 e2                	jne    c7f0 <lzma_mf_hc3_find+0xc0>
    c80e:	44 89 06             	mov    %r8d,(%rsi)
    c811:	ff c8                	dec    %eax
    c813:	89 46 04             	mov    %eax,0x4(%rsi)
    c816:	48 8b 47 48          	mov    0x48(%rdi),%rax
    c81a:	8b 4f 50             	mov    0x50(%rdi),%ecx
    c81d:	89 2c 88             	mov    %ebp,(%rax,%rcx,4)
    c820:	8b 47 50             	mov    0x50(%rdi),%eax
    c823:	ff c0                	inc    %eax
    c825:	8b 4f 54             	mov    0x54(%rdi),%ecx
    c828:	31 d2                	xor    %edx,%edx
    c82a:	39 c8                	cmp    %ecx,%eax
    c82c:	0f 45 d0             	cmovne %eax,%edx
    c82f:	89 57 50             	mov    %edx,0x50(%rdi)
    c832:	8b 57 14             	mov    0x14(%rdi),%edx
    c835:	8b 47 18             	mov    0x18(%rdi),%eax
    c838:	8d 70 01             	lea    0x1(%rax),%esi
    c83b:	89 77 18             	mov    %esi,0x18(%rdi)
    c83e:	8d 34 02             	lea    (%rdx,%rax,1),%esi
    c841:	ff c6                	inc    %esi
    c843:	b8 01 00 00 00       	mov    $0x1,%eax
    c848:	83 fe ff             	cmp    $0xffffffff,%esi
    c84b:	0f 85 3f 02 00 00    	jne    ca90 <lzma_mf_hc3_find+0x360>
    c851:	f7 d1                	not    %ecx
    c853:	44 8b 4f 70          	mov    0x70(%rdi),%r9d
    c857:	44 03 4f 6c          	add    0x6c(%rdi),%r9d
    c85b:	0f 84 e9 02 00 00    	je     cb4a <lzma_mf_hc3_find+0x41a>
    c861:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    c865:	44 89 ce             	mov    %r9d,%esi
    c868:	45 31 c0             	xor    %r8d,%r8d
    c86b:	41 83 f9 08          	cmp    $0x8,%r9d
    c86f:	0f 83 3c 02 00 00    	jae    cab1 <lzma_mf_hc3_find+0x381>
    c875:	45 31 c9             	xor    %r9d,%r9d
    c878:	e9 b3 02 00 00       	jmp    cb30 <lzma_mf_hc3_find+0x400>
    c87d:	31 c0                	xor    %eax,%eax
    c87f:	44 8b 5f 5c          	mov    0x5c(%rdi),%r11d
    c883:	48 8b 5f 48          	mov    0x48(%rdi),%rbx
    c887:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
    c88c:	44 8b 77 50          	mov    0x50(%rdi),%r14d
    c890:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    c894:	42 89 2c b3          	mov    %ebp,(%rbx,%r14,4)
    c898:	45 85 db             	test   %r11d,%r11d
    c89b:	48 89 74 24 f0       	mov    %rsi,-0x10(%rsp)
    c8a0:	0f 84 e4 00 00 00    	je     c98a <lzma_mf_hc3_find+0x25a>
    c8a6:	44 8b 64 24 ec       	mov    -0x14(%rsp),%r12d
    c8ab:	41 29 ec             	sub    %ebp,%r12d
    c8ae:	45 39 cc             	cmp    %r9d,%r12d
    c8b1:	0f 83 d3 00 00 00    	jae    c98a <lzma_mf_hc3_find+0x25a>
    c8b7:	4c 89 c7             	mov    %r8,%rdi
    c8ba:	45 8d 78 ff          	lea    -0x1(%r8),%r15d
    c8be:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    c8c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    c8ca:	84 00 00 00 00 00 
    c8d0:	45 89 e5             	mov    %r12d,%r13d
    c8d3:	48 89 ca             	mov    %rcx,%rdx
    c8d6:	4c 29 ea             	sub    %r13,%rdx
    c8d9:	45 89 f5             	mov    %r14d,%r13d
    c8dc:	45 29 e5             	sub    %r12d,%r13d
    c8df:	bd 00 00 00 00       	mov    $0x0,%ebp
    c8e4:	41 0f 42 e9          	cmovb  %r9d,%ebp
    c8e8:	41 01 ed             	add    %ebp,%r13d
    c8eb:	42 8b 2c ab          	mov    (%rbx,%r13,4),%ebp
    c8ef:	45 89 d5             	mov    %r10d,%r13d
    c8f2:	42 0f b6 34 2a       	movzbl (%rdx,%r13,1),%esi
    c8f7:	42 3a 34 29          	cmp    (%rcx,%r13,1),%sil
    c8fb:	75 73                	jne    c970 <lzma_mf_hc3_find+0x240>
    c8fd:	0f b6 32             	movzbl (%rdx),%esi
    c900:	40 3a 31             	cmp    (%rcx),%sil
    c903:	75 4b                	jne    c950 <lzma_mf_hc3_find+0x220>
    c905:	45 31 ed             	xor    %r13d,%r13d
    c908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c90f:	00 
    c910:	4d 39 ef             	cmp    %r13,%r15
    c913:	74 45                	je     c95a <lzma_mf_hc3_find+0x22a>
    c915:	49 ff c5             	inc    %r13
    c918:	44 89 ee             	mov    %r13d,%esi
    c91b:	44 0f b6 04 32       	movzbl (%rdx,%rsi,1),%r8d
    c920:	44 3a 04 31          	cmp    (%rcx,%rsi,1),%r8b
    c924:	74 ea                	je     c910 <lzma_mf_hc3_find+0x1e0>
    c926:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    c92b:	45 39 ea             	cmp    %r13d,%r10d
    c92e:	73 40                	jae    c970 <lzma_mf_hc3_find+0x240>
    c930:	41 ff cc             	dec    %r12d
    c933:	44 89 28             	mov    %r13d,(%rax)
    c936:	44 89 60 04          	mov    %r12d,0x4(%rax)
    c93a:	48 83 c0 08          	add    $0x8,%rax
    c93e:	41 39 fd             	cmp    %edi,%r13d
    c941:	75 10                	jne    c953 <lzma_mf_hc3_find+0x223>
    c943:	eb 45                	jmp    c98a <lzma_mf_hc3_find+0x25a>
    c945:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    c94c:	00 00 00 00 
    c950:	45 89 d5             	mov    %r10d,%r13d
    c953:	41 ff cb             	dec    %r11d
    c956:	75 20                	jne    c978 <lzma_mf_hc3_find+0x248>
    c958:	eb 30                	jmp    c98a <lzma_mf_hc3_find+0x25a>
    c95a:	41 89 fd             	mov    %edi,%r13d
    c95d:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    c962:	45 39 ea             	cmp    %r13d,%r10d
    c965:	72 c9                	jb     c930 <lzma_mf_hc3_find+0x200>
    c967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c96e:	00 00 
    c970:	45 89 d5             	mov    %r10d,%r13d
    c973:	41 ff cb             	dec    %r11d
    c976:	74 12                	je     c98a <lzma_mf_hc3_find+0x25a>
    c978:	45 89 c4             	mov    %r8d,%r12d
    c97b:	41 29 ec             	sub    %ebp,%r12d
    c97e:	45 89 ea             	mov    %r13d,%r10d
    c981:	45 39 cc             	cmp    %r9d,%r12d
    c984:	0f 82 46 ff ff ff    	jb     c8d0 <lzma_mf_hc3_find+0x1a0>
    c98a:	48 2b 44 24 f0       	sub    -0x10(%rsp),%rax
    c98f:	48 c1 e8 03          	shr    $0x3,%rax
    c993:	4c 8b 5c 24 f8       	mov    -0x8(%rsp),%r11
    c998:	41 8b 53 50          	mov    0x50(%r11),%edx
    c99c:	ff c2                	inc    %edx
    c99e:	41 8b 4b 54          	mov    0x54(%r11),%ecx
    c9a2:	31 f6                	xor    %esi,%esi
    c9a4:	39 ca                	cmp    %ecx,%edx
    c9a6:	0f 45 f2             	cmovne %edx,%esi
    c9a9:	41 89 73 50          	mov    %esi,0x50(%r11)
    c9ad:	41 8b 53 14          	mov    0x14(%r11),%edx
    c9b1:	41 8b 73 18          	mov    0x18(%r11),%esi
    c9b5:	8d 7e 01             	lea    0x1(%rsi),%edi
    c9b8:	41 89 7b 18          	mov    %edi,0x18(%r11)
    c9bc:	01 d6                	add    %edx,%esi
    c9be:	ff c6                	inc    %esi
    c9c0:	83 fe ff             	cmp    $0xffffffff,%esi
    c9c3:	0f 85 c7 00 00 00    	jne    ca90 <lzma_mf_hc3_find+0x360>
    c9c9:	f7 d1                	not    %ecx
    c9cb:	45 8b 4b 70          	mov    0x70(%r11),%r9d
    c9cf:	45 03 4b 6c          	add    0x6c(%r11),%r9d
    c9d3:	0f 84 b1 00 00 00    	je     ca8a <lzma_mf_hc3_find+0x35a>
    c9d9:	49 8b 53 40          	mov    0x40(%r11),%rdx
    c9dd:	44 89 ce             	mov    %r9d,%esi
    c9e0:	45 31 c0             	xor    %r8d,%r8d
    c9e3:	41 83 f9 08          	cmp    $0x8,%r9d
    c9e7:	73 08                	jae    c9f1 <lzma_mf_hc3_find+0x2c1>
    c9e9:	45 31 c9             	xor    %r9d,%r9d
    c9ec:	e9 7f 00 00 00       	jmp    ca70 <lzma_mf_hc3_find+0x340>
    c9f1:	41 89 f1             	mov    %esi,%r9d
    c9f4:	41 83 e1 f8          	and    $0xfffffff8,%r9d
    c9f8:	66 0f 6e c1          	movd   %ecx,%xmm0
    c9fc:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    ca01:	45 31 d2             	xor    %r10d,%r10d
    ca04:	66 0f 6f 0d a4 b6 01 	movdqa 0x1b6a4(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    ca0b:	00 
    ca0c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    ca10:	66 0f ef d1          	pxor   %xmm1,%xmm2
    ca14:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    ca1b:	00 00 00 00 00 
    ca20:	f3 42 0f 6f 1c 92    	movdqu (%rdx,%r10,4),%xmm3
    ca26:	f3 42 0f 6f 64 92 10 	movdqu 0x10(%rdx,%r10,4),%xmm4
    ca2d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    ca31:	66 0f ef e9          	pxor   %xmm1,%xmm5
    ca35:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    ca39:	66 0f fa d8          	psubd  %xmm0,%xmm3
    ca3d:	66 0f db dd          	pand   %xmm5,%xmm3
    ca41:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    ca45:	66 0f ef e9          	pxor   %xmm1,%xmm5
    ca49:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    ca4d:	66 0f fa e0          	psubd  %xmm0,%xmm4
    ca51:	66 0f db e5          	pand   %xmm5,%xmm4
    ca55:	f3 42 0f 7f 1c 92    	movdqu %xmm3,(%rdx,%r10,4)
    ca5b:	f3 42 0f 7f 64 92 10 	movdqu %xmm4,0x10(%rdx,%r10,4)
    ca62:	49 83 c2 08          	add    $0x8,%r10
    ca66:	4d 39 d1             	cmp    %r10,%r9
    ca69:	75 b5                	jne    ca20 <lzma_mf_hc3_find+0x2f0>
    ca6b:	49 39 f1             	cmp    %rsi,%r9
    ca6e:	74 16                	je     ca86 <lzma_mf_hc3_find+0x356>
    ca70:	42 8b 3c 8a          	mov    (%rdx,%r9,4),%edi
    ca74:	29 cf                	sub    %ecx,%edi
    ca76:	41 0f 42 f8          	cmovb  %r8d,%edi
    ca7a:	42 89 3c 8a          	mov    %edi,(%rdx,%r9,4)
    ca7e:	49 ff c1             	inc    %r9
    ca81:	4c 39 ce             	cmp    %r9,%rsi
    ca84:	75 ea                	jne    ca70 <lzma_mf_hc3_find+0x340>
    ca86:	41 8b 53 14          	mov    0x14(%r11),%edx
    ca8a:	29 ca                	sub    %ecx,%edx
    ca8c:	41 89 53 14          	mov    %edx,0x14(%r11)
    ca90:	5b                   	pop    %rbx
    ca91:	41 5c                	pop    %r12
    ca93:	41 5d                	pop    %r13
    ca95:	41 5e                	pop    %r14
    ca97:	41 5f                	pop    %r15
    ca99:	5d                   	pop    %rbp
    ca9a:	c3                   	ret    
    ca9b:	44 89 16             	mov    %r10d,(%rsi)
    ca9e:	ff c8                	dec    %eax
    caa0:	89 46 04             	mov    %eax,0x4(%rsi)
    caa3:	44 8b 4f 54          	mov    0x54(%rdi),%r9d
    caa7:	b8 01 00 00 00       	mov    $0x1,%eax
    caac:	e9 ce fd ff ff       	jmp    c87f <lzma_mf_hc3_find+0x14f>
    cab1:	41 89 f1             	mov    %esi,%r9d
    cab4:	41 83 e1 f8          	and    $0xfffffff8,%r9d
    cab8:	66 0f 6e c1          	movd   %ecx,%xmm0
    cabc:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    cac1:	45 31 d2             	xor    %r10d,%r10d
    cac4:	66 0f 6f 0d e4 b5 01 	movdqa 0x1b5e4(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    cacb:	00 
    cacc:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    cad0:	66 0f ef d1          	pxor   %xmm1,%xmm2
    cad4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    cadb:	00 00 00 00 00 
    cae0:	f3 42 0f 6f 1c 92    	movdqu (%rdx,%r10,4),%xmm3
    cae6:	f3 42 0f 6f 64 92 10 	movdqu 0x10(%rdx,%r10,4),%xmm4
    caed:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    caf1:	66 0f ef e9          	pxor   %xmm1,%xmm5
    caf5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    caf9:	66 0f fa d8          	psubd  %xmm0,%xmm3
    cafd:	66 0f db dd          	pand   %xmm5,%xmm3
    cb01:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    cb05:	66 0f ef e9          	pxor   %xmm1,%xmm5
    cb09:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    cb0d:	66 0f fa e0          	psubd  %xmm0,%xmm4
    cb11:	66 0f db e5          	pand   %xmm5,%xmm4
    cb15:	f3 42 0f 7f 1c 92    	movdqu %xmm3,(%rdx,%r10,4)
    cb1b:	f3 42 0f 7f 64 92 10 	movdqu %xmm4,0x10(%rdx,%r10,4)
    cb22:	49 83 c2 08          	add    $0x8,%r10
    cb26:	4d 39 d1             	cmp    %r10,%r9
    cb29:	75 b5                	jne    cae0 <lzma_mf_hc3_find+0x3b0>
    cb2b:	49 39 f1             	cmp    %rsi,%r9
    cb2e:	74 17                	je     cb47 <lzma_mf_hc3_find+0x417>
    cb30:	46 8b 14 8a          	mov    (%rdx,%r9,4),%r10d
    cb34:	41 29 ca             	sub    %ecx,%r10d
    cb37:	45 0f 42 d0          	cmovb  %r8d,%r10d
    cb3b:	46 89 14 8a          	mov    %r10d,(%rdx,%r9,4)
    cb3f:	49 ff c1             	inc    %r9
    cb42:	4c 39 ce             	cmp    %r9,%rsi
    cb45:	75 e9                	jne    cb30 <lzma_mf_hc3_find+0x400>
    cb47:	8b 57 14             	mov    0x14(%rdi),%edx
    cb4a:	29 ca                	sub    %ecx,%edx
    cb4c:	89 57 14             	mov    %edx,0x14(%rdi)
    cb4f:	e9 3c ff ff ff       	jmp    ca90 <lzma_mf_hc3_find+0x360>
    cb54:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    cb5b:	00 00 00 00 00 

000000000000cb60 <lzma_mf_hc3_skip>:
    cb60:	53                   	push   %rbx
    cb61:	48 8d 05 d8 73 01 00 	lea    0x173d8(%rip),%rax        # 23f40 <lzma_crc32_table>
    cb68:	31 c9                	xor    %ecx,%ecx
    cb6a:	66 0f 6f 05 3e b5 01 	movdqa 0x1b53e(%rip),%xmm0        # 280b0 <SHA256_K+0x150>
    cb71:	00 
    cb72:	eb 1c                	jmp    cb90 <lzma_mf_hc3_skip+0x30>
    cb74:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    cb7b:	00 00 00 00 00 
    cb80:	ff c2                	inc    %edx
    cb82:	89 57 18             	mov    %edx,0x18(%rdi)
    cb85:	ff 47 28             	incl   0x28(%rdi)
    cb88:	ff ce                	dec    %esi
    cb8a:	0f 84 57 01 00 00    	je     cce7 <lzma_mf_hc3_skip+0x187>
    cb90:	8b 57 18             	mov    0x18(%rdi),%edx
    cb93:	44 8b 47 24          	mov    0x24(%rdi),%r8d
    cb97:	41 29 d0             	sub    %edx,%r8d
    cb9a:	41 83 f8 02          	cmp    $0x2,%r8d
    cb9e:	76 e0                	jbe    cb80 <lzma_mf_hc3_skip+0x20>
    cba0:	44 8b 47 14          	mov    0x14(%rdi),%r8d
    cba4:	41 01 d0             	add    %edx,%r8d
    cba7:	4c 8b 0f             	mov    (%rdi),%r9
    cbaa:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    cbae:	45 0f b6 1c 11       	movzbl (%r9,%rdx,1),%r11d
    cbb3:	41 0f b6 5c 11 01    	movzbl 0x1(%r9,%rdx,1),%ebx
    cbb9:	42 33 1c 98          	xor    (%rax,%r11,4),%ebx
    cbbd:	41 0f b6 54 11 02    	movzbl 0x2(%r9,%rdx,1),%edx
    cbc3:	c1 e2 08             	shl    $0x8,%edx
    cbc6:	31 da                	xor    %ebx,%edx
    cbc8:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx
    cbce:	23 57 58             	and    0x58(%rdi),%edx
    cbd1:	81 c2 00 04 00 00    	add    $0x400,%edx
    cbd7:	45 8b 0c 92          	mov    (%r10,%rdx,4),%r9d
    cbdb:	45 89 04 9a          	mov    %r8d,(%r10,%rbx,4)
    cbdf:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    cbe3:	45 89 04 92          	mov    %r8d,(%r10,%rdx,4)
    cbe7:	48 8b 57 48          	mov    0x48(%rdi),%rdx
    cbeb:	44 8b 47 50          	mov    0x50(%rdi),%r8d
    cbef:	46 89 0c 82          	mov    %r9d,(%rdx,%r8,4)
    cbf3:	44 8b 47 50          	mov    0x50(%rdi),%r8d
    cbf7:	41 ff c0             	inc    %r8d
    cbfa:	8b 57 54             	mov    0x54(%rdi),%edx
    cbfd:	41 39 d0             	cmp    %edx,%r8d
    cc00:	44 0f 44 c1          	cmove  %ecx,%r8d
    cc04:	44 89 47 50          	mov    %r8d,0x50(%rdi)
    cc08:	44 8b 47 14          	mov    0x14(%rdi),%r8d
    cc0c:	44 8b 4f 18          	mov    0x18(%rdi),%r9d
    cc10:	45 8d 51 01          	lea    0x1(%r9),%r10d
    cc14:	44 89 57 18          	mov    %r10d,0x18(%rdi)
    cc18:	45 01 c1             	add    %r8d,%r9d
    cc1b:	41 ff c1             	inc    %r9d
    cc1e:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
    cc22:	0f 85 60 ff ff ff    	jne    cb88 <lzma_mf_hc3_skip+0x28>
    cc28:	f7 d2                	not    %edx
    cc2a:	44 8b 57 70          	mov    0x70(%rdi),%r10d
    cc2e:	44 03 57 6c          	add    0x6c(%rdi),%r10d
    cc32:	0f 84 a3 00 00 00    	je     ccdb <lzma_mf_hc3_skip+0x17b>
    cc38:	4c 8b 47 40          	mov    0x40(%rdi),%r8
    cc3c:	45 89 d1             	mov    %r10d,%r9d
    cc3f:	41 83 fa 08          	cmp    $0x8,%r10d
    cc43:	73 05                	jae    cc4a <lzma_mf_hc3_skip+0xea>
    cc45:	45 31 d2             	xor    %r10d,%r10d
    cc48:	eb 76                	jmp    ccc0 <lzma_mf_hc3_skip+0x160>
    cc4a:	45 89 ca             	mov    %r9d,%r10d
    cc4d:	41 83 e2 f8          	and    $0xfffffff8,%r10d
    cc51:	66 0f 6e ca          	movd   %edx,%xmm1
    cc55:	66 0f 70 c9 00       	pshufd $0x0,%xmm1,%xmm1
    cc5a:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    cc5e:	66 0f ef d0          	pxor   %xmm0,%xmm2
    cc62:	45 31 db             	xor    %r11d,%r11d
    cc65:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    cc6c:	00 00 00 00 
    cc70:	f3 43 0f 6f 1c 98    	movdqu (%r8,%r11,4),%xmm3
    cc76:	f3 43 0f 6f 64 98 10 	movdqu 0x10(%r8,%r11,4),%xmm4
    cc7d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    cc81:	66 0f ef e8          	pxor   %xmm0,%xmm5
    cc85:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    cc89:	66 0f fa d9          	psubd  %xmm1,%xmm3
    cc8d:	66 0f db dd          	pand   %xmm5,%xmm3
    cc91:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    cc95:	66 0f ef e8          	pxor   %xmm0,%xmm5
    cc99:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    cc9d:	66 0f fa e1          	psubd  %xmm1,%xmm4
    cca1:	66 0f db e5          	pand   %xmm5,%xmm4
    cca5:	f3 43 0f 7f 1c 98    	movdqu %xmm3,(%r8,%r11,4)
    ccab:	f3 43 0f 7f 64 98 10 	movdqu %xmm4,0x10(%r8,%r11,4)
    ccb2:	49 83 c3 08          	add    $0x8,%r11
    ccb6:	4d 39 da             	cmp    %r11,%r10
    ccb9:	75 b5                	jne    cc70 <lzma_mf_hc3_skip+0x110>
    ccbb:	4d 39 ca             	cmp    %r9,%r10
    ccbe:	74 17                	je     ccd7 <lzma_mf_hc3_skip+0x177>
    ccc0:	47 8b 1c 90          	mov    (%r8,%r10,4),%r11d
    ccc4:	41 29 d3             	sub    %edx,%r11d
    ccc7:	44 0f 42 d9          	cmovb  %ecx,%r11d
    cccb:	47 89 1c 90          	mov    %r11d,(%r8,%r10,4)
    cccf:	49 ff c2             	inc    %r10
    ccd2:	4d 39 d1             	cmp    %r10,%r9
    ccd5:	75 e9                	jne    ccc0 <lzma_mf_hc3_skip+0x160>
    ccd7:	44 8b 47 14          	mov    0x14(%rdi),%r8d
    ccdb:	41 29 d0             	sub    %edx,%r8d
    ccde:	44 89 47 14          	mov    %r8d,0x14(%rdi)
    cce2:	e9 a1 fe ff ff       	jmp    cb88 <lzma_mf_hc3_skip+0x28>
    cce7:	5b                   	pop    %rbx
    cce8:	c3                   	ret    
    cce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ccf0 <lzma_mf_hc4_find>:
    ccf0:	8b 47 18             	mov    0x18(%rdi),%eax
    ccf3:	8b 4f 24             	mov    0x24(%rdi),%ecx
    ccf6:	29 c1                	sub    %eax,%ecx
    ccf8:	44 8b 47 60          	mov    0x60(%rdi),%r8d
    ccfc:	41 39 c8             	cmp    %ecx,%r8d
    ccff:	76 13                	jbe    cd14 <lzma_mf_hc4_find+0x24>
    cd01:	41 89 c8             	mov    %ecx,%r8d
    cd04:	83 f9 03             	cmp    $0x3,%ecx
    cd07:	77 0b                	ja     cd14 <lzma_mf_hc4_find+0x24>
    cd09:	ff c0                	inc    %eax
    cd0b:	89 47 18             	mov    %eax,0x18(%rdi)
    cd0e:	ff 47 28             	incl   0x28(%rdi)
    cd11:	31 c0                	xor    %eax,%eax
    cd13:	c3                   	ret    
    cd14:	55                   	push   %rbp
    cd15:	41 57                	push   %r15
    cd17:	41 56                	push   %r14
    cd19:	41 55                	push   %r13
    cd1b:	41 54                	push   %r12
    cd1d:	53                   	push   %rbx
    cd1e:	4c 8b 0f             	mov    (%rdi),%r9
    cd21:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    cd25:	49 8d 0c 01          	lea    (%r9,%rax,1),%rcx
    cd29:	44 8b 7f 14          	mov    0x14(%rdi),%r15d
    cd2d:	45 0f b6 1c 01       	movzbl (%r9,%rax,1),%r11d
    cd32:	48 8d 1d 07 72 01 00 	lea    0x17207(%rip),%rbx        # 23f40 <lzma_crc32_table>
    cd39:	41 0f b6 54 01 01    	movzbl 0x1(%r9,%rax,1),%edx
    cd3f:	42 33 14 9b          	xor    (%rbx,%r11,4),%edx
    cd43:	41 01 c7             	add    %eax,%r15d
    cd46:	45 0f b6 5c 01 02    	movzbl 0x2(%r9,%rax,1),%r11d
    cd4c:	41 c1 e3 08          	shl    $0x8,%r11d
    cd50:	41 31 d3             	xor    %edx,%r11d
    cd53:	81 e2 ff 03 00 00    	and    $0x3ff,%edx
    cd59:	45 0f b7 f3          	movzwl %r11w,%r14d
    cd5d:	41 0f b6 44 01 03    	movzbl 0x3(%r9,%rax,1),%eax
    cd63:	8b 04 83             	mov    (%rbx,%rax,4),%eax
    cd66:	c1 e0 05             	shl    $0x5,%eax
    cd69:	44 31 d8             	xor    %r11d,%eax
    cd6c:	23 47 58             	and    0x58(%rdi),%eax
    cd6f:	41 8b 2c 92          	mov    (%r10,%rdx,4),%ebp
    cd73:	45 89 fb             	mov    %r15d,%r11d
    cd76:	41 29 eb             	sub    %ebp,%r11d
    cd79:	43 8b 9c b2 00 10 00 	mov    0x1000(%r10,%r14,4),%ebx
    cd80:	00 
    cd81:	05 00 04 01 00       	add    $0x10400,%eax
    cd86:	45 8b 0c 82          	mov    (%r10,%rax,4),%r9d
    cd8a:	45 89 3c 92          	mov    %r15d,(%r10,%rdx,4)
    cd8e:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    cd92:	46 89 bc b2 00 10 00 	mov    %r15d,0x1000(%rdx,%r14,4)
    cd99:	00 
    cd9a:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    cd9e:	44 89 7c 24 ec       	mov    %r15d,-0x14(%rsp)
    cda3:	44 89 3c 82          	mov    %r15d,(%rdx,%rax,4)
    cda7:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    cdad:	31 c0                	xor    %eax,%eax
    cdaf:	41 b6 01             	mov    $0x1,%r14b
    cdb2:	44 3b 5f 54          	cmp    0x54(%rdi),%r11d
    cdb6:	73 2c                	jae    cde4 <lzma_mf_hc4_find+0xf4>
    cdb8:	44 89 da             	mov    %r11d,%edx
    cdbb:	49 89 cf             	mov    %rcx,%r15
    cdbe:	49 29 d7             	sub    %rdx,%r15
    cdc1:	41 0f b6 17          	movzbl (%r15),%edx
    cdc5:	3a 11                	cmp    (%rcx),%dl
    cdc7:	75 1b                	jne    cde4 <lzma_mf_hc4_find+0xf4>
    cdc9:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
    cdcf:	41 8d 43 ff          	lea    -0x1(%r11),%eax
    cdd3:	89 46 04             	mov    %eax,0x4(%rsi)
    cdd6:	41 ba 02 00 00 00    	mov    $0x2,%r10d
    cddc:	b8 01 00 00 00       	mov    $0x1,%eax
    cde1:	45 31 f6             	xor    %r14d,%r14d
    cde4:	39 eb                	cmp    %ebp,%ebx
    cde6:	74 36                	je     ce1e <lzma_mf_hc4_find+0x12e>
    cde8:	8b 54 24 ec          	mov    -0x14(%rsp),%edx
    cdec:	29 da                	sub    %ebx,%edx
    cdee:	3b 57 54             	cmp    0x54(%rdi),%edx
    cdf1:	73 2b                	jae    ce1e <lzma_mf_hc4_find+0x12e>
    cdf3:	89 d3                	mov    %edx,%ebx
    cdf5:	49 89 cf             	mov    %rcx,%r15
    cdf8:	49 29 df             	sub    %rbx,%r15
    cdfb:	41 0f b6 1f          	movzbl (%r15),%ebx
    cdff:	3a 19                	cmp    (%rcx),%bl
    ce01:	75 1b                	jne    ce1e <lzma_mf_hc4_find+0x12e>
    ce03:	44 8d 52 ff          	lea    -0x1(%rdx),%r10d
    ce07:	41 89 c3             	mov    %eax,%r11d
    ce0a:	ff c0                	inc    %eax
    ce0c:	46 89 54 de 04       	mov    %r10d,0x4(%rsi,%r11,8)
    ce11:	41 ba 03 00 00 00    	mov    $0x3,%r10d
    ce17:	45 39 c2             	cmp    %r8d,%r10d
    ce1a:	75 1b                	jne    ce37 <lzma_mf_hc4_find+0x147>
    ce1c:	eb 3b                	jmp    ce59 <lzma_mf_hc4_find+0x169>
    ce1e:	b8 01 00 00 00       	mov    $0x1,%eax
    ce23:	45 84 f6             	test   %r14b,%r14b
    ce26:	74 07                	je     ce2f <lzma_mf_hc4_find+0x13f>
    ce28:	31 c0                	xor    %eax,%eax
    ce2a:	e9 9e 00 00 00       	jmp    cecd <lzma_mf_hc4_find+0x1dd>
    ce2f:	44 89 da             	mov    %r11d,%edx
    ce32:	45 39 c2             	cmp    %r8d,%r10d
    ce35:	74 22                	je     ce59 <lzma_mf_hc4_find+0x169>
    ce37:	89 d2                	mov    %edx,%edx
    ce39:	48 f7 da             	neg    %rdx
    ce3c:	0f 1f 40 00          	nopl   0x0(%rax)
    ce40:	45 89 d3             	mov    %r10d,%r11d
    ce43:	4a 8d 1c 19          	lea    (%rcx,%r11,1),%rbx
    ce47:	0f b6 1c 1a          	movzbl (%rdx,%rbx,1),%ebx
    ce4b:	42 3a 1c 19          	cmp    (%rcx,%r11,1),%bl
    ce4f:	75 73                	jne    cec4 <lzma_mf_hc4_find+0x1d4>
    ce51:	41 ff c2             	inc    %r10d
    ce54:	45 39 d0             	cmp    %r10d,%r8d
    ce57:	75 e7                	jne    ce40 <lzma_mf_hc4_find+0x150>
    ce59:	8d 48 ff             	lea    -0x1(%rax),%ecx
    ce5c:	44 89 04 ce          	mov    %r8d,(%rsi,%rcx,8)
    ce60:	48 8b 4f 48          	mov    0x48(%rdi),%rcx
    ce64:	8b 57 50             	mov    0x50(%rdi),%edx
    ce67:	44 89 0c 91          	mov    %r9d,(%rcx,%rdx,4)
    ce6b:	8b 57 50             	mov    0x50(%rdi),%edx
    ce6e:	ff c2                	inc    %edx
    ce70:	8b 4f 54             	mov    0x54(%rdi),%ecx
    ce73:	31 f6                	xor    %esi,%esi
    ce75:	39 ca                	cmp    %ecx,%edx
    ce77:	0f 45 f2             	cmovne %edx,%esi
    ce7a:	89 77 50             	mov    %esi,0x50(%rdi)
    ce7d:	8b 57 14             	mov    0x14(%rdi),%edx
    ce80:	8b 77 18             	mov    0x18(%rdi),%esi
    ce83:	44 8d 46 01          	lea    0x1(%rsi),%r8d
    ce87:	44 89 47 18          	mov    %r8d,0x18(%rdi)
    ce8b:	01 d6                	add    %edx,%esi
    ce8d:	ff c6                	inc    %esi
    ce8f:	83 fe ff             	cmp    $0xffffffff,%esi
    ce92:	0f 85 f7 02 00 00    	jne    d18f <lzma_mf_hc4_find+0x49f>
    ce98:	f7 d1                	not    %ecx
    ce9a:	44 8b 4f 70          	mov    0x70(%rdi),%r9d
    ce9e:	44 03 4f 6c          	add    0x6c(%rdi),%r9d
    cea2:	0f 84 e2 02 00 00    	je     d18a <lzma_mf_hc4_find+0x49a>
    cea8:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    ceac:	44 89 ce             	mov    %r9d,%esi
    ceaf:	45 31 c0             	xor    %r8d,%r8d
    ceb2:	41 83 f9 08          	cmp    $0x8,%r9d
    ceb6:	0f 83 39 02 00 00    	jae    d0f5 <lzma_mf_hc4_find+0x405>
    cebc:	45 31 c9             	xor    %r9d,%r9d
    cebf:	e9 ac 02 00 00       	jmp    d170 <lzma_mf_hc4_find+0x480>
    cec4:	8d 50 ff             	lea    -0x1(%rax),%edx
    cec7:	44 89 14 d6          	mov    %r10d,(%rsi,%rdx,8)
    cecb:	89 c0                	mov    %eax,%eax
    cecd:	44 8b 5f 5c          	mov    0x5c(%rdi),%r11d
    ced1:	48 8b 5f 48          	mov    0x48(%rdi),%rbx
    ced5:	44 8b 77 50          	mov    0x50(%rdi),%r14d
    ced9:	8b 6f 54             	mov    0x54(%rdi),%ebp
    cedc:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    cee0:	46 89 0c b3          	mov    %r9d,(%rbx,%r14,4)
    cee4:	45 85 db             	test   %r11d,%r11d
    cee7:	48 89 74 24 f8       	mov    %rsi,-0x8(%rsp)
    ceec:	48 89 7c 24 f0       	mov    %rdi,-0x10(%rsp)
    cef1:	0f 84 f3 00 00 00    	je     cfea <lzma_mf_hc4_find+0x2fa>
    cef7:	44 8b 7c 24 ec       	mov    -0x14(%rsp),%r15d
    cefc:	45 29 cf             	sub    %r9d,%r15d
    ceff:	41 39 ef             	cmp    %ebp,%r15d
    cf02:	0f 83 e2 00 00 00    	jae    cfea <lzma_mf_hc4_find+0x2fa>
    cf08:	41 83 fa 04          	cmp    $0x4,%r10d
    cf0c:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    cf12:	45 0f 43 e2          	cmovae %r10d,%r12d
    cf16:	4c 89 c7             	mov    %r8,%rdi
    cf19:	45 8d 48 ff          	lea    -0x1(%r8),%r9d
    cf1d:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    cf22:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    cf29:	1f 84 00 00 00 00 00 
    cf30:	45 89 fa             	mov    %r15d,%r10d
    cf33:	48 89 ca             	mov    %rcx,%rdx
    cf36:	4c 29 d2             	sub    %r10,%rdx
    cf39:	45 89 f2             	mov    %r14d,%r10d
    cf3c:	45 29 fa             	sub    %r15d,%r10d
    cf3f:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    cf45:	44 0f 42 ed          	cmovb  %ebp,%r13d
    cf49:	45 01 ea             	add    %r13d,%r10d
    cf4c:	46 8b 14 93          	mov    (%rbx,%r10,4),%r10d
    cf50:	45 89 e5             	mov    %r12d,%r13d
    cf53:	42 0f b6 34 2a       	movzbl (%rdx,%r13,1),%esi
    cf58:	42 3a 34 29          	cmp    (%rcx,%r13,1),%sil
    cf5c:	75 72                	jne    cfd0 <lzma_mf_hc4_find+0x2e0>
    cf5e:	0f b6 32             	movzbl (%rdx),%esi
    cf61:	40 3a 31             	cmp    (%rcx),%sil
    cf64:	75 4a                	jne    cfb0 <lzma_mf_hc4_find+0x2c0>
    cf66:	45 31 ed             	xor    %r13d,%r13d
    cf69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cf70:	4d 39 e9             	cmp    %r13,%r9
    cf73:	74 45                	je     cfba <lzma_mf_hc4_find+0x2ca>
    cf75:	49 ff c5             	inc    %r13
    cf78:	44 89 ee             	mov    %r13d,%esi
    cf7b:	44 0f b6 04 32       	movzbl (%rdx,%rsi,1),%r8d
    cf80:	44 3a 04 31          	cmp    (%rcx,%rsi,1),%r8b
    cf84:	74 ea                	je     cf70 <lzma_mf_hc4_find+0x280>
    cf86:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    cf8b:	45 39 ec             	cmp    %r13d,%r12d
    cf8e:	73 40                	jae    cfd0 <lzma_mf_hc4_find+0x2e0>
    cf90:	41 ff cf             	dec    %r15d
    cf93:	44 89 28             	mov    %r13d,(%rax)
    cf96:	44 89 78 04          	mov    %r15d,0x4(%rax)
    cf9a:	48 83 c0 08          	add    $0x8,%rax
    cf9e:	41 39 fd             	cmp    %edi,%r13d
    cfa1:	75 10                	jne    cfb3 <lzma_mf_hc4_find+0x2c3>
    cfa3:	eb 45                	jmp    cfea <lzma_mf_hc4_find+0x2fa>
    cfa5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    cfac:	00 00 00 00 
    cfb0:	45 89 e5             	mov    %r12d,%r13d
    cfb3:	41 ff cb             	dec    %r11d
    cfb6:	75 20                	jne    cfd8 <lzma_mf_hc4_find+0x2e8>
    cfb8:	eb 30                	jmp    cfea <lzma_mf_hc4_find+0x2fa>
    cfba:	41 89 fd             	mov    %edi,%r13d
    cfbd:	44 8b 44 24 ec       	mov    -0x14(%rsp),%r8d
    cfc2:	45 39 ec             	cmp    %r13d,%r12d
    cfc5:	72 c9                	jb     cf90 <lzma_mf_hc4_find+0x2a0>
    cfc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cfce:	00 00 
    cfd0:	45 89 e5             	mov    %r12d,%r13d
    cfd3:	41 ff cb             	dec    %r11d
    cfd6:	74 12                	je     cfea <lzma_mf_hc4_find+0x2fa>
    cfd8:	45 89 c7             	mov    %r8d,%r15d
    cfdb:	45 29 d7             	sub    %r10d,%r15d
    cfde:	45 89 ec             	mov    %r13d,%r12d
    cfe1:	41 39 ef             	cmp    %ebp,%r15d
    cfe4:	0f 82 46 ff ff ff    	jb     cf30 <lzma_mf_hc4_find+0x240>
    cfea:	48 2b 44 24 f8       	sub    -0x8(%rsp),%rax
    cfef:	48 c1 e8 03          	shr    $0x3,%rax
    cff3:	4c 8b 5c 24 f0       	mov    -0x10(%rsp),%r11
    cff8:	41 8b 53 50          	mov    0x50(%r11),%edx
    cffc:	ff c2                	inc    %edx
    cffe:	41 8b 4b 54          	mov    0x54(%r11),%ecx
    d002:	31 f6                	xor    %esi,%esi
    d004:	39 ca                	cmp    %ecx,%edx
    d006:	0f 45 f2             	cmovne %edx,%esi
    d009:	41 89 73 50          	mov    %esi,0x50(%r11)
    d00d:	41 8b 53 14          	mov    0x14(%r11),%edx
    d011:	41 8b 73 18          	mov    0x18(%r11),%esi
    d015:	8d 7e 01             	lea    0x1(%rsi),%edi
    d018:	41 89 7b 18          	mov    %edi,0x18(%r11)
    d01c:	01 d6                	add    %edx,%esi
    d01e:	ff c6                	inc    %esi
    d020:	83 fe ff             	cmp    $0xffffffff,%esi
    d023:	0f 85 66 01 00 00    	jne    d18f <lzma_mf_hc4_find+0x49f>
    d029:	f7 d1                	not    %ecx
    d02b:	45 8b 4b 70          	mov    0x70(%r11),%r9d
    d02f:	45 03 4b 6c          	add    0x6c(%r11),%r9d
    d033:	0f 84 b1 00 00 00    	je     d0ea <lzma_mf_hc4_find+0x3fa>
    d039:	49 8b 53 40          	mov    0x40(%r11),%rdx
    d03d:	44 89 ce             	mov    %r9d,%esi
    d040:	45 31 c0             	xor    %r8d,%r8d
    d043:	41 83 f9 08          	cmp    $0x8,%r9d
    d047:	73 08                	jae    d051 <lzma_mf_hc4_find+0x361>
    d049:	45 31 c9             	xor    %r9d,%r9d
    d04c:	e9 7f 00 00 00       	jmp    d0d0 <lzma_mf_hc4_find+0x3e0>
    d051:	41 89 f1             	mov    %esi,%r9d
    d054:	41 83 e1 f8          	and    $0xfffffff8,%r9d
    d058:	66 0f 6e c1          	movd   %ecx,%xmm0
    d05c:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    d061:	45 31 d2             	xor    %r10d,%r10d
    d064:	66 0f 6f 0d 44 b0 01 	movdqa 0x1b044(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    d06b:	00 
    d06c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    d070:	66 0f ef d1          	pxor   %xmm1,%xmm2
    d074:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    d07b:	00 00 00 00 00 
    d080:	f3 42 0f 6f 1c 92    	movdqu (%rdx,%r10,4),%xmm3
    d086:	f3 42 0f 6f 64 92 10 	movdqu 0x10(%rdx,%r10,4),%xmm4
    d08d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    d091:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d095:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d099:	66 0f fa d8          	psubd  %xmm0,%xmm3
    d09d:	66 0f db dd          	pand   %xmm5,%xmm3
    d0a1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    d0a5:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d0a9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d0ad:	66 0f fa e0          	psubd  %xmm0,%xmm4
    d0b1:	66 0f db e5          	pand   %xmm5,%xmm4
    d0b5:	f3 42 0f 7f 1c 92    	movdqu %xmm3,(%rdx,%r10,4)
    d0bb:	f3 42 0f 7f 64 92 10 	movdqu %xmm4,0x10(%rdx,%r10,4)
    d0c2:	49 83 c2 08          	add    $0x8,%r10
    d0c6:	4d 39 d1             	cmp    %r10,%r9
    d0c9:	75 b5                	jne    d080 <lzma_mf_hc4_find+0x390>
    d0cb:	49 39 f1             	cmp    %rsi,%r9
    d0ce:	74 16                	je     d0e6 <lzma_mf_hc4_find+0x3f6>
    d0d0:	42 8b 3c 8a          	mov    (%rdx,%r9,4),%edi
    d0d4:	29 cf                	sub    %ecx,%edi
    d0d6:	41 0f 42 f8          	cmovb  %r8d,%edi
    d0da:	42 89 3c 8a          	mov    %edi,(%rdx,%r9,4)
    d0de:	49 ff c1             	inc    %r9
    d0e1:	4c 39 ce             	cmp    %r9,%rsi
    d0e4:	75 ea                	jne    d0d0 <lzma_mf_hc4_find+0x3e0>
    d0e6:	41 8b 53 14          	mov    0x14(%r11),%edx
    d0ea:	29 ca                	sub    %ecx,%edx
    d0ec:	41 89 53 14          	mov    %edx,0x14(%r11)
    d0f0:	e9 9a 00 00 00       	jmp    d18f <lzma_mf_hc4_find+0x49f>
    d0f5:	41 89 f1             	mov    %esi,%r9d
    d0f8:	41 83 e1 f8          	and    $0xfffffff8,%r9d
    d0fc:	66 0f 6e c1          	movd   %ecx,%xmm0
    d100:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    d105:	45 31 d2             	xor    %r10d,%r10d
    d108:	66 0f 6f 0d a0 af 01 	movdqa 0x1afa0(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    d10f:	00 
    d110:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    d114:	66 0f ef d1          	pxor   %xmm1,%xmm2
    d118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d11f:	00 
    d120:	f3 42 0f 6f 1c 92    	movdqu (%rdx,%r10,4),%xmm3
    d126:	f3 42 0f 6f 64 92 10 	movdqu 0x10(%rdx,%r10,4),%xmm4
    d12d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    d131:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d135:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d139:	66 0f fa d8          	psubd  %xmm0,%xmm3
    d13d:	66 0f db dd          	pand   %xmm5,%xmm3
    d141:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    d145:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d149:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d14d:	66 0f fa e0          	psubd  %xmm0,%xmm4
    d151:	66 0f db e5          	pand   %xmm5,%xmm4
    d155:	f3 42 0f 7f 1c 92    	movdqu %xmm3,(%rdx,%r10,4)
    d15b:	f3 42 0f 7f 64 92 10 	movdqu %xmm4,0x10(%rdx,%r10,4)
    d162:	49 83 c2 08          	add    $0x8,%r10
    d166:	4d 39 d1             	cmp    %r10,%r9
    d169:	75 b5                	jne    d120 <lzma_mf_hc4_find+0x430>
    d16b:	49 39 f1             	cmp    %rsi,%r9
    d16e:	74 17                	je     d187 <lzma_mf_hc4_find+0x497>
    d170:	46 8b 14 8a          	mov    (%rdx,%r9,4),%r10d
    d174:	41 29 ca             	sub    %ecx,%r10d
    d177:	45 0f 42 d0          	cmovb  %r8d,%r10d
    d17b:	46 89 14 8a          	mov    %r10d,(%rdx,%r9,4)
    d17f:	49 ff c1             	inc    %r9
    d182:	4c 39 ce             	cmp    %r9,%rsi
    d185:	75 e9                	jne    d170 <lzma_mf_hc4_find+0x480>
    d187:	8b 57 14             	mov    0x14(%rdi),%edx
    d18a:	29 ca                	sub    %ecx,%edx
    d18c:	89 57 14             	mov    %edx,0x14(%rdi)
    d18f:	5b                   	pop    %rbx
    d190:	41 5c                	pop    %r12
    d192:	41 5d                	pop    %r13
    d194:	41 5e                	pop    %r14
    d196:	41 5f                	pop    %r15
    d198:	5d                   	pop    %rbp
    d199:	c3                   	ret    
    d19a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000d1a0 <lzma_mf_hc4_skip>:
    d1a0:	41 56                	push   %r14
    d1a2:	53                   	push   %rbx
    d1a3:	48 8d 05 96 6d 01 00 	lea    0x16d96(%rip),%rax        # 23f40 <lzma_crc32_table>
    d1aa:	31 c9                	xor    %ecx,%ecx
    d1ac:	66 0f 6f 05 fc ae 01 	movdqa 0x1aefc(%rip),%xmm0        # 280b0 <SHA256_K+0x150>
    d1b3:	00 
    d1b4:	eb 1c                	jmp    d1d2 <lzma_mf_hc4_skip+0x32>
    d1b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d1bd:	00 00 00 
    d1c0:	41 ff c0             	inc    %r8d
    d1c3:	44 89 47 18          	mov    %r8d,0x18(%rdi)
    d1c7:	ff 47 28             	incl   0x28(%rdi)
    d1ca:	ff ce                	dec    %esi
    d1cc:	0f 84 75 01 00 00    	je     d347 <lzma_mf_hc4_skip+0x1a7>
    d1d2:	44 8b 47 18          	mov    0x18(%rdi),%r8d
    d1d6:	8b 57 24             	mov    0x24(%rdi),%edx
    d1d9:	44 29 c2             	sub    %r8d,%edx
    d1dc:	83 fa 03             	cmp    $0x3,%edx
    d1df:	76 df                	jbe    d1c0 <lzma_mf_hc4_skip+0x20>
    d1e1:	8b 57 14             	mov    0x14(%rdi),%edx
    d1e4:	44 01 c2             	add    %r8d,%edx
    d1e7:	4c 8b 0f             	mov    (%rdi),%r9
    d1ea:	47 0f b6 14 01       	movzbl (%r9,%r8,1),%r10d
    d1ef:	47 0f b6 5c 01 01    	movzbl 0x1(%r9,%r8,1),%r11d
    d1f5:	46 33 1c 90          	xor    (%rax,%r10,4),%r11d
    d1f9:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    d1fd:	43 0f b6 5c 01 02    	movzbl 0x2(%r9,%r8,1),%ebx
    d203:	c1 e3 08             	shl    $0x8,%ebx
    d206:	44 31 db             	xor    %r11d,%ebx
    d209:	41 81 e3 ff 03 00 00 	and    $0x3ff,%r11d
    d210:	44 0f b7 f3          	movzwl %bx,%r14d
    d214:	47 0f b6 44 01 03    	movzbl 0x3(%r9,%r8,1),%r8d
    d21a:	46 8b 04 80          	mov    (%rax,%r8,4),%r8d
    d21e:	41 c1 e0 05          	shl    $0x5,%r8d
    d222:	41 31 d8             	xor    %ebx,%r8d
    d225:	44 23 47 58          	and    0x58(%rdi),%r8d
    d229:	41 81 c0 00 04 01 00 	add    $0x10400,%r8d
    d230:	47 8b 0c 82          	mov    (%r10,%r8,4),%r9d
    d234:	43 89 14 9a          	mov    %edx,(%r10,%r11,4)
    d238:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    d23c:	43 89 94 b2 00 10 00 	mov    %edx,0x1000(%r10,%r14,4)
    d243:	00 
    d244:	4c 8b 57 40          	mov    0x40(%rdi),%r10
    d248:	43 89 14 82          	mov    %edx,(%r10,%r8,4)
    d24c:	48 8b 57 48          	mov    0x48(%rdi),%rdx
    d250:	44 8b 47 50          	mov    0x50(%rdi),%r8d
    d254:	46 89 0c 82          	mov    %r9d,(%rdx,%r8,4)
    d258:	44 8b 47 50          	mov    0x50(%rdi),%r8d
    d25c:	41 ff c0             	inc    %r8d
    d25f:	8b 57 54             	mov    0x54(%rdi),%edx
    d262:	41 39 d0             	cmp    %edx,%r8d
    d265:	44 0f 44 c1          	cmove  %ecx,%r8d
    d269:	44 89 47 50          	mov    %r8d,0x50(%rdi)
    d26d:	44 8b 47 14          	mov    0x14(%rdi),%r8d
    d271:	44 8b 4f 18          	mov    0x18(%rdi),%r9d
    d275:	45 8d 51 01          	lea    0x1(%r9),%r10d
    d279:	44 89 57 18          	mov    %r10d,0x18(%rdi)
    d27d:	45 01 c1             	add    %r8d,%r9d
    d280:	41 ff c1             	inc    %r9d
    d283:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
    d287:	0f 85 3d ff ff ff    	jne    d1ca <lzma_mf_hc4_skip+0x2a>
    d28d:	f7 d2                	not    %edx
    d28f:	44 8b 57 70          	mov    0x70(%rdi),%r10d
    d293:	44 03 57 6c          	add    0x6c(%rdi),%r10d
    d297:	0f 84 9e 00 00 00    	je     d33b <lzma_mf_hc4_skip+0x19b>
    d29d:	4c 8b 47 40          	mov    0x40(%rdi),%r8
    d2a1:	45 89 d1             	mov    %r10d,%r9d
    d2a4:	41 83 fa 08          	cmp    $0x8,%r10d
    d2a8:	73 05                	jae    d2af <lzma_mf_hc4_skip+0x10f>
    d2aa:	45 31 d2             	xor    %r10d,%r10d
    d2ad:	eb 71                	jmp    d320 <lzma_mf_hc4_skip+0x180>
    d2af:	45 89 ca             	mov    %r9d,%r10d
    d2b2:	41 83 e2 f8          	and    $0xfffffff8,%r10d
    d2b6:	66 0f 6e ca          	movd   %edx,%xmm1
    d2ba:	66 0f 70 c9 00       	pshufd $0x0,%xmm1,%xmm1
    d2bf:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    d2c3:	66 0f ef d0          	pxor   %xmm0,%xmm2
    d2c7:	45 31 db             	xor    %r11d,%r11d
    d2ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2d0:	f3 43 0f 6f 1c 98    	movdqu (%r8,%r11,4),%xmm3
    d2d6:	f3 43 0f 6f 64 98 10 	movdqu 0x10(%r8,%r11,4),%xmm4
    d2dd:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    d2e1:	66 0f ef e8          	pxor   %xmm0,%xmm5
    d2e5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d2e9:	66 0f fa d9          	psubd  %xmm1,%xmm3
    d2ed:	66 0f db dd          	pand   %xmm5,%xmm3
    d2f1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    d2f5:	66 0f ef e8          	pxor   %xmm0,%xmm5
    d2f9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d2fd:	66 0f fa e1          	psubd  %xmm1,%xmm4
    d301:	66 0f db e5          	pand   %xmm5,%xmm4
    d305:	f3 43 0f 7f 1c 98    	movdqu %xmm3,(%r8,%r11,4)
    d30b:	f3 43 0f 7f 64 98 10 	movdqu %xmm4,0x10(%r8,%r11,4)
    d312:	49 83 c3 08          	add    $0x8,%r11
    d316:	4d 39 da             	cmp    %r11,%r10
    d319:	75 b5                	jne    d2d0 <lzma_mf_hc4_skip+0x130>
    d31b:	4d 39 ca             	cmp    %r9,%r10
    d31e:	74 17                	je     d337 <lzma_mf_hc4_skip+0x197>
    d320:	47 8b 1c 90          	mov    (%r8,%r10,4),%r11d
    d324:	41 29 d3             	sub    %edx,%r11d
    d327:	44 0f 42 d9          	cmovb  %ecx,%r11d
    d32b:	47 89 1c 90          	mov    %r11d,(%r8,%r10,4)
    d32f:	49 ff c2             	inc    %r10
    d332:	4d 39 d1             	cmp    %r10,%r9
    d335:	75 e9                	jne    d320 <lzma_mf_hc4_skip+0x180>
    d337:	44 8b 47 14          	mov    0x14(%rdi),%r8d
    d33b:	41 29 d0             	sub    %edx,%r8d
    d33e:	44 89 47 14          	mov    %r8d,0x14(%rdi)
    d342:	e9 83 fe ff ff       	jmp    d1ca <lzma_mf_hc4_skip+0x2a>
    d347:	5b                   	pop    %rbx
    d348:	41 5e                	pop    %r14
    d34a:	c3                   	ret    
    d34b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d350 <lzma_mf_bt2_find>:
    d350:	8b 4f 18             	mov    0x18(%rdi),%ecx
    d353:	8b 47 24             	mov    0x24(%rdi),%eax
    d356:	29 c8                	sub    %ecx,%eax
    d358:	44 8b 47 60          	mov    0x60(%rdi),%r8d
    d35c:	41 39 c0             	cmp    %eax,%r8d
    d35f:	76 19                	jbe    d37a <lzma_mf_bt2_find+0x2a>
    d361:	83 f8 02             	cmp    $0x2,%eax
    d364:	72 09                	jb     d36f <lzma_mf_bt2_find+0x1f>
    d366:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    d36a:	41 89 c0             	mov    %eax,%r8d
    d36d:	75 0b                	jne    d37a <lzma_mf_bt2_find+0x2a>
    d36f:	ff c1                	inc    %ecx
    d371:	89 4f 18             	mov    %ecx,0x18(%rdi)
    d374:	ff 47 28             	incl   0x28(%rdi)
    d377:	31 c0                	xor    %eax,%eax
    d379:	c3                   	ret    
    d37a:	55                   	push   %rbp
    d37b:	41 57                	push   %r15
    d37d:	41 56                	push   %r14
    d37f:	41 55                	push   %r13
    d381:	41 54                	push   %r12
    d383:	53                   	push   %rbx
    d384:	48 8b 1f             	mov    (%rdi),%rbx
    d387:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    d38b:	44 8b 77 14          	mov    0x14(%rdi),%r14d
    d38f:	41 01 ce             	add    %ecx,%r14d
    d392:	0f b7 04 0b          	movzwl (%rbx,%rcx,1),%eax
    d396:	44 8b 2c 82          	mov    (%rdx,%rax,4),%r13d
    d39a:	44 89 34 82          	mov    %r14d,(%rdx,%rax,4)
    d39e:	44 8b 5f 5c          	mov    0x5c(%rdi),%r11d
    d3a2:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
    d3a6:	8b 47 50             	mov    0x50(%rdi),%eax
    d3a9:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
    d3ae:	8d 14 00             	lea    (%rax,%rax,1),%edx
    d3b1:	49 8d 04 91          	lea    (%r9,%rdx,4),%rax
    d3b5:	48 89 44 24 c0       	mov    %rax,-0x40(%rsp)
    d3ba:	4c 89 4c 24 f8       	mov    %r9,-0x8(%rsp)
    d3bf:	49 8d 04 91          	lea    (%r9,%rdx,4),%rax
    d3c3:	48 83 c0 04          	add    $0x4,%rax
    d3c7:	48 89 44 24 c8       	mov    %rax,-0x38(%rsp)
    d3cc:	45 85 db             	test   %r11d,%r11d
    d3cf:	48 89 7c 24 d8       	mov    %rdi,-0x28(%rsp)
    d3d4:	48 89 74 24 d0       	mov    %rsi,-0x30(%rsp)
    d3d9:	0f 84 3b 01 00 00    	je     d51a <lzma_mf_bt2_find+0x1ca>
    d3df:	8b 6f 54             	mov    0x54(%rdi),%ebp
    d3e2:	45 89 f2             	mov    %r14d,%r10d
    d3e5:	45 29 ea             	sub    %r13d,%r10d
    d3e8:	41 39 ea             	cmp    %ebp,%r10d
    d3eb:	0f 83 29 01 00 00    	jae    d51a <lzma_mf_bt2_find+0x1ca>
    d3f1:	48 01 cb             	add    %rcx,%rbx
    d3f4:	44 89 c0             	mov    %r8d,%eax
    d3f7:	48 89 44 24 e0       	mov    %rax,-0x20(%rsp)
    d3fc:	4c 89 44 24 e8       	mov    %r8,-0x18(%rsp)
    d401:	45 8d 60 ff          	lea    -0x1(%r8),%r12d
    d405:	c7 44 24 bc 01 00 00 	movl   $0x1,-0x44(%rsp)
    d40c:	00 
    d40d:	45 31 ff             	xor    %r15d,%r15d
    d410:	31 ff                	xor    %edi,%edi
    d412:	48 89 f0             	mov    %rsi,%rax
    d415:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    d41c:	00 00 00 00 
    d420:	48 8b 4c 24 f0       	mov    -0x10(%rsp),%rcx
    d425:	44 29 d1             	sub    %r10d,%ecx
    d428:	ba 00 00 00 00       	mov    $0x0,%edx
    d42d:	0f 42 d5             	cmovb  %ebp,%edx
    d430:	01 d1                	add    %edx,%ecx
    d432:	01 c9                	add    %ecx,%ecx
    d434:	44 89 d2             	mov    %r10d,%edx
    d437:	49 89 d9             	mov    %rbx,%r9
    d43a:	49 29 d1             	sub    %rdx,%r9
    d43d:	44 39 ff             	cmp    %r15d,%edi
    d440:	44 89 fa             	mov    %r15d,%edx
    d443:	0f 42 d7             	cmovb  %edi,%edx
    d446:	48 8b 74 24 f8       	mov    -0x8(%rsp),%rsi
    d44b:	48 8d 0c 8e          	lea    (%rsi,%rcx,4),%rcx
    d44f:	45 0f b6 04 11       	movzbl (%r9,%rdx,1),%r8d
    d454:	44 3a 04 13          	cmp    (%rbx,%rdx,1),%r8b
    d458:	75 46                	jne    d4a0 <lzma_mf_bt2_find+0x150>
    d45a:	44 89 f6             	mov    %r14d,%esi
    d45d:	0f 1f 00             	nopl   (%rax)
    d460:	41 39 d4             	cmp    %edx,%r12d
    d463:	74 6b                	je     d4d0 <lzma_mf_bt2_find+0x180>
    d465:	ff c2                	inc    %edx
    d467:	41 89 d0             	mov    %edx,%r8d
    d46a:	47 0f b6 34 01       	movzbl (%r9,%r8,1),%r14d
    d46f:	46 3a 34 03          	cmp    (%rbx,%r8,1),%r14b
    d473:	74 eb                	je     d460 <lzma_mf_bt2_find+0x110>
    d475:	39 54 24 bc          	cmp    %edx,-0x44(%rsp)
    d479:	73 69                	jae    d4e4 <lzma_mf_bt2_find+0x194>
    d47b:	89 10                	mov    %edx,(%rax)
    d47d:	41 ff ca             	dec    %r10d
    d480:	44 89 50 04          	mov    %r10d,0x4(%rax)
    d484:	48 83 c0 08          	add    $0x8,%rax
    d488:	41 89 d2             	mov    %edx,%r10d
    d48b:	89 54 24 bc          	mov    %edx,-0x44(%rsp)
    d48f:	eb 53                	jmp    d4e4 <lzma_mf_bt2_find+0x194>
    d491:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    d498:	0f 1f 84 00 00 00 00 
    d49f:	00 
    d4a0:	49 89 d0             	mov    %rdx,%r8
    d4a3:	47 0f b6 0c 01       	movzbl (%r9,%r8,1),%r9d
    d4a8:	46 3a 0c 03          	cmp    (%rbx,%r8,1),%r9b
    d4ac:	73 44                	jae    d4f2 <lzma_mf_bt2_find+0x1a2>
    d4ae:	4c 8b 44 24 c0       	mov    -0x40(%rsp),%r8
    d4b3:	45 89 28             	mov    %r13d,(%r8)
    d4b6:	48 83 c1 04          	add    $0x4,%rcx
    d4ba:	48 89 4c 24 c0       	mov    %rcx,-0x40(%rsp)
    d4bf:	41 89 d7             	mov    %edx,%r15d
    d4c2:	41 ff cb             	dec    %r11d
    d4c5:	75 3f                	jne    d506 <lzma_mf_bt2_find+0x1b6>
    d4c7:	eb 54                	jmp    d51d <lzma_mf_bt2_find+0x1cd>
    d4c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d4d0:	48 8b 54 24 e8       	mov    -0x18(%rsp),%rdx
    d4d5:	39 54 24 bc          	cmp    %edx,-0x44(%rsp)
    d4d9:	0f 82 5e 01 00 00    	jb     d63d <lzma_mf_bt2_find+0x2ed>
    d4df:	4c 8b 44 24 e0       	mov    -0x20(%rsp),%r8
    d4e4:	41 89 f6             	mov    %esi,%r14d
    d4e7:	47 0f b6 0c 01       	movzbl (%r9,%r8,1),%r9d
    d4ec:	46 3a 0c 03          	cmp    (%rbx,%r8,1),%r9b
    d4f0:	72 bc                	jb     d4ae <lzma_mf_bt2_find+0x15e>
    d4f2:	48 8b 7c 24 c8       	mov    -0x38(%rsp),%rdi
    d4f7:	44 89 2f             	mov    %r13d,(%rdi)
    d4fa:	48 89 4c 24 c8       	mov    %rcx,-0x38(%rsp)
    d4ff:	89 d7                	mov    %edx,%edi
    d501:	41 ff cb             	dec    %r11d
    d504:	74 17                	je     d51d <lzma_mf_bt2_find+0x1cd>
    d506:	44 8b 29             	mov    (%rcx),%r13d
    d509:	45 89 f2             	mov    %r14d,%r10d
    d50c:	45 29 ea             	sub    %r13d,%r10d
    d50f:	41 39 ea             	cmp    %ebp,%r10d
    d512:	0f 82 08 ff ff ff    	jb     d420 <lzma_mf_bt2_find+0xd0>
    d518:	eb 03                	jmp    d51d <lzma_mf_bt2_find+0x1cd>
    d51a:	48 89 f0             	mov    %rsi,%rax
    d51d:	48 8b 4c 24 c8       	mov    -0x38(%rsp),%rcx
    d522:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
    d528:	48 8b 4c 24 c0       	mov    -0x40(%rsp),%rcx
    d52d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
    d533:	48 2b 44 24 d0       	sub    -0x30(%rsp),%rax
    d538:	48 c1 e8 03          	shr    $0x3,%rax
    d53c:	4c 8b 4c 24 d8       	mov    -0x28(%rsp),%r9
    d541:	41 8b 49 50          	mov    0x50(%r9),%ecx
    d545:	ff c1                	inc    %ecx
    d547:	45 8b 51 54          	mov    0x54(%r9),%r10d
    d54b:	31 d2                	xor    %edx,%edx
    d54d:	44 39 d1             	cmp    %r10d,%ecx
    d550:	0f 45 d1             	cmovne %ecx,%edx
    d553:	41 89 51 50          	mov    %edx,0x50(%r9)
    d557:	41 8b 49 14          	mov    0x14(%r9),%ecx
    d55b:	41 8b 51 18          	mov    0x18(%r9),%edx
    d55f:	8d 72 01             	lea    0x1(%rdx),%esi
    d562:	41 89 71 18          	mov    %esi,0x18(%r9)
    d566:	01 ca                	add    %ecx,%edx
    d568:	ff c2                	inc    %edx
    d56a:	83 fa ff             	cmp    $0xffffffff,%edx
    d56d:	0f 85 bf 00 00 00    	jne    d632 <lzma_mf_bt2_find+0x2e2>
    d573:	41 f7 d2             	not    %r10d
    d576:	41 8b 79 70          	mov    0x70(%r9),%edi
    d57a:	41 03 79 6c          	add    0x6c(%r9),%edi
    d57e:	0f 84 a7 00 00 00    	je     d62b <lzma_mf_bt2_find+0x2db>
    d584:	49 8b 49 40          	mov    0x40(%r9),%rcx
    d588:	89 fa                	mov    %edi,%edx
    d58a:	31 f6                	xor    %esi,%esi
    d58c:	83 ff 08             	cmp    $0x8,%edi
    d58f:	73 04                	jae    d595 <lzma_mf_bt2_find+0x245>
    d591:	31 ff                	xor    %edi,%edi
    d593:	eb 7b                	jmp    d610 <lzma_mf_bt2_find+0x2c0>
    d595:	89 d7                	mov    %edx,%edi
    d597:	83 e7 f8             	and    $0xfffffff8,%edi
    d59a:	66 41 0f 6e c2       	movd   %r10d,%xmm0
    d59f:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    d5a4:	45 31 c0             	xor    %r8d,%r8d
    d5a7:	66 0f 6f 0d 01 ab 01 	movdqa 0x1ab01(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    d5ae:	00 
    d5af:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    d5b3:	66 0f ef d1          	pxor   %xmm1,%xmm2
    d5b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d5be:	00 00 
    d5c0:	f3 42 0f 6f 1c 81    	movdqu (%rcx,%r8,4),%xmm3
    d5c6:	f3 42 0f 6f 64 81 10 	movdqu 0x10(%rcx,%r8,4),%xmm4
    d5cd:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    d5d1:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d5d5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d5d9:	66 0f fa d8          	psubd  %xmm0,%xmm3
    d5dd:	66 0f db dd          	pand   %xmm5,%xmm3
    d5e1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    d5e5:	66 0f ef e9          	pxor   %xmm1,%xmm5
    d5e9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d5ed:	66 0f fa e0          	psubd  %xmm0,%xmm4
    d5f1:	66 0f db e5          	pand   %xmm5,%xmm4
    d5f5:	f3 42 0f 7f 1c 81    	movdqu %xmm3,(%rcx,%r8,4)
    d5fb:	f3 42 0f 7f 64 81 10 	movdqu %xmm4,0x10(%rcx,%r8,4)
    d602:	49 83 c0 08          	add    $0x8,%r8
    d606:	4c 39 c7             	cmp    %r8,%rdi
    d609:	75 b5                	jne    d5c0 <lzma_mf_bt2_find+0x270>
    d60b:	48 39 d7             	cmp    %rdx,%rdi
    d60e:	74 17                	je     d627 <lzma_mf_bt2_find+0x2d7>
    d610:	44 8b 04 b9          	mov    (%rcx,%rdi,4),%r8d
    d614:	45 29 d0             	sub    %r10d,%r8d
    d617:	44 0f 42 c6          	cmovb  %esi,%r8d
    d61b:	44 89 04 b9          	mov    %r8d,(%rcx,%rdi,4)
    d61f:	48 ff c7             	inc    %rdi
    d622:	48 39 fa             	cmp    %rdi,%rdx
    d625:	75 e9                	jne    d610 <lzma_mf_bt2_find+0x2c0>
    d627:	41 8b 49 14          	mov    0x14(%r9),%ecx
    d62b:	44 29 d1             	sub    %r10d,%ecx
    d62e:	41 89 49 14          	mov    %ecx,0x14(%r9)
    d632:	5b                   	pop    %rbx
    d633:	41 5c                	pop    %r12
    d635:	41 5d                	pop    %r13
    d637:	41 5e                	pop    %r14
    d639:	41 5f                	pop    %r15
    d63b:	5d                   	pop    %rbp
    d63c:	c3                   	ret    
    d63d:	89 10                	mov    %edx,(%rax)
    d63f:	41 ff ca             	dec    %r10d
    d642:	44 89 50 04          	mov    %r10d,0x4(%rax)
    d646:	48 83 c0 08          	add    $0x8,%rax
    d64a:	8b 11                	mov    (%rcx),%edx
    d64c:	48 8b 7c 24 c0       	mov    -0x40(%rsp),%rdi
    d651:	89 17                	mov    %edx,(%rdi)
    d653:	8b 49 04             	mov    0x4(%rcx),%ecx
    d656:	48 8b 54 24 c8       	mov    -0x38(%rsp),%rdx
    d65b:	89 0a                	mov    %ecx,(%rdx)
    d65d:	e9 d1 fe ff ff       	jmp    d533 <lzma_mf_bt2_find+0x1e3>
    d662:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    d669:	1f 84 00 00 00 00 00 

000000000000d670 <lzma_mf_bt2_skip>:
    d670:	55                   	push   %rbp
    d671:	41 57                	push   %r15
    d673:	41 56                	push   %r14
    d675:	41 55                	push   %r13
    d677:	41 54                	push   %r12
    d679:	53                   	push   %rbx
    d67a:	66 0f 6f 05 2e aa 01 	movdqa 0x1aa2e(%rip),%xmm0        # 280b0 <SHA256_K+0x150>
    d681:	00 
    d682:	eb 1c                	jmp    d6a0 <lzma_mf_bt2_skip+0x30>
    d684:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    d68b:	00 00 00 00 00 
    d690:	ff c2                	inc    %edx
    d692:	89 57 18             	mov    %edx,0x18(%rdi)
    d695:	ff 47 28             	incl   0x28(%rdi)
    d698:	ff ce                	dec    %esi
    d69a:	0f 84 64 02 00 00    	je     d904 <lzma_mf_bt2_skip+0x294>
    d6a0:	8b 57 18             	mov    0x18(%rdi),%edx
    d6a3:	8b 47 24             	mov    0x24(%rdi),%eax
    d6a6:	29 d0                	sub    %edx,%eax
    d6a8:	8b 4f 60             	mov    0x60(%rdi),%ecx
    d6ab:	39 c1                	cmp    %eax,%ecx
    d6ad:	76 11                	jbe    d6c0 <lzma_mf_bt2_skip+0x50>
    d6af:	83 f8 02             	cmp    $0x2,%eax
    d6b2:	72 dc                	jb     d690 <lzma_mf_bt2_skip+0x20>
    d6b4:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    d6b8:	89 c1                	mov    %eax,%ecx
    d6ba:	74 d4                	je     d690 <lzma_mf_bt2_skip+0x20>
    d6bc:	0f 1f 40 00          	nopl   0x0(%rax)
    d6c0:	89 74 24 f4          	mov    %esi,-0xc(%rsp)
    d6c4:	4c 8b 0f             	mov    (%rdi),%r9
    d6c7:	48 8b 77 40          	mov    0x40(%rdi),%rsi
    d6cb:	8b 47 14             	mov    0x14(%rdi),%eax
    d6ce:	01 d0                	add    %edx,%eax
    d6d0:	45 0f b7 04 11       	movzwl (%r9,%rdx,1),%r8d
    d6d5:	46 8b 3c 86          	mov    (%rsi,%r8,4),%r15d
    d6d9:	42 89 04 86          	mov    %eax,(%rsi,%r8,4)
    d6dd:	44 8b 5f 5c          	mov    0x5c(%rdi),%r11d
    d6e1:	48 8b 77 48          	mov    0x48(%rdi),%rsi
    d6e5:	44 8b 47 50          	mov    0x50(%rdi),%r8d
    d6e9:	4c 89 44 24 f8       	mov    %r8,-0x8(%rsp)
    d6ee:	45 01 c0             	add    %r8d,%r8d
    d6f1:	4e 8d 14 86          	lea    (%rsi,%r8,4),%r10
    d6f5:	4c 89 54 24 e8       	mov    %r10,-0x18(%rsp)
    d6fa:	4e 8d 04 86          	lea    (%rsi,%r8,4),%r8
    d6fe:	49 83 c0 04          	add    $0x4,%r8
    d702:	4c 89 44 24 e0       	mov    %r8,-0x20(%rsp)
    d707:	45 85 db             	test   %r11d,%r11d
    d70a:	0f 84 d0 00 00 00    	je     d7e0 <lzma_mf_bt2_skip+0x170>
    d710:	8b 6f 54             	mov    0x54(%rdi),%ebp
    d713:	41 89 c2             	mov    %eax,%r10d
    d716:	45 29 fa             	sub    %r15d,%r10d
    d719:	41 39 ea             	cmp    %ebp,%r10d
    d71c:	0f 83 be 00 00 00    	jae    d7e0 <lzma_mf_bt2_skip+0x170>
    d722:	49 01 d1             	add    %rdx,%r9
    d725:	ff c9                	dec    %ecx
    d727:	45 31 e4             	xor    %r12d,%r12d
    d72a:	45 31 ed             	xor    %r13d,%r13d
    d72d:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
    d732:	44 29 d2             	sub    %r10d,%edx
    d735:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d73b:	44 0f 42 c5          	cmovb  %ebp,%r8d
    d73f:	44 01 c2             	add    %r8d,%edx
    d742:	01 d2                	add    %edx,%edx
    d744:	45 89 d2             	mov    %r10d,%r10d
    d747:	4d 89 c8             	mov    %r9,%r8
    d74a:	4d 29 d0             	sub    %r10,%r8
    d74d:	45 39 e5             	cmp    %r12d,%r13d
    d750:	45 89 e2             	mov    %r12d,%r10d
    d753:	45 0f 42 d5          	cmovb  %r13d,%r10d
    d757:	48 8d 14 96          	lea    (%rsi,%rdx,4),%rdx
    d75b:	47 0f b6 34 10       	movzbl (%r8,%r10,1),%r14d
    d760:	43 0f b6 1c 11       	movzbl (%r9,%r10,1),%ebx
    d765:	41 38 de             	cmp    %bl,%r14b
    d768:	75 24                	jne    d78e <lzma_mf_bt2_skip+0x11e>
    d76a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d770:	44 39 d1             	cmp    %r10d,%ecx
    d773:	0f 84 87 00 00 00    	je     d800 <lzma_mf_bt2_skip+0x190>
    d779:	41 ff c2             	inc    %r10d
    d77c:	44 89 d3             	mov    %r10d,%ebx
    d77f:	45 0f b6 34 18       	movzbl (%r8,%rbx,1),%r14d
    d784:	41 0f b6 1c 19       	movzbl (%r9,%rbx,1),%ebx
    d789:	41 38 de             	cmp    %bl,%r14b
    d78c:	74 e2                	je     d770 <lzma_mf_bt2_skip+0x100>
    d78e:	41 38 de             	cmp    %bl,%r14b
    d791:	73 1d                	jae    d7b0 <lzma_mf_bt2_skip+0x140>
    d793:	4c 8b 44 24 e8       	mov    -0x18(%rsp),%r8
    d798:	45 89 38             	mov    %r15d,(%r8)
    d79b:	48 83 c2 04          	add    $0x4,%rdx
    d79f:	48 89 54 24 e8       	mov    %rdx,-0x18(%rsp)
    d7a4:	45 89 d4             	mov    %r10d,%r12d
    d7a7:	41 ff cb             	dec    %r11d
    d7aa:	75 19                	jne    d7c5 <lzma_mf_bt2_skip+0x155>
    d7ac:	eb 32                	jmp    d7e0 <lzma_mf_bt2_skip+0x170>
    d7ae:	66 90                	xchg   %ax,%ax
    d7b0:	4c 8b 44 24 e0       	mov    -0x20(%rsp),%r8
    d7b5:	45 89 38             	mov    %r15d,(%r8)
    d7b8:	45 89 d5             	mov    %r10d,%r13d
    d7bb:	48 89 54 24 e0       	mov    %rdx,-0x20(%rsp)
    d7c0:	41 ff cb             	dec    %r11d
    d7c3:	74 1b                	je     d7e0 <lzma_mf_bt2_skip+0x170>
    d7c5:	44 8b 3a             	mov    (%rdx),%r15d
    d7c8:	41 89 c2             	mov    %eax,%r10d
    d7cb:	45 29 fa             	sub    %r15d,%r10d
    d7ce:	41 39 ea             	cmp    %ebp,%r10d
    d7d1:	0f 82 56 ff ff ff    	jb     d72d <lzma_mf_bt2_skip+0xbd>
    d7d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d7de:	00 00 
    d7e0:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    d7e5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d7eb:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    d7f0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    d7f6:	eb 1b                	jmp    d813 <lzma_mf_bt2_skip+0x1a3>
    d7f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d7ff:	00 
    d800:	8b 02                	mov    (%rdx),%eax
    d802:	48 8b 4c 24 e8       	mov    -0x18(%rsp),%rcx
    d807:	89 01                	mov    %eax,(%rcx)
    d809:	8b 42 04             	mov    0x4(%rdx),%eax
    d80c:	48 8b 4c 24 e0       	mov    -0x20(%rsp),%rcx
    d811:	89 01                	mov    %eax,(%rcx)
    d813:	8b 47 50             	mov    0x50(%rdi),%eax
    d816:	ff c0                	inc    %eax
    d818:	8b 4f 54             	mov    0x54(%rdi),%ecx
    d81b:	39 c8                	cmp    %ecx,%eax
    d81d:	41 ba 00 00 00 00    	mov    $0x0,%r10d
    d823:	41 0f 44 c2          	cmove  %r10d,%eax
    d827:	89 47 50             	mov    %eax,0x50(%rdi)
    d82a:	8b 47 14             	mov    0x14(%rdi),%eax
    d82d:	8b 57 18             	mov    0x18(%rdi),%edx
    d830:	8d 72 01             	lea    0x1(%rdx),%esi
    d833:	89 77 18             	mov    %esi,0x18(%rdi)
    d836:	01 c2                	add    %eax,%edx
    d838:	ff c2                	inc    %edx
    d83a:	83 fa ff             	cmp    $0xffffffff,%edx
    d83d:	8b 74 24 f4          	mov    -0xc(%rsp),%esi
    d841:	0f 85 51 fe ff ff    	jne    d698 <lzma_mf_bt2_skip+0x28>
    d847:	f7 d1                	not    %ecx
    d849:	44 8b 47 70          	mov    0x70(%rdi),%r8d
    d84d:	44 03 47 6c          	add    0x6c(%rdi),%r8d
    d851:	0f 84 a3 00 00 00    	je     d8fa <lzma_mf_bt2_skip+0x28a>
    d857:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    d85b:	44 89 c0             	mov    %r8d,%eax
    d85e:	41 83 f8 08          	cmp    $0x8,%r8d
    d862:	73 05                	jae    d869 <lzma_mf_bt2_skip+0x1f9>
    d864:	45 31 c0             	xor    %r8d,%r8d
    d867:	eb 77                	jmp    d8e0 <lzma_mf_bt2_skip+0x270>
    d869:	41 89 c0             	mov    %eax,%r8d
    d86c:	41 83 e0 f8          	and    $0xfffffff8,%r8d
    d870:	66 0f 6e c9          	movd   %ecx,%xmm1
    d874:	66 0f 70 c9 00       	pshufd $0x0,%xmm1,%xmm1
    d879:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    d87d:	66 0f ef d0          	pxor   %xmm0,%xmm2
    d881:	45 31 c9             	xor    %r9d,%r9d
    d884:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    d88b:	00 00 00 00 00 
    d890:	f3 42 0f 6f 1c 8a    	movdqu (%rdx,%r9,4),%xmm3
    d896:	f3 42 0f 6f 64 8a 10 	movdqu 0x10(%rdx,%r9,4),%xmm4
    d89d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    d8a1:	66 0f ef e8          	pxor   %xmm0,%xmm5
    d8a5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d8a9:	66 0f fa d9          	psubd  %xmm1,%xmm3
    d8ad:	66 0f db dd          	pand   %xmm5,%xmm3
    d8b1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    d8b5:	66 0f ef e8          	pxor   %xmm0,%xmm5
    d8b9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    d8bd:	66 0f fa e1          	psubd  %xmm1,%xmm4
    d8c1:	66 0f db e5          	pand   %xmm5,%xmm4
    d8c5:	f3 42 0f 7f 1c 8a    	movdqu %xmm3,(%rdx,%r9,4)
    d8cb:	f3 42 0f 7f 64 8a 10 	movdqu %xmm4,0x10(%rdx,%r9,4)
    d8d2:	49 83 c1 08          	add    $0x8,%r9
    d8d6:	4d 39 c8             	cmp    %r9,%r8
    d8d9:	75 b5                	jne    d890 <lzma_mf_bt2_skip+0x220>
    d8db:	49 39 c0             	cmp    %rax,%r8
    d8de:	74 17                	je     d8f7 <lzma_mf_bt2_skip+0x287>
    d8e0:	46 8b 0c 82          	mov    (%rdx,%r8,4),%r9d
    d8e4:	41 29 c9             	sub    %ecx,%r9d
    d8e7:	45 0f 42 ca          	cmovb  %r10d,%r9d
    d8eb:	46 89 0c 82          	mov    %r9d,(%rdx,%r8,4)
    d8ef:	49 ff c0             	inc    %r8
    d8f2:	4c 39 c0             	cmp    %r8,%rax
    d8f5:	75 e9                	jne    d8e0 <lzma_mf_bt2_skip+0x270>
    d8f7:	8b 47 14             	mov    0x14(%rdi),%eax
    d8fa:	29 c8                	sub    %ecx,%eax
    d8fc:	89 47 14             	mov    %eax,0x14(%rdi)
    d8ff:	e9 94 fd ff ff       	jmp    d698 <lzma_mf_bt2_skip+0x28>
    d904:	5b                   	pop    %rbx
    d905:	41 5c                	pop    %r12
    d907:	41 5d                	pop    %r13
    d909:	41 5e                	pop    %r14
    d90b:	41 5f                	pop    %r15
    d90d:	5d                   	pop    %rbp
    d90e:	c3                   	ret    
    d90f:	90                   	nop

000000000000d910 <lzma_mf_bt3_find>:
    d910:	55                   	push   %rbp
    d911:	41 57                	push   %r15
    d913:	41 56                	push   %r14
    d915:	41 55                	push   %r13
    d917:	41 54                	push   %r12
    d919:	53                   	push   %rbx
    d91a:	8b 4f 18             	mov    0x18(%rdi),%ecx
    d91d:	8b 47 24             	mov    0x24(%rdi),%eax
    d920:	29 c8                	sub    %ecx,%eax
    d922:	8b 5f 60             	mov    0x60(%rdi),%ebx
    d925:	39 c3                	cmp    %eax,%ebx
    d927:	76 1c                	jbe    d945 <lzma_mf_bt3_find+0x35>
    d929:	83 f8 03             	cmp    $0x3,%eax
    d92c:	72 08                	jb     d936 <lzma_mf_bt3_find+0x26>
    d92e:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    d932:	89 c3                	mov    %eax,%ebx
    d934:	75 0f                	jne    d945 <lzma_mf_bt3_find+0x35>
    d936:	ff c1                	inc    %ecx
    d938:	89 4f 18             	mov    %ecx,0x18(%rdi)
    d93b:	ff 47 28             	incl   0x28(%rdi)
    d93e:	31 c0                	xor    %eax,%eax
    d940:	e9 90 04 00 00       	jmp    ddd5 <lzma_mf_bt3_find+0x4c5>
    d945:	48 8b 17             	mov    (%rdi),%rdx
    d948:	4c 8b 5f 40          	mov    0x40(%rdi),%r11
    d94c:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    d950:	44 8b 67 14          	mov    0x14(%rdi),%r12d
    d954:	41 01 cc             	add    %ecx,%r12d
    d957:	44 0f b6 0c 0a       	movzbl (%rdx,%rcx,1),%r9d
    d95c:	4c 8d 05 dd 65 01 00 	lea    0x165dd(%rip),%r8        # 23f40 <lzma_crc32_table>
    d963:	44 0f b6 54 0a 01    	movzbl 0x1(%rdx,%rcx,1),%r10d
    d969:	47 33 14 88          	xor    (%r8,%r9,4),%r10d
    d96d:	0f b6 54 0a 02       	movzbl 0x2(%rdx,%rcx,1),%edx
    d972:	c1 e2 08             	shl    $0x8,%edx
    d975:	44 31 d2             	xor    %r10d,%edx
    d978:	23 57 58             	and    0x58(%rdi),%edx
    d97b:	41 81 e2 ff 03 00 00 	and    $0x3ff,%r10d
    d982:	44 89 e1             	mov    %r12d,%ecx
    d985:	43 2b 0c 93          	sub    (%r11,%r10,4),%ecx
    d989:	81 c2 00 04 00 00    	add    $0x400,%edx
    d98f:	45 8b 0c 93          	mov    (%r11,%rdx,4),%r9d
    d993:	47 89 24 93          	mov    %r12d,(%r11,%r10,4)
    d997:	4c 8b 47 40          	mov    0x40(%rdi),%r8
    d99b:	45 89 24 90          	mov    %r12d,(%r8,%rdx,4)
    d99f:	44 8b 5f 54          	mov    0x54(%rdi),%r11d
    d9a3:	41 ba 02 00 00 00    	mov    $0x2,%r10d
    d9a9:	44 39 d9             	cmp    %r11d,%ecx
    d9ac:	48 89 5c 24 c8       	mov    %rbx,-0x38(%rsp)
    d9b1:	44 89 64 24 bc       	mov    %r12d,-0x44(%rsp)
    d9b6:	48 89 7c 24 e0       	mov    %rdi,-0x20(%rsp)
    d9bb:	0f 83 34 01 00 00    	jae    daf5 <lzma_mf_bt3_find+0x1e5>
    d9c1:	89 ca                	mov    %ecx,%edx
    d9c3:	49 89 c0             	mov    %rax,%r8
    d9c6:	49 29 d0             	sub    %rdx,%r8
    d9c9:	45 0f b6 00          	movzbl (%r8),%r8d
    d9cd:	44 3a 00             	cmp    (%rax),%r8b
    d9d0:	0f 85 1f 01 00 00    	jne    daf5 <lzma_mf_bt3_find+0x1e5>
    d9d6:	83 fb 02             	cmp    $0x2,%ebx
    d9d9:	74 23                	je     d9fe <lzma_mf_bt3_find+0xee>
    d9db:	48 f7 da             	neg    %rdx
    d9de:	66 90                	xchg   %ax,%ax
    d9e0:	45 89 d3             	mov    %r10d,%r11d
    d9e3:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
    d9e7:	46 0f b6 04 02       	movzbl (%rdx,%r8,1),%r8d
    d9ec:	46 3a 04 18          	cmp    (%rax,%r11,1),%r8b
    d9f0:	0f 85 39 04 00 00    	jne    de2f <lzma_mf_bt3_find+0x51f>
    d9f6:	41 ff c2             	inc    %r10d
    d9f9:	44 39 d3             	cmp    %r10d,%ebx
    d9fc:	75 e2                	jne    d9e0 <lzma_mf_bt3_find+0xd0>
    d9fe:	89 1e                	mov    %ebx,(%rsi)
    da00:	ff c9                	dec    %ecx
    da02:	89 4e 04             	mov    %ecx,0x4(%rsi)
    da05:	44 8b 57 5c          	mov    0x5c(%rdi),%r10d
    da09:	4c 8b 5f 48          	mov    0x48(%rdi),%r11
    da0d:	8b 5f 50             	mov    0x50(%rdi),%ebx
    da10:	8d 14 1b             	lea    (%rbx,%rbx,1),%edx
    da13:	49 8d 0c 93          	lea    (%r11,%rdx,4),%rcx
    da17:	49 8d 34 93          	lea    (%r11,%rdx,4),%rsi
    da1b:	48 83 c6 04          	add    $0x4,%rsi
    da1f:	45 85 d2             	test   %r10d,%r10d
    da22:	0f 84 bc 00 00 00    	je     dae4 <lzma_mf_bt3_find+0x1d4>
    da28:	8b 6f 54             	mov    0x54(%rdi),%ebp
    da2b:	44 89 e2             	mov    %r12d,%edx
    da2e:	44 29 ca             	sub    %r9d,%edx
    da31:	39 ea                	cmp    %ebp,%edx
    da33:	0f 83 ab 00 00 00    	jae    dae4 <lzma_mf_bt3_find+0x1d4>
    da39:	48 8b 7c 24 c8       	mov    -0x38(%rsp),%rdi
    da3e:	ff cf                	dec    %edi
    da40:	48 89 7c 24 c8       	mov    %rdi,-0x38(%rsp)
    da45:	45 31 f6             	xor    %r14d,%r14d
    da48:	45 31 ff             	xor    %r15d,%r15d
    da4b:	89 df                	mov    %ebx,%edi
    da4d:	29 d7                	sub    %edx,%edi
    da4f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    da55:	44 0f 42 c5          	cmovb  %ebp,%r8d
    da59:	46 8d 24 07          	lea    (%rdi,%r8,1),%r12d
    da5d:	45 01 e4             	add    %r12d,%r12d
    da60:	89 d2                	mov    %edx,%edx
    da62:	49 89 c0             	mov    %rax,%r8
    da65:	49 29 d0             	sub    %rdx,%r8
    da68:	45 39 f7             	cmp    %r14d,%r15d
    da6b:	44 89 f7             	mov    %r14d,%edi
    da6e:	41 0f 42 ff          	cmovb  %r15d,%edi
    da72:	4b 8d 14 a3          	lea    (%r11,%r12,4),%rdx
    da76:	45 0f b6 24 38       	movzbl (%r8,%rdi,1),%r12d
    da7b:	44 0f b6 2c 38       	movzbl (%rax,%rdi,1),%r13d
    da80:	45 38 ec             	cmp    %r13b,%r12b
    da83:	75 29                	jne    daae <lzma_mf_bt3_find+0x19e>
    da85:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    da8c:	00 00 00 00 
    da90:	39 7c 24 c8          	cmp    %edi,-0x38(%rsp)
    da94:	0f 84 fa 02 00 00    	je     dd94 <lzma_mf_bt3_find+0x484>
    da9a:	ff c7                	inc    %edi
    da9c:	41 89 fd             	mov    %edi,%r13d
    da9f:	47 0f b6 24 28       	movzbl (%r8,%r13,1),%r12d
    daa4:	46 0f b6 2c 28       	movzbl (%rax,%r13,1),%r13d
    daa9:	45 38 ec             	cmp    %r13b,%r12b
    daac:	74 e2                	je     da90 <lzma_mf_bt3_find+0x180>
    daae:	45 38 ec             	cmp    %r13b,%r12b
    dab1:	73 0f                	jae    dac2 <lzma_mf_bt3_find+0x1b2>
    dab3:	44 89 09             	mov    %r9d,(%rcx)
    dab6:	48 83 c2 04          	add    $0x4,%rdx
    daba:	48 89 d1             	mov    %rdx,%rcx
    dabd:	41 89 fe             	mov    %edi,%r14d
    dac0:	eb 09                	jmp    dacb <lzma_mf_bt3_find+0x1bb>
    dac2:	44 89 0e             	mov    %r9d,(%rsi)
    dac5:	41 89 ff             	mov    %edi,%r15d
    dac8:	48 89 d6             	mov    %rdx,%rsi
    dacb:	8b 7c 24 bc          	mov    -0x44(%rsp),%edi
    dacf:	41 ff ca             	dec    %r10d
    dad2:	74 10                	je     dae4 <lzma_mf_bt3_find+0x1d4>
    dad4:	44 8b 0a             	mov    (%rdx),%r9d
    dad7:	89 fa                	mov    %edi,%edx
    dad9:	44 29 ca             	sub    %r9d,%edx
    dadc:	39 ea                	cmp    %ebp,%edx
    dade:	0f 82 67 ff ff ff    	jb     da4b <lzma_mf_bt3_find+0x13b>
    dae4:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
    daea:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
    daf0:	e9 a8 02 00 00       	jmp    dd9d <lzma_mf_bt3_find+0x48d>
    daf5:	31 c9                	xor    %ecx,%ecx
    daf7:	8b 6f 5c             	mov    0x5c(%rdi),%ebp
    dafa:	4c 8b 7f 48          	mov    0x48(%rdi),%r15
    dafe:	8b 57 50             	mov    0x50(%rdi),%edx
    db01:	48 8d 0c ce          	lea    (%rsi,%rcx,8),%rcx
    db05:	48 89 4c 24 c0       	mov    %rcx,-0x40(%rsp)
    db0a:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    db0f:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
    db12:	49 8d 14 8f          	lea    (%r15,%rcx,4),%rdx
    db16:	48 89 54 24 d0       	mov    %rdx,-0x30(%rsp)
    db1b:	49 8d 0c 8f          	lea    (%r15,%rcx,4),%rcx
    db1f:	48 83 c1 04          	add    $0x4,%rcx
    db23:	48 89 4c 24 d8       	mov    %rcx,-0x28(%rsp)
    db28:	85 ed                	test   %ebp,%ebp
    db2a:	48 89 74 24 e8       	mov    %rsi,-0x18(%rsp)
    db2f:	0f 84 3d 01 00 00    	je     dc72 <lzma_mf_bt3_find+0x362>
    db35:	45 89 e0             	mov    %r12d,%r8d
    db38:	45 29 c8             	sub    %r9d,%r8d
    db3b:	45 39 d8             	cmp    %r11d,%r8d
    db3e:	0f 83 2e 01 00 00    	jae    dc72 <lzma_mf_bt3_find+0x362>
    db44:	89 d9                	mov    %ebx,%ecx
    db46:	48 89 4c 24 f0       	mov    %rcx,-0x10(%rsp)
    db4b:	44 8d 6b ff          	lea    -0x1(%rbx),%r13d
    db4f:	31 f6                	xor    %esi,%esi
    db51:	31 c9                	xor    %ecx,%ecx
    db53:	eb 34                	jmp    db89 <lzma_mf_bt3_find+0x279>
    db55:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    db5c:	00 00 00 00 
    db60:	48 8b 4c 24 d8       	mov    -0x28(%rsp),%rcx
    db65:	44 89 09             	mov    %r9d,(%rcx)
    db68:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
    db6d:	89 f9                	mov    %edi,%ecx
    db6f:	ff cd                	dec    %ebp
    db71:	0f 84 fb 00 00 00    	je     dc72 <lzma_mf_bt3_find+0x362>
    db77:	44 8b 0b             	mov    (%rbx),%r9d
    db7a:	45 89 e0             	mov    %r12d,%r8d
    db7d:	45 29 c8             	sub    %r9d,%r8d
    db80:	45 39 d8             	cmp    %r11d,%r8d
    db83:	0f 83 e9 00 00 00    	jae    dc72 <lzma_mf_bt3_find+0x362>
    db89:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
    db8e:	44 29 c2             	sub    %r8d,%edx
    db91:	bf 00 00 00 00       	mov    $0x0,%edi
    db96:	41 0f 42 fb          	cmovb  %r11d,%edi
    db9a:	8d 1c 3a             	lea    (%rdx,%rdi,1),%ebx
    db9d:	01 db                	add    %ebx,%ebx
    db9f:	44 89 c7             	mov    %r8d,%edi
    dba2:	48 89 c2             	mov    %rax,%rdx
    dba5:	48 29 fa             	sub    %rdi,%rdx
    dba8:	39 f1                	cmp    %esi,%ecx
    dbaa:	89 f7                	mov    %esi,%edi
    dbac:	0f 42 f9             	cmovb  %ecx,%edi
    dbaf:	49 8d 1c 9f          	lea    (%r15,%rbx,4),%rbx
    dbb3:	44 0f b6 34 3a       	movzbl (%rdx,%rdi,1),%r14d
    dbb8:	44 3a 34 38          	cmp    (%rax,%rdi,1),%r14b
    dbbc:	75 52                	jne    dc10 <lzma_mf_bt3_find+0x300>
    dbbe:	66 90                	xchg   %ax,%ax
    dbc0:	41 39 fd             	cmp    %edi,%r13d
    dbc3:	74 6b                	je     dc30 <lzma_mf_bt3_find+0x320>
    dbc5:	ff c7                	inc    %edi
    dbc7:	41 89 fe             	mov    %edi,%r14d
    dbca:	46 0f b6 24 32       	movzbl (%rdx,%r14,1),%r12d
    dbcf:	46 3a 24 30          	cmp    (%rax,%r14,1),%r12b
    dbd3:	74 eb                	je     dbc0 <lzma_mf_bt3_find+0x2b0>
    dbd5:	41 39 fa             	cmp    %edi,%r10d
    dbd8:	73 1b                	jae    dbf5 <lzma_mf_bt3_find+0x2e5>
    dbda:	4c 8b 54 24 c0       	mov    -0x40(%rsp),%r10
    dbdf:	41 89 3a             	mov    %edi,(%r10)
    dbe2:	41 ff c8             	dec    %r8d
    dbe5:	45 89 42 04          	mov    %r8d,0x4(%r10)
    dbe9:	49 83 c2 08          	add    $0x8,%r10
    dbed:	4c 89 54 24 c0       	mov    %r10,-0x40(%rsp)
    dbf2:	41 89 fa             	mov    %edi,%r10d
    dbf5:	44 8b 64 24 bc       	mov    -0x44(%rsp),%r12d
    dbfa:	42 0f b6 14 32       	movzbl (%rdx,%r14,1),%edx
    dbff:	42 3a 14 30          	cmp    (%rax,%r14,1),%dl
    dc03:	72 52                	jb     dc57 <lzma_mf_bt3_find+0x347>
    dc05:	e9 56 ff ff ff       	jmp    db60 <lzma_mf_bt3_find+0x250>
    dc0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dc10:	49 89 fe             	mov    %rdi,%r14
    dc13:	42 0f b6 14 32       	movzbl (%rdx,%r14,1),%edx
    dc18:	42 3a 14 30          	cmp    (%rax,%r14,1),%dl
    dc1c:	0f 83 3e ff ff ff    	jae    db60 <lzma_mf_bt3_find+0x250>
    dc22:	eb 33                	jmp    dc57 <lzma_mf_bt3_find+0x347>
    dc24:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    dc2b:	00 00 00 00 00 
    dc30:	48 8b 7c 24 c8       	mov    -0x38(%rsp),%rdi
    dc35:	41 39 fa             	cmp    %edi,%r10d
    dc38:	0f 82 a2 01 00 00    	jb     dde0 <lzma_mf_bt3_find+0x4d0>
    dc3e:	4c 8b 74 24 f0       	mov    -0x10(%rsp),%r14
    dc43:	44 8b 64 24 bc       	mov    -0x44(%rsp),%r12d
    dc48:	42 0f b6 14 32       	movzbl (%rdx,%r14,1),%edx
    dc4d:	42 3a 14 30          	cmp    (%rax,%r14,1),%dl
    dc51:	0f 83 09 ff ff ff    	jae    db60 <lzma_mf_bt3_find+0x250>
    dc57:	48 8b 54 24 d0       	mov    -0x30(%rsp),%rdx
    dc5c:	44 89 0a             	mov    %r9d,(%rdx)
    dc5f:	48 83 c3 04          	add    $0x4,%rbx
    dc63:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
    dc68:	89 fe                	mov    %edi,%esi
    dc6a:	ff cd                	dec    %ebp
    dc6c:	0f 85 05 ff ff ff    	jne    db77 <lzma_mf_bt3_find+0x267>
    dc72:	48 8b 44 24 d8       	mov    -0x28(%rsp),%rax
    dc77:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    dc7d:	48 8b 44 24 d0       	mov    -0x30(%rsp),%rax
    dc82:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    dc88:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    dc8d:	48 2b 44 24 e8       	sub    -0x18(%rsp),%rax
    dc92:	48 c1 e8 03          	shr    $0x3,%rax
    dc96:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
    dc9b:	41 8b 49 50          	mov    0x50(%r9),%ecx
    dc9f:	ff c1                	inc    %ecx
    dca1:	45 8b 51 54          	mov    0x54(%r9),%r10d
    dca5:	31 d2                	xor    %edx,%edx
    dca7:	44 39 d1             	cmp    %r10d,%ecx
    dcaa:	0f 45 d1             	cmovne %ecx,%edx
    dcad:	41 89 51 50          	mov    %edx,0x50(%r9)
    dcb1:	41 8b 49 14          	mov    0x14(%r9),%ecx
    dcb5:	41 8b 51 18          	mov    0x18(%r9),%edx
    dcb9:	8d 72 01             	lea    0x1(%rdx),%esi
    dcbc:	41 89 71 18          	mov    %esi,0x18(%r9)
    dcc0:	01 ca                	add    %ecx,%edx
    dcc2:	ff c2                	inc    %edx
    dcc4:	83 fa ff             	cmp    $0xffffffff,%edx
    dcc7:	0f 85 08 01 00 00    	jne    ddd5 <lzma_mf_bt3_find+0x4c5>
    dccd:	41 f7 d2             	not    %r10d
    dcd0:	41 8b 79 70          	mov    0x70(%r9),%edi
    dcd4:	41 03 79 6c          	add    0x6c(%r9),%edi
    dcd8:	0f 84 ad 00 00 00    	je     dd8b <lzma_mf_bt3_find+0x47b>
    dcde:	49 8b 49 40          	mov    0x40(%r9),%rcx
    dce2:	89 fa                	mov    %edi,%edx
    dce4:	31 f6                	xor    %esi,%esi
    dce6:	83 ff 08             	cmp    $0x8,%edi
    dce9:	73 07                	jae    dcf2 <lzma_mf_bt3_find+0x3e2>
    dceb:	31 ff                	xor    %edi,%edi
    dced:	e9 7e 00 00 00       	jmp    dd70 <lzma_mf_bt3_find+0x460>
    dcf2:	89 d7                	mov    %edx,%edi
    dcf4:	83 e7 f8             	and    $0xfffffff8,%edi
    dcf7:	66 41 0f 6e c2       	movd   %r10d,%xmm0
    dcfc:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    dd01:	45 31 c0             	xor    %r8d,%r8d
    dd04:	66 0f 6f 0d a4 a3 01 	movdqa 0x1a3a4(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    dd0b:	00 
    dd0c:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    dd10:	66 0f ef d1          	pxor   %xmm1,%xmm2
    dd14:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    dd1b:	00 00 00 00 00 
    dd20:	f3 42 0f 6f 1c 81    	movdqu (%rcx,%r8,4),%xmm3
    dd26:	f3 42 0f 6f 64 81 10 	movdqu 0x10(%rcx,%r8,4),%xmm4
    dd2d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    dd31:	66 0f ef e9          	pxor   %xmm1,%xmm5
    dd35:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    dd39:	66 0f fa d8          	psubd  %xmm0,%xmm3
    dd3d:	66 0f db dd          	pand   %xmm5,%xmm3
    dd41:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    dd45:	66 0f ef e9          	pxor   %xmm1,%xmm5
    dd49:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    dd4d:	66 0f fa e0          	psubd  %xmm0,%xmm4
    dd51:	66 0f db e5          	pand   %xmm5,%xmm4
    dd55:	f3 42 0f 7f 1c 81    	movdqu %xmm3,(%rcx,%r8,4)
    dd5b:	f3 42 0f 7f 64 81 10 	movdqu %xmm4,0x10(%rcx,%r8,4)
    dd62:	49 83 c0 08          	add    $0x8,%r8
    dd66:	4c 39 c7             	cmp    %r8,%rdi
    dd69:	75 b5                	jne    dd20 <lzma_mf_bt3_find+0x410>
    dd6b:	48 39 d7             	cmp    %rdx,%rdi
    dd6e:	74 17                	je     dd87 <lzma_mf_bt3_find+0x477>
    dd70:	44 8b 04 b9          	mov    (%rcx,%rdi,4),%r8d
    dd74:	45 29 d0             	sub    %r10d,%r8d
    dd77:	44 0f 42 c6          	cmovb  %esi,%r8d
    dd7b:	44 89 04 b9          	mov    %r8d,(%rcx,%rdi,4)
    dd7f:	48 ff c7             	inc    %rdi
    dd82:	48 39 fa             	cmp    %rdi,%rdx
    dd85:	75 e9                	jne    dd70 <lzma_mf_bt3_find+0x460>
    dd87:	41 8b 49 14          	mov    0x14(%r9),%ecx
    dd8b:	44 29 d1             	sub    %r10d,%ecx
    dd8e:	41 89 49 14          	mov    %ecx,0x14(%r9)
    dd92:	eb 41                	jmp    ddd5 <lzma_mf_bt3_find+0x4c5>
    dd94:	8b 02                	mov    (%rdx),%eax
    dd96:	89 01                	mov    %eax,(%rcx)
    dd98:	8b 42 04             	mov    0x4(%rdx),%eax
    dd9b:	89 06                	mov    %eax,(%rsi)
    dd9d:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
    dda2:	41 8b 49 50          	mov    0x50(%r9),%ecx
    dda6:	ff c1                	inc    %ecx
    dda8:	45 8b 51 54          	mov    0x54(%r9),%r10d
    ddac:	31 d2                	xor    %edx,%edx
    ddae:	44 39 d1             	cmp    %r10d,%ecx
    ddb1:	0f 45 d1             	cmovne %ecx,%edx
    ddb4:	41 89 51 50          	mov    %edx,0x50(%r9)
    ddb8:	41 8b 49 14          	mov    0x14(%r9),%ecx
    ddbc:	41 8b 51 18          	mov    0x18(%r9),%edx
    ddc0:	8d 72 01             	lea    0x1(%rdx),%esi
    ddc3:	41 89 71 18          	mov    %esi,0x18(%r9)
    ddc7:	01 ca                	add    %ecx,%edx
    ddc9:	ff c2                	inc    %edx
    ddcb:	b8 01 00 00 00       	mov    $0x1,%eax
    ddd0:	83 fa ff             	cmp    $0xffffffff,%edx
    ddd3:	74 35                	je     de0a <lzma_mf_bt3_find+0x4fa>
    ddd5:	5b                   	pop    %rbx
    ddd6:	41 5c                	pop    %r12
    ddd8:	41 5d                	pop    %r13
    ddda:	41 5e                	pop    %r14
    dddc:	41 5f                	pop    %r15
    ddde:	5d                   	pop    %rbp
    dddf:	c3                   	ret    
    dde0:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    dde5:	89 38                	mov    %edi,(%rax)
    dde7:	41 ff c8             	dec    %r8d
    ddea:	44 89 40 04          	mov    %r8d,0x4(%rax)
    ddee:	48 83 c0 08          	add    $0x8,%rax
    ddf2:	8b 0b                	mov    (%rbx),%ecx
    ddf4:	48 8b 54 24 d0       	mov    -0x30(%rsp),%rdx
    ddf9:	89 0a                	mov    %ecx,(%rdx)
    ddfb:	8b 4b 04             	mov    0x4(%rbx),%ecx
    ddfe:	48 8b 54 24 d8       	mov    -0x28(%rsp),%rdx
    de03:	89 0a                	mov    %ecx,(%rdx)
    de05:	e9 83 fe ff ff       	jmp    dc8d <lzma_mf_bt3_find+0x37d>
    de0a:	41 f7 d2             	not    %r10d
    de0d:	41 8b 79 70          	mov    0x70(%r9),%edi
    de11:	41 03 79 6c          	add    0x6c(%r9),%edi
    de15:	0f 84 70 ff ff ff    	je     dd8b <lzma_mf_bt3_find+0x47b>
    de1b:	49 8b 49 40          	mov    0x40(%r9),%rcx
    de1f:	89 fa                	mov    %edi,%edx
    de21:	31 f6                	xor    %esi,%esi
    de23:	83 ff 08             	cmp    $0x8,%edi
    de26:	73 1d                	jae    de45 <lzma_mf_bt3_find+0x535>
    de28:	31 ff                	xor    %edi,%edi
    de2a:	e9 a1 00 00 00       	jmp    ded0 <lzma_mf_bt3_find+0x5c0>
    de2f:	44 89 16             	mov    %r10d,(%rsi)
    de32:	ff c9                	dec    %ecx
    de34:	89 4e 04             	mov    %ecx,0x4(%rsi)
    de37:	44 8b 5f 54          	mov    0x54(%rdi),%r11d
    de3b:	b9 01 00 00 00       	mov    $0x1,%ecx
    de40:	e9 b2 fc ff ff       	jmp    daf7 <lzma_mf_bt3_find+0x1e7>
    de45:	89 d7                	mov    %edx,%edi
    de47:	83 e7 f8             	and    $0xfffffff8,%edi
    de4a:	66 41 0f 6e c2       	movd   %r10d,%xmm0
    de4f:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    de54:	45 31 c0             	xor    %r8d,%r8d
    de57:	66 0f 6f 0d 51 a2 01 	movdqa 0x1a251(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    de5e:	00 
    de5f:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    de63:	66 0f ef d1          	pxor   %xmm1,%xmm2
    de67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    de6e:	00 00 
    de70:	f3 42 0f 6f 1c 81    	movdqu (%rcx,%r8,4),%xmm3
    de76:	f3 42 0f 6f 64 81 10 	movdqu 0x10(%rcx,%r8,4),%xmm4
    de7d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    de81:	66 0f ef e9          	pxor   %xmm1,%xmm5
    de85:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    de89:	66 0f fa d8          	psubd  %xmm0,%xmm3
    de8d:	66 0f db dd          	pand   %xmm5,%xmm3
    de91:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    de95:	66 0f ef e9          	pxor   %xmm1,%xmm5
    de99:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    de9d:	66 0f fa e0          	psubd  %xmm0,%xmm4
    dea1:	66 0f db e5          	pand   %xmm5,%xmm4
    dea5:	f3 42 0f 7f 1c 81    	movdqu %xmm3,(%rcx,%r8,4)
    deab:	f3 42 0f 7f 64 81 10 	movdqu %xmm4,0x10(%rcx,%r8,4)
    deb2:	49 83 c0 08          	add    $0x8,%r8
    deb6:	4c 39 c7             	cmp    %r8,%rdi
    deb9:	75 b5                	jne    de70 <lzma_mf_bt3_find+0x560>
    debb:	48 39 d7             	cmp    %rdx,%rdi
    debe:	0f 84 c3 fe ff ff    	je     dd87 <lzma_mf_bt3_find+0x477>
    dec4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    decb:	00 00 00 00 00 
    ded0:	44 8b 04 b9          	mov    (%rcx,%rdi,4),%r8d
    ded4:	45 29 d0             	sub    %r10d,%r8d
    ded7:	44 0f 42 c6          	cmovb  %esi,%r8d
    dedb:	44 89 04 b9          	mov    %r8d,(%rcx,%rdi,4)
    dedf:	48 ff c7             	inc    %rdi
    dee2:	48 39 fa             	cmp    %rdi,%rdx
    dee5:	75 e9                	jne    ded0 <lzma_mf_bt3_find+0x5c0>
    dee7:	e9 9b fe ff ff       	jmp    dd87 <lzma_mf_bt3_find+0x477>
    deec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000def0 <lzma_mf_bt3_skip>:
    def0:	55                   	push   %rbp
    def1:	41 57                	push   %r15
    def3:	41 56                	push   %r14
    def5:	41 55                	push   %r13
    def7:	41 54                	push   %r12
    def9:	53                   	push   %rbx
    defa:	66 0f 6f 05 ae a1 01 	movdqa 0x1a1ae(%rip),%xmm0        # 280b0 <SHA256_K+0x150>
    df01:	00 
    df02:	eb 1c                	jmp    df20 <lzma_mf_bt3_skip+0x30>
    df04:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    df0b:	00 00 00 00 00 
    df10:	ff c0                	inc    %eax
    df12:	89 47 18             	mov    %eax,0x18(%rdi)
    df15:	ff 47 28             	incl   0x28(%rdi)
    df18:	ff ce                	dec    %esi
    df1a:	0f 84 94 02 00 00    	je     e1b4 <lzma_mf_bt3_skip+0x2c4>
    df20:	8b 47 18             	mov    0x18(%rdi),%eax
    df23:	8b 4f 24             	mov    0x24(%rdi),%ecx
    df26:	29 c1                	sub    %eax,%ecx
    df28:	8b 57 60             	mov    0x60(%rdi),%edx
    df2b:	39 ca                	cmp    %ecx,%edx
    df2d:	76 11                	jbe    df40 <lzma_mf_bt3_skip+0x50>
    df2f:	83 f9 03             	cmp    $0x3,%ecx
    df32:	72 dc                	jb     df10 <lzma_mf_bt3_skip+0x20>
    df34:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    df38:	89 ca                	mov    %ecx,%edx
    df3a:	74 d4                	je     df10 <lzma_mf_bt3_skip+0x20>
    df3c:	0f 1f 40 00          	nopl   0x0(%rax)
    df40:	89 74 24 f4          	mov    %esi,-0xc(%rsp)
    df44:	4c 8b 1f             	mov    (%rdi),%r11
    df47:	48 8b 4f 40          	mov    0x40(%rdi),%rcx
    df4b:	44 8b 4f 14          	mov    0x14(%rdi),%r9d
    df4f:	41 01 c1             	add    %eax,%r9d
    df52:	41 0f b6 34 03       	movzbl (%r11,%rax,1),%esi
    df57:	45 0f b6 44 03 01    	movzbl 0x1(%r11,%rax,1),%r8d
    df5d:	4c 8d 15 dc 5f 01 00 	lea    0x15fdc(%rip),%r10        # 23f40 <lzma_crc32_table>
    df64:	45 33 04 b2          	xor    (%r10,%rsi,4),%r8d
    df68:	41 0f b6 74 03 02    	movzbl 0x2(%r11,%rax,1),%esi
    df6e:	c1 e6 08             	shl    $0x8,%esi
    df71:	44 31 c6             	xor    %r8d,%esi
    df74:	41 81 e0 ff 03 00 00 	and    $0x3ff,%r8d
    df7b:	23 77 58             	and    0x58(%rdi),%esi
    df7e:	81 c6 00 04 00 00    	add    $0x400,%esi
    df84:	44 8b 24 b1          	mov    (%rcx,%rsi,4),%r12d
    df88:	46 89 0c 81          	mov    %r9d,(%rcx,%r8,4)
    df8c:	48 8b 4f 40          	mov    0x40(%rdi),%rcx
    df90:	44 89 0c b1          	mov    %r9d,(%rcx,%rsi,4)
    df94:	8b 5f 5c             	mov    0x5c(%rdi),%ebx
    df97:	48 8b 77 48          	mov    0x48(%rdi),%rsi
    df9b:	8b 4f 50             	mov    0x50(%rdi),%ecx
    df9e:	48 89 4c 24 f8       	mov    %rcx,-0x8(%rsp)
    dfa3:	01 c9                	add    %ecx,%ecx
    dfa5:	4c 8d 04 8e          	lea    (%rsi,%rcx,4),%r8
    dfa9:	4c 89 44 24 e8       	mov    %r8,-0x18(%rsp)
    dfae:	48 8d 0c 8e          	lea    (%rsi,%rcx,4),%rcx
    dfb2:	48 83 c1 04          	add    $0x4,%rcx
    dfb6:	48 89 4c 24 e0       	mov    %rcx,-0x20(%rsp)
    dfbb:	85 db                	test   %ebx,%ebx
    dfbd:	0f 84 cd 00 00 00    	je     e090 <lzma_mf_bt3_skip+0x1a0>
    dfc3:	8b 6f 54             	mov    0x54(%rdi),%ebp
    dfc6:	45 89 ca             	mov    %r9d,%r10d
    dfc9:	45 29 e2             	sub    %r12d,%r10d
    dfcc:	41 39 ea             	cmp    %ebp,%r10d
    dfcf:	0f 83 bb 00 00 00    	jae    e090 <lzma_mf_bt3_skip+0x1a0>
    dfd5:	49 01 c3             	add    %rax,%r11
    dfd8:	ff ca                	dec    %edx
    dfda:	45 31 ed             	xor    %r13d,%r13d
    dfdd:	31 c0                	xor    %eax,%eax
    dfdf:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
    dfe4:	44 29 d1             	sub    %r10d,%ecx
    dfe7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    dfed:	44 0f 42 c5          	cmovb  %ebp,%r8d
    dff1:	46 8d 34 01          	lea    (%rcx,%r8,1),%r14d
    dff5:	45 01 f6             	add    %r14d,%r14d
    dff8:	44 89 d1             	mov    %r10d,%ecx
    dffb:	4d 89 d8             	mov    %r11,%r8
    dffe:	49 29 c8             	sub    %rcx,%r8
    e001:	44 39 e8             	cmp    %r13d,%eax
    e004:	44 89 e9             	mov    %r13d,%ecx
    e007:	0f 42 c8             	cmovb  %eax,%ecx
    e00a:	4e 8d 14 b6          	lea    (%rsi,%r14,4),%r10
    e00e:	45 0f b6 3c 08       	movzbl (%r8,%rcx,1),%r15d
    e013:	45 0f b6 34 0b       	movzbl (%r11,%rcx,1),%r14d
    e018:	45 38 f7             	cmp    %r14b,%r15b
    e01b:	75 1f                	jne    e03c <lzma_mf_bt3_skip+0x14c>
    e01d:	0f 1f 00             	nopl   (%rax)
    e020:	39 ca                	cmp    %ecx,%edx
    e022:	0f 84 88 00 00 00    	je     e0b0 <lzma_mf_bt3_skip+0x1c0>
    e028:	ff c1                	inc    %ecx
    e02a:	41 89 ce             	mov    %ecx,%r14d
    e02d:	47 0f b6 3c 30       	movzbl (%r8,%r14,1),%r15d
    e032:	47 0f b6 34 33       	movzbl (%r11,%r14,1),%r14d
    e037:	45 38 f7             	cmp    %r14b,%r15b
    e03a:	74 e4                	je     e020 <lzma_mf_bt3_skip+0x130>
    e03c:	45 38 f7             	cmp    %r14b,%r15b
    e03f:	73 1f                	jae    e060 <lzma_mf_bt3_skip+0x170>
    e041:	4c 8b 44 24 e8       	mov    -0x18(%rsp),%r8
    e046:	45 89 20             	mov    %r12d,(%r8)
    e049:	49 83 c2 04          	add    $0x4,%r10
    e04d:	4c 89 54 24 e8       	mov    %r10,-0x18(%rsp)
    e052:	41 89 cd             	mov    %ecx,%r13d
    e055:	ff cb                	dec    %ebx
    e057:	75 1a                	jne    e073 <lzma_mf_bt3_skip+0x183>
    e059:	eb 35                	jmp    e090 <lzma_mf_bt3_skip+0x1a0>
    e05b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e060:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    e065:	44 89 20             	mov    %r12d,(%rax)
    e068:	89 c8                	mov    %ecx,%eax
    e06a:	4c 89 54 24 e0       	mov    %r10,-0x20(%rsp)
    e06f:	ff cb                	dec    %ebx
    e071:	74 1d                	je     e090 <lzma_mf_bt3_skip+0x1a0>
    e073:	45 8b 22             	mov    (%r10),%r12d
    e076:	45 89 ca             	mov    %r9d,%r10d
    e079:	45 29 e2             	sub    %r12d,%r10d
    e07c:	41 39 ea             	cmp    %ebp,%r10d
    e07f:	0f 82 5a ff ff ff    	jb     dfdf <lzma_mf_bt3_skip+0xef>
    e085:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    e08c:	00 00 00 00 
    e090:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    e095:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e09b:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    e0a0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e0a6:	eb 1d                	jmp    e0c5 <lzma_mf_bt3_skip+0x1d5>
    e0a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e0af:	00 
    e0b0:	41 8b 02             	mov    (%r10),%eax
    e0b3:	48 8b 4c 24 e8       	mov    -0x18(%rsp),%rcx
    e0b8:	89 01                	mov    %eax,(%rcx)
    e0ba:	41 8b 42 04          	mov    0x4(%r10),%eax
    e0be:	48 8b 4c 24 e0       	mov    -0x20(%rsp),%rcx
    e0c3:	89 01                	mov    %eax,(%rcx)
    e0c5:	8b 4f 50             	mov    0x50(%rdi),%ecx
    e0c8:	ff c1                	inc    %ecx
    e0ca:	8b 47 54             	mov    0x54(%rdi),%eax
    e0cd:	39 c1                	cmp    %eax,%ecx
    e0cf:	41 ba 00 00 00 00    	mov    $0x0,%r10d
    e0d5:	41 0f 44 ca          	cmove  %r10d,%ecx
    e0d9:	89 4f 50             	mov    %ecx,0x50(%rdi)
    e0dc:	8b 4f 14             	mov    0x14(%rdi),%ecx
    e0df:	8b 57 18             	mov    0x18(%rdi),%edx
    e0e2:	8d 72 01             	lea    0x1(%rdx),%esi
    e0e5:	89 77 18             	mov    %esi,0x18(%rdi)
    e0e8:	01 ca                	add    %ecx,%edx
    e0ea:	ff c2                	inc    %edx
    e0ec:	83 fa ff             	cmp    $0xffffffff,%edx
    e0ef:	8b 74 24 f4          	mov    -0xc(%rsp),%esi
    e0f3:	0f 85 1f fe ff ff    	jne    df18 <lzma_mf_bt3_skip+0x28>
    e0f9:	f7 d0                	not    %eax
    e0fb:	44 8b 47 70          	mov    0x70(%rdi),%r8d
    e0ff:	44 03 47 6c          	add    0x6c(%rdi),%r8d
    e103:	0f 84 a1 00 00 00    	je     e1aa <lzma_mf_bt3_skip+0x2ba>
    e109:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    e10d:	44 89 c1             	mov    %r8d,%ecx
    e110:	41 83 f8 08          	cmp    $0x8,%r8d
    e114:	73 05                	jae    e11b <lzma_mf_bt3_skip+0x22b>
    e116:	45 31 c0             	xor    %r8d,%r8d
    e119:	eb 75                	jmp    e190 <lzma_mf_bt3_skip+0x2a0>
    e11b:	41 89 c8             	mov    %ecx,%r8d
    e11e:	41 83 e0 f8          	and    $0xfffffff8,%r8d
    e122:	66 0f 6e c8          	movd   %eax,%xmm1
    e126:	66 0f 70 c9 00       	pshufd $0x0,%xmm1,%xmm1
    e12b:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    e12f:	66 0f ef d0          	pxor   %xmm0,%xmm2
    e133:	45 31 c9             	xor    %r9d,%r9d
    e136:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e13d:	00 00 00 
    e140:	f3 42 0f 6f 1c 8a    	movdqu (%rdx,%r9,4),%xmm3
    e146:	f3 42 0f 6f 64 8a 10 	movdqu 0x10(%rdx,%r9,4),%xmm4
    e14d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    e151:	66 0f ef e8          	pxor   %xmm0,%xmm5
    e155:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e159:	66 0f fa d9          	psubd  %xmm1,%xmm3
    e15d:	66 0f db dd          	pand   %xmm5,%xmm3
    e161:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    e165:	66 0f ef e8          	pxor   %xmm0,%xmm5
    e169:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e16d:	66 0f fa e1          	psubd  %xmm1,%xmm4
    e171:	66 0f db e5          	pand   %xmm5,%xmm4
    e175:	f3 42 0f 7f 1c 8a    	movdqu %xmm3,(%rdx,%r9,4)
    e17b:	f3 42 0f 7f 64 8a 10 	movdqu %xmm4,0x10(%rdx,%r9,4)
    e182:	49 83 c1 08          	add    $0x8,%r9
    e186:	4d 39 c8             	cmp    %r9,%r8
    e189:	75 b5                	jne    e140 <lzma_mf_bt3_skip+0x250>
    e18b:	49 39 c8             	cmp    %rcx,%r8
    e18e:	74 17                	je     e1a7 <lzma_mf_bt3_skip+0x2b7>
    e190:	46 8b 0c 82          	mov    (%rdx,%r8,4),%r9d
    e194:	41 29 c1             	sub    %eax,%r9d
    e197:	45 0f 42 ca          	cmovb  %r10d,%r9d
    e19b:	46 89 0c 82          	mov    %r9d,(%rdx,%r8,4)
    e19f:	49 ff c0             	inc    %r8
    e1a2:	4c 39 c1             	cmp    %r8,%rcx
    e1a5:	75 e9                	jne    e190 <lzma_mf_bt3_skip+0x2a0>
    e1a7:	8b 4f 14             	mov    0x14(%rdi),%ecx
    e1aa:	29 c1                	sub    %eax,%ecx
    e1ac:	89 4f 14             	mov    %ecx,0x14(%rdi)
    e1af:	e9 64 fd ff ff       	jmp    df18 <lzma_mf_bt3_skip+0x28>
    e1b4:	5b                   	pop    %rbx
    e1b5:	41 5c                	pop    %r12
    e1b7:	41 5d                	pop    %r13
    e1b9:	41 5e                	pop    %r14
    e1bb:	41 5f                	pop    %r15
    e1bd:	5d                   	pop    %rbp
    e1be:	c3                   	ret    
    e1bf:	90                   	nop

000000000000e1c0 <lzma_mf_bt4_find>:
    e1c0:	55                   	push   %rbp
    e1c1:	41 57                	push   %r15
    e1c3:	41 56                	push   %r14
    e1c5:	41 55                	push   %r13
    e1c7:	41 54                	push   %r12
    e1c9:	53                   	push   %rbx
    e1ca:	8b 47 18             	mov    0x18(%rdi),%eax
    e1cd:	8b 4f 24             	mov    0x24(%rdi),%ecx
    e1d0:	29 c1                	sub    %eax,%ecx
    e1d2:	44 8b 77 60          	mov    0x60(%rdi),%r14d
    e1d6:	41 39 ce             	cmp    %ecx,%r14d
    e1d9:	76 1d                	jbe    e1f8 <lzma_mf_bt4_find+0x38>
    e1db:	83 f9 04             	cmp    $0x4,%ecx
    e1de:	72 09                	jb     e1e9 <lzma_mf_bt4_find+0x29>
    e1e0:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    e1e4:	41 89 ce             	mov    %ecx,%r14d
    e1e7:	75 0f                	jne    e1f8 <lzma_mf_bt4_find+0x38>
    e1e9:	ff c0                	inc    %eax
    e1eb:	89 47 18             	mov    %eax,0x18(%rdi)
    e1ee:	ff 47 28             	incl   0x28(%rdi)
    e1f1:	31 c0                	xor    %eax,%eax
    e1f3:	e9 1a 06 00 00       	jmp    e812 <lzma_mf_bt4_find+0x652>
    e1f8:	48 8b 0f             	mov    (%rdi),%rcx
    e1fb:	4c 8b 67 40          	mov    0x40(%rdi),%r12
    e1ff:	4c 8d 3c 01          	lea    (%rcx,%rax,1),%r15
    e203:	8b 5f 14             	mov    0x14(%rdi),%ebx
    e206:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    e20a:	4c 8d 0d 2f 5d 01 00 	lea    0x15d2f(%rip),%r9        # 23f40 <lzma_crc32_table>
    e211:	44 0f b6 44 01 01    	movzbl 0x1(%rcx,%rax,1),%r8d
    e217:	45 33 04 91          	xor    (%r9,%rdx,4),%r8d
    e21b:	01 c3                	add    %eax,%ebx
    e21d:	0f b6 54 01 02       	movzbl 0x2(%rcx,%rax,1),%edx
    e222:	c1 e2 08             	shl    $0x8,%edx
    e225:	44 31 c2             	xor    %r8d,%edx
    e228:	41 81 e0 ff 03 00 00 	and    $0x3ff,%r8d
    e22f:	44 0f b7 d2          	movzwl %dx,%r10d
    e233:	0f b6 44 01 03       	movzbl 0x3(%rcx,%rax,1),%eax
    e238:	45 8b 1c 81          	mov    (%r9,%rax,4),%r11d
    e23c:	41 c1 e3 05          	shl    $0x5,%r11d
    e240:	41 31 d3             	xor    %edx,%r11d
    e243:	44 23 5f 58          	and    0x58(%rdi),%r11d
    e247:	43 8b 14 84          	mov    (%r12,%r8,4),%edx
    e24b:	89 d8                	mov    %ebx,%eax
    e24d:	29 d0                	sub    %edx,%eax
    e24f:	43 8b 8c 94 00 10 00 	mov    0x1000(%r12,%r10,4),%ecx
    e256:	00 
    e257:	41 81 c3 00 04 01 00 	add    $0x10400,%r11d
    e25e:	47 8b 0c 9c          	mov    (%r12,%r11,4),%r9d
    e262:	43 89 1c 84          	mov    %ebx,(%r12,%r8,4)
    e266:	4c 8b 47 40          	mov    0x40(%rdi),%r8
    e26a:	43 89 9c 90 00 10 00 	mov    %ebx,0x1000(%r8,%r10,4)
    e271:	00 
    e272:	4c 8b 47 40          	mov    0x40(%rdi),%r8
    e276:	89 5c 24 bc          	mov    %ebx,-0x44(%rsp)
    e27a:	43 89 1c 98          	mov    %ebx,(%r8,%r11,4)
    e27e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    e284:	31 db                	xor    %ebx,%ebx
    e286:	41 b0 01             	mov    $0x1,%r8b
    e289:	3b 47 54             	cmp    0x54(%rdi),%eax
    e28c:	73 2e                	jae    e2bc <lzma_mf_bt4_find+0xfc>
    e28e:	41 89 c2             	mov    %eax,%r10d
    e291:	4d 89 fb             	mov    %r15,%r11
    e294:	4d 29 d3             	sub    %r10,%r11
    e297:	45 0f b6 13          	movzbl (%r11),%r10d
    e29b:	45 3a 17             	cmp    (%r15),%r10b
    e29e:	75 1c                	jne    e2bc <lzma_mf_bt4_find+0xfc>
    e2a0:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
    e2a6:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    e2aa:	44 89 46 04          	mov    %r8d,0x4(%rsi)
    e2ae:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    e2b4:	bb 01 00 00 00       	mov    $0x1,%ebx
    e2b9:	45 31 c0             	xor    %r8d,%r8d
    e2bc:	39 d1                	cmp    %edx,%ecx
    e2be:	4c 89 74 24 e8       	mov    %r14,-0x18(%rsp)
    e2c3:	48 89 7c 24 e0       	mov    %rdi,-0x20(%rsp)
    e2c8:	74 34                	je     e2fe <lzma_mf_bt4_find+0x13e>
    e2ca:	8b 54 24 bc          	mov    -0x44(%rsp),%edx
    e2ce:	29 ca                	sub    %ecx,%edx
    e2d0:	3b 57 54             	cmp    0x54(%rdi),%edx
    e2d3:	73 29                	jae    e2fe <lzma_mf_bt4_find+0x13e>
    e2d5:	89 d1                	mov    %edx,%ecx
    e2d7:	4d 89 fa             	mov    %r15,%r10
    e2da:	49 29 ca             	sub    %rcx,%r10
    e2dd:	41 0f b6 0a          	movzbl (%r10),%ecx
    e2e1:	41 3a 0f             	cmp    (%r15),%cl
    e2e4:	75 18                	jne    e2fe <lzma_mf_bt4_find+0x13e>
    e2e6:	8d 42 ff             	lea    -0x1(%rdx),%eax
    e2e9:	89 d9                	mov    %ebx,%ecx
    e2eb:	ff c3                	inc    %ebx
    e2ed:	89 44 ce 04          	mov    %eax,0x4(%rsi,%rcx,8)
    e2f1:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    e2f7:	45 39 f4             	cmp    %r14d,%r12d
    e2fa:	75 1a                	jne    e316 <lzma_mf_bt4_find+0x156>
    e2fc:	eb 3f                	jmp    e33d <lzma_mf_bt4_find+0x17d>
    e2fe:	bb 01 00 00 00       	mov    $0x1,%ebx
    e303:	45 84 c0             	test   %r8b,%r8b
    e306:	74 07                	je     e30f <lzma_mf_bt4_find+0x14f>
    e308:	31 c0                	xor    %eax,%eax
    e30a:	e9 94 01 00 00       	jmp    e4a3 <lzma_mf_bt4_find+0x2e3>
    e30f:	89 c2                	mov    %eax,%edx
    e311:	45 39 f4             	cmp    %r14d,%r12d
    e314:	74 27                	je     e33d <lzma_mf_bt4_find+0x17d>
    e316:	89 d0                	mov    %edx,%eax
    e318:	48 f7 d8             	neg    %rax
    e31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e320:	44 89 e1             	mov    %r12d,%ecx
    e323:	49 8d 14 0f          	lea    (%r15,%rcx,1),%rdx
    e327:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
    e32b:	41 3a 14 0f          	cmp    (%r15,%rcx,1),%dl
    e32f:	0f 85 65 01 00 00    	jne    e49a <lzma_mf_bt4_find+0x2da>
    e335:	41 ff c4             	inc    %r12d
    e338:	45 39 e6             	cmp    %r12d,%r14d
    e33b:	75 e3                	jne    e320 <lzma_mf_bt4_find+0x160>
    e33d:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
    e342:	8d 43 ff             	lea    -0x1(%rbx),%eax
    e345:	44 89 34 c6          	mov    %r14d,(%rsi,%rax,8)
    e349:	44 8b 47 5c          	mov    0x5c(%rdi),%r8d
    e34d:	4c 8b 5f 48          	mov    0x48(%rdi),%r11
    e351:	8b 5f 50             	mov    0x50(%rdi),%ebx
    e354:	8d 04 1b             	lea    (%rbx,%rbx,1),%eax
    e357:	49 8d 0c 83          	lea    (%r11,%rax,4),%rcx
    e35b:	48 89 4c 24 c0       	mov    %rcx,-0x40(%rsp)
    e360:	4d 8d 14 83          	lea    (%r11,%rax,4),%r10
    e364:	49 83 c2 04          	add    $0x4,%r10
    e368:	45 85 c0             	test   %r8d,%r8d
    e36b:	0f 84 a1 00 00 00    	je     e412 <lzma_mf_bt4_find+0x252>
    e371:	8b 6f 54             	mov    0x54(%rdi),%ebp
    e374:	8b 44 24 bc          	mov    -0x44(%rsp),%eax
    e378:	44 29 c8             	sub    %r9d,%eax
    e37b:	39 e8                	cmp    %ebp,%eax
    e37d:	0f 83 8f 00 00 00    	jae    e412 <lzma_mf_bt4_find+0x252>
    e383:	41 ff ce             	dec    %r14d
    e386:	31 f6                	xor    %esi,%esi
    e388:	31 ff                	xor    %edi,%edi
    e38a:	89 d9                	mov    %ebx,%ecx
    e38c:	29 c1                	sub    %eax,%ecx
    e38e:	ba 00 00 00 00       	mov    $0x0,%edx
    e393:	0f 42 d5             	cmovb  %ebp,%edx
    e396:	44 8d 24 11          	lea    (%rcx,%rdx,1),%r12d
    e39a:	45 01 e4             	add    %r12d,%r12d
    e39d:	89 c0                	mov    %eax,%eax
    e39f:	4c 89 fa             	mov    %r15,%rdx
    e3a2:	48 29 c2             	sub    %rax,%rdx
    e3a5:	39 f7                	cmp    %esi,%edi
    e3a7:	89 f1                	mov    %esi,%ecx
    e3a9:	0f 42 cf             	cmovb  %edi,%ecx
    e3ac:	4b 8d 04 a3          	lea    (%r11,%r12,4),%rax
    e3b0:	44 0f b6 24 0a       	movzbl (%rdx,%rcx,1),%r12d
    e3b5:	45 0f b6 2c 0f       	movzbl (%r15,%rcx,1),%r13d
    e3ba:	45 38 ec             	cmp    %r13b,%r12b
    e3bd:	75 1a                	jne    e3d9 <lzma_mf_bt4_find+0x219>
    e3bf:	90                   	nop
    e3c0:	41 39 ce             	cmp    %ecx,%r14d
    e3c3:	74 61                	je     e426 <lzma_mf_bt4_find+0x266>
    e3c5:	ff c1                	inc    %ecx
    e3c7:	41 89 cd             	mov    %ecx,%r13d
    e3ca:	46 0f b6 24 2a       	movzbl (%rdx,%r13,1),%r12d
    e3cf:	47 0f b6 2c 2f       	movzbl (%r15,%r13,1),%r13d
    e3d4:	45 38 ec             	cmp    %r13b,%r12b
    e3d7:	74 e7                	je     e3c0 <lzma_mf_bt4_find+0x200>
    e3d9:	45 38 ec             	cmp    %r13b,%r12b
    e3dc:	73 15                	jae    e3f3 <lzma_mf_bt4_find+0x233>
    e3de:	48 8b 54 24 c0       	mov    -0x40(%rsp),%rdx
    e3e3:	44 89 0a             	mov    %r9d,(%rdx)
    e3e6:	48 83 c0 04          	add    $0x4,%rax
    e3ea:	48 89 44 24 c0       	mov    %rax,-0x40(%rsp)
    e3ef:	89 ce                	mov    %ecx,%esi
    e3f1:	eb 08                	jmp    e3fb <lzma_mf_bt4_find+0x23b>
    e3f3:	45 89 0a             	mov    %r9d,(%r10)
    e3f6:	89 cf                	mov    %ecx,%edi
    e3f8:	49 89 c2             	mov    %rax,%r10
    e3fb:	41 ff c8             	dec    %r8d
    e3fe:	74 12                	je     e412 <lzma_mf_bt4_find+0x252>
    e400:	44 8b 08             	mov    (%rax),%r9d
    e403:	8b 44 24 bc          	mov    -0x44(%rsp),%eax
    e407:	44 29 c8             	sub    %r9d,%eax
    e40a:	39 e8                	cmp    %ebp,%eax
    e40c:	0f 82 78 ff ff ff    	jb     e38a <lzma_mf_bt4_find+0x1ca>
    e412:	41 c7 02 00 00 00 00 	movl   $0x0,(%r10)
    e419:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    e41e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e424:	eb 0f                	jmp    e435 <lzma_mf_bt4_find+0x275>
    e426:	8b 08                	mov    (%rax),%ecx
    e428:	48 8b 54 24 c0       	mov    -0x40(%rsp),%rdx
    e42d:	89 0a                	mov    %ecx,(%rdx)
    e42f:	8b 40 04             	mov    0x4(%rax),%eax
    e432:	41 89 02             	mov    %eax,(%r10)
    e435:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
    e43a:	41 8b 49 50          	mov    0x50(%r9),%ecx
    e43e:	ff c1                	inc    %ecx
    e440:	45 8b 51 54          	mov    0x54(%r9),%r10d
    e444:	31 d2                	xor    %edx,%edx
    e446:	44 39 d1             	cmp    %r10d,%ecx
    e449:	0f 45 d1             	cmovne %ecx,%edx
    e44c:	41 89 51 50          	mov    %edx,0x50(%r9)
    e450:	41 8b 49 14          	mov    0x14(%r9),%ecx
    e454:	41 8b 51 18          	mov    0x18(%r9),%edx
    e458:	8d 72 01             	lea    0x1(%rdx),%esi
    e45b:	41 89 71 18          	mov    %esi,0x18(%r9)
    e45f:	01 ca                	add    %ecx,%edx
    e461:	ff c2                	inc    %edx
    e463:	83 fa ff             	cmp    $0xffffffff,%edx
    e466:	48 8b 44 24 d0       	mov    -0x30(%rsp),%rax
    e46b:	0f 85 a1 03 00 00    	jne    e812 <lzma_mf_bt4_find+0x652>
    e471:	41 f7 d2             	not    %r10d
    e474:	41 8b 79 70          	mov    0x70(%r9),%edi
    e478:	41 03 79 6c          	add    0x6c(%r9),%edi
    e47c:	0f 84 89 03 00 00    	je     e80b <lzma_mf_bt4_find+0x64b>
    e482:	49 8b 49 40          	mov    0x40(%r9),%rcx
    e486:	89 fa                	mov    %edi,%edx
    e488:	31 f6                	xor    %esi,%esi
    e48a:	83 ff 08             	cmp    $0x8,%edi
    e48d:	0f 83 e5 02 00 00    	jae    e778 <lzma_mf_bt4_find+0x5b8>
    e493:	31 ff                	xor    %edi,%edi
    e495:	e9 56 03 00 00       	jmp    e7f0 <lzma_mf_bt4_find+0x630>
    e49a:	8d 43 ff             	lea    -0x1(%rbx),%eax
    e49d:	44 89 24 c6          	mov    %r12d,(%rsi,%rax,8)
    e4a1:	89 d8                	mov    %ebx,%eax
    e4a3:	8b 5f 5c             	mov    0x5c(%rdi),%ebx
    e4a6:	4c 8b 77 48          	mov    0x48(%rdi),%r14
    e4aa:	44 8b 5f 50          	mov    0x50(%rdi),%r11d
    e4ae:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    e4b2:	48 89 44 24 d0       	mov    %rax,-0x30(%rsp)
    e4b7:	43 8d 04 1b          	lea    (%r11,%r11,1),%eax
    e4bb:	49 8d 0c 86          	lea    (%r14,%rax,4),%rcx
    e4bf:	48 89 4c 24 d8       	mov    %rcx,-0x28(%rsp)
    e4c4:	49 8d 04 86          	lea    (%r14,%rax,4),%rax
    e4c8:	48 83 c0 04          	add    $0x4,%rax
    e4cc:	48 89 44 24 c0       	mov    %rax,-0x40(%rsp)
    e4d1:	85 db                	test   %ebx,%ebx
    e4d3:	48 89 74 24 f0       	mov    %rsi,-0x10(%rsp)
    e4d8:	0f 84 44 01 00 00    	je     e622 <lzma_mf_bt4_find+0x462>
    e4de:	8b 6f 54             	mov    0x54(%rdi),%ebp
    e4e1:	8b 7c 24 bc          	mov    -0x44(%rsp),%edi
    e4e5:	41 89 f8             	mov    %edi,%r8d
    e4e8:	45 29 c8             	sub    %r9d,%r8d
    e4eb:	41 39 e8             	cmp    %ebp,%r8d
    e4ee:	0f 83 2e 01 00 00    	jae    e622 <lzma_mf_bt4_find+0x462>
    e4f4:	41 83 fc 04          	cmp    $0x4,%r12d
    e4f8:	b8 03 00 00 00       	mov    $0x3,%eax
    e4fd:	41 0f 43 c4          	cmovae %r12d,%eax
    e501:	89 44 24 c8          	mov    %eax,-0x38(%rsp)
    e505:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    e50a:	89 c1                	mov    %eax,%ecx
    e50c:	48 89 4c 24 f8       	mov    %rcx,-0x8(%rsp)
    e511:	44 8d 68 ff          	lea    -0x1(%rax),%r13d
    e515:	31 f6                	xor    %esi,%esi
    e517:	45 31 e4             	xor    %r12d,%r12d
    e51a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e520:	44 89 d8             	mov    %r11d,%eax
    e523:	44 29 c0             	sub    %r8d,%eax
    e526:	b9 00 00 00 00       	mov    $0x0,%ecx
    e52b:	0f 42 cd             	cmovb  %ebp,%ecx
    e52e:	01 c8                	add    %ecx,%eax
    e530:	01 c0                	add    %eax,%eax
    e532:	44 89 c1             	mov    %r8d,%ecx
    e535:	4c 89 fa             	mov    %r15,%rdx
    e538:	48 29 ca             	sub    %rcx,%rdx
    e53b:	41 39 f4             	cmp    %esi,%r12d
    e53e:	89 f1                	mov    %esi,%ecx
    e540:	41 0f 42 cc          	cmovb  %r12d,%ecx
    e544:	4d 8d 14 86          	lea    (%r14,%rax,4),%r10
    e548:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
    e54c:	41 3a 04 0f          	cmp    (%r15,%rcx,1),%al
    e550:	75 4e                	jne    e5a0 <lzma_mf_bt4_find+0x3e0>
    e552:	44 89 4c 24 cc       	mov    %r9d,-0x34(%rsp)
    e557:	41 89 e9             	mov    %ebp,%r9d
    e55a:	4c 89 f5             	mov    %r14,%rbp
    e55d:	4d 89 de             	mov    %r11,%r14
    e560:	41 39 cd             	cmp    %ecx,%r13d
    e563:	74 6b                	je     e5d0 <lzma_mf_bt4_find+0x410>
    e565:	ff c1                	inc    %ecx
    e567:	89 c8                	mov    %ecx,%eax
    e569:	44 0f b6 1c 02       	movzbl (%rdx,%rax,1),%r11d
    e56e:	45 3a 1c 07          	cmp    (%r15,%rax,1),%r11b
    e572:	74 ec                	je     e560 <lzma_mf_bt4_find+0x3a0>
    e574:	39 4c 24 c8          	cmp    %ecx,-0x38(%rsp)
    e578:	73 6a                	jae    e5e4 <lzma_mf_bt4_find+0x424>
    e57a:	48 8b 7c 24 d0       	mov    -0x30(%rsp),%rdi
    e57f:	89 0f                	mov    %ecx,(%rdi)
    e581:	41 ff c8             	dec    %r8d
    e584:	44 89 47 04          	mov    %r8d,0x4(%rdi)
    e588:	48 83 c7 08          	add    $0x8,%rdi
    e58c:	48 89 7c 24 d0       	mov    %rdi,-0x30(%rsp)
    e591:	8b 7c 24 bc          	mov    -0x44(%rsp),%edi
    e595:	41 89 c8             	mov    %ecx,%r8d
    e598:	89 4c 24 c8          	mov    %ecx,-0x38(%rsp)
    e59c:	eb 46                	jmp    e5e4 <lzma_mf_bt4_find+0x424>
    e59e:	66 90                	xchg   %ax,%ax
    e5a0:	48 89 c8             	mov    %rcx,%rax
    e5a3:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    e5a7:	41 3a 14 07          	cmp    (%r15,%rax,1),%dl
    e5ab:	73 4f                	jae    e5fc <lzma_mf_bt4_find+0x43c>
    e5ad:	48 8b 44 24 d8       	mov    -0x28(%rsp),%rax
    e5b2:	44 89 08             	mov    %r9d,(%rax)
    e5b5:	49 83 c2 04          	add    $0x4,%r10
    e5b9:	4c 89 54 24 d8       	mov    %r10,-0x28(%rsp)
    e5be:	89 ce                	mov    %ecx,%esi
    e5c0:	ff cb                	dec    %ebx
    e5c2:	75 4c                	jne    e610 <lzma_mf_bt4_find+0x450>
    e5c4:	eb 5c                	jmp    e622 <lzma_mf_bt4_find+0x462>
    e5c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e5cd:	00 00 00 
    e5d0:	48 8b 4c 24 e8       	mov    -0x18(%rsp),%rcx
    e5d5:	39 4c 24 c8          	cmp    %ecx,-0x38(%rsp)
    e5d9:	0f 82 6d 01 00 00    	jb     e74c <lzma_mf_bt4_find+0x58c>
    e5df:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
    e5e4:	4d 89 f3             	mov    %r14,%r11
    e5e7:	49 89 ee             	mov    %rbp,%r14
    e5ea:	44 89 cd             	mov    %r9d,%ebp
    e5ed:	44 8b 4c 24 cc       	mov    -0x34(%rsp),%r9d
    e5f2:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    e5f6:	41 3a 14 07          	cmp    (%r15,%rax,1),%dl
    e5fa:	72 b1                	jb     e5ad <lzma_mf_bt4_find+0x3ed>
    e5fc:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    e601:	44 89 08             	mov    %r9d,(%rax)
    e604:	4c 89 54 24 c0       	mov    %r10,-0x40(%rsp)
    e609:	41 89 cc             	mov    %ecx,%r12d
    e60c:	ff cb                	dec    %ebx
    e60e:	74 12                	je     e622 <lzma_mf_bt4_find+0x462>
    e610:	45 8b 0a             	mov    (%r10),%r9d
    e613:	41 89 f8             	mov    %edi,%r8d
    e616:	45 29 c8             	sub    %r9d,%r8d
    e619:	41 39 e8             	cmp    %ebp,%r8d
    e61c:	0f 82 fe fe ff ff    	jb     e520 <lzma_mf_bt4_find+0x360>
    e622:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    e627:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e62d:	48 8b 44 24 d8       	mov    -0x28(%rsp),%rax
    e632:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e638:	48 8b 44 24 d0       	mov    -0x30(%rsp),%rax
    e63d:	48 2b 44 24 f0       	sub    -0x10(%rsp),%rax
    e642:	48 c1 e8 03          	shr    $0x3,%rax
    e646:	4c 8b 4c 24 e0       	mov    -0x20(%rsp),%r9
    e64b:	41 8b 49 50          	mov    0x50(%r9),%ecx
    e64f:	ff c1                	inc    %ecx
    e651:	45 8b 51 54          	mov    0x54(%r9),%r10d
    e655:	31 d2                	xor    %edx,%edx
    e657:	44 39 d1             	cmp    %r10d,%ecx
    e65a:	0f 45 d1             	cmovne %ecx,%edx
    e65d:	41 89 51 50          	mov    %edx,0x50(%r9)
    e661:	41 8b 49 14          	mov    0x14(%r9),%ecx
    e665:	41 8b 51 18          	mov    0x18(%r9),%edx
    e669:	8d 72 01             	lea    0x1(%rdx),%esi
    e66c:	41 89 71 18          	mov    %esi,0x18(%r9)
    e670:	01 ca                	add    %ecx,%edx
    e672:	ff c2                	inc    %edx
    e674:	83 fa ff             	cmp    $0xffffffff,%edx
    e677:	0f 85 95 01 00 00    	jne    e812 <lzma_mf_bt4_find+0x652>
    e67d:	41 f7 d2             	not    %r10d
    e680:	41 8b 79 70          	mov    0x70(%r9),%edi
    e684:	41 03 79 6c          	add    0x6c(%r9),%edi
    e688:	0f 84 7d 01 00 00    	je     e80b <lzma_mf_bt4_find+0x64b>
    e68e:	49 8b 49 40          	mov    0x40(%r9),%rcx
    e692:	89 fa                	mov    %edi,%edx
    e694:	31 f6                	xor    %esi,%esi
    e696:	83 ff 08             	cmp    $0x8,%edi
    e699:	73 07                	jae    e6a2 <lzma_mf_bt4_find+0x4e2>
    e69b:	31 ff                	xor    %edi,%edi
    e69d:	e9 8e 00 00 00       	jmp    e730 <lzma_mf_bt4_find+0x570>
    e6a2:	89 d7                	mov    %edx,%edi
    e6a4:	83 e7 f8             	and    $0xfffffff8,%edi
    e6a7:	66 41 0f 6e c2       	movd   %r10d,%xmm0
    e6ac:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    e6b1:	45 31 c0             	xor    %r8d,%r8d
    e6b4:	66 0f 6f 0d f4 99 01 	movdqa 0x199f4(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    e6bb:	00 
    e6bc:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    e6c0:	66 0f ef d1          	pxor   %xmm1,%xmm2
    e6c4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    e6cb:	00 00 00 00 00 
    e6d0:	f3 42 0f 6f 1c 81    	movdqu (%rcx,%r8,4),%xmm3
    e6d6:	f3 42 0f 6f 64 81 10 	movdqu 0x10(%rcx,%r8,4),%xmm4
    e6dd:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    e6e1:	66 0f ef e9          	pxor   %xmm1,%xmm5
    e6e5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e6e9:	66 0f fa d8          	psubd  %xmm0,%xmm3
    e6ed:	66 0f db dd          	pand   %xmm5,%xmm3
    e6f1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    e6f5:	66 0f ef e9          	pxor   %xmm1,%xmm5
    e6f9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e6fd:	66 0f fa e0          	psubd  %xmm0,%xmm4
    e701:	66 0f db e5          	pand   %xmm5,%xmm4
    e705:	f3 42 0f 7f 1c 81    	movdqu %xmm3,(%rcx,%r8,4)
    e70b:	f3 42 0f 7f 64 81 10 	movdqu %xmm4,0x10(%rcx,%r8,4)
    e712:	49 83 c0 08          	add    $0x8,%r8
    e716:	4c 39 c7             	cmp    %r8,%rdi
    e719:	75 b5                	jne    e6d0 <lzma_mf_bt4_find+0x510>
    e71b:	48 39 d7             	cmp    %rdx,%rdi
    e71e:	0f 84 e3 00 00 00    	je     e807 <lzma_mf_bt4_find+0x647>
    e724:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    e72b:	00 00 00 00 00 
    e730:	44 8b 04 b9          	mov    (%rcx,%rdi,4),%r8d
    e734:	45 29 d0             	sub    %r10d,%r8d
    e737:	44 0f 42 c6          	cmovb  %esi,%r8d
    e73b:	44 89 04 b9          	mov    %r8d,(%rcx,%rdi,4)
    e73f:	48 ff c7             	inc    %rdi
    e742:	48 39 fa             	cmp    %rdi,%rdx
    e745:	75 e9                	jne    e730 <lzma_mf_bt4_find+0x570>
    e747:	e9 bb 00 00 00       	jmp    e807 <lzma_mf_bt4_find+0x647>
    e74c:	48 8b 44 24 d0       	mov    -0x30(%rsp),%rax
    e751:	89 08                	mov    %ecx,(%rax)
    e753:	41 ff c8             	dec    %r8d
    e756:	44 89 40 04          	mov    %r8d,0x4(%rax)
    e75a:	48 83 c0 08          	add    $0x8,%rax
    e75e:	41 8b 0a             	mov    (%r10),%ecx
    e761:	48 8b 54 24 d8       	mov    -0x28(%rsp),%rdx
    e766:	89 0a                	mov    %ecx,(%rdx)
    e768:	41 8b 4a 04          	mov    0x4(%r10),%ecx
    e76c:	48 8b 54 24 c0       	mov    -0x40(%rsp),%rdx
    e771:	89 0a                	mov    %ecx,(%rdx)
    e773:	e9 c5 fe ff ff       	jmp    e63d <lzma_mf_bt4_find+0x47d>
    e778:	89 d7                	mov    %edx,%edi
    e77a:	83 e7 f8             	and    $0xfffffff8,%edi
    e77d:	66 41 0f 6e c2       	movd   %r10d,%xmm0
    e782:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    e787:	45 31 c0             	xor    %r8d,%r8d
    e78a:	66 0f 6f 0d 1e 99 01 	movdqa 0x1991e(%rip),%xmm1        # 280b0 <SHA256_K+0x150>
    e791:	00 
    e792:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    e796:	66 0f ef d1          	pxor   %xmm1,%xmm2
    e79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e7a0:	f3 42 0f 6f 1c 81    	movdqu (%rcx,%r8,4),%xmm3
    e7a6:	f3 42 0f 6f 64 81 10 	movdqu 0x10(%rcx,%r8,4),%xmm4
    e7ad:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    e7b1:	66 0f ef e9          	pxor   %xmm1,%xmm5
    e7b5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e7b9:	66 0f fa d8          	psubd  %xmm0,%xmm3
    e7bd:	66 0f db dd          	pand   %xmm5,%xmm3
    e7c1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    e7c5:	66 0f ef e9          	pxor   %xmm1,%xmm5
    e7c9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    e7cd:	66 0f fa e0          	psubd  %xmm0,%xmm4
    e7d1:	66 0f db e5          	pand   %xmm5,%xmm4
    e7d5:	f3 42 0f 7f 1c 81    	movdqu %xmm3,(%rcx,%r8,4)
    e7db:	f3 42 0f 7f 64 81 10 	movdqu %xmm4,0x10(%rcx,%r8,4)
    e7e2:	49 83 c0 08          	add    $0x8,%r8
    e7e6:	4c 39 c7             	cmp    %r8,%rdi
    e7e9:	75 b5                	jne    e7a0 <lzma_mf_bt4_find+0x5e0>
    e7eb:	48 39 d7             	cmp    %rdx,%rdi
    e7ee:	74 17                	je     e807 <lzma_mf_bt4_find+0x647>
    e7f0:	44 8b 04 b9          	mov    (%rcx,%rdi,4),%r8d
    e7f4:	45 29 d0             	sub    %r10d,%r8d
    e7f7:	44 0f 42 c6          	cmovb  %esi,%r8d
    e7fb:	44 89 04 b9          	mov    %r8d,(%rcx,%rdi,4)
    e7ff:	48 ff c7             	inc    %rdi
    e802:	48 39 fa             	cmp    %rdi,%rdx
    e805:	75 e9                	jne    e7f0 <lzma_mf_bt4_find+0x630>
    e807:	41 8b 49 14          	mov    0x14(%r9),%ecx
    e80b:	44 29 d1             	sub    %r10d,%ecx
    e80e:	41 89 49 14          	mov    %ecx,0x14(%r9)
    e812:	5b                   	pop    %rbx
    e813:	41 5c                	pop    %r12
    e815:	41 5d                	pop    %r13
    e817:	41 5e                	pop    %r14
    e819:	41 5f                	pop    %r15
    e81b:	5d                   	pop    %rbp
    e81c:	c3                   	ret    
    e81d:	0f 1f 00             	nopl   (%rax)

000000000000e820 <lzma_mf_bt4_skip>:
    e820:	55                   	push   %rbp
    e821:	41 57                	push   %r15
    e823:	41 56                	push   %r14
    e825:	41 55                	push   %r13
    e827:	41 54                	push   %r12
    e829:	53                   	push   %rbx
    e82a:	66 0f 6f 05 7e 98 01 	movdqa 0x1987e(%rip),%xmm0        # 280b0 <SHA256_K+0x150>
    e831:	00 
    e832:	eb 1c                	jmp    e850 <lzma_mf_bt4_skip+0x30>
    e834:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    e83b:	00 00 00 00 00 
    e840:	ff c0                	inc    %eax
    e842:	89 47 18             	mov    %eax,0x18(%rdi)
    e845:	ff 47 28             	incl   0x28(%rdi)
    e848:	ff ce                	dec    %esi
    e84a:	0f 84 b4 02 00 00    	je     eb04 <lzma_mf_bt4_skip+0x2e4>
    e850:	8b 47 18             	mov    0x18(%rdi),%eax
    e853:	8b 4f 24             	mov    0x24(%rdi),%ecx
    e856:	29 c1                	sub    %eax,%ecx
    e858:	8b 57 60             	mov    0x60(%rdi),%edx
    e85b:	39 ca                	cmp    %ecx,%edx
    e85d:	76 11                	jbe    e870 <lzma_mf_bt4_skip+0x50>
    e85f:	83 f9 04             	cmp    $0x4,%ecx
    e862:	72 dc                	jb     e840 <lzma_mf_bt4_skip+0x20>
    e864:	83 7f 68 01          	cmpl   $0x1,0x68(%rdi)
    e868:	89 ca                	mov    %ecx,%edx
    e86a:	74 d4                	je     e840 <lzma_mf_bt4_skip+0x20>
    e86c:	0f 1f 40 00          	nopl   0x0(%rax)
    e870:	89 74 24 f4          	mov    %esi,-0xc(%rsp)
    e874:	4c 8b 1f             	mov    (%rdi),%r11
    e877:	48 8b 4f 40          	mov    0x40(%rdi),%rcx
    e87b:	44 8b 4f 14          	mov    0x14(%rdi),%r9d
    e87f:	41 01 c1             	add    %eax,%r9d
    e882:	41 0f b6 34 03       	movzbl (%r11,%rax,1),%esi
    e887:	45 0f b6 44 03 01    	movzbl 0x1(%r11,%rax,1),%r8d
    e88d:	4c 8d 35 ac 56 01 00 	lea    0x156ac(%rip),%r14        # 23f40 <lzma_crc32_table>
    e894:	45 33 04 b6          	xor    (%r14,%rsi,4),%r8d
    e898:	41 0f b6 74 03 02    	movzbl 0x2(%r11,%rax,1),%esi
    e89e:	c1 e6 08             	shl    $0x8,%esi
    e8a1:	44 31 c6             	xor    %r8d,%esi
    e8a4:	41 81 e0 ff 03 00 00 	and    $0x3ff,%r8d
    e8ab:	44 0f b7 d6          	movzwl %si,%r10d
    e8af:	41 0f b6 5c 03 03    	movzbl 0x3(%r11,%rax,1),%ebx
    e8b5:	41 8b 1c 9e          	mov    (%r14,%rbx,4),%ebx
    e8b9:	c1 e3 05             	shl    $0x5,%ebx
    e8bc:	31 f3                	xor    %esi,%ebx
    e8be:	23 5f 58             	and    0x58(%rdi),%ebx
    e8c1:	81 c3 00 04 01 00    	add    $0x10400,%ebx
    e8c7:	44 8b 24 99          	mov    (%rcx,%rbx,4),%r12d
    e8cb:	46 89 0c 81          	mov    %r9d,(%rcx,%r8,4)
    e8cf:	48 8b 4f 40          	mov    0x40(%rdi),%rcx
    e8d3:	46 89 8c 91 00 10 00 	mov    %r9d,0x1000(%rcx,%r10,4)
    e8da:	00 
    e8db:	48 8b 4f 40          	mov    0x40(%rdi),%rcx
    e8df:	44 89 0c 99          	mov    %r9d,(%rcx,%rbx,4)
    e8e3:	8b 5f 5c             	mov    0x5c(%rdi),%ebx
    e8e6:	48 8b 77 48          	mov    0x48(%rdi),%rsi
    e8ea:	8b 4f 50             	mov    0x50(%rdi),%ecx
    e8ed:	48 89 4c 24 f8       	mov    %rcx,-0x8(%rsp)
    e8f2:	01 c9                	add    %ecx,%ecx
    e8f4:	4c 8d 04 8e          	lea    (%rsi,%rcx,4),%r8
    e8f8:	4c 89 44 24 e8       	mov    %r8,-0x18(%rsp)
    e8fd:	48 8d 0c 8e          	lea    (%rsi,%rcx,4),%rcx
    e901:	48 83 c1 04          	add    $0x4,%rcx
    e905:	48 89 4c 24 e0       	mov    %rcx,-0x20(%rsp)
    e90a:	85 db                	test   %ebx,%ebx
    e90c:	0f 84 ce 00 00 00    	je     e9e0 <lzma_mf_bt4_skip+0x1c0>
    e912:	8b 6f 54             	mov    0x54(%rdi),%ebp
    e915:	45 89 ca             	mov    %r9d,%r10d
    e918:	45 29 e2             	sub    %r12d,%r10d
    e91b:	41 39 ea             	cmp    %ebp,%r10d
    e91e:	0f 83 bc 00 00 00    	jae    e9e0 <lzma_mf_bt4_skip+0x1c0>
    e924:	49 01 c3             	add    %rax,%r11
    e927:	ff ca                	dec    %edx
    e929:	45 31 ed             	xor    %r13d,%r13d
    e92c:	31 c0                	xor    %eax,%eax
    e92e:	48 8b 4c 24 f8       	mov    -0x8(%rsp),%rcx
    e933:	44 29 d1             	sub    %r10d,%ecx
    e936:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e93c:	44 0f 42 c5          	cmovb  %ebp,%r8d
    e940:	46 8d 34 01          	lea    (%rcx,%r8,1),%r14d
    e944:	45 01 f6             	add    %r14d,%r14d
    e947:	44 89 d1             	mov    %r10d,%ecx
    e94a:	4d 89 d8             	mov    %r11,%r8
    e94d:	49 29 c8             	sub    %rcx,%r8
    e950:	44 39 e8             	cmp    %r13d,%eax
    e953:	44 89 e9             	mov    %r13d,%ecx
    e956:	0f 42 c8             	cmovb  %eax,%ecx
    e959:	4e 8d 14 b6          	lea    (%rsi,%r14,4),%r10
    e95d:	45 0f b6 3c 08       	movzbl (%r8,%rcx,1),%r15d
    e962:	45 0f b6 34 0b       	movzbl (%r11,%rcx,1),%r14d
    e967:	45 38 f7             	cmp    %r14b,%r15b
    e96a:	75 20                	jne    e98c <lzma_mf_bt4_skip+0x16c>
    e96c:	0f 1f 40 00          	nopl   0x0(%rax)
    e970:	39 ca                	cmp    %ecx,%edx
    e972:	0f 84 88 00 00 00    	je     ea00 <lzma_mf_bt4_skip+0x1e0>
    e978:	ff c1                	inc    %ecx
    e97a:	41 89 ce             	mov    %ecx,%r14d
    e97d:	47 0f b6 3c 30       	movzbl (%r8,%r14,1),%r15d
    e982:	47 0f b6 34 33       	movzbl (%r11,%r14,1),%r14d
    e987:	45 38 f7             	cmp    %r14b,%r15b
    e98a:	74 e4                	je     e970 <lzma_mf_bt4_skip+0x150>
    e98c:	45 38 f7             	cmp    %r14b,%r15b
    e98f:	73 1f                	jae    e9b0 <lzma_mf_bt4_skip+0x190>
    e991:	4c 8b 44 24 e8       	mov    -0x18(%rsp),%r8
    e996:	45 89 20             	mov    %r12d,(%r8)
    e999:	49 83 c2 04          	add    $0x4,%r10
    e99d:	4c 89 54 24 e8       	mov    %r10,-0x18(%rsp)
    e9a2:	41 89 cd             	mov    %ecx,%r13d
    e9a5:	ff cb                	dec    %ebx
    e9a7:	75 1a                	jne    e9c3 <lzma_mf_bt4_skip+0x1a3>
    e9a9:	eb 35                	jmp    e9e0 <lzma_mf_bt4_skip+0x1c0>
    e9ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e9b0:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    e9b5:	44 89 20             	mov    %r12d,(%rax)
    e9b8:	89 c8                	mov    %ecx,%eax
    e9ba:	4c 89 54 24 e0       	mov    %r10,-0x20(%rsp)
    e9bf:	ff cb                	dec    %ebx
    e9c1:	74 1d                	je     e9e0 <lzma_mf_bt4_skip+0x1c0>
    e9c3:	45 8b 22             	mov    (%r10),%r12d
    e9c6:	45 89 ca             	mov    %r9d,%r10d
    e9c9:	45 29 e2             	sub    %r12d,%r10d
    e9cc:	41 39 ea             	cmp    %ebp,%r10d
    e9cf:	0f 82 59 ff ff ff    	jb     e92e <lzma_mf_bt4_skip+0x10e>
    e9d5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    e9dc:	00 00 00 00 
    e9e0:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    e9e5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e9eb:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    e9f0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e9f6:	eb 1d                	jmp    ea15 <lzma_mf_bt4_skip+0x1f5>
    e9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e9ff:	00 
    ea00:	41 8b 02             	mov    (%r10),%eax
    ea03:	48 8b 4c 24 e8       	mov    -0x18(%rsp),%rcx
    ea08:	89 01                	mov    %eax,(%rcx)
    ea0a:	41 8b 42 04          	mov    0x4(%r10),%eax
    ea0e:	48 8b 4c 24 e0       	mov    -0x20(%rsp),%rcx
    ea13:	89 01                	mov    %eax,(%rcx)
    ea15:	8b 4f 50             	mov    0x50(%rdi),%ecx
    ea18:	ff c1                	inc    %ecx
    ea1a:	8b 47 54             	mov    0x54(%rdi),%eax
    ea1d:	39 c1                	cmp    %eax,%ecx
    ea1f:	41 ba 00 00 00 00    	mov    $0x0,%r10d
    ea25:	41 0f 44 ca          	cmove  %r10d,%ecx
    ea29:	89 4f 50             	mov    %ecx,0x50(%rdi)
    ea2c:	8b 4f 14             	mov    0x14(%rdi),%ecx
    ea2f:	8b 57 18             	mov    0x18(%rdi),%edx
    ea32:	8d 72 01             	lea    0x1(%rdx),%esi
    ea35:	89 77 18             	mov    %esi,0x18(%rdi)
    ea38:	01 ca                	add    %ecx,%edx
    ea3a:	ff c2                	inc    %edx
    ea3c:	83 fa ff             	cmp    $0xffffffff,%edx
    ea3f:	8b 74 24 f4          	mov    -0xc(%rsp),%esi
    ea43:	0f 85 ff fd ff ff    	jne    e848 <lzma_mf_bt4_skip+0x28>
    ea49:	f7 d0                	not    %eax
    ea4b:	44 8b 47 70          	mov    0x70(%rdi),%r8d
    ea4f:	44 03 47 6c          	add    0x6c(%rdi),%r8d
    ea53:	0f 84 a1 00 00 00    	je     eafa <lzma_mf_bt4_skip+0x2da>
    ea59:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    ea5d:	44 89 c1             	mov    %r8d,%ecx
    ea60:	41 83 f8 08          	cmp    $0x8,%r8d
    ea64:	73 05                	jae    ea6b <lzma_mf_bt4_skip+0x24b>
    ea66:	45 31 c0             	xor    %r8d,%r8d
    ea69:	eb 75                	jmp    eae0 <lzma_mf_bt4_skip+0x2c0>
    ea6b:	41 89 c8             	mov    %ecx,%r8d
    ea6e:	41 83 e0 f8          	and    $0xfffffff8,%r8d
    ea72:	66 0f 6e c8          	movd   %eax,%xmm1
    ea76:	66 0f 70 c9 00       	pshufd $0x0,%xmm1,%xmm1
    ea7b:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    ea7f:	66 0f ef d0          	pxor   %xmm0,%xmm2
    ea83:	45 31 c9             	xor    %r9d,%r9d
    ea86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ea8d:	00 00 00 
    ea90:	f3 42 0f 6f 1c 8a    	movdqu (%rdx,%r9,4),%xmm3
    ea96:	f3 42 0f 6f 64 8a 10 	movdqu 0x10(%rdx,%r9,4),%xmm4
    ea9d:	66 0f 6f eb          	movdqa %xmm3,%xmm5
    eaa1:	66 0f ef e8          	pxor   %xmm0,%xmm5
    eaa5:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    eaa9:	66 0f fa d9          	psubd  %xmm1,%xmm3
    eaad:	66 0f db dd          	pand   %xmm5,%xmm3
    eab1:	66 0f 6f ec          	movdqa %xmm4,%xmm5
    eab5:	66 0f ef e8          	pxor   %xmm0,%xmm5
    eab9:	66 0f 66 ea          	pcmpgtd %xmm2,%xmm5
    eabd:	66 0f fa e1          	psubd  %xmm1,%xmm4
    eac1:	66 0f db e5          	pand   %xmm5,%xmm4
    eac5:	f3 42 0f 7f 1c 8a    	movdqu %xmm3,(%rdx,%r9,4)
    eacb:	f3 42 0f 7f 64 8a 10 	movdqu %xmm4,0x10(%rdx,%r9,4)
    ead2:	49 83 c1 08          	add    $0x8,%r9
    ead6:	4d 39 c8             	cmp    %r9,%r8
    ead9:	75 b5                	jne    ea90 <lzma_mf_bt4_skip+0x270>
    eadb:	49 39 c8             	cmp    %rcx,%r8
    eade:	74 17                	je     eaf7 <lzma_mf_bt4_skip+0x2d7>
    eae0:	46 8b 0c 82          	mov    (%rdx,%r8,4),%r9d
    eae4:	41 29 c1             	sub    %eax,%r9d
    eae7:	45 0f 42 ca          	cmovb  %r10d,%r9d
    eaeb:	46 89 0c 82          	mov    %r9d,(%rdx,%r8,4)
    eaef:	49 ff c0             	inc    %r8
    eaf2:	4c 39 c1             	cmp    %r8,%rcx
    eaf5:	75 e9                	jne    eae0 <lzma_mf_bt4_skip+0x2c0>
    eaf7:	8b 4f 14             	mov    0x14(%rdi),%ecx
    eafa:	29 c1                	sub    %eax,%ecx
    eafc:	89 4f 14             	mov    %ecx,0x14(%rdi)
    eaff:	e9 44 fd ff ff       	jmp    e848 <lzma_mf_bt4_skip+0x28>
    eb04:	5b                   	pop    %rbx
    eb05:	41 5c                	pop    %r12
    eb07:	41 5d                	pop    %r13
    eb09:	41 5e                	pop    %r14
    eb0b:	41 5f                	pop    %r15
    eb0d:	5d                   	pop    %rbp
    eb0e:	c3                   	ret    
    eb0f:	90                   	nop

000000000000eb10 <lzma_lz_decoder_init>:
    eb10:	41 57                	push   %r15
    eb12:	41 56                	push   %r14
    eb14:	41 54                	push   %r12
    eb16:	53                   	push   %rbx
    eb17:	48 83 ec 18          	sub    $0x18,%rsp
    eb1b:	49 89 cc             	mov    %rcx,%r12
    eb1e:	48 89 d3             	mov    %rdx,%rbx
    eb21:	49 89 f6             	mov    %rsi,%r14
    eb24:	49 89 ff             	mov    %rdi,%r15
    eb27:	48 8b 3f             	mov    (%rdi),%rdi
    eb2a:	48 85 ff             	test   %rdi,%rdi
    eb2d:	75 7c                	jne    ebab <lzma_lz_decoder_init+0x9b>
    eb2f:	bf b0 10 00 00       	mov    $0x10b0,%edi
    eb34:	4c 89 f6             	mov    %r14,%rsi
    eb37:	e8 84 43 ff ff       	call   2ec0 <lzma_alloc>
    eb3c:	49 89 07             	mov    %rax,(%r15)
    eb3f:	48 85 c0             	test   %rax,%rax
    eb42:	0f 84 8a 01 00 00    	je     ecd2 <lzma_lz_decoder_init+0x1c2>
    eb48:	48 8d 0d a1 01 00 00 	lea    0x1a1(%rip),%rcx        # ecf0 <lz_decode>
    eb4f:	49 89 4f 18          	mov    %rcx,0x18(%r15)
    eb53:	48 8d 0d 66 05 00 00 	lea    0x566(%rip),%rcx        # f0c0 <lz_decoder_end>
    eb5a:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    eb5e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    eb65:	49 8b 07             	mov    (%r15),%rax
    eb68:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    eb6f:	00 
    eb70:	49 8b 07             	mov    (%r15),%rax
    eb73:	0f 57 c0             	xorps  %xmm0,%xmm0
    eb76:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    eb7a:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    eb7e:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    eb85:	00 
    eb86:	49 8b 07             	mov    (%r15),%rax
    eb89:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
    eb90:	00 
    eb91:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    eb98:	ff 
    eb99:	0f 11 40 68          	movups %xmm0,0x68(%rax)
    eb9d:	0f 11 40 78          	movups %xmm0,0x78(%rax)
    eba1:	0f 11 80 88 00 00 00 	movups %xmm0,0x88(%rax)
    eba8:	49 8b 3f             	mov    (%r15),%rdi
    ebab:	48 83 c7 30          	add    $0x30,%rdi
    ebaf:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    ebb3:	48 89 e1             	mov    %rsp,%rcx
    ebb6:	4c 89 f6             	mov    %r14,%rsi
    ebb9:	41 ff d4             	call   *%r12
    ebbc:	85 c0                	test   %eax,%eax
    ebbe:	0f 85 13 01 00 00    	jne    ecd7 <lzma_lz_decoder_init+0x1c7>
    ebc4:	48 8b 14 24          	mov    (%rsp),%rdx
    ebc8:	b9 00 10 00 00       	mov    $0x1000,%ecx
    ebcd:	48 81 fa 00 10 00 00 	cmp    $0x1000,%rdx
    ebd4:	72 12                	jb     ebe8 <lzma_lz_decoder_init+0xd8>
    ebd6:	b8 05 00 00 00       	mov    $0x5,%eax
    ebdb:	48 89 d1             	mov    %rdx,%rcx
    ebde:	48 83 fa f0          	cmp    $0xfffffffffffffff0,%rdx
    ebe2:	0f 87 ef 00 00 00    	ja     ecd7 <lzma_lz_decoder_init+0x1c7>
    ebe8:	48 83 c1 0f          	add    $0xf,%rcx
    ebec:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    ebf0:	48 89 0c 24          	mov    %rcx,(%rsp)
    ebf4:	49 8b 07             	mov    (%r15),%rax
    ebf7:	48 39 48 20          	cmp    %rcx,0x20(%rax)
    ebfb:	74 39                	je     ec36 <lzma_lz_decoder_init+0x126>
    ebfd:	48 8b 38             	mov    (%rax),%rdi
    ec00:	4c 89 f6             	mov    %r14,%rsi
    ec03:	e8 e8 42 ff ff       	call   2ef0 <lzma_free>
    ec08:	48 8b 3c 24          	mov    (%rsp),%rdi
    ec0c:	4c 89 f6             	mov    %r14,%rsi
    ec0f:	e8 ac 42 ff ff       	call   2ec0 <lzma_alloc>
    ec14:	49 8b 0f             	mov    (%r15),%rcx
    ec17:	48 89 01             	mov    %rax,(%rcx)
    ec1a:	49 8b 07             	mov    (%r15),%rax
    ec1d:	48 83 38 00          	cmpq   $0x0,(%rax)
    ec21:	0f 84 ab 00 00 00    	je     ecd2 <lzma_lz_decoder_init+0x1c2>
    ec27:	48 8b 0c 24          	mov    (%rsp),%rcx
    ec2b:	48 89 48 20          	mov    %rcx,0x20(%rax)
    ec2f:	49 8b 07             	mov    (%r15),%rax
    ec32:	48 8b 48 20          	mov    0x20(%rax),%rcx
    ec36:	0f 57 c0             	xorps  %xmm0,%xmm0
    ec39:	0f 11 40 08          	movups %xmm0,0x8(%rax)
    ec3d:	48 8b 10             	mov    (%rax),%rdx
    ec40:	c6 44 0a ff 00       	movb   $0x0,-0x1(%rdx,%rcx,1)
    ec45:	c6 40 28 00          	movb   $0x0,0x28(%rax)
    ec49:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    ec4e:	48 85 f6             	test   %rsi,%rsi
    ec51:	74 37                	je     ec8a <lzma_lz_decoder_init+0x17a>
    ec53:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ec58:	48 85 c0             	test   %rax,%rax
    ec5b:	74 2d                	je     ec8a <lzma_lz_decoder_init+0x17a>
    ec5d:	4c 8b 24 24          	mov    (%rsp),%r12
    ec61:	4c 39 e0             	cmp    %r12,%rax
    ec64:	4c 0f 42 e0          	cmovb  %rax,%r12
    ec68:	4c 29 e0             	sub    %r12,%rax
    ec6b:	49 8b 0f             	mov    (%r15),%rcx
    ec6e:	48 8b 39             	mov    (%rcx),%rdi
    ec71:	48 01 c6             	add    %rax,%rsi
    ec74:	4c 89 e2             	mov    %r12,%rdx
    ec77:	e8 d4 34 ff ff       	call   2150 <memcpy@plt>
    ec7c:	49 8b 07             	mov    (%r15),%rax
    ec7f:	4c 89 60 08          	mov    %r12,0x8(%rax)
    ec83:	49 8b 07             	mov    (%r15),%rax
    ec86:	4c 89 60 10          	mov    %r12,0x10(%rax)
    ec8a:	49 8b 07             	mov    (%r15),%rax
    ec8d:	c6 80 98 00 00 00 00 	movb   $0x0,0x98(%rax)
    ec94:	49 8b 07             	mov    (%r15),%rax
    ec97:	c6 80 99 00 00 00 00 	movb   $0x0,0x99(%rax)
    ec9e:	49 8b 07             	mov    (%r15),%rax
    eca1:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
    eca8:	00 00 00 00 
    ecac:	49 8b 07             	mov    (%r15),%rax
    ecaf:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
    ecb6:	00 00 00 00 
    ecba:	49 8b 3f             	mov    (%r15),%rdi
    ecbd:	48 83 c7 58          	add    $0x58,%rdi
    ecc1:	48 83 c3 18          	add    $0x18,%rbx
    ecc5:	4c 89 f6             	mov    %r14,%rsi
    ecc8:	48 89 da             	mov    %rbx,%rdx
    eccb:	e8 b0 42 ff ff       	call   2f80 <lzma_next_filter_init>
    ecd0:	eb 05                	jmp    ecd7 <lzma_lz_decoder_init+0x1c7>
    ecd2:	b8 05 00 00 00       	mov    $0x5,%eax
    ecd7:	48 83 c4 18          	add    $0x18,%rsp
    ecdb:	5b                   	pop    %rbx
    ecdc:	41 5c                	pop    %r12
    ecde:	41 5e                	pop    %r14
    ece0:	41 5f                	pop    %r15
    ece2:	c3                   	ret    
    ece3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    ecea:	84 00 00 00 00 00 

000000000000ecf0 <lz_decode>:
    ecf0:	55                   	push   %rbp
    ecf1:	41 57                	push   %r15
    ecf3:	41 56                	push   %r14
    ecf5:	41 55                	push   %r13
    ecf7:	41 54                	push   %r12
    ecf9:	53                   	push   %rbx
    ecfa:	48 83 ec 58          	sub    $0x58,%rsp
    ecfe:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
    ed03:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    ed08:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    ed0d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    ed12:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
    ed17:	48 89 fe             	mov    %rdi,%rsi
    ed1a:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    ed21:	00 
    ed22:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    ed29:	00 
    ed2a:	48 83 7f 70 00       	cmpq   $0x0,0x70(%rdi)
    ed2f:	48 89 3c 24          	mov    %rdi,(%rsp)
    ed33:	0f 84 58 02 00 00    	je     ef91 <lz_decode+0x2a1>
    ed39:	48 8b 28             	mov    (%rax),%rbp
    ed3c:	45 31 e4             	xor    %r12d,%r12d
    ed3f:	48 39 cd             	cmp    %rcx,%rbp
    ed42:	0f 83 5f 03 00 00    	jae    f0a7 <lz_decode+0x3b7>
    ed48:	48 8d 86 a0 00 00 00 	lea    0xa0(%rsi),%rax
    ed4f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    ed54:	4c 8d b6 a8 00 00 00 	lea    0xa8(%rsi),%r14
    ed5b:	48 8d 86 b0 00 00 00 	lea    0xb0(%rsi),%rax
    ed62:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    ed67:	48 8d 46 08          	lea    0x8(%rsi),%rax
    ed6b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ed70:	4c 89 74 24 50       	mov    %r14,0x50(%rsp)
    ed75:	eb 17                	jmp    ed8e <lz_decode+0x9e>
    ed77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ed7e:	00 00 
    ed80:	48 39 cd             	cmp    %rcx,%rbp
    ed83:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
    ed88:	0f 83 fe 02 00 00    	jae    f08c <lz_decode+0x39c>
    ed8e:	80 be 98 00 00 00 00 	cmpb   $0x0,0x98(%rsi)
    ed95:	0f 85 95 00 00 00    	jne    ee30 <lz_decode+0x140>
    ed9b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    eda0:	48 8b 00             	mov    (%rax),%rax
    eda3:	49 3b 06             	cmp    (%r14),%rax
    eda6:	0f 85 84 00 00 00    	jne    ee30 <lz_decode+0x140>
    edac:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    edb1:	0f 57 c0             	xorps  %xmm0,%xmm0
    edb4:	0f 11 00             	movups %xmm0,(%rax)
    edb7:	48 8b 7e 58          	mov    0x58(%rsi),%rdi
    edbb:	48 83 ec 08          	sub    $0x8,%rsp
    edbf:	49 89 f2             	mov    %rsi,%r10
    edc2:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    edc7:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    edcc:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    edd1:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    edd6:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    eddb:	8b 84 24 a8 00 00 00 	mov    0xa8(%rsp),%eax
    ede2:	50                   	push   %rax
    ede3:	68 00 10 00 00       	push   $0x1000
    ede8:	41 56                	push   %r14
    edea:	41 ff 52 70          	call   *0x70(%r10)
    edee:	48 83 c4 20          	add    $0x20,%rsp
    edf2:	85 c0                	test   %eax,%eax
    edf4:	74 21                	je     ee17 <lz_decode+0x127>
    edf6:	41 89 c4             	mov    %eax,%r12d
    edf9:	83 f8 01             	cmp    $0x1,%eax
    edfc:	0f 85 a5 02 00 00    	jne    f0a7 <lz_decode+0x3b7>
    ee02:	48 8b 34 24          	mov    (%rsp),%rsi
    ee06:	c6 86 98 00 00 00 01 	movb   $0x1,0x98(%rsi)
    ee0d:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    ee14:	00 
    ee15:	eb 19                	jmp    ee30 <lz_decode+0x140>
    ee17:	49 83 3e 00          	cmpq   $0x0,(%r14)
    ee1b:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    ee22:	00 
    ee23:	48 8b 34 24          	mov    (%rsp),%rsi
    ee27:	0f 84 5f 02 00 00    	je     f08c <lz_decode+0x39c>
    ee2d:	0f 1f 00             	nopl   (%rax)
    ee30:	80 be 99 00 00 00 00 	cmpb   $0x0,0x99(%rsi)
    ee37:	48 8b 86 a8 00 00 00 	mov    0xa8(%rsi),%rax
    ee3e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    ee43:	0f 85 48 02 00 00    	jne    f091 <lz_decode+0x3a1>
    ee49:	49 89 ed             	mov    %rbp,%r13
    ee4c:	0f 1f 40 00          	nopl   0x0(%rax)
    ee50:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
    ee54:	48 8b 46 20          	mov    0x20(%rsi),%rax
    ee58:	49 39 c7             	cmp    %rax,%r15
    ee5b:	75 0f                	jne    ee6c <lz_decode+0x17c>
    ee5d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ee62:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    ee69:	45 31 ff             	xor    %r15d,%r15d
    ee6c:	4c 29 e9             	sub    %r13,%rcx
    ee6f:	4c 29 f8             	sub    %r15,%rax
    ee72:	48 39 c1             	cmp    %rax,%rcx
    ee75:	48 0f 42 c1          	cmovb  %rcx,%rax
    ee79:	4c 01 f8             	add    %r15,%rax
    ee7c:	48 89 46 18          	mov    %rax,0x18(%rsi)
    ee80:	48 8b 7e 30          	mov    0x30(%rsi),%rdi
    ee84:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    ee89:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    ee8e:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    ee93:	48 8b 04 24          	mov    (%rsp),%rax
    ee97:	ff 50 38             	call   *0x38(%rax)
    ee9a:	89 c3                	mov    %eax,%ebx
    ee9c:	48 8b 04 24          	mov    (%rsp),%rax
    eea0:	4c 8b 20             	mov    (%rax),%r12
    eea3:	48 8b 04 24          	mov    (%rsp),%rax
    eea7:	4c 8b 70 08          	mov    0x8(%rax),%r14
    eeab:	4c 89 f5             	mov    %r14,%rbp
    eeae:	4c 29 fd             	sub    %r15,%rbp
    eeb1:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    eeb6:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    eeba:	4d 01 e7             	add    %r12,%r15
    eebd:	4c 89 fe             	mov    %r15,%rsi
    eec0:	48 89 ea             	mov    %rbp,%rdx
    eec3:	e8 88 32 ff ff       	call   2150 <memcpy@plt>
    eec8:	48 8b 34 24          	mov    (%rsp),%rsi
    eecc:	4c 01 ed             	add    %r13,%rbp
    eecf:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    eed6:	00 
    eed7:	48 89 28             	mov    %rbp,(%rax)
    eeda:	80 7e 28 00          	cmpb   $0x0,0x28(%rsi)
    eede:	74 40                	je     ef20 <lz_decode+0x230>
    eee0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    eee5:	0f 57 c0             	xorps  %xmm0,%xmm0
    eee8:	0f 11 00             	movups %xmm0,(%rax)
    eeeb:	48 8b 46 20          	mov    0x20(%rsi),%rax
    eeef:	41 c6 44 04 ff 00    	movb   $0x0,-0x1(%r12,%rax,1)
    eef5:	c6 46 28 00          	movb   $0x0,0x28(%rsi)
    eef9:	85 db                	test   %ebx,%ebx
    eefb:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    ef02:	00 
    ef03:	41 89 dc             	mov    %ebx,%r12d
    ef06:	75 48                	jne    ef50 <lz_decode+0x260>
    ef08:	49 89 ed             	mov    %rbp,%r13
    ef0b:	48 39 cd             	cmp    %rcx,%rbp
    ef0e:	0f 85 3c ff ff ff    	jne    ee50 <lz_decode+0x160>
    ef14:	eb 3a                	jmp    ef50 <lz_decode+0x260>
    ef16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ef1d:	00 00 00 
    ef20:	85 db                	test   %ebx,%ebx
    ef22:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    ef29:	00 
    ef2a:	41 89 dc             	mov    %ebx,%r12d
    ef2d:	75 21                	jne    ef50 <lz_decode+0x260>
    ef2f:	48 39 cd             	cmp    %rcx,%rbp
    ef32:	74 1c                	je     ef50 <lz_decode+0x260>
    ef34:	49 89 ed             	mov    %rbp,%r13
    ef37:	4c 3b 76 20          	cmp    0x20(%rsi),%r14
    ef3b:	0f 83 0f ff ff ff    	jae    ee50 <lz_decode+0x160>
    ef41:	eb 2d                	jmp    ef70 <lz_decode+0x280>
    ef43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    ef4a:	84 00 00 00 00 00 
    ef50:	45 85 e4             	test   %r12d,%r12d
    ef53:	74 1b                	je     ef70 <lz_decode+0x280>
    ef55:	41 83 fc 01          	cmp    $0x1,%r12d
    ef59:	0f 85 48 01 00 00    	jne    f0a7 <lz_decode+0x3b7>
    ef5f:	c6 86 99 00 00 00 01 	movb   $0x1,0x99(%rsi)
    ef66:	e9 15 fe ff ff       	jmp    ed80 <lz_decode+0x90>
    ef6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ef70:	80 be 98 00 00 00 00 	cmpb   $0x0,0x98(%rsi)
    ef77:	0f 84 03 fe ff ff    	je     ed80 <lz_decode+0x90>
    ef7d:	48 39 cd             	cmp    %rcx,%rbp
    ef80:	0f 83 fa fd ff ff    	jae    ed80 <lz_decode+0x90>
    ef86:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    ef8c:	e9 16 01 00 00       	jmp    f0a7 <lz_decode+0x3b7>
    ef91:	48 8d 56 08          	lea    0x8(%rsi),%rdx
    ef95:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    ef9a:	48 8b 28             	mov    (%rax),%rbp
    ef9d:	0f 1f 00             	nopl   (%rax)
    efa0:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    efa4:	48 8b 46 20          	mov    0x20(%rsi),%rax
    efa8:	49 39 c6             	cmp    %rax,%r14
    efab:	75 0f                	jne    efbc <lz_decode+0x2cc>
    efad:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    efb2:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    efb9:	45 31 f6             	xor    %r14d,%r14d
    efbc:	48 29 e9             	sub    %rbp,%rcx
    efbf:	4c 29 f0             	sub    %r14,%rax
    efc2:	48 39 c1             	cmp    %rax,%rcx
    efc5:	48 0f 42 c1          	cmovb  %rcx,%rax
    efc9:	4c 01 f0             	add    %r14,%rax
    efcc:	48 89 46 18          	mov    %rax,0x18(%rsi)
    efd0:	48 8b 7e 30          	mov    0x30(%rsi),%rdi
    efd4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    efd9:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    efde:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    efe3:	48 8b 04 24          	mov    (%rsp),%rax
    efe7:	ff 50 38             	call   *0x38(%rax)
    efea:	41 89 c4             	mov    %eax,%r12d
    efed:	48 8b 04 24          	mov    (%rsp),%rax
    eff1:	4c 8b 28             	mov    (%rax),%r13
    eff4:	48 8b 04 24          	mov    (%rsp),%rax
    eff8:	48 8b 58 08          	mov    0x8(%rax),%rbx
    effc:	49 89 df             	mov    %rbx,%r15
    efff:	4d 29 f7             	sub    %r14,%r15
    f002:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f007:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    f00b:	4d 01 ee             	add    %r13,%r14
    f00e:	4c 89 f6             	mov    %r14,%rsi
    f011:	4c 89 fa             	mov    %r15,%rdx
    f014:	e8 37 31 ff ff       	call   2150 <memcpy@plt>
    f019:	48 8b 34 24          	mov    (%rsp),%rsi
    f01d:	4c 01 fd             	add    %r15,%rbp
    f020:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    f027:	00 
    f028:	48 89 28             	mov    %rbp,(%rax)
    f02b:	80 7e 28 00          	cmpb   $0x0,0x28(%rsi)
    f02f:	74 3f                	je     f070 <lz_decode+0x380>
    f031:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f036:	0f 57 c0             	xorps  %xmm0,%xmm0
    f039:	0f 11 00             	movups %xmm0,(%rax)
    f03c:	48 8b 46 20          	mov    0x20(%rsi),%rax
    f040:	41 c6 44 05 ff 00    	movb   $0x0,-0x1(%r13,%rax,1)
    f046:	c6 46 28 00          	movb   $0x0,0x28(%rsi)
    f04a:	45 85 e4             	test   %r12d,%r12d
    f04d:	75 58                	jne    f0a7 <lz_decode+0x3b7>
    f04f:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    f056:	00 
    f057:	48 39 cd             	cmp    %rcx,%rbp
    f05a:	0f 85 40 ff ff ff    	jne    efa0 <lz_decode+0x2b0>
    f060:	eb 45                	jmp    f0a7 <lz_decode+0x3b7>
    f062:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    f069:	1f 84 00 00 00 00 00 
    f070:	45 85 e4             	test   %r12d,%r12d
    f073:	75 32                	jne    f0a7 <lz_decode+0x3b7>
    f075:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    f07c:	00 
    f07d:	48 39 cd             	cmp    %rcx,%rbp
    f080:	74 25                	je     f0a7 <lz_decode+0x3b7>
    f082:	48 3b 5e 20          	cmp    0x20(%rsi),%rbx
    f086:	0f 83 14 ff ff ff    	jae    efa0 <lz_decode+0x2b0>
    f08c:	45 31 e4             	xor    %r12d,%r12d
    f08f:	eb 16                	jmp    f0a7 <lz_decode+0x3b7>
    f091:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    f097:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    f09d:	75 08                	jne    f0a7 <lz_decode+0x3b7>
    f09f:	44 0f b6 a6 98 00 00 	movzbl 0x98(%rsi),%r12d
    f0a6:	00 
    f0a7:	44 89 e0             	mov    %r12d,%eax
    f0aa:	48 83 c4 58          	add    $0x58,%rsp
    f0ae:	5b                   	pop    %rbx
    f0af:	41 5c                	pop    %r12
    f0b1:	41 5d                	pop    %r13
    f0b3:	41 5e                	pop    %r14
    f0b5:	41 5f                	pop    %r15
    f0b7:	5d                   	pop    %rbp
    f0b8:	c3                   	ret    
    f0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f0c0 <lz_decoder_end>:
    f0c0:	41 56                	push   %r14
    f0c2:	53                   	push   %rbx
    f0c3:	50                   	push   %rax
    f0c4:	48 89 f3             	mov    %rsi,%rbx
    f0c7:	49 89 fe             	mov    %rdi,%r14
    f0ca:	48 83 c7 58          	add    $0x58,%rdi
    f0ce:	e8 6d 3f ff ff       	call   3040 <lzma_next_end>
    f0d3:	49 8b 3e             	mov    (%r14),%rdi
    f0d6:	48 89 de             	mov    %rbx,%rsi
    f0d9:	e8 12 3e ff ff       	call   2ef0 <lzma_free>
    f0de:	49 8b 7e 30          	mov    0x30(%r14),%rdi
    f0e2:	49 8b 46 50          	mov    0x50(%r14),%rax
    f0e6:	48 89 de             	mov    %rbx,%rsi
    f0e9:	48 85 c0             	test   %rax,%rax
    f0ec:	74 04                	je     f0f2 <lz_decoder_end+0x32>
    f0ee:	ff d0                	call   *%rax
    f0f0:	eb 05                	jmp    f0f7 <lz_decoder_end+0x37>
    f0f2:	e8 f9 3d ff ff       	call   2ef0 <lzma_free>
    f0f7:	4c 89 f7             	mov    %r14,%rdi
    f0fa:	48 89 de             	mov    %rbx,%rsi
    f0fd:	48 83 c4 08          	add    $0x8,%rsp
    f101:	5b                   	pop    %rbx
    f102:	41 5e                	pop    %r14
    f104:	e9 e7 3d ff ff       	jmp    2ef0 <lzma_free>
    f109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f110 <lzma_lz_decoder_memusage>:
    f110:	48 8d 87 b0 10 00 00 	lea    0x10b0(%rdi),%rax
    f117:	c3                   	ret    
    f118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f11f:	00 

000000000000f120 <lzma_lz_decoder_uncompressed>:
    f120:	48 8b 47 30          	mov    0x30(%rdi),%rax
    f124:	48 8b 4f 48          	mov    0x48(%rdi),%rcx
    f128:	48 89 c7             	mov    %rax,%rdi
    f12b:	ff e1                	jmp    *%rcx
    f12d:	0f 1f 00             	nopl   (%rax)

000000000000f130 <lzma_lzma_encode>:
    f130:	55                   	push   %rbp
    f131:	41 57                	push   %r15
    f133:	41 56                	push   %r14
    f135:	41 55                	push   %r13
    f137:	41 54                	push   %r12
    f139:	53                   	push   %rbx
    f13a:	48 83 ec 28          	sub    $0x28,%rsp
    f13e:	44 89 cd             	mov    %r9d,%ebp
    f141:	49 89 cf             	mov    %rcx,%r15
    f144:	49 89 f5             	mov    %rsi,%r13
    f147:	48 89 fb             	mov    %rdi,%rbx
    f14a:	80 bf 8d 0b 00 00 00 	cmpb   $0x0,0xb8d(%rdi)
    f151:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    f156:	0f 85 f4 01 00 00    	jne    f350 <lzma_lzma_encode+0x220>
    f15c:	4d 89 c6             	mov    %r8,%r14
    f15f:	41 8b 45 18          	mov    0x18(%r13),%eax
    f163:	41 3b 45 20          	cmp    0x20(%r13),%eax
    f167:	75 12                	jne    f17b <lzma_lzma_encode+0x4b>
    f169:	41 83 7d 68 00       	cmpl   $0x0,0x68(%r13)
    f16e:	0f 85 d2 01 00 00    	jne    f346 <lzma_lzma_encode+0x216>
    f174:	31 c9                	xor    %ecx,%ecx
    f176:	e9 e8 08 00 00       	jmp    fa63 <lzma_lzma_encode+0x933>
    f17b:	4c 89 ef             	mov    %r13,%rdi
    f17e:	be 01 00 00 00       	mov    $0x1,%esi
    f183:	41 ff 55 38          	call   *0x38(%r13)
    f187:	41 c7 45 1c 00 00 00 	movl   $0x0,0x1c(%r13)
    f18e:	00 
    f18f:	48 8d 83 9c 6b 00 00 	lea    0x6b9c(%rbx),%rax
    f196:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f19a:	c7 44 8b 28 00 00 00 	movl   $0x0,0x28(%rbx,%rcx,4)
    f1a1:	00 
    f1a2:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f1a6:	48 89 84 cb 10 01 00 	mov    %rax,0x110(%rbx,%rcx,8)
    f1ad:	00 
    f1ae:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f1b2:	48 8d 41 01          	lea    0x1(%rcx),%rax
    f1b6:	48 89 43 18          	mov    %rax,0x18(%rbx)
    f1ba:	49 8b 45 00          	mov    0x0(%r13),%rax
    f1be:	0f b6 00             	movzbl (%rax),%eax
    f1c1:	89 c2                	mov    %eax,%edx
    f1c3:	c1 ea 07             	shr    $0x7,%edx
    f1c6:	48 8d b3 9e 0b 00 00 	lea    0xb9e(%rbx),%rsi
    f1cd:	89 54 8b 2c          	mov    %edx,0x2c(%rbx,%rcx,4)
    f1d1:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f1d5:	48 89 b4 cb 10 01 00 	mov    %rsi,0x110(%rbx,%rcx,8)
    f1dc:	00 
    f1dd:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f1e1:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    f1e5:	48 89 73 18          	mov    %rsi,0x18(%rbx)
    f1e9:	89 c6                	mov    %eax,%esi
    f1eb:	c1 ee 06             	shr    $0x6,%esi
    f1ee:	83 e6 01             	and    $0x1,%esi
    f1f1:	8d 3c 55 04 00 00 00 	lea    0x4(,%rdx,2),%edi
    f1f8:	48 01 df             	add    %rbx,%rdi
    f1fb:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f202:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f206:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f20a:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f211:	00 
    f212:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f216:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f21a:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f21e:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f221:	83 c2 04             	add    $0x4,%edx
    f224:	89 c6                	mov    %eax,%esi
    f226:	c1 ee 05             	shr    $0x5,%esi
    f229:	83 e6 01             	and    $0x1,%esi
    f22c:	8d 3c 12             	lea    (%rdx,%rdx,1),%edi
    f22f:	48 01 df             	add    %rbx,%rdi
    f232:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f239:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f23d:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f241:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f248:	00 
    f249:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f24d:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f251:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f255:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f258:	89 c6                	mov    %eax,%esi
    f25a:	c1 ee 04             	shr    $0x4,%esi
    f25d:	83 e6 01             	and    $0x1,%esi
    f260:	48 8d 3c 53          	lea    (%rbx,%rdx,2),%rdi
    f264:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f26b:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f26f:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f273:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f27a:	00 
    f27b:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f27f:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f283:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f287:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f28a:	89 c6                	mov    %eax,%esi
    f28c:	c1 ee 03             	shr    $0x3,%esi
    f28f:	83 e6 01             	and    $0x1,%esi
    f292:	48 8d 3c 53          	lea    (%rbx,%rdx,2),%rdi
    f296:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f29d:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f2a1:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f2a5:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f2ac:	00 
    f2ad:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f2b1:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f2b5:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f2b9:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f2bc:	89 c6                	mov    %eax,%esi
    f2be:	c1 ee 02             	shr    $0x2,%esi
    f2c1:	83 e6 01             	and    $0x1,%esi
    f2c4:	48 8d 3c 53          	lea    (%rbx,%rdx,2),%rdi
    f2c8:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f2cf:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f2d3:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f2d7:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f2de:	00 
    f2df:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f2e3:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f2e7:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f2eb:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f2ee:	89 c6                	mov    %eax,%esi
    f2f0:	d1 ee                	shr    %esi
    f2f2:	83 e6 01             	and    $0x1,%esi
    f2f5:	48 8d 3c 53          	lea    (%rbx,%rdx,2),%rdi
    f2f9:	48 81 c7 9c 0b 00 00 	add    $0xb9c,%rdi
    f300:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f304:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f308:	48 89 bc cb 10 01 00 	mov    %rdi,0x110(%rbx,%rcx,8)
    f30f:	00 
    f310:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f314:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    f318:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f31c:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
    f31f:	83 e0 01             	and    $0x1,%eax
    f322:	48 8d 14 53          	lea    (%rbx,%rdx,2),%rdx
    f326:	48 81 c2 9c 0b 00 00 	add    $0xb9c,%rdx
    f32d:	89 44 8b 2c          	mov    %eax,0x2c(%rbx,%rcx,4)
    f331:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f335:	48 89 94 c3 10 01 00 	mov    %rdx,0x110(%rbx,%rax,8)
    f33c:	00 
    f33d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    f342:	48 ff 43 18          	incq   0x18(%rbx)
    f346:	c6 83 8d 0b 00 00 01 	movb   $0x1,0xb8d(%rbx)
    f34d:	4d 89 f0             	mov    %r14,%r8
    f350:	45 8b 75 18          	mov    0x18(%r13),%r14d
    f354:	45 8b 65 1c          	mov    0x1c(%r13),%r12d
    f358:	48 89 df             	mov    %rbx,%rdi
    f35b:	48 89 d6             	mov    %rdx,%rsi
    f35e:	4c 89 fa             	mov    %r15,%rdx
    f361:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    f366:	4c 89 c1             	mov    %r8,%rcx
    f369:	e8 12 07 00 00       	call   fa80 <rc_encode>
    f36e:	31 c9                	xor    %ecx,%ecx
    f370:	84 c0                	test   %al,%al
    f372:	0f 85 eb 06 00 00    	jne    fa63 <lzma_lzma_encode+0x933>
    f378:	45 29 e6             	sub    %r12d,%r14d
    f37b:	48 8d 83 48 ba 00 00 	lea    0xba48(%rbx),%rax
    f382:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f387:	eb 2e                	jmp    f3b7 <lzma_lzma_encode+0x287>
    f389:	83 c0 fa             	add    $0xfffffffa,%eax
    f38c:	89 c1                	mov    %eax,%ecx
    f38e:	89 8b e0 02 00 00    	mov    %ecx,0x2e0(%rbx)
    f394:	8b 44 24 04          	mov    0x4(%rsp),%eax
    f398:	45 29 65 1c          	sub    %r12d,0x1c(%r13)
    f39c:	41 01 c6             	add    %eax,%r14d
    f39f:	48 89 df             	mov    %rbx,%rdi
    f3a2:	4c 89 fa             	mov    %r15,%rdx
    f3a5:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    f3aa:	e8 d1 06 00 00       	call   fa80 <rc_encode>
    f3af:	84 c0                	test   %al,%al
    f3b1:	0f 85 bd fd ff ff    	jne    f174 <lzma_lzma_encode+0x44>
    f3b7:	41 8b 45 18          	mov    0x18(%r13),%eax
    f3bb:	83 fd ff             	cmp    $0xffffffff,%ebp
    f3be:	74 29                	je     f3e9 <lzma_lzma_encode+0x2b9>
    f3c0:	89 c1                	mov    %eax,%ecx
    f3c2:	41 2b 4d 1c          	sub    0x1c(%r13),%ecx
    f3c6:	39 e9                	cmp    %ebp,%ecx
    f3c8:	0f 83 71 05 00 00    	jae    f93f <lzma_lzma_encode+0x80f>
    f3ce:	49 8b 0f             	mov    (%r15),%rcx
    f3d1:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    f3d5:	48 01 d1             	add    %rdx,%rcx
    f3d8:	48 83 c1 04          	add    $0x4,%rcx
    f3dc:	48 81 f9 fe ef 00 00 	cmp    $0xeffe,%rcx
    f3e3:	0f 87 56 05 00 00    	ja     f93f <lzma_lzma_encode+0x80f>
    f3e9:	41 3b 45 20          	cmp    0x20(%r13),%eax
    f3ed:	72 16                	jb     f405 <lzma_lzma_encode+0x2d5>
    f3ef:	41 83 7d 68 00       	cmpl   $0x0,0x68(%r13)
    f3f4:	0f 84 7a fd ff ff    	je     f174 <lzma_lzma_encode+0x44>
    f3fa:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
    f3ff:	0f 84 3a 05 00 00    	je     f93f <lzma_lzma_encode+0x80f>
    f405:	80 bb 8c 0b 00 00 00 	cmpb   $0x0,0xb8c(%rbx)
    f40c:	74 22                	je     f430 <lzma_lzma_encode+0x300>
    f40e:	48 89 df             	mov    %rbx,%rdi
    f411:	4c 89 ee             	mov    %r13,%rsi
    f414:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    f419:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    f41e:	e8 5d 29 00 00       	call   11d80 <lzma_lzma_optimum_fast>
    f423:	eb 23                	jmp    f448 <lzma_lzma_encode+0x318>
    f425:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    f42c:	00 00 00 00 
    f430:	48 89 df             	mov    %rbx,%rdi
    f433:	4c 89 ee             	mov    %r13,%rsi
    f436:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    f43b:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    f440:	45 89 f0             	mov    %r14d,%r8d
    f443:	e8 b8 31 00 00       	call   12600 <lzma_lzma_optimum_normal>
    f448:	8b 54 24 14          	mov    0x14(%rsp),%edx
    f44c:	8b 83 90 0b 00 00    	mov    0xb90(%rbx),%eax
    f452:	44 21 f0             	and    %r14d,%eax
    f455:	8b 8b e0 02 00 00    	mov    0x2e0(%rbx),%ecx
    f45b:	48 c1 e1 05          	shl    $0x5,%rcx
    f45f:	48 01 d9             	add    %rbx,%rcx
    f462:	44 8b 64 24 04       	mov    0x4(%rsp),%r12d
    f467:	48 8d 0c 41          	lea    (%rcx,%rax,2),%rcx
    f46b:	48 81 c1 9c 6b 00 00 	add    $0x6b9c,%rcx
    f472:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f476:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    f47b:	48 39 fa             	cmp    %rdi,%rdx
    f47e:	0f 84 dc 00 00 00    	je     f560 <lzma_lzma_encode+0x430>
    f484:	c7 44 b3 28 01 00 00 	movl   $0x1,0x28(%rbx,%rsi,4)
    f48b:	00 
    f48c:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f490:	48 89 8c f3 10 01 00 	mov    %rcx,0x110(%rbx,%rsi,8)
    f497:	00 
    f498:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f49c:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    f4a0:	48 89 73 18          	mov    %rsi,0x18(%rbx)
    f4a4:	8b b3 e0 02 00 00    	mov    0x2e0(%rbx),%esi
    f4aa:	48 8d 34 73          	lea    (%rbx,%rsi,2),%rsi
    f4ae:	48 81 c6 1c 6d 00 00 	add    $0x6d1c,%rsi
    f4b5:	83 fa 03             	cmp    $0x3,%edx
    f4b8:	0f 87 72 02 00 00    	ja     f730 <lzma_lzma_encode+0x600>
    f4be:	c7 44 8b 2c 01 00 00 	movl   $0x1,0x2c(%rbx,%rcx,4)
    f4c5:	00 
    f4c6:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f4ca:	48 89 b4 cb 10 01 00 	mov    %rsi,0x110(%rbx,%rcx,8)
    f4d1:	00 
    f4d2:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f4d6:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    f4da:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    f4de:	48 85 d2             	test   %rdx,%rdx
    f4e1:	0f 84 1a 03 00 00    	je     f801 <lzma_lzma_encode+0x6d1>
    f4e7:	8b 8c 93 e4 02 00 00 	mov    0x2e4(%rbx,%rdx,4),%ecx
    f4ee:	8b bb e0 02 00 00    	mov    0x2e0(%rbx),%edi
    f4f4:	48 8d 3c 7b          	lea    (%rbx,%rdi,2),%rdi
    f4f8:	48 81 c7 34 6d 00 00 	add    $0x6d34,%rdi
    f4ff:	c7 44 b3 2c 01 00 00 	movl   $0x1,0x2c(%rbx,%rsi,4)
    f506:	00 
    f507:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f50b:	48 89 bc f3 10 01 00 	mov    %rdi,0x110(%rbx,%rsi,8)
    f512:	00 
    f513:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f517:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
    f51b:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f51f:	8b bb e0 02 00 00    	mov    0x2e0(%rbx),%edi
    f525:	48 8d 3c 7b          	lea    (%rbx,%rdi,2),%rdi
    f529:	48 81 c7 4c 6d 00 00 	add    $0x6d4c,%rdi
    f530:	48 83 fa 01          	cmp    $0x1,%rdx
    f534:	0f 85 42 03 00 00    	jne    f87c <lzma_lzma_encode+0x74c>
    f53a:	c7 44 b3 2c 00 00 00 	movl   $0x0,0x2c(%rbx,%rsi,4)
    f541:	00 
    f542:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    f546:	48 89 bc d3 10 01 00 	mov    %rdi,0x110(%rbx,%rdx,8)
    f54d:	00 
    f54e:	48 ff 43 18          	incq   0x18(%rbx)
    f552:	e9 8a 03 00 00       	jmp    f8e1 <lzma_lzma_encode+0x7b1>
    f557:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f55e:	00 00 
    f560:	c7 44 b3 28 00 00 00 	movl   $0x0,0x28(%rbx,%rsi,4)
    f567:	00 
    f568:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f56c:	48 89 8c c3 10 01 00 	mov    %rcx,0x110(%rbx,%rax,8)
    f573:	00 
    f574:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f578:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    f57c:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    f580:	41 8b 7d 18          	mov    0x18(%r13),%edi
    f584:	41 2b 7d 1c          	sub    0x1c(%r13),%edi
    f588:	4d 8b 45 00          	mov    0x0(%r13),%r8
    f58c:	44 8b 8b 98 0b 00 00 	mov    0xb98(%rbx),%r9d
    f593:	45 21 f1             	and    %r14d,%r9d
    f596:	0f b6 8b 94 0b 00 00 	movzbl 0xb94(%rbx),%ecx
    f59d:	41 d3 e1             	shl    %cl,%r9d
    f5a0:	8d 47 ff             	lea    -0x1(%rdi),%eax
    f5a3:	45 0f b6 14 00       	movzbl (%r8,%rax,1),%r10d
    f5a8:	b0 08                	mov    $0x8,%al
    f5aa:	28 c8                	sub    %cl,%al
    f5ac:	89 c1                	mov    %eax,%ecx
    f5ae:	41 d3 ea             	shr    %cl,%r10d
    f5b1:	41 0f b6 04 38       	movzbl (%r8,%rdi,1),%eax
    f5b6:	45 01 ca             	add    %r9d,%r10d
    f5b9:	4b 8d 0c 52          	lea    (%r10,%r10,2),%rcx
    f5bd:	48 c1 e1 09          	shl    $0x9,%rcx
    f5c1:	48 01 d9             	add    %rbx,%rcx
    f5c4:	48 81 c1 9c 0b 00 00 	add    $0xb9c,%rcx
    f5cb:	83 bb e0 02 00 00 06 	cmpl   $0x6,0x2e0(%rbx)
    f5d2:	0f 87 85 01 00 00    	ja     f75d <lzma_lzma_encode+0x62d>
    f5d8:	89 c2                	mov    %eax,%edx
    f5da:	c1 ea 07             	shr    $0x7,%edx
    f5dd:	48 8d 79 02          	lea    0x2(%rcx),%rdi
    f5e1:	89 54 b3 2c          	mov    %edx,0x2c(%rbx,%rsi,4)
    f5e5:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f5e9:	48 89 bc f3 10 01 00 	mov    %rdi,0x110(%rbx,%rsi,8)
    f5f0:	00 
    f5f1:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f5f5:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
    f5f9:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f5fd:	89 c7                	mov    %eax,%edi
    f5ff:	c1 ef 06             	shr    $0x6,%edi
    f602:	83 e7 01             	and    $0x1,%edi
    f605:	44 8d 04 55 04 00 00 	lea    0x4(,%rdx,2),%r8d
    f60c:	00 
    f60d:	49 01 c8             	add    %rcx,%r8
    f610:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f614:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f618:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f61f:	00 
    f620:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f624:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f628:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f62c:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f62f:	83 c2 04             	add    $0x4,%edx
    f632:	89 c7                	mov    %eax,%edi
    f634:	c1 ef 05             	shr    $0x5,%edi
    f637:	83 e7 01             	and    $0x1,%edi
    f63a:	44 8d 04 12          	lea    (%rdx,%rdx,1),%r8d
    f63e:	49 01 c8             	add    %rcx,%r8
    f641:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f645:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f649:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f650:	00 
    f651:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f655:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f659:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f65d:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f660:	89 c7                	mov    %eax,%edi
    f662:	c1 ef 04             	shr    $0x4,%edi
    f665:	83 e7 01             	and    $0x1,%edi
    f668:	4c 8d 04 51          	lea    (%rcx,%rdx,2),%r8
    f66c:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f670:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f674:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f67b:	00 
    f67c:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f680:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f684:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f688:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f68b:	89 c7                	mov    %eax,%edi
    f68d:	c1 ef 03             	shr    $0x3,%edi
    f690:	83 e7 01             	and    $0x1,%edi
    f693:	4c 8d 04 51          	lea    (%rcx,%rdx,2),%r8
    f697:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f69b:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f69f:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f6a6:	00 
    f6a7:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f6ab:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f6af:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f6b3:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f6b6:	89 c7                	mov    %eax,%edi
    f6b8:	c1 ef 02             	shr    $0x2,%edi
    f6bb:	83 e7 01             	and    $0x1,%edi
    f6be:	4c 8d 04 51          	lea    (%rcx,%rdx,2),%r8
    f6c2:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f6c6:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f6ca:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f6d1:	00 
    f6d2:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f6d6:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f6da:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f6de:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f6e1:	89 c7                	mov    %eax,%edi
    f6e3:	d1 ef                	shr    %edi
    f6e5:	83 e7 01             	and    $0x1,%edi
    f6e8:	4c 8d 04 51          	lea    (%rcx,%rdx,2),%r8
    f6ec:	89 7c b3 2c          	mov    %edi,0x2c(%rbx,%rsi,4)
    f6f0:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f6f4:	4c 89 84 f3 10 01 00 	mov    %r8,0x110(%rbx,%rsi,8)
    f6fb:	00 
    f6fc:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f700:	4c 8d 46 01          	lea    0x1(%rsi),%r8
    f704:	4c 89 43 18          	mov    %r8,0x18(%rbx)
    f708:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
    f70b:	83 e0 01             	and    $0x1,%eax
    f70e:	48 8d 0c 51          	lea    (%rcx,%rdx,2),%rcx
    f712:	89 44 b3 2c          	mov    %eax,0x2c(%rbx,%rsi,4)
    f716:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f71a:	48 89 8c c3 10 01 00 	mov    %rcx,0x110(%rbx,%rax,8)
    f721:	00 
    f722:	48 ff 43 18          	incq   0x18(%rbx)
    f726:	e9 af 00 00 00       	jmp    f7da <lzma_lzma_encode+0x6aa>
    f72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f730:	c7 44 8b 2c 00 00 00 	movl   $0x0,0x2c(%rbx,%rcx,4)
    f737:	00 
    f738:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f73c:	48 89 b4 cb 10 01 00 	mov    %rsi,0x110(%rbx,%rcx,8)
    f743:	00 
    f744:	48 ff 43 18          	incq   0x18(%rbx)
    f748:	83 c2 fc             	add    $0xfffffffc,%edx
    f74b:	48 89 df             	mov    %rbx,%rdi
    f74e:	89 c6                	mov    %eax,%esi
    f750:	44 89 e1             	mov    %r12d,%ecx
    f753:	e8 58 17 00 00       	call   10eb0 <match>
    f758:	e9 d5 01 00 00       	jmp    f932 <lzma_lzma_encode+0x802>
    f75d:	8b b3 e4 02 00 00    	mov    0x2e4(%rbx),%esi
    f763:	f7 d6                	not    %esi
    f765:	01 f7                	add    %esi,%edi
    f767:	41 0f b6 34 38       	movzbl (%r8,%rdi,1),%esi
    f76c:	0d 00 01 00 00       	or     $0x100,%eax
    f771:	bf 00 01 00 00       	mov    $0x100,%edi
    f776:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f77d:	00 00 00 
    f780:	01 f6                	add    %esi,%esi
    f782:	41 89 f0             	mov    %esi,%r8d
    f785:	41 21 f8             	and    %edi,%r8d
    f788:	41 89 c1             	mov    %eax,%r9d
    f78b:	41 c1 e9 08          	shr    $0x8,%r9d
    f78f:	41 01 f9             	add    %edi,%r9d
    f792:	45 01 c1             	add    %r8d,%r9d
    f795:	41 89 c0             	mov    %eax,%r8d
    f798:	41 c1 e8 07          	shr    $0x7,%r8d
    f79c:	41 83 e0 01          	and    $0x1,%r8d
    f7a0:	4e 8d 0c 49          	lea    (%rcx,%r9,2),%r9
    f7a4:	44 89 44 93 28       	mov    %r8d,0x28(%rbx,%rdx,4)
    f7a9:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    f7ad:	4c 89 8c d3 10 01 00 	mov    %r9,0x110(%rbx,%rdx,8)
    f7b4:	00 
    f7b5:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    f7b9:	48 ff c2             	inc    %rdx
    f7bc:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    f7c0:	44 8d 04 00          	lea    (%rax,%rax,1),%r8d
    f7c4:	45 89 c1             	mov    %r8d,%r9d
    f7c7:	41 31 f1             	xor    %esi,%r9d
    f7ca:	41 f7 d1             	not    %r9d
    f7cd:	44 21 cf             	and    %r9d,%edi
    f7d0:	3d 00 80 00 00       	cmp    $0x8000,%eax
    f7d5:	44 89 c0             	mov    %r8d,%eax
    f7d8:	72 a6                	jb     f780 <lzma_lzma_encode+0x650>
    f7da:	8b 83 e0 02 00 00    	mov    0x2e0(%rbx),%eax
    f7e0:	31 c9                	xor    %ecx,%ecx
    f7e2:	83 f8 04             	cmp    $0x4,%eax
    f7e5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    f7ea:	0f 82 9e fb ff ff    	jb     f38e <lzma_lzma_encode+0x25e>
    f7f0:	83 f8 09             	cmp    $0x9,%eax
    f7f3:	0f 87 90 fb ff ff    	ja     f389 <lzma_lzma_encode+0x259>
    f7f9:	83 c0 fd             	add    $0xfffffffd,%eax
    f7fc:	e9 8b fb ff ff       	jmp    f38c <lzma_lzma_encode+0x25c>
    f801:	8b 8b e0 02 00 00    	mov    0x2e0(%rbx),%ecx
    f807:	48 8d 0c 4b          	lea    (%rbx,%rcx,2),%rcx
    f80b:	48 81 c1 34 6d 00 00 	add    $0x6d34,%rcx
    f812:	c7 44 b3 2c 00 00 00 	movl   $0x0,0x2c(%rbx,%rsi,4)
    f819:	00 
    f81a:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    f81e:	48 89 8c d3 10 01 00 	mov    %rcx,0x110(%rbx,%rdx,8)
    f825:	00 
    f826:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f82a:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    f82e:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    f832:	8b 93 e0 02 00 00    	mov    0x2e0(%rbx),%edx
    f838:	48 c1 e2 05          	shl    $0x5,%rdx
    f83c:	48 01 da             	add    %rbx,%rdx
    f83f:	48 8d 14 42          	lea    (%rdx,%rax,2),%rdx
    f843:	48 81 c2 7c 6d 00 00 	add    $0x6d7c,%rdx
    f84a:	31 f6                	xor    %esi,%esi
    f84c:	41 83 fc 01          	cmp    $0x1,%r12d
    f850:	40 0f 95 c6          	setne  %sil
    f854:	89 74 8b 2c          	mov    %esi,0x2c(%rbx,%rcx,4)
    f858:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f85c:	48 89 94 cb 10 01 00 	mov    %rdx,0x110(%rbx,%rcx,8)
    f863:	00 
    f864:	48 ff 43 18          	incq   0x18(%rbx)
    f868:	b9 09 00 00 00       	mov    $0x9,%ecx
    f86d:	41 83 fc 01          	cmp    $0x1,%r12d
    f871:	0f 85 87 00 00 00    	jne    f8fe <lzma_lzma_encode+0x7ce>
    f877:	e9 a1 00 00 00       	jmp    f91d <lzma_lzma_encode+0x7ed>
    f87c:	c7 44 b3 2c 01 00 00 	movl   $0x1,0x2c(%rbx,%rsi,4)
    f883:	00 
    f884:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f888:	48 89 bc f3 10 01 00 	mov    %rdi,0x110(%rbx,%rsi,8)
    f88f:	00 
    f890:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f894:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
    f898:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    f89c:	8b bb e0 02 00 00    	mov    0x2e0(%rbx),%edi
    f8a2:	48 8d bc 7b 64 6d 00 	lea    0x6d64(%rbx,%rdi,2),%rdi
    f8a9:	00 
    f8aa:	44 8d 42 fe          	lea    -0x2(%rdx),%r8d
    f8ae:	44 89 44 b3 2c       	mov    %r8d,0x2c(%rbx,%rsi,4)
    f8b3:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f8b7:	48 89 bc f3 10 01 00 	mov    %rdi,0x110(%rbx,%rsi,8)
    f8be:	00 
    f8bf:	48 ff 43 18          	incq   0x18(%rbx)
    f8c3:	48 83 fa 03          	cmp    $0x3,%rdx
    f8c7:	75 0c                	jne    f8d5 <lzma_lzma_encode+0x7a5>
    f8c9:	8b 93 ec 02 00 00    	mov    0x2ec(%rbx),%edx
    f8cf:	89 93 f0 02 00 00    	mov    %edx,0x2f0(%rbx)
    f8d5:	8b 93 e8 02 00 00    	mov    0x2e8(%rbx),%edx
    f8db:	89 93 ec 02 00 00    	mov    %edx,0x2ec(%rbx)
    f8e1:	8b 93 e4 02 00 00    	mov    0x2e4(%rbx),%edx
    f8e7:	89 93 e8 02 00 00    	mov    %edx,0x2e8(%rbx)
    f8ed:	89 8b e4 02 00 00    	mov    %ecx,0x2e4(%rbx)
    f8f3:	b9 09 00 00 00       	mov    $0x9,%ecx
    f8f8:	41 83 fc 01          	cmp    $0x1,%r12d
    f8fc:	74 1f                	je     f91d <lzma_lzma_encode+0x7ed>
    f8fe:	44 0f b6 83 8c 0b 00 	movzbl 0xb8c(%rbx),%r8d
    f905:	00 
    f906:	48 89 df             	mov    %rbx,%rdi
    f909:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    f90e:	89 c2                	mov    %eax,%edx
    f910:	44 89 e1             	mov    %r12d,%ecx
    f913:	e8 18 1a 00 00       	call   11330 <length>
    f918:	b9 08 00 00 00       	mov    $0x8,%ecx
    f91d:	83 bb e0 02 00 00 07 	cmpl   $0x7,0x2e0(%rbx)
    f924:	b8 0b 00 00 00       	mov    $0xb,%eax
    f929:	0f 43 c8             	cmovae %eax,%ecx
    f92c:	89 8b e0 02 00 00    	mov    %ecx,0x2e0(%rbx)
    f932:	44 89 e0             	mov    %r12d,%eax
    f935:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    f93a:	e9 59 fa ff ff       	jmp    f398 <lzma_lzma_encode+0x268>
    f93f:	80 bb 8e 0b 00 00 00 	cmpb   $0x0,0xb8e(%rbx)
    f946:	0f 85 0b 01 00 00    	jne    fa57 <lzma_lzma_encode+0x927>
    f94c:	c6 83 8e 0b 00 00 01 	movb   $0x1,0xb8e(%rbx)
    f953:	83 fd ff             	cmp    $0xffffffff,%ebp
    f956:	75 7d                	jne    f9d5 <lzma_lzma_encode+0x8a5>
    f958:	44 23 b3 90 0b 00 00 	and    0xb90(%rbx),%r14d
    f95f:	8b 83 e0 02 00 00    	mov    0x2e0(%rbx),%eax
    f965:	48 c1 e0 05          	shl    $0x5,%rax
    f969:	48 01 d8             	add    %rbx,%rax
    f96c:	4a 8d 04 70          	lea    (%rax,%r14,2),%rax
    f970:	48 05 9c 6b 00 00    	add    $0x6b9c,%rax
    f976:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f97a:	c7 44 8b 28 01 00 00 	movl   $0x1,0x28(%rbx,%rcx,4)
    f981:	00 
    f982:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    f986:	48 89 84 cb 10 01 00 	mov    %rax,0x110(%rbx,%rcx,8)
    f98d:	00 
    f98e:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f992:	48 8d 48 01          	lea    0x1(%rax),%rcx
    f996:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    f99a:	8b 8b e0 02 00 00    	mov    0x2e0(%rbx),%ecx
    f9a0:	48 8d 8c 4b 1c 6d 00 	lea    0x6d1c(%rbx,%rcx,2),%rcx
    f9a7:	00 
    f9a8:	c7 44 83 2c 00 00 00 	movl   $0x0,0x2c(%rbx,%rax,4)
    f9af:	00 
    f9b0:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f9b4:	48 89 8c c3 10 01 00 	mov    %rcx,0x110(%rbx,%rax,8)
    f9bb:	00 
    f9bc:	48 ff 43 18          	incq   0x18(%rbx)
    f9c0:	48 89 df             	mov    %rbx,%rdi
    f9c3:	44 89 f6             	mov    %r14d,%esi
    f9c6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    f9cb:	b9 02 00 00 00       	mov    $0x2,%ecx
    f9d0:	e8 db 14 00 00       	call   10eb0 <match>
    f9d5:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f9d9:	48 8d 48 01          	lea    0x1(%rax),%rcx
    f9dd:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    f9e1:	c7 44 83 28 04 00 00 	movl   $0x4,0x28(%rbx,%rax,4)
    f9e8:	00 
    f9e9:	48 8b 43 18          	mov    0x18(%rbx),%rax
    f9ed:	48 8d 48 01          	lea    0x1(%rax),%rcx
    f9f1:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    f9f5:	c7 44 83 28 04 00 00 	movl   $0x4,0x28(%rbx,%rax,4)
    f9fc:	00 
    f9fd:	48 8b 43 18          	mov    0x18(%rbx),%rax
    fa01:	48 8d 48 01          	lea    0x1(%rax),%rcx
    fa05:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    fa09:	c7 44 83 28 04 00 00 	movl   $0x4,0x28(%rbx,%rax,4)
    fa10:	00 
    fa11:	48 8b 43 18          	mov    0x18(%rbx),%rax
    fa15:	48 8d 48 01          	lea    0x1(%rax),%rcx
    fa19:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    fa1d:	c7 44 83 28 04 00 00 	movl   $0x4,0x28(%rbx,%rax,4)
    fa24:	00 
    fa25:	48 8b 43 18          	mov    0x18(%rbx),%rax
    fa29:	48 8d 48 01          	lea    0x1(%rax),%rcx
    fa2d:	48 89 4b 18          	mov    %rcx,0x18(%rbx)
    fa31:	c7 44 83 28 04 00 00 	movl   $0x4,0x28(%rbx,%rax,4)
    fa38:	00 
    fa39:	48 89 df             	mov    %rbx,%rdi
    fa3c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    fa41:	4c 89 fa             	mov    %r15,%rdx
    fa44:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    fa49:	e8 32 00 00 00       	call   fa80 <rc_encode>
    fa4e:	84 c0                	test   %al,%al
    fa50:	b9 00 00 00 00       	mov    $0x0,%ecx
    fa55:	75 0c                	jne    fa63 <lzma_lzma_encode+0x933>
    fa57:	c6 83 8e 0b 00 00 00 	movb   $0x0,0xb8e(%rbx)
    fa5e:	b9 01 00 00 00       	mov    $0x1,%ecx
    fa63:	89 c8                	mov    %ecx,%eax
    fa65:	48 83 c4 28          	add    $0x28,%rsp
    fa69:	5b                   	pop    %rbx
    fa6a:	41 5c                	pop    %r12
    fa6c:	41 5d                	pop    %r13
    fa6e:	41 5e                	pop    %r14
    fa70:	41 5f                	pop    %r15
    fa72:	5d                   	pop    %rbp
    fa73:	c3                   	ret    
    fa74:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    fa7b:	00 00 00 00 00 

000000000000fa80 <rc_encode>:
    fa80:	41 56                	push   %r14
    fa82:	53                   	push   %rbx
    fa83:	48 8d 47 18          	lea    0x18(%rdi),%rax
    fa87:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
    fa8b:	4c 3b 4f 18          	cmp    0x18(%rdi),%r9
    fa8f:	0f 83 d7 01 00 00    	jae    fc6c <rc_encode+0x1ec>
    fa95:	41 b8 00 00 00 ff    	mov    $0xff000000,%r8d
    fa9b:	4c 8d 15 1e 86 01 00 	lea    0x1861e(%rip),%r10        # 280c0 <SHA256_K+0x160>
    faa2:	eb 21                	jmp    fac5 <rc_encode+0x45>
    faa4:	41 d1 eb             	shr    %r11d
    faa7:	44 89 5f 10          	mov    %r11d,0x10(%rdi)
    faab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fab0:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
    fab4:	49 ff c1             	inc    %r9
    fab7:	4c 89 4f 20          	mov    %r9,0x20(%rdi)
    fabb:	4c 3b 4f 18          	cmp    0x18(%rdi),%r9
    fabf:	0f 83 a7 01 00 00    	jae    fc6c <rc_encode+0x1ec>
    fac5:	44 8b 5f 10          	mov    0x10(%rdi),%r11d
    fac9:	41 81 fb ff ff ff 00 	cmp    $0xffffff,%r11d
    fad0:	77 72                	ja     fb44 <rc_encode+0xc4>
    fad2:	48 8b 1f             	mov    (%rdi),%rbx
    fad5:	49 89 de             	mov    %rbx,%r14
    fad8:	49 81 e6 00 00 00 ff 	and    $0xffffffffff000000,%r14
    fadf:	4d 39 c6             	cmp    %r8,%r14
    fae2:	75 0c                	jne    faf0 <rc_encode+0x70>
    fae4:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    fae8:	49 ff c6             	inc    %r14
    faeb:	eb 45                	jmp    fb32 <rc_encode+0xb2>
    faed:	0f 1f 00             	nopl   (%rax)
    faf0:	4c 8b 0a             	mov    (%rdx),%r9
    faf3:	49 39 c9             	cmp    %rcx,%r9
    faf6:	0f 84 7c 01 00 00    	je     fc78 <rc_encode+0x1f8>
    fafc:	44 0f b6 5f 14       	movzbl 0x14(%rdi),%r11d
    fb01:	44 02 5f 04          	add    0x4(%rdi),%r11b
    fb05:	46 88 1c 0e          	mov    %r11b,(%rsi,%r9,1)
    fb09:	48 ff 02             	incq   (%rdx)
    fb0c:	c6 47 14 ff          	movb   $0xff,0x14(%rdi)
    fb10:	48 ff 4f 08          	decq   0x8(%rdi)
    fb14:	75 da                	jne    faf0 <rc_encode+0x70>
    fb16:	48 8b 1f             	mov    (%rdi),%rbx
    fb19:	41 89 d9             	mov    %ebx,%r9d
    fb1c:	41 c1 e9 18          	shr    $0x18,%r9d
    fb20:	44 88 4f 14          	mov    %r9b,0x14(%rdi)
    fb24:	44 8b 5f 10          	mov    0x10(%rdi),%r11d
    fb28:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
    fb2c:	41 be 01 00 00 00    	mov    $0x1,%r14d
    fb32:	4c 89 77 08          	mov    %r14,0x8(%rdi)
    fb36:	c1 e3 08             	shl    $0x8,%ebx
    fb39:	48 89 1f             	mov    %rbx,(%rdi)
    fb3c:	41 c1 e3 08          	shl    $0x8,%r11d
    fb40:	44 89 5f 10          	mov    %r11d,0x10(%rdi)
    fb44:	42 8b 5c 8f 28       	mov    0x28(%rdi,%r9,4),%ebx
    fb49:	48 83 fb 04          	cmp    $0x4,%rbx
    fb4d:	0f 87 5d ff ff ff    	ja     fab0 <rc_encode+0x30>
    fb53:	49 63 1c 9a          	movslq (%r10,%rbx,4),%rbx
    fb57:	4c 01 d3             	add    %r10,%rbx
    fb5a:	ff e3                	jmp    *%rbx
    fb5c:	4a 8b 9c cf 10 01 00 	mov    0x110(%rdi,%r9,8),%rbx
    fb63:	00 
    fb64:	0f b7 1b             	movzwl (%rbx),%ebx
    fb67:	41 c1 eb 0b          	shr    $0xb,%r11d
    fb6b:	44 0f af db          	imul   %ebx,%r11d
    fb6f:	44 89 5f 10          	mov    %r11d,0x10(%rdi)
    fb73:	41 bb 00 08 00 00    	mov    $0x800,%r11d
    fb79:	41 29 db             	sub    %ebx,%r11d
    fb7c:	41 c1 eb 05          	shr    $0x5,%r11d
    fb80:	41 01 db             	add    %ebx,%r11d
    fb83:	4e 8b 8c cf 10 01 00 	mov    0x110(%rdi,%r9,8),%r9
    fb8a:	00 
    fb8b:	66 45 89 19          	mov    %r11w,(%r9)
    fb8f:	e9 1c ff ff ff       	jmp    fab0 <rc_encode+0x30>
    fb94:	41 d1 eb             	shr    %r11d
    fb97:	44 89 5f 10          	mov    %r11d,0x10(%rdi)
    fb9b:	4c 01 1f             	add    %r11,(%rdi)
    fb9e:	e9 0d ff ff ff       	jmp    fab0 <rc_encode+0x30>
    fba3:	4a 8b 9c cf 10 01 00 	mov    0x110(%rdi,%r9,8),%rbx
    fbaa:	00 
    fbab:	0f b7 1b             	movzwl (%rbx),%ebx
    fbae:	45 89 de             	mov    %r11d,%r14d
    fbb1:	41 c1 ee 0b          	shr    $0xb,%r14d
    fbb5:	44 0f af f3          	imul   %ebx,%r14d
    fbb9:	4c 01 37             	add    %r14,(%rdi)
    fbbc:	45 29 f3             	sub    %r14d,%r11d
    fbbf:	44 89 5f 10          	mov    %r11d,0x10(%rdi)
    fbc3:	41 89 db             	mov    %ebx,%r11d
    fbc6:	41 c1 eb 05          	shr    $0x5,%r11d
    fbca:	44 29 db             	sub    %r11d,%ebx
    fbcd:	4e 8b 8c cf 10 01 00 	mov    0x110(%rdi,%r9,8),%r9
    fbd4:	00 
    fbd5:	66 41 89 19          	mov    %bx,(%r9)
    fbd9:	e9 d2 fe ff ff       	jmp    fab0 <rc_encode+0x30>
    fbde:	c7 47 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rdi)
    fbe5:	4c 8b 17             	mov    (%rdi),%r10
    fbe8:	4d 89 d3             	mov    %r10,%r11
    fbeb:	49 81 e3 00 00 00 ff 	and    $0xffffffffff000000,%r11
    fbf2:	4d 39 c3             	cmp    %r8,%r11
    fbf5:	75 09                	jne    fc00 <rc_encode+0x180>
    fbf7:	4c 8b 5f 08          	mov    0x8(%rdi),%r11
    fbfb:	49 ff c3             	inc    %r11
    fbfe:	eb 3a                	jmp    fc3a <rc_encode+0x1ba>
    fc00:	4c 8b 0a             	mov    (%rdx),%r9
    fc03:	49 39 c9             	cmp    %rcx,%r9
    fc06:	74 70                	je     fc78 <rc_encode+0x1f8>
    fc08:	44 0f b6 57 14       	movzbl 0x14(%rdi),%r10d
    fc0d:	44 02 57 04          	add    0x4(%rdi),%r10b
    fc11:	46 88 14 0e          	mov    %r10b,(%rsi,%r9,1)
    fc15:	48 ff 02             	incq   (%rdx)
    fc18:	c6 47 14 ff          	movb   $0xff,0x14(%rdi)
    fc1c:	48 ff 4f 08          	decq   0x8(%rdi)
    fc20:	75 de                	jne    fc00 <rc_encode+0x180>
    fc22:	4c 8b 17             	mov    (%rdi),%r10
    fc25:	4c 8b 4f 20          	mov    0x20(%rdi),%r9
    fc29:	45 89 d3             	mov    %r10d,%r11d
    fc2c:	41 c1 eb 18          	shr    $0x18,%r11d
    fc30:	44 88 5f 14          	mov    %r11b,0x14(%rdi)
    fc34:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    fc3a:	4c 89 5f 08          	mov    %r11,0x8(%rdi)
    fc3e:	41 c1 e2 08          	shl    $0x8,%r10d
    fc42:	4c 89 17             	mov    %r10,(%rdi)
    fc45:	49 ff c1             	inc    %r9
    fc48:	4c 89 4f 20          	mov    %r9,0x20(%rdi)
    fc4c:	4c 3b 4f 18          	cmp    0x18(%rdi),%r9
    fc50:	72 96                	jb     fbe8 <rc_encode+0x168>
    fc52:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    fc59:	48 c7 47 08 01 00 00 	movq   $0x1,0x8(%rdi)
    fc60:	00 
    fc61:	c7 47 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rdi)
    fc68:	c6 47 14 00          	movb   $0x0,0x14(%rdi)
    fc6c:	0f 57 c0             	xorps  %xmm0,%xmm0
    fc6f:	0f 11 00             	movups %xmm0,(%rax)
    fc72:	31 c0                	xor    %eax,%eax
    fc74:	5b                   	pop    %rbx
    fc75:	41 5e                	pop    %r14
    fc77:	c3                   	ret    
    fc78:	b0 01                	mov    $0x1,%al
    fc7a:	5b                   	pop    %rbx
    fc7b:	41 5e                	pop    %r14
    fc7d:	c3                   	ret    
    fc7e:	66 90                	xchg   %ax,%ax

000000000000fc80 <lzma_lzma_encoder_reset>:
    fc80:	8b 4e 14             	mov    0x14(%rsi),%ecx
    fc83:	b8 08 00 00 00       	mov    $0x8,%eax
    fc88:	83 f9 04             	cmp    $0x4,%ecx
    fc8b:	0f 87 ae 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fc91:	8b 56 18             	mov    0x18(%rsi),%edx
    fc94:	83 fa 04             	cmp    $0x4,%edx
    fc97:	0f 87 a2 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fc9d:	01 ca                	add    %ecx,%edx
    fc9f:	83 fa 04             	cmp    $0x4,%edx
    fca2:	0f 87 97 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fca8:	8b 4e 1c             	mov    0x1c(%rsi),%ecx
    fcab:	83 f9 04             	cmp    $0x4,%ecx
    fcae:	0f 87 8b 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fcb4:	8b 56 24             	mov    0x24(%rsi),%edx
    fcb7:	83 c2 fe             	add    $0xfffffffe,%edx
    fcba:	81 fa 0f 01 00 00    	cmp    $0x10f,%edx
    fcc0:	0f 87 79 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fcc6:	8b 56 20             	mov    0x20(%rsi),%edx
    fcc9:	ff ca                	dec    %edx
    fccb:	83 fa 01             	cmp    $0x1,%edx
    fcce:	0f 87 6b 0f 00 00    	ja     10c3f <lzma_lzma_encoder_reset+0xfbf>
    fcd4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    fcd9:	d3 e0                	shl    %cl,%eax
    fcdb:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    fce1:	89 c2                	mov    %eax,%edx
    fce3:	f7 d2                	not    %edx
    fce5:	89 97 90 0b 00 00    	mov    %edx,0xb90(%rdi)
    fceb:	8b 4e 14             	mov    0x14(%rsi),%ecx
    fcee:	89 8f 94 0b 00 00    	mov    %ecx,0xb94(%rdi)
    fcf4:	0f b6 4e 18          	movzbl 0x18(%rsi),%ecx
    fcf8:	41 d3 e0             	shl    %cl,%r8d
    fcfb:	41 f7 d0             	not    %r8d
    fcfe:	44 89 87 98 0b 00 00 	mov    %r8d,0xb98(%rdi)
    fd05:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    fd0c:	48 c7 47 08 01 00 00 	movq   $0x1,0x8(%rdi)
    fd13:	00 
    fd14:	c7 47 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rdi)
    fd1b:	c6 47 14 00          	movb   $0x0,0x14(%rdi)
    fd1f:	0f 57 c0             	xorps  %xmm0,%xmm0
    fd22:	0f 11 47 18          	movups %xmm0,0x18(%rdi)
    fd26:	4c 8d 87 9c 0b 00 00 	lea    0xb9c(%rdi),%r8
    fd2d:	0f 11 87 e0 02 00 00 	movups %xmm0,0x2e0(%rdi)
    fd34:	c7 87 f0 02 00 00 00 	movl   $0x0,0x2f0(%rdi)
    fd3b:	00 00 00 
    fd3e:	8b 4e 18             	mov    0x18(%rsi),%ecx
    fd41:	03 4e 14             	add    0x14(%rsi),%ecx
    fd44:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    fd4a:	0f 28 05 8f 83 01 00 	movaps 0x1838f(%rip),%xmm0        # 280e0 <SHA256_K+0x180>
    fd51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    fd58:	0f 1f 84 00 00 00 00 
    fd5f:	00 
    fd60:	45 8d 51 ff          	lea    -0x1(%r9),%r10d
    fd64:	4f 8d 14 52          	lea    (%r10,%r10,2),%r10
    fd68:	49 c1 e2 09          	shl    $0x9,%r10
    fd6c:	43 0f 11 04 10       	movups %xmm0,(%r8,%r10,1)
    fd71:	43 0f 11 44 10 10    	movups %xmm0,0x10(%r8,%r10,1)
    fd77:	43 0f 11 44 10 20    	movups %xmm0,0x20(%r8,%r10,1)
    fd7d:	43 0f 11 44 10 30    	movups %xmm0,0x30(%r8,%r10,1)
    fd83:	43 0f 11 44 10 40    	movups %xmm0,0x40(%r8,%r10,1)
    fd89:	43 0f 11 44 10 50    	movups %xmm0,0x50(%r8,%r10,1)
    fd8f:	43 0f 11 44 10 60    	movups %xmm0,0x60(%r8,%r10,1)
    fd95:	43 0f 11 44 10 70    	movups %xmm0,0x70(%r8,%r10,1)
    fd9b:	43 0f 11 84 10 80 00 	movups %xmm0,0x80(%r8,%r10,1)
    fda2:	00 00 
    fda4:	43 0f 11 84 10 90 00 	movups %xmm0,0x90(%r8,%r10,1)
    fdab:	00 00 
    fdad:	43 0f 11 84 10 a0 00 	movups %xmm0,0xa0(%r8,%r10,1)
    fdb4:	00 00 
    fdb6:	43 0f 11 84 10 b0 00 	movups %xmm0,0xb0(%r8,%r10,1)
    fdbd:	00 00 
    fdbf:	43 0f 11 84 10 c0 00 	movups %xmm0,0xc0(%r8,%r10,1)
    fdc6:	00 00 
    fdc8:	43 0f 11 84 10 d0 00 	movups %xmm0,0xd0(%r8,%r10,1)
    fdcf:	00 00 
    fdd1:	43 0f 11 84 10 e0 00 	movups %xmm0,0xe0(%r8,%r10,1)
    fdd8:	00 00 
    fdda:	43 0f 11 84 10 f0 00 	movups %xmm0,0xf0(%r8,%r10,1)
    fde1:	00 00 
    fde3:	43 0f 11 84 10 00 01 	movups %xmm0,0x100(%r8,%r10,1)
    fdea:	00 00 
    fdec:	43 0f 11 84 10 10 01 	movups %xmm0,0x110(%r8,%r10,1)
    fdf3:	00 00 
    fdf5:	43 0f 11 84 10 20 01 	movups %xmm0,0x120(%r8,%r10,1)
    fdfc:	00 00 
    fdfe:	43 0f 11 84 10 30 01 	movups %xmm0,0x130(%r8,%r10,1)
    fe05:	00 00 
    fe07:	43 0f 11 84 10 40 01 	movups %xmm0,0x140(%r8,%r10,1)
    fe0e:	00 00 
    fe10:	43 0f 11 84 10 50 01 	movups %xmm0,0x150(%r8,%r10,1)
    fe17:	00 00 
    fe19:	43 0f 11 84 10 60 01 	movups %xmm0,0x160(%r8,%r10,1)
    fe20:	00 00 
    fe22:	43 0f 11 84 10 70 01 	movups %xmm0,0x170(%r8,%r10,1)
    fe29:	00 00 
    fe2b:	43 0f 11 84 10 80 01 	movups %xmm0,0x180(%r8,%r10,1)
    fe32:	00 00 
    fe34:	43 0f 11 84 10 90 01 	movups %xmm0,0x190(%r8,%r10,1)
    fe3b:	00 00 
    fe3d:	43 0f 11 84 10 a0 01 	movups %xmm0,0x1a0(%r8,%r10,1)
    fe44:	00 00 
    fe46:	43 0f 11 84 10 b0 01 	movups %xmm0,0x1b0(%r8,%r10,1)
    fe4d:	00 00 
    fe4f:	43 0f 11 84 10 c0 01 	movups %xmm0,0x1c0(%r8,%r10,1)
    fe56:	00 00 
    fe58:	43 0f 11 84 10 d0 01 	movups %xmm0,0x1d0(%r8,%r10,1)
    fe5f:	00 00 
    fe61:	43 0f 11 84 10 e0 01 	movups %xmm0,0x1e0(%r8,%r10,1)
    fe68:	00 00 
    fe6a:	43 0f 11 84 10 f0 01 	movups %xmm0,0x1f0(%r8,%r10,1)
    fe71:	00 00 
    fe73:	43 0f 11 84 10 00 02 	movups %xmm0,0x200(%r8,%r10,1)
    fe7a:	00 00 
    fe7c:	43 0f 11 84 10 10 02 	movups %xmm0,0x210(%r8,%r10,1)
    fe83:	00 00 
    fe85:	43 0f 11 84 10 20 02 	movups %xmm0,0x220(%r8,%r10,1)
    fe8c:	00 00 
    fe8e:	43 0f 11 84 10 30 02 	movups %xmm0,0x230(%r8,%r10,1)
    fe95:	00 00 
    fe97:	43 0f 11 84 10 40 02 	movups %xmm0,0x240(%r8,%r10,1)
    fe9e:	00 00 
    fea0:	43 0f 11 84 10 50 02 	movups %xmm0,0x250(%r8,%r10,1)
    fea7:	00 00 
    fea9:	43 0f 11 84 10 60 02 	movups %xmm0,0x260(%r8,%r10,1)
    feb0:	00 00 
    feb2:	43 0f 11 84 10 70 02 	movups %xmm0,0x270(%r8,%r10,1)
    feb9:	00 00 
    febb:	43 0f 11 84 10 80 02 	movups %xmm0,0x280(%r8,%r10,1)
    fec2:	00 00 
    fec4:	43 0f 11 84 10 90 02 	movups %xmm0,0x290(%r8,%r10,1)
    fecb:	00 00 
    fecd:	43 0f 11 84 10 a0 02 	movups %xmm0,0x2a0(%r8,%r10,1)
    fed4:	00 00 
    fed6:	43 0f 11 84 10 b0 02 	movups %xmm0,0x2b0(%r8,%r10,1)
    fedd:	00 00 
    fedf:	43 0f 11 84 10 c0 02 	movups %xmm0,0x2c0(%r8,%r10,1)
    fee6:	00 00 
    fee8:	43 0f 11 84 10 d0 02 	movups %xmm0,0x2d0(%r8,%r10,1)
    feef:	00 00 
    fef1:	43 0f 11 84 10 e0 02 	movups %xmm0,0x2e0(%r8,%r10,1)
    fef8:	00 00 
    fefa:	43 0f 11 84 10 f0 02 	movups %xmm0,0x2f0(%r8,%r10,1)
    ff01:	00 00 
    ff03:	43 0f 11 84 10 00 03 	movups %xmm0,0x300(%r8,%r10,1)
    ff0a:	00 00 
    ff0c:	43 0f 11 84 10 10 03 	movups %xmm0,0x310(%r8,%r10,1)
    ff13:	00 00 
    ff15:	43 0f 11 84 10 20 03 	movups %xmm0,0x320(%r8,%r10,1)
    ff1c:	00 00 
    ff1e:	43 0f 11 84 10 30 03 	movups %xmm0,0x330(%r8,%r10,1)
    ff25:	00 00 
    ff27:	43 0f 11 84 10 40 03 	movups %xmm0,0x340(%r8,%r10,1)
    ff2e:	00 00 
    ff30:	43 0f 11 84 10 50 03 	movups %xmm0,0x350(%r8,%r10,1)
    ff37:	00 00 
    ff39:	43 0f 11 84 10 60 03 	movups %xmm0,0x360(%r8,%r10,1)
    ff40:	00 00 
    ff42:	43 0f 11 84 10 70 03 	movups %xmm0,0x370(%r8,%r10,1)
    ff49:	00 00 
    ff4b:	43 0f 11 84 10 80 03 	movups %xmm0,0x380(%r8,%r10,1)
    ff52:	00 00 
    ff54:	43 0f 11 84 10 90 03 	movups %xmm0,0x390(%r8,%r10,1)
    ff5b:	00 00 
    ff5d:	43 0f 11 84 10 a0 03 	movups %xmm0,0x3a0(%r8,%r10,1)
    ff64:	00 00 
    ff66:	43 0f 11 84 10 b0 03 	movups %xmm0,0x3b0(%r8,%r10,1)
    ff6d:	00 00 
    ff6f:	43 0f 11 84 10 c0 03 	movups %xmm0,0x3c0(%r8,%r10,1)
    ff76:	00 00 
    ff78:	43 0f 11 84 10 d0 03 	movups %xmm0,0x3d0(%r8,%r10,1)
    ff7f:	00 00 
    ff81:	43 0f 11 84 10 e0 03 	movups %xmm0,0x3e0(%r8,%r10,1)
    ff88:	00 00 
    ff8a:	43 0f 11 84 10 f0 03 	movups %xmm0,0x3f0(%r8,%r10,1)
    ff91:	00 00 
    ff93:	43 0f 11 84 10 00 04 	movups %xmm0,0x400(%r8,%r10,1)
    ff9a:	00 00 
    ff9c:	43 0f 11 84 10 10 04 	movups %xmm0,0x410(%r8,%r10,1)
    ffa3:	00 00 
    ffa5:	43 0f 11 84 10 20 04 	movups %xmm0,0x420(%r8,%r10,1)
    ffac:	00 00 
    ffae:	43 0f 11 84 10 30 04 	movups %xmm0,0x430(%r8,%r10,1)
    ffb5:	00 00 
    ffb7:	43 0f 11 84 10 40 04 	movups %xmm0,0x440(%r8,%r10,1)
    ffbe:	00 00 
    ffc0:	43 0f 11 84 10 50 04 	movups %xmm0,0x450(%r8,%r10,1)
    ffc7:	00 00 
    ffc9:	43 0f 11 84 10 60 04 	movups %xmm0,0x460(%r8,%r10,1)
    ffd0:	00 00 
    ffd2:	43 0f 11 84 10 70 04 	movups %xmm0,0x470(%r8,%r10,1)
    ffd9:	00 00 
    ffdb:	43 0f 11 84 10 80 04 	movups %xmm0,0x480(%r8,%r10,1)
    ffe2:	00 00 
    ffe4:	43 0f 11 84 10 90 04 	movups %xmm0,0x490(%r8,%r10,1)
    ffeb:	00 00 
    ffed:	43 0f 11 84 10 a0 04 	movups %xmm0,0x4a0(%r8,%r10,1)
    fff4:	00 00 
    fff6:	43 0f 11 84 10 b0 04 	movups %xmm0,0x4b0(%r8,%r10,1)
    fffd:	00 00 
    ffff:	43 0f 11 84 10 c0 04 	movups %xmm0,0x4c0(%r8,%r10,1)
   10006:	00 00 
   10008:	43 0f 11 84 10 d0 04 	movups %xmm0,0x4d0(%r8,%r10,1)
   1000f:	00 00 
   10011:	43 0f 11 84 10 e0 04 	movups %xmm0,0x4e0(%r8,%r10,1)
   10018:	00 00 
   1001a:	43 0f 11 84 10 f0 04 	movups %xmm0,0x4f0(%r8,%r10,1)
   10021:	00 00 
   10023:	43 0f 11 84 10 00 05 	movups %xmm0,0x500(%r8,%r10,1)
   1002a:	00 00 
   1002c:	43 0f 11 84 10 10 05 	movups %xmm0,0x510(%r8,%r10,1)
   10033:	00 00 
   10035:	43 0f 11 84 10 20 05 	movups %xmm0,0x520(%r8,%r10,1)
   1003c:	00 00 
   1003e:	43 0f 11 84 10 30 05 	movups %xmm0,0x530(%r8,%r10,1)
   10045:	00 00 
   10047:	43 0f 11 84 10 40 05 	movups %xmm0,0x540(%r8,%r10,1)
   1004e:	00 00 
   10050:	43 0f 11 84 10 50 05 	movups %xmm0,0x550(%r8,%r10,1)
   10057:	00 00 
   10059:	43 0f 11 84 10 60 05 	movups %xmm0,0x560(%r8,%r10,1)
   10060:	00 00 
   10062:	43 0f 11 84 10 70 05 	movups %xmm0,0x570(%r8,%r10,1)
   10069:	00 00 
   1006b:	43 0f 11 84 10 80 05 	movups %xmm0,0x580(%r8,%r10,1)
   10072:	00 00 
   10074:	43 0f 11 84 10 90 05 	movups %xmm0,0x590(%r8,%r10,1)
   1007b:	00 00 
   1007d:	43 0f 11 84 10 a0 05 	movups %xmm0,0x5a0(%r8,%r10,1)
   10084:	00 00 
   10086:	43 0f 11 84 10 b0 05 	movups %xmm0,0x5b0(%r8,%r10,1)
   1008d:	00 00 
   1008f:	43 0f 11 84 10 c0 05 	movups %xmm0,0x5c0(%r8,%r10,1)
   10096:	00 00 
   10098:	43 0f 11 84 10 d0 05 	movups %xmm0,0x5d0(%r8,%r10,1)
   1009f:	00 00 
   100a1:	45 89 cb             	mov    %r9d,%r11d
   100a4:	41 d3 eb             	shr    %cl,%r11d
   100a7:	43 0f 11 84 10 e0 05 	movups %xmm0,0x5e0(%r8,%r10,1)
   100ae:	00 00 
   100b0:	43 0f 11 84 10 f0 05 	movups %xmm0,0x5f0(%r8,%r10,1)
   100b7:	00 00 
   100b9:	41 ff c1             	inc    %r9d
   100bc:	45 85 db             	test   %r11d,%r11d
   100bf:	0f 84 9b fc ff ff    	je     fd60 <lzma_lzma_encoder_reset+0xe0>
   100c5:	89 d1                	mov    %edx,%ecx
   100c7:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   100cb:	83 f8 f8             	cmp    $0xfffffff8,%eax
   100ce:	76 05                	jbe    100d5 <lzma_lzma_encoder_reset+0x455>
   100d0:	45 31 c0             	xor    %r8d,%r8d
   100d3:	eb 3b                	jmp    10110 <lzma_lzma_encoder_reset+0x490>
   100d5:	41 89 d0             	mov    %edx,%r8d
   100d8:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   100df:	45 31 c9             	xor    %r9d,%r9d
   100e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   100e9:	1f 84 00 00 00 00 00 
   100f0:	42 0f 11 84 4f 9c 6b 	movups %xmm0,0x6b9c(%rdi,%r9,2)
   100f7:	00 00 
   100f9:	42 0f 11 84 4f 7c 6d 	movups %xmm0,0x6d7c(%rdi,%r9,2)
   10100:	00 00 
   10102:	49 83 c1 08          	add    $0x8,%r9
   10106:	4d 39 c8             	cmp    %r9,%r8
   10109:	75 e5                	jne    100f0 <lzma_lzma_encoder_reset+0x470>
   1010b:	4c 39 c2             	cmp    %r8,%rdx
   1010e:	74 2e                	je     1013e <lzma_lzma_encoder_reset+0x4be>
   10110:	49 ff c8             	dec    %r8
   10113:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1011a:	84 00 00 00 00 00 
   10120:	66 42 c7 84 47 9e 6b 	movw   $0x400,0x6b9e(%rdi,%r8,2)
   10127:	00 00 00 04 
   1012b:	66 42 c7 84 47 7e 6d 	movw   $0x400,0x6d7e(%rdi,%r8,2)
   10132:	00 00 00 04 
   10136:	49 ff c0             	inc    %r8
   10139:	49 39 c8             	cmp    %rcx,%r8
   1013c:	72 e2                	jb     10120 <lzma_lzma_encoder_reset+0x4a0>
   1013e:	66 c7 87 1c 6d 00 00 	movw   $0x400,0x6d1c(%rdi)
   10145:	00 04 
   10147:	66 c7 87 34 6d 00 00 	movw   $0x400,0x6d34(%rdi)
   1014e:	00 04 
   10150:	66 c7 87 4c 6d 00 00 	movw   $0x400,0x6d4c(%rdi)
   10157:	00 04 
   10159:	66 c7 87 64 6d 00 00 	movw   $0x400,0x6d64(%rdi)
   10160:	00 04 
   10162:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10165:	76 05                	jbe    1016c <lzma_lzma_encoder_reset+0x4ec>
   10167:	45 31 c0             	xor    %r8d,%r8d
   1016a:	eb 34                	jmp    101a0 <lzma_lzma_encoder_reset+0x520>
   1016c:	41 89 d0             	mov    %edx,%r8d
   1016f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10176:	45 31 c9             	xor    %r9d,%r9d
   10179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10180:	42 0f 11 84 4f bc 6b 	movups %xmm0,0x6bbc(%rdi,%r9,2)
   10187:	00 00 
   10189:	42 0f 11 84 4f 9c 6d 	movups %xmm0,0x6d9c(%rdi,%r9,2)
   10190:	00 00 
   10192:	49 83 c1 08          	add    $0x8,%r9
   10196:	4d 39 c8             	cmp    %r9,%r8
   10199:	75 e5                	jne    10180 <lzma_lzma_encoder_reset+0x500>
   1019b:	4c 39 c2             	cmp    %r8,%rdx
   1019e:	74 2e                	je     101ce <lzma_lzma_encoder_reset+0x54e>
   101a0:	49 ff c8             	dec    %r8
   101a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   101aa:	84 00 00 00 00 00 
   101b0:	66 42 c7 84 47 be 6b 	movw   $0x400,0x6bbe(%rdi,%r8,2)
   101b7:	00 00 00 04 
   101bb:	66 42 c7 84 47 9e 6d 	movw   $0x400,0x6d9e(%rdi,%r8,2)
   101c2:	00 00 00 04 
   101c6:	49 ff c0             	inc    %r8
   101c9:	49 39 c8             	cmp    %rcx,%r8
   101cc:	72 e2                	jb     101b0 <lzma_lzma_encoder_reset+0x530>
   101ce:	66 c7 87 1e 6d 00 00 	movw   $0x400,0x6d1e(%rdi)
   101d5:	00 04 
   101d7:	66 c7 87 36 6d 00 00 	movw   $0x400,0x6d36(%rdi)
   101de:	00 04 
   101e0:	66 c7 87 4e 6d 00 00 	movw   $0x400,0x6d4e(%rdi)
   101e7:	00 04 
   101e9:	66 c7 87 66 6d 00 00 	movw   $0x400,0x6d66(%rdi)
   101f0:	00 04 
   101f2:	83 f8 f8             	cmp    $0xfffffff8,%eax
   101f5:	76 05                	jbe    101fc <lzma_lzma_encoder_reset+0x57c>
   101f7:	45 31 c0             	xor    %r8d,%r8d
   101fa:	eb 34                	jmp    10230 <lzma_lzma_encoder_reset+0x5b0>
   101fc:	41 89 d0             	mov    %edx,%r8d
   101ff:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10206:	45 31 c9             	xor    %r9d,%r9d
   10209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10210:	42 0f 11 84 4f dc 6b 	movups %xmm0,0x6bdc(%rdi,%r9,2)
   10217:	00 00 
   10219:	42 0f 11 84 4f bc 6d 	movups %xmm0,0x6dbc(%rdi,%r9,2)
   10220:	00 00 
   10222:	49 83 c1 08          	add    $0x8,%r9
   10226:	4d 39 c8             	cmp    %r9,%r8
   10229:	75 e5                	jne    10210 <lzma_lzma_encoder_reset+0x590>
   1022b:	4c 39 c2             	cmp    %r8,%rdx
   1022e:	74 2e                	je     1025e <lzma_lzma_encoder_reset+0x5de>
   10230:	49 ff c8             	dec    %r8
   10233:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1023a:	84 00 00 00 00 00 
   10240:	66 42 c7 84 47 de 6b 	movw   $0x400,0x6bde(%rdi,%r8,2)
   10247:	00 00 00 04 
   1024b:	66 42 c7 84 47 be 6d 	movw   $0x400,0x6dbe(%rdi,%r8,2)
   10252:	00 00 00 04 
   10256:	49 ff c0             	inc    %r8
   10259:	49 39 c8             	cmp    %rcx,%r8
   1025c:	72 e2                	jb     10240 <lzma_lzma_encoder_reset+0x5c0>
   1025e:	66 c7 87 20 6d 00 00 	movw   $0x400,0x6d20(%rdi)
   10265:	00 04 
   10267:	66 c7 87 38 6d 00 00 	movw   $0x400,0x6d38(%rdi)
   1026e:	00 04 
   10270:	66 c7 87 50 6d 00 00 	movw   $0x400,0x6d50(%rdi)
   10277:	00 04 
   10279:	66 c7 87 68 6d 00 00 	movw   $0x400,0x6d68(%rdi)
   10280:	00 04 
   10282:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10285:	76 05                	jbe    1028c <lzma_lzma_encoder_reset+0x60c>
   10287:	45 31 c0             	xor    %r8d,%r8d
   1028a:	eb 34                	jmp    102c0 <lzma_lzma_encoder_reset+0x640>
   1028c:	41 89 d0             	mov    %edx,%r8d
   1028f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10296:	45 31 c9             	xor    %r9d,%r9d
   10299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   102a0:	42 0f 11 84 4f fc 6b 	movups %xmm0,0x6bfc(%rdi,%r9,2)
   102a7:	00 00 
   102a9:	42 0f 11 84 4f dc 6d 	movups %xmm0,0x6ddc(%rdi,%r9,2)
   102b0:	00 00 
   102b2:	49 83 c1 08          	add    $0x8,%r9
   102b6:	4d 39 c8             	cmp    %r9,%r8
   102b9:	75 e5                	jne    102a0 <lzma_lzma_encoder_reset+0x620>
   102bb:	4c 39 c2             	cmp    %r8,%rdx
   102be:	74 2e                	je     102ee <lzma_lzma_encoder_reset+0x66e>
   102c0:	49 ff c8             	dec    %r8
   102c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   102ca:	84 00 00 00 00 00 
   102d0:	66 42 c7 84 47 fe 6b 	movw   $0x400,0x6bfe(%rdi,%r8,2)
   102d7:	00 00 00 04 
   102db:	66 42 c7 84 47 de 6d 	movw   $0x400,0x6dde(%rdi,%r8,2)
   102e2:	00 00 00 04 
   102e6:	49 ff c0             	inc    %r8
   102e9:	49 39 c8             	cmp    %rcx,%r8
   102ec:	72 e2                	jb     102d0 <lzma_lzma_encoder_reset+0x650>
   102ee:	66 c7 87 22 6d 00 00 	movw   $0x400,0x6d22(%rdi)
   102f5:	00 04 
   102f7:	66 c7 87 3a 6d 00 00 	movw   $0x400,0x6d3a(%rdi)
   102fe:	00 04 
   10300:	66 c7 87 52 6d 00 00 	movw   $0x400,0x6d52(%rdi)
   10307:	00 04 
   10309:	66 c7 87 6a 6d 00 00 	movw   $0x400,0x6d6a(%rdi)
   10310:	00 04 
   10312:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10315:	76 05                	jbe    1031c <lzma_lzma_encoder_reset+0x69c>
   10317:	45 31 c0             	xor    %r8d,%r8d
   1031a:	eb 34                	jmp    10350 <lzma_lzma_encoder_reset+0x6d0>
   1031c:	41 89 d0             	mov    %edx,%r8d
   1031f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10326:	45 31 c9             	xor    %r9d,%r9d
   10329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10330:	42 0f 11 84 4f 1c 6c 	movups %xmm0,0x6c1c(%rdi,%r9,2)
   10337:	00 00 
   10339:	42 0f 11 84 4f fc 6d 	movups %xmm0,0x6dfc(%rdi,%r9,2)
   10340:	00 00 
   10342:	49 83 c1 08          	add    $0x8,%r9
   10346:	4d 39 c8             	cmp    %r9,%r8
   10349:	75 e5                	jne    10330 <lzma_lzma_encoder_reset+0x6b0>
   1034b:	4c 39 c2             	cmp    %r8,%rdx
   1034e:	74 2e                	je     1037e <lzma_lzma_encoder_reset+0x6fe>
   10350:	49 ff c8             	dec    %r8
   10353:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1035a:	84 00 00 00 00 00 
   10360:	66 42 c7 84 47 1e 6c 	movw   $0x400,0x6c1e(%rdi,%r8,2)
   10367:	00 00 00 04 
   1036b:	66 42 c7 84 47 fe 6d 	movw   $0x400,0x6dfe(%rdi,%r8,2)
   10372:	00 00 00 04 
   10376:	49 ff c0             	inc    %r8
   10379:	49 39 c8             	cmp    %rcx,%r8
   1037c:	72 e2                	jb     10360 <lzma_lzma_encoder_reset+0x6e0>
   1037e:	66 c7 87 24 6d 00 00 	movw   $0x400,0x6d24(%rdi)
   10385:	00 04 
   10387:	66 c7 87 3c 6d 00 00 	movw   $0x400,0x6d3c(%rdi)
   1038e:	00 04 
   10390:	66 c7 87 54 6d 00 00 	movw   $0x400,0x6d54(%rdi)
   10397:	00 04 
   10399:	66 c7 87 6c 6d 00 00 	movw   $0x400,0x6d6c(%rdi)
   103a0:	00 04 
   103a2:	83 f8 f8             	cmp    $0xfffffff8,%eax
   103a5:	76 05                	jbe    103ac <lzma_lzma_encoder_reset+0x72c>
   103a7:	45 31 c0             	xor    %r8d,%r8d
   103aa:	eb 34                	jmp    103e0 <lzma_lzma_encoder_reset+0x760>
   103ac:	41 89 d0             	mov    %edx,%r8d
   103af:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   103b6:	45 31 c9             	xor    %r9d,%r9d
   103b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   103c0:	42 0f 11 84 4f 3c 6c 	movups %xmm0,0x6c3c(%rdi,%r9,2)
   103c7:	00 00 
   103c9:	42 0f 11 84 4f 1c 6e 	movups %xmm0,0x6e1c(%rdi,%r9,2)
   103d0:	00 00 
   103d2:	49 83 c1 08          	add    $0x8,%r9
   103d6:	4d 39 c8             	cmp    %r9,%r8
   103d9:	75 e5                	jne    103c0 <lzma_lzma_encoder_reset+0x740>
   103db:	4c 39 c2             	cmp    %r8,%rdx
   103de:	74 2e                	je     1040e <lzma_lzma_encoder_reset+0x78e>
   103e0:	49 ff c8             	dec    %r8
   103e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   103ea:	84 00 00 00 00 00 
   103f0:	66 42 c7 84 47 3e 6c 	movw   $0x400,0x6c3e(%rdi,%r8,2)
   103f7:	00 00 00 04 
   103fb:	66 42 c7 84 47 1e 6e 	movw   $0x400,0x6e1e(%rdi,%r8,2)
   10402:	00 00 00 04 
   10406:	49 ff c0             	inc    %r8
   10409:	49 39 c8             	cmp    %rcx,%r8
   1040c:	72 e2                	jb     103f0 <lzma_lzma_encoder_reset+0x770>
   1040e:	66 c7 87 26 6d 00 00 	movw   $0x400,0x6d26(%rdi)
   10415:	00 04 
   10417:	66 c7 87 3e 6d 00 00 	movw   $0x400,0x6d3e(%rdi)
   1041e:	00 04 
   10420:	66 c7 87 56 6d 00 00 	movw   $0x400,0x6d56(%rdi)
   10427:	00 04 
   10429:	66 c7 87 6e 6d 00 00 	movw   $0x400,0x6d6e(%rdi)
   10430:	00 04 
   10432:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10435:	76 05                	jbe    1043c <lzma_lzma_encoder_reset+0x7bc>
   10437:	45 31 c0             	xor    %r8d,%r8d
   1043a:	eb 34                	jmp    10470 <lzma_lzma_encoder_reset+0x7f0>
   1043c:	41 89 d0             	mov    %edx,%r8d
   1043f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10446:	45 31 c9             	xor    %r9d,%r9d
   10449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10450:	42 0f 11 84 4f 5c 6c 	movups %xmm0,0x6c5c(%rdi,%r9,2)
   10457:	00 00 
   10459:	42 0f 11 84 4f 3c 6e 	movups %xmm0,0x6e3c(%rdi,%r9,2)
   10460:	00 00 
   10462:	49 83 c1 08          	add    $0x8,%r9
   10466:	4d 39 c8             	cmp    %r9,%r8
   10469:	75 e5                	jne    10450 <lzma_lzma_encoder_reset+0x7d0>
   1046b:	4c 39 c2             	cmp    %r8,%rdx
   1046e:	74 2e                	je     1049e <lzma_lzma_encoder_reset+0x81e>
   10470:	49 ff c8             	dec    %r8
   10473:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1047a:	84 00 00 00 00 00 
   10480:	66 42 c7 84 47 5e 6c 	movw   $0x400,0x6c5e(%rdi,%r8,2)
   10487:	00 00 00 04 
   1048b:	66 42 c7 84 47 3e 6e 	movw   $0x400,0x6e3e(%rdi,%r8,2)
   10492:	00 00 00 04 
   10496:	49 ff c0             	inc    %r8
   10499:	49 39 c8             	cmp    %rcx,%r8
   1049c:	72 e2                	jb     10480 <lzma_lzma_encoder_reset+0x800>
   1049e:	66 c7 87 28 6d 00 00 	movw   $0x400,0x6d28(%rdi)
   104a5:	00 04 
   104a7:	66 c7 87 40 6d 00 00 	movw   $0x400,0x6d40(%rdi)
   104ae:	00 04 
   104b0:	66 c7 87 58 6d 00 00 	movw   $0x400,0x6d58(%rdi)
   104b7:	00 04 
   104b9:	66 c7 87 70 6d 00 00 	movw   $0x400,0x6d70(%rdi)
   104c0:	00 04 
   104c2:	83 f8 f8             	cmp    $0xfffffff8,%eax
   104c5:	76 05                	jbe    104cc <lzma_lzma_encoder_reset+0x84c>
   104c7:	45 31 c0             	xor    %r8d,%r8d
   104ca:	eb 34                	jmp    10500 <lzma_lzma_encoder_reset+0x880>
   104cc:	41 89 d0             	mov    %edx,%r8d
   104cf:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   104d6:	45 31 c9             	xor    %r9d,%r9d
   104d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   104e0:	42 0f 11 84 4f 7c 6c 	movups %xmm0,0x6c7c(%rdi,%r9,2)
   104e7:	00 00 
   104e9:	42 0f 11 84 4f 5c 6e 	movups %xmm0,0x6e5c(%rdi,%r9,2)
   104f0:	00 00 
   104f2:	49 83 c1 08          	add    $0x8,%r9
   104f6:	4d 39 c8             	cmp    %r9,%r8
   104f9:	75 e5                	jne    104e0 <lzma_lzma_encoder_reset+0x860>
   104fb:	4c 39 c2             	cmp    %r8,%rdx
   104fe:	74 2e                	je     1052e <lzma_lzma_encoder_reset+0x8ae>
   10500:	49 ff c8             	dec    %r8
   10503:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1050a:	84 00 00 00 00 00 
   10510:	66 42 c7 84 47 7e 6c 	movw   $0x400,0x6c7e(%rdi,%r8,2)
   10517:	00 00 00 04 
   1051b:	66 42 c7 84 47 5e 6e 	movw   $0x400,0x6e5e(%rdi,%r8,2)
   10522:	00 00 00 04 
   10526:	49 ff c0             	inc    %r8
   10529:	49 39 c8             	cmp    %rcx,%r8
   1052c:	72 e2                	jb     10510 <lzma_lzma_encoder_reset+0x890>
   1052e:	66 c7 87 2a 6d 00 00 	movw   $0x400,0x6d2a(%rdi)
   10535:	00 04 
   10537:	66 c7 87 42 6d 00 00 	movw   $0x400,0x6d42(%rdi)
   1053e:	00 04 
   10540:	66 c7 87 5a 6d 00 00 	movw   $0x400,0x6d5a(%rdi)
   10547:	00 04 
   10549:	66 c7 87 72 6d 00 00 	movw   $0x400,0x6d72(%rdi)
   10550:	00 04 
   10552:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10555:	76 05                	jbe    1055c <lzma_lzma_encoder_reset+0x8dc>
   10557:	45 31 c0             	xor    %r8d,%r8d
   1055a:	eb 34                	jmp    10590 <lzma_lzma_encoder_reset+0x910>
   1055c:	41 89 d0             	mov    %edx,%r8d
   1055f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10566:	45 31 c9             	xor    %r9d,%r9d
   10569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10570:	42 0f 11 84 4f 9c 6c 	movups %xmm0,0x6c9c(%rdi,%r9,2)
   10577:	00 00 
   10579:	42 0f 11 84 4f 7c 6e 	movups %xmm0,0x6e7c(%rdi,%r9,2)
   10580:	00 00 
   10582:	49 83 c1 08          	add    $0x8,%r9
   10586:	4d 39 c8             	cmp    %r9,%r8
   10589:	75 e5                	jne    10570 <lzma_lzma_encoder_reset+0x8f0>
   1058b:	4c 39 c2             	cmp    %r8,%rdx
   1058e:	74 2e                	je     105be <lzma_lzma_encoder_reset+0x93e>
   10590:	49 ff c8             	dec    %r8
   10593:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1059a:	84 00 00 00 00 00 
   105a0:	66 42 c7 84 47 9e 6c 	movw   $0x400,0x6c9e(%rdi,%r8,2)
   105a7:	00 00 00 04 
   105ab:	66 42 c7 84 47 7e 6e 	movw   $0x400,0x6e7e(%rdi,%r8,2)
   105b2:	00 00 00 04 
   105b6:	49 ff c0             	inc    %r8
   105b9:	49 39 c8             	cmp    %rcx,%r8
   105bc:	72 e2                	jb     105a0 <lzma_lzma_encoder_reset+0x920>
   105be:	66 c7 87 2c 6d 00 00 	movw   $0x400,0x6d2c(%rdi)
   105c5:	00 04 
   105c7:	66 c7 87 44 6d 00 00 	movw   $0x400,0x6d44(%rdi)
   105ce:	00 04 
   105d0:	66 c7 87 5c 6d 00 00 	movw   $0x400,0x6d5c(%rdi)
   105d7:	00 04 
   105d9:	66 c7 87 74 6d 00 00 	movw   $0x400,0x6d74(%rdi)
   105e0:	00 04 
   105e2:	83 f8 f8             	cmp    $0xfffffff8,%eax
   105e5:	76 05                	jbe    105ec <lzma_lzma_encoder_reset+0x96c>
   105e7:	45 31 c0             	xor    %r8d,%r8d
   105ea:	eb 34                	jmp    10620 <lzma_lzma_encoder_reset+0x9a0>
   105ec:	41 89 d0             	mov    %edx,%r8d
   105ef:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   105f6:	45 31 c9             	xor    %r9d,%r9d
   105f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10600:	42 0f 11 84 4f bc 6c 	movups %xmm0,0x6cbc(%rdi,%r9,2)
   10607:	00 00 
   10609:	42 0f 11 84 4f 9c 6e 	movups %xmm0,0x6e9c(%rdi,%r9,2)
   10610:	00 00 
   10612:	49 83 c1 08          	add    $0x8,%r9
   10616:	4d 39 c8             	cmp    %r9,%r8
   10619:	75 e5                	jne    10600 <lzma_lzma_encoder_reset+0x980>
   1061b:	4c 39 c2             	cmp    %r8,%rdx
   1061e:	74 2e                	je     1064e <lzma_lzma_encoder_reset+0x9ce>
   10620:	49 ff c8             	dec    %r8
   10623:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1062a:	84 00 00 00 00 00 
   10630:	66 42 c7 84 47 be 6c 	movw   $0x400,0x6cbe(%rdi,%r8,2)
   10637:	00 00 00 04 
   1063b:	66 42 c7 84 47 9e 6e 	movw   $0x400,0x6e9e(%rdi,%r8,2)
   10642:	00 00 00 04 
   10646:	49 ff c0             	inc    %r8
   10649:	49 39 c8             	cmp    %rcx,%r8
   1064c:	72 e2                	jb     10630 <lzma_lzma_encoder_reset+0x9b0>
   1064e:	66 c7 87 2e 6d 00 00 	movw   $0x400,0x6d2e(%rdi)
   10655:	00 04 
   10657:	66 c7 87 46 6d 00 00 	movw   $0x400,0x6d46(%rdi)
   1065e:	00 04 
   10660:	66 c7 87 5e 6d 00 00 	movw   $0x400,0x6d5e(%rdi)
   10667:	00 04 
   10669:	66 c7 87 76 6d 00 00 	movw   $0x400,0x6d76(%rdi)
   10670:	00 04 
   10672:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10675:	76 05                	jbe    1067c <lzma_lzma_encoder_reset+0x9fc>
   10677:	45 31 c0             	xor    %r8d,%r8d
   1067a:	eb 34                	jmp    106b0 <lzma_lzma_encoder_reset+0xa30>
   1067c:	41 89 d0             	mov    %edx,%r8d
   1067f:	41 81 e0 f8 00 00 00 	and    $0xf8,%r8d
   10686:	45 31 c9             	xor    %r9d,%r9d
   10689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10690:	42 0f 11 84 4f dc 6c 	movups %xmm0,0x6cdc(%rdi,%r9,2)
   10697:	00 00 
   10699:	42 0f 11 84 4f bc 6e 	movups %xmm0,0x6ebc(%rdi,%r9,2)
   106a0:	00 00 
   106a2:	49 83 c1 08          	add    $0x8,%r9
   106a6:	4d 39 c8             	cmp    %r9,%r8
   106a9:	75 e5                	jne    10690 <lzma_lzma_encoder_reset+0xa10>
   106ab:	4c 39 c2             	cmp    %r8,%rdx
   106ae:	74 2e                	je     106de <lzma_lzma_encoder_reset+0xa5e>
   106b0:	49 ff c8             	dec    %r8
   106b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   106ba:	84 00 00 00 00 00 
   106c0:	66 42 c7 84 47 de 6c 	movw   $0x400,0x6cde(%rdi,%r8,2)
   106c7:	00 00 00 04 
   106cb:	66 42 c7 84 47 be 6e 	movw   $0x400,0x6ebe(%rdi,%r8,2)
   106d2:	00 00 00 04 
   106d6:	49 ff c0             	inc    %r8
   106d9:	49 39 c8             	cmp    %rcx,%r8
   106dc:	72 e2                	jb     106c0 <lzma_lzma_encoder_reset+0xa40>
   106de:	66 c7 87 30 6d 00 00 	movw   $0x400,0x6d30(%rdi)
   106e5:	00 04 
   106e7:	66 c7 87 48 6d 00 00 	movw   $0x400,0x6d48(%rdi)
   106ee:	00 04 
   106f0:	66 c7 87 60 6d 00 00 	movw   $0x400,0x6d60(%rdi)
   106f7:	00 04 
   106f9:	66 c7 87 78 6d 00 00 	movw   $0x400,0x6d78(%rdi)
   10700:	00 04 
   10702:	83 f8 f8             	cmp    $0xfffffff8,%eax
   10705:	76 04                	jbe    1070b <lzma_lzma_encoder_reset+0xa8b>
   10707:	31 c0                	xor    %eax,%eax
   10709:	eb 35                	jmp    10740 <lzma_lzma_encoder_reset+0xac0>
   1070b:	89 d0                	mov    %edx,%eax
   1070d:	25 f8 00 00 00       	and    $0xf8,%eax
   10712:	45 31 c0             	xor    %r8d,%r8d
   10715:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1071c:	00 00 00 00 
   10720:	42 0f 11 84 47 fc 6c 	movups %xmm0,0x6cfc(%rdi,%r8,2)
   10727:	00 00 
   10729:	42 0f 11 84 47 dc 6e 	movups %xmm0,0x6edc(%rdi,%r8,2)
   10730:	00 00 
   10732:	49 83 c0 08          	add    $0x8,%r8
   10736:	4c 39 c0             	cmp    %r8,%rax
   10739:	75 e5                	jne    10720 <lzma_lzma_encoder_reset+0xaa0>
   1073b:	48 39 c2             	cmp    %rax,%rdx
   1073e:	74 2c                	je     1076c <lzma_lzma_encoder_reset+0xaec>
   10740:	48 ff c8             	dec    %rax
   10743:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1074a:	84 00 00 00 00 00 
   10750:	66 c7 84 47 fe 6c 00 	movw   $0x400,0x6cfe(%rdi,%rax,2)
   10757:	00 00 04 
   1075a:	66 c7 84 47 de 6e 00 	movw   $0x400,0x6ede(%rdi,%rax,2)
   10761:	00 00 04 
   10764:	48 ff c0             	inc    %rax
   10767:	48 39 c8             	cmp    %rcx,%rax
   1076a:	72 e4                	jb     10750 <lzma_lzma_encoder_reset+0xad0>
   1076c:	41 57                	push   %r15
   1076e:	41 56                	push   %r14
   10770:	41 55                	push   %r13
   10772:	41 54                	push   %r12
   10774:	53                   	push   %rbx
   10775:	66 c7 87 32 6d 00 00 	movw   $0x400,0x6d32(%rdi)
   1077c:	00 04 
   1077e:	66 c7 87 4a 6d 00 00 	movw   $0x400,0x6d4a(%rdi)
   10785:	00 04 
   10787:	66 c7 87 62 6d 00 00 	movw   $0x400,0x6d62(%rdi)
   1078e:	00 04 
   10790:	66 c7 87 7a 6d 00 00 	movw   $0x400,0x6d7a(%rdi)
   10797:	00 04 
   10799:	0f 11 87 fc 70 00 00 	movups %xmm0,0x70fc(%rdi)
   107a0:	0f 11 87 0c 71 00 00 	movups %xmm0,0x710c(%rdi)
   107a7:	0f 11 87 1c 71 00 00 	movups %xmm0,0x711c(%rdi)
   107ae:	0f 11 87 2c 71 00 00 	movups %xmm0,0x712c(%rdi)
   107b5:	0f 11 87 3c 71 00 00 	movups %xmm0,0x713c(%rdi)
   107bc:	0f 11 87 4c 71 00 00 	movups %xmm0,0x714c(%rdi)
   107c3:	0f 11 87 5c 71 00 00 	movups %xmm0,0x715c(%rdi)
   107ca:	0f 11 87 6c 71 00 00 	movups %xmm0,0x716c(%rdi)
   107d1:	0f 11 87 7c 71 00 00 	movups %xmm0,0x717c(%rdi)
   107d8:	0f 11 87 8c 71 00 00 	movups %xmm0,0x718c(%rdi)
   107df:	0f 11 87 9c 71 00 00 	movups %xmm0,0x719c(%rdi)
   107e6:	0f 11 87 ac 71 00 00 	movups %xmm0,0x71ac(%rdi)
   107ed:	0f 11 87 bc 71 00 00 	movups %xmm0,0x71bc(%rdi)
   107f4:	0f 11 87 cc 71 00 00 	movups %xmm0,0x71cc(%rdi)
   107fb:	c7 87 dc 71 00 00 00 	movl   $0x4000400,0x71dc(%rdi)
   10802:	04 00 04 
   10805:	0f 11 87 fc 6e 00 00 	movups %xmm0,0x6efc(%rdi)
   1080c:	0f 11 87 0c 6f 00 00 	movups %xmm0,0x6f0c(%rdi)
   10813:	0f 11 87 1c 6f 00 00 	movups %xmm0,0x6f1c(%rdi)
   1081a:	0f 11 87 2c 6f 00 00 	movups %xmm0,0x6f2c(%rdi)
   10821:	0f 11 87 3c 6f 00 00 	movups %xmm0,0x6f3c(%rdi)
   10828:	0f 11 87 4c 6f 00 00 	movups %xmm0,0x6f4c(%rdi)
   1082f:	0f 11 87 5c 6f 00 00 	movups %xmm0,0x6f5c(%rdi)
   10836:	0f 11 87 6c 6f 00 00 	movups %xmm0,0x6f6c(%rdi)
   1083d:	0f 11 87 7c 6f 00 00 	movups %xmm0,0x6f7c(%rdi)
   10844:	0f 11 87 8c 6f 00 00 	movups %xmm0,0x6f8c(%rdi)
   1084b:	0f 11 87 9c 6f 00 00 	movups %xmm0,0x6f9c(%rdi)
   10852:	0f 11 87 ac 6f 00 00 	movups %xmm0,0x6fac(%rdi)
   10859:	0f 11 87 bc 6f 00 00 	movups %xmm0,0x6fbc(%rdi)
   10860:	0f 11 87 cc 6f 00 00 	movups %xmm0,0x6fcc(%rdi)
   10867:	0f 11 87 dc 6f 00 00 	movups %xmm0,0x6fdc(%rdi)
   1086e:	0f 11 87 ec 6f 00 00 	movups %xmm0,0x6fec(%rdi)
   10875:	0f 11 87 fc 6f 00 00 	movups %xmm0,0x6ffc(%rdi)
   1087c:	0f 11 87 0c 70 00 00 	movups %xmm0,0x700c(%rdi)
   10883:	0f 11 87 1c 70 00 00 	movups %xmm0,0x701c(%rdi)
   1088a:	0f 11 87 2c 70 00 00 	movups %xmm0,0x702c(%rdi)
   10891:	0f 11 87 3c 70 00 00 	movups %xmm0,0x703c(%rdi)
   10898:	0f 11 87 4c 70 00 00 	movups %xmm0,0x704c(%rdi)
   1089f:	0f 11 87 5c 70 00 00 	movups %xmm0,0x705c(%rdi)
   108a6:	0f 11 87 6c 70 00 00 	movups %xmm0,0x706c(%rdi)
   108ad:	0f 11 87 7c 70 00 00 	movups %xmm0,0x707c(%rdi)
   108b4:	0f 11 87 8c 70 00 00 	movups %xmm0,0x708c(%rdi)
   108bb:	0f 11 87 9c 70 00 00 	movups %xmm0,0x709c(%rdi)
   108c2:	0f 11 87 ac 70 00 00 	movups %xmm0,0x70ac(%rdi)
   108c9:	0f 11 87 bc 70 00 00 	movups %xmm0,0x70bc(%rdi)
   108d0:	0f 11 87 cc 70 00 00 	movups %xmm0,0x70cc(%rdi)
   108d7:	0f 11 87 dc 70 00 00 	movups %xmm0,0x70dc(%rdi)
   108de:	0f 11 87 ec 70 00 00 	movups %xmm0,0x70ec(%rdi)
   108e5:	0f 11 87 e0 71 00 00 	movups %xmm0,0x71e0(%rdi)
   108ec:	0f 11 87 f0 71 00 00 	movups %xmm0,0x71f0(%rdi)
   108f3:	8b 4e 1c             	mov    0x1c(%rsi),%ecx
   108f6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   108fc:	49 d3 e4             	shl    %cl,%r12
   108ff:	0f b6 87 8c 0b 00 00 	movzbl 0xb8c(%rdi),%eax
   10906:	c7 87 00 72 00 00 00 	movl   $0x4000400,0x7200(%rdi)
   1090d:	04 00 04 
   10910:	85 c9                	test   %ecx,%ecx
   10912:	74 44                	je     10958 <lzma_lzma_encoder_reset+0xcd8>
   10914:	44 89 e2             	mov    %r12d,%edx
   10917:	83 e2 fe             	and    $0xfffffffe,%edx
   1091a:	4c 8d 87 14 73 00 00 	lea    0x7314(%rdi),%r8
   10921:	31 c9                	xor    %ecx,%ecx
   10923:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1092a:	84 00 00 00 00 00 
   10930:	41 0f 11 80 f0 fe ff 	movups %xmm0,-0x110(%r8)
   10937:	ff 
   10938:	41 0f 11 40 f0       	movups %xmm0,-0x10(%r8)
   1093d:	41 0f 11 80 00 ff ff 	movups %xmm0,-0x100(%r8)
   10944:	ff 
   10945:	41 0f 11 00          	movups %xmm0,(%r8)
   10949:	48 83 c1 02          	add    $0x2,%rcx
   1094d:	49 83 c0 20          	add    $0x20,%r8
   10951:	48 39 ca             	cmp    %rcx,%rdx
   10954:	75 da                	jne    10930 <lzma_lzma_encoder_reset+0xcb0>
   10956:	eb 02                	jmp    1095a <lzma_lzma_encoder_reset+0xcda>
   10958:	31 c9                	xor    %ecx,%ecx
   1095a:	41 f6 c4 01          	test   $0x1,%r12b
   1095e:	74 14                	je     10974 <lzma_lzma_encoder_reset+0xcf4>
   10960:	48 c1 e1 04          	shl    $0x4,%rcx
   10964:	0f 11 84 0f 04 72 00 	movups %xmm0,0x7204(%rdi,%rcx,1)
   1096b:	00 
   1096c:	0f 11 84 0f 04 73 00 	movups %xmm0,0x7304(%rdi,%rcx,1)
   10973:	00 
   10974:	0f 11 87 04 74 00 00 	movups %xmm0,0x7404(%rdi)
   1097b:	0f 11 87 14 74 00 00 	movups %xmm0,0x7414(%rdi)
   10982:	0f 11 87 24 74 00 00 	movups %xmm0,0x7424(%rdi)
   10989:	0f 11 87 34 74 00 00 	movups %xmm0,0x7434(%rdi)
   10990:	0f 11 87 44 74 00 00 	movups %xmm0,0x7444(%rdi)
   10997:	0f 11 87 54 74 00 00 	movups %xmm0,0x7454(%rdi)
   1099e:	0f 11 87 64 74 00 00 	movups %xmm0,0x7464(%rdi)
   109a5:	0f 11 87 74 74 00 00 	movups %xmm0,0x7474(%rdi)
   109ac:	0f 11 87 84 74 00 00 	movups %xmm0,0x7484(%rdi)
   109b3:	0f 11 87 94 74 00 00 	movups %xmm0,0x7494(%rdi)
   109ba:	0f 11 87 a4 74 00 00 	movups %xmm0,0x74a4(%rdi)
   109c1:	0f 11 87 b4 74 00 00 	movups %xmm0,0x74b4(%rdi)
   109c8:	0f 11 87 c4 74 00 00 	movups %xmm0,0x74c4(%rdi)
   109cf:	0f 11 87 d4 74 00 00 	movups %xmm0,0x74d4(%rdi)
   109d6:	0f 11 87 e4 74 00 00 	movups %xmm0,0x74e4(%rdi)
   109dd:	0f 11 87 f4 74 00 00 	movups %xmm0,0x74f4(%rdi)
   109e4:	0f 11 87 04 75 00 00 	movups %xmm0,0x7504(%rdi)
   109eb:	0f 11 87 14 75 00 00 	movups %xmm0,0x7514(%rdi)
   109f2:	0f 11 87 24 75 00 00 	movups %xmm0,0x7524(%rdi)
   109f9:	0f 11 87 34 75 00 00 	movups %xmm0,0x7534(%rdi)
   10a00:	0f 11 87 44 75 00 00 	movups %xmm0,0x7544(%rdi)
   10a07:	0f 11 87 54 75 00 00 	movups %xmm0,0x7554(%rdi)
   10a0e:	0f 11 87 64 75 00 00 	movups %xmm0,0x7564(%rdi)
   10a15:	0f 11 87 74 75 00 00 	movups %xmm0,0x7574(%rdi)
   10a1c:	0f 11 87 84 75 00 00 	movups %xmm0,0x7584(%rdi)
   10a23:	0f 11 87 94 75 00 00 	movups %xmm0,0x7594(%rdi)
   10a2a:	0f 11 87 a4 75 00 00 	movups %xmm0,0x75a4(%rdi)
   10a31:	0f 11 87 b4 75 00 00 	movups %xmm0,0x75b4(%rdi)
   10a38:	0f 11 87 c4 75 00 00 	movups %xmm0,0x75c4(%rdi)
   10a3f:	0f 11 87 d4 75 00 00 	movups %xmm0,0x75d4(%rdi)
   10a46:	0f 11 87 e4 75 00 00 	movups %xmm0,0x75e4(%rdi)
   10a4d:	0f 11 87 f4 75 00 00 	movups %xmm0,0x75f4(%rdi)
   10a54:	84 c0                	test   %al,%al
   10a56:	49 89 ff             	mov    %rdi,%r15
   10a59:	74 04                	je     10a5f <lzma_lzma_encoder_reset+0xddf>
   10a5b:	31 c0                	xor    %eax,%eax
   10a5d:	eb 3c                	jmp    10a9b <lzma_lzma_encoder_reset+0xe1b>
   10a5f:	49 89 f5             	mov    %rsi,%r13
   10a62:	48 8d 9f 00 72 00 00 	lea    0x7200(%rdi),%rbx
   10a69:	45 31 f6             	xor    %r14d,%r14d
   10a6c:	0f 1f 40 00          	nopl   0x0(%rax)
   10a70:	48 89 df             	mov    %rbx,%rdi
   10a73:	44 89 f6             	mov    %r14d,%esi
   10a76:	e8 75 0b 00 00       	call   115f0 <length_update_prices>
   10a7b:	49 ff c6             	inc    %r14
   10a7e:	4d 39 f4             	cmp    %r14,%r12
   10a81:	75 ed                	jne    10a70 <lzma_lzma_encoder_reset+0xdf0>
   10a83:	4c 89 ff             	mov    %r15,%rdi
   10a86:	41 80 bf 8c 0b 00 00 	cmpb   $0x0,0xb8c(%r15)
   10a8d:	00 
   10a8e:	0f 94 c0             	sete   %al
   10a91:	4c 89 ee             	mov    %r13,%rsi
   10a94:	0f 28 05 45 76 01 00 	movaps 0x17645(%rip),%xmm0        # 280e0 <SHA256_K+0x180>
   10a9b:	8b 4e 1c             	mov    0x1c(%rsi),%ecx
   10a9e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   10aa4:	49 d3 e4             	shl    %cl,%r12
   10aa7:	c7 87 48 ba 00 00 00 	movl   $0x4000400,0xba48(%rdi)
   10aae:	04 00 04 
   10ab1:	85 c9                	test   %ecx,%ecx
   10ab3:	74 3f                	je     10af4 <lzma_lzma_encoder_reset+0xe74>
   10ab5:	44 89 e2             	mov    %r12d,%edx
   10ab8:	83 e2 fe             	and    $0xfffffffe,%edx
   10abb:	48 8d b7 5c bb 00 00 	lea    0xbb5c(%rdi),%rsi
   10ac2:	31 c9                	xor    %ecx,%ecx
   10ac4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   10acb:	00 00 00 00 00 
   10ad0:	0f 11 86 f0 fe ff ff 	movups %xmm0,-0x110(%rsi)
   10ad7:	0f 11 46 f0          	movups %xmm0,-0x10(%rsi)
   10adb:	0f 11 86 00 ff ff ff 	movups %xmm0,-0x100(%rsi)
   10ae2:	0f 11 06             	movups %xmm0,(%rsi)
   10ae5:	48 83 c1 02          	add    $0x2,%rcx
   10ae9:	48 83 c6 20          	add    $0x20,%rsi
   10aed:	48 39 ca             	cmp    %rcx,%rdx
   10af0:	75 de                	jne    10ad0 <lzma_lzma_encoder_reset+0xe50>
   10af2:	eb 02                	jmp    10af6 <lzma_lzma_encoder_reset+0xe76>
   10af4:	31 c9                	xor    %ecx,%ecx
   10af6:	41 f6 c4 01          	test   $0x1,%r12b
   10afa:	74 14                	je     10b10 <lzma_lzma_encoder_reset+0xe90>
   10afc:	48 c1 e1 04          	shl    $0x4,%rcx
   10b00:	0f 11 84 0f 4c ba 00 	movups %xmm0,0xba4c(%rdi,%rcx,1)
   10b07:	00 
   10b08:	0f 11 84 0f 4c bb 00 	movups %xmm0,0xbb4c(%rdi,%rcx,1)
   10b0f:	00 
   10b10:	0f 11 87 4c bc 00 00 	movups %xmm0,0xbc4c(%rdi)
   10b17:	0f 11 87 5c bc 00 00 	movups %xmm0,0xbc5c(%rdi)
   10b1e:	0f 11 87 6c bc 00 00 	movups %xmm0,0xbc6c(%rdi)
   10b25:	0f 11 87 7c bc 00 00 	movups %xmm0,0xbc7c(%rdi)
   10b2c:	0f 11 87 8c bc 00 00 	movups %xmm0,0xbc8c(%rdi)
   10b33:	0f 11 87 9c bc 00 00 	movups %xmm0,0xbc9c(%rdi)
   10b3a:	0f 11 87 ac bc 00 00 	movups %xmm0,0xbcac(%rdi)
   10b41:	0f 11 87 bc bc 00 00 	movups %xmm0,0xbcbc(%rdi)
   10b48:	0f 11 87 cc bc 00 00 	movups %xmm0,0xbccc(%rdi)
   10b4f:	0f 11 87 dc bc 00 00 	movups %xmm0,0xbcdc(%rdi)
   10b56:	0f 11 87 ec bc 00 00 	movups %xmm0,0xbcec(%rdi)
   10b5d:	0f 11 87 fc bc 00 00 	movups %xmm0,0xbcfc(%rdi)
   10b64:	0f 11 87 0c bd 00 00 	movups %xmm0,0xbd0c(%rdi)
   10b6b:	0f 11 87 1c bd 00 00 	movups %xmm0,0xbd1c(%rdi)
   10b72:	0f 11 87 2c bd 00 00 	movups %xmm0,0xbd2c(%rdi)
   10b79:	0f 11 87 3c bd 00 00 	movups %xmm0,0xbd3c(%rdi)
   10b80:	0f 11 87 4c bd 00 00 	movups %xmm0,0xbd4c(%rdi)
   10b87:	0f 11 87 5c bd 00 00 	movups %xmm0,0xbd5c(%rdi)
   10b8e:	0f 11 87 6c bd 00 00 	movups %xmm0,0xbd6c(%rdi)
   10b95:	0f 11 87 7c bd 00 00 	movups %xmm0,0xbd7c(%rdi)
   10b9c:	0f 11 87 8c bd 00 00 	movups %xmm0,0xbd8c(%rdi)
   10ba3:	0f 11 87 9c bd 00 00 	movups %xmm0,0xbd9c(%rdi)
   10baa:	0f 11 87 ac bd 00 00 	movups %xmm0,0xbdac(%rdi)
   10bb1:	0f 11 87 bc bd 00 00 	movups %xmm0,0xbdbc(%rdi)
   10bb8:	0f 11 87 cc bd 00 00 	movups %xmm0,0xbdcc(%rdi)
   10bbf:	0f 11 87 dc bd 00 00 	movups %xmm0,0xbddc(%rdi)
   10bc6:	0f 11 87 ec bd 00 00 	movups %xmm0,0xbdec(%rdi)
   10bcd:	0f 11 87 fc bd 00 00 	movups %xmm0,0xbdfc(%rdi)
   10bd4:	0f 11 87 0c be 00 00 	movups %xmm0,0xbe0c(%rdi)
   10bdb:	0f 11 87 1c be 00 00 	movups %xmm0,0xbe1c(%rdi)
   10be2:	0f 11 87 2c be 00 00 	movups %xmm0,0xbe2c(%rdi)
   10be9:	0f 11 87 3c be 00 00 	movups %xmm0,0xbe3c(%rdi)
   10bf0:	84 c0                	test   %al,%al
   10bf2:	74 1f                	je     10c13 <lzma_lzma_encoder_reset+0xf93>
   10bf4:	49 8d 9f 48 ba 00 00 	lea    0xba48(%r15),%rbx
   10bfb:	45 31 f6             	xor    %r14d,%r14d
   10bfe:	66 90                	xchg   %ax,%ax
   10c00:	48 89 df             	mov    %rbx,%rdi
   10c03:	44 89 f6             	mov    %r14d,%esi
   10c06:	e8 e5 09 00 00       	call   115f0 <length_update_prices>
   10c0b:	49 ff c6             	inc    %r14
   10c0e:	4d 39 f4             	cmp    %r14,%r12
   10c11:	75 ed                	jne    10c00 <lzma_lzma_encoder_reset+0xf80>
   10c13:	41 c7 87 94 0e 01 00 	movl   $0x7fffffff,0x10e94(%r15)
   10c1a:	ff ff ff 7f 
   10c1e:	49 c7 87 d8 0e 01 00 	movq   $0x7fffffff,0x10ed8(%r15)
   10c25:	ff ff ff 7f 
   10c29:	41 c7 87 e0 0e 01 00 	movl   $0x0,0x10ee0(%r15)
   10c30:	00 00 00 00 
   10c34:	31 c0                	xor    %eax,%eax
   10c36:	5b                   	pop    %rbx
   10c37:	41 5c                	pop    %r12
   10c39:	41 5d                	pop    %r13
   10c3b:	41 5e                	pop    %r14
   10c3d:	41 5f                	pop    %r15
   10c3f:	c3                   	ret    

0000000000010c40 <lzma_lzma_encoder_create>:
   10c40:	41 57                	push   %r15
   10c42:	41 56                	push   %r14
   10c44:	53                   	push   %rbx
   10c45:	48 89 cb             	mov    %rcx,%rbx
   10c48:	49 89 fe             	mov    %rdi,%r14
   10c4b:	48 8b 3f             	mov    (%rdi),%rdi
   10c4e:	48 85 ff             	test   %rdi,%rdi
   10c51:	75 1f                	jne    10c72 <lzma_lzma_encoder_create+0x32>
   10c53:	bf e8 ce 03 00       	mov    $0x3cee8,%edi
   10c58:	49 89 d7             	mov    %rdx,%r15
   10c5b:	e8 60 22 ff ff       	call   2ec0 <lzma_alloc>
   10c60:	4c 89 fa             	mov    %r15,%rdx
   10c63:	48 89 c7             	mov    %rax,%rdi
   10c66:	49 89 06             	mov    %rax,(%r14)
   10c69:	48 85 c0             	test   %rax,%rax
   10c6c:	0f 84 ce 00 00 00    	je     10d40 <lzma_lzma_encoder_create+0x100>
   10c72:	8b 4a 20             	mov    0x20(%rdx),%ecx
   10c75:	83 f9 02             	cmp    $0x2,%ecx
   10c78:	74 25                	je     10c9f <lzma_lzma_encoder_create+0x5f>
   10c7a:	b8 08 00 00 00       	mov    $0x8,%eax
   10c7f:	83 f9 01             	cmp    $0x1,%ecx
   10c82:	0f 85 bd 00 00 00    	jne    10d45 <lzma_lzma_encoder_create+0x105>
   10c88:	c6 87 8c 0b 00 00 01 	movb   $0x1,0xb8c(%rdi)
   10c8f:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
   10c94:	74 50                	je     10ce6 <lzma_lzma_encoder_create+0xa6>
   10c96:	83 7a 10 00          	cmpl   $0x0,0x10(%rdx)
   10c9a:	0f 95 c0             	setne  %al
   10c9d:	eb 49                	jmp    10ce8 <lzma_lzma_encoder_create+0xa8>
   10c9f:	c6 87 8c 0b 00 00 00 	movb   $0x0,0xb8c(%rdi)
   10ca6:	8b 02                	mov    (%rdx),%eax
   10ca8:	31 c9                	xor    %ecx,%ecx
   10caa:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   10caf:	90                   	nop
   10cb0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10cb6:	41 d3 e0             	shl    %cl,%r8d
   10cb9:	ff c1                	inc    %ecx
   10cbb:	83 c6 02             	add    $0x2,%esi
   10cbe:	41 39 c0             	cmp    %eax,%r8d
   10cc1:	72 ed                	jb     10cb0 <lzma_lzma_encoder_create+0x70>
   10cc3:	89 b7 90 0e 01 00    	mov    %esi,0x10e90(%rdi)
   10cc9:	8b 42 24             	mov    0x24(%rdx),%eax
   10ccc:	ff c8                	dec    %eax
   10cce:	89 87 04 ba 00 00    	mov    %eax,0xba04(%rdi)
   10cd4:	8b 42 24             	mov    0x24(%rdx),%eax
   10cd7:	ff c8                	dec    %eax
   10cd9:	89 87 4c 02 01 00    	mov    %eax,0x1024c(%rdi)
   10cdf:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
   10ce4:	75 b0                	jne    10c96 <lzma_lzma_encoder_create+0x56>
   10ce6:	31 c0                	xor    %eax,%eax
   10ce8:	88 87 8d 0b 00 00    	mov    %al,0xb8d(%rdi)
   10cee:	c6 87 8e 0b 00 00 00 	movb   $0x0,0xb8e(%rdi)
   10cf5:	48 c7 03 00 10 00 00 	movq   $0x1000,(%rbx)
   10cfc:	8b 02                	mov    (%rdx),%eax
   10cfe:	48 89 43 08          	mov    %rax,0x8(%rbx)
   10d02:	48 c7 43 10 01 10 00 	movq   $0x1001,0x10(%rbx)
   10d09:	00 
   10d0a:	48 c7 43 18 11 01 00 	movq   $0x111,0x18(%rbx)
   10d11:	00 
   10d12:	8b 42 24             	mov    0x24(%rdx),%eax
   10d15:	48 89 43 20          	mov    %rax,0x20(%rbx)
   10d19:	8b 42 28             	mov    0x28(%rdx),%eax
   10d1c:	89 43 28             	mov    %eax,0x28(%rbx)
   10d1f:	8b 42 2c             	mov    0x2c(%rdx),%eax
   10d22:	89 43 2c             	mov    %eax,0x2c(%rbx)
   10d25:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10d29:	48 89 43 30          	mov    %rax,0x30(%rbx)
   10d2d:	8b 42 10             	mov    0x10(%rdx),%eax
   10d30:	89 43 38             	mov    %eax,0x38(%rbx)
   10d33:	48 89 d6             	mov    %rdx,%rsi
   10d36:	5b                   	pop    %rbx
   10d37:	41 5e                	pop    %r14
   10d39:	41 5f                	pop    %r15
   10d3b:	e9 40 ef ff ff       	jmp    fc80 <lzma_lzma_encoder_reset>
   10d40:	b8 05 00 00 00       	mov    $0x5,%eax
   10d45:	5b                   	pop    %rbx
   10d46:	41 5e                	pop    %r14
   10d48:	41 5f                	pop    %r15
   10d4a:	c3                   	ret    
   10d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010d50 <lzma_lzma_encoder_init>:
   10d50:	48 8d 0d 09 00 00 00 	lea    0x9(%rip),%rcx        # 10d60 <lzma_encoder_init>
   10d57:	e9 f4 b3 ff ff       	jmp    c150 <lzma_lz_encoder_init>
   10d5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010d60 <lzma_encoder_init>:
   10d60:	48 8d 05 f9 0e 00 00 	lea    0xef9(%rip),%rax        # 11c60 <lzma_encode>
   10d67:	48 89 47 08          	mov    %rax,0x8(%rdi)
   10d6b:	e9 d0 fe ff ff       	jmp    10c40 <lzma_lzma_encoder_create>

0000000000010d70 <lzma_lzma_encoder_memusage>:
   10d70:	8b 4f 14             	mov    0x14(%rdi),%ecx
   10d73:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   10d7a:	83 f9 04             	cmp    $0x4,%ecx
   10d7d:	0f 87 98 00 00 00    	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10d83:	8b 57 18             	mov    0x18(%rdi),%edx
   10d86:	83 fa 04             	cmp    $0x4,%edx
   10d89:	0f 87 8c 00 00 00    	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10d8f:	01 ca                	add    %ecx,%edx
   10d91:	83 fa 04             	cmp    $0x4,%edx
   10d94:	0f 87 81 00 00 00    	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10d9a:	83 7f 1c 04          	cmpl   $0x4,0x1c(%rdi)
   10d9e:	77 7b                	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10da0:	8b 4f 24             	mov    0x24(%rdi),%ecx
   10da3:	8d 51 fe             	lea    -0x2(%rcx),%edx
   10da6:	81 fa 0f 01 00 00    	cmp    $0x10f,%edx
   10dac:	77 6d                	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10dae:	8b 57 20             	mov    0x20(%rdi),%edx
   10db1:	ff ca                	dec    %edx
   10db3:	83 fa 01             	cmp    $0x1,%edx
   10db6:	77 63                	ja     10e1b <lzma_lzma_encoder_memusage+0xab>
   10db8:	48 83 ec 48          	sub    $0x48,%rsp
   10dbc:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
   10dc3:	00 00 
   10dc5:	8b 07                	mov    (%rdi),%eax
   10dc7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   10dcc:	48 c7 44 24 18 01 10 	movq   $0x1001,0x18(%rsp)
   10dd3:	00 00 
   10dd5:	48 c7 44 24 20 11 01 	movq   $0x111,0x20(%rsp)
   10ddc:	00 00 
   10dde:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   10de3:	48 8b 47 28          	mov    0x28(%rdi),%rax
   10de7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10dec:	48 8b 47 08          	mov    0x8(%rdi),%rax
   10df0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10df5:	8b 47 10             	mov    0x10(%rdi),%eax
   10df8:	89 44 24 40          	mov    %eax,0x40(%rsp)
   10dfc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   10e01:	e8 8a b0 ff ff       	call   be90 <lzma_lz_encoder_memusage>
   10e06:	48 89 c1             	mov    %rax,%rcx
   10e09:	48 05 e8 ce 03 00    	add    $0x3cee8,%rax
   10e0f:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   10e13:	48 0f 44 c1          	cmove  %rcx,%rax
   10e17:	48 83 c4 48          	add    $0x48,%rsp
   10e1b:	c3                   	ret    
   10e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010e20 <lzma_lzma_lclppb_encode>:
   10e20:	8b 4f 14             	mov    0x14(%rdi),%ecx
   10e23:	b0 01                	mov    $0x1,%al
   10e25:	83 f9 04             	cmp    $0x4,%ecx
   10e28:	77 28                	ja     10e52 <lzma_lzma_lclppb_encode+0x32>
   10e2a:	8b 57 18             	mov    0x18(%rdi),%edx
   10e2d:	83 fa 04             	cmp    $0x4,%edx
   10e30:	77 20                	ja     10e52 <lzma_lzma_lclppb_encode+0x32>
   10e32:	44 8d 04 0a          	lea    (%rdx,%rcx,1),%r8d
   10e36:	41 83 f8 04          	cmp    $0x4,%r8d
   10e3a:	77 16                	ja     10e52 <lzma_lzma_lclppb_encode+0x32>
   10e3c:	8b 7f 1c             	mov    0x1c(%rdi),%edi
   10e3f:	83 ff 04             	cmp    $0x4,%edi
   10e42:	77 0e                	ja     10e52 <lzma_lzma_lclppb_encode+0x32>
   10e44:	8d 04 bf             	lea    (%rdi,%rdi,4),%eax
   10e47:	01 d0                	add    %edx,%eax
   10e49:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   10e4c:	01 c8                	add    %ecx,%eax
   10e4e:	88 06                	mov    %al,(%rsi)
   10e50:	31 c0                	xor    %eax,%eax
   10e52:	c3                   	ret    
   10e53:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   10e5a:	84 00 00 00 00 00 

0000000000010e60 <lzma_lzma_props_encode>:
   10e60:	8b 4f 14             	mov    0x14(%rdi),%ecx
   10e63:	b8 0b 00 00 00       	mov    $0xb,%eax
   10e68:	83 f9 04             	cmp    $0x4,%ecx
   10e6b:	77 30                	ja     10e9d <lzma_lzma_props_encode+0x3d>
   10e6d:	8b 57 18             	mov    0x18(%rdi),%edx
   10e70:	83 fa 04             	cmp    $0x4,%edx
   10e73:	77 28                	ja     10e9d <lzma_lzma_props_encode+0x3d>
   10e75:	44 8d 04 0a          	lea    (%rdx,%rcx,1),%r8d
   10e79:	41 83 f8 04          	cmp    $0x4,%r8d
   10e7d:	77 1e                	ja     10e9d <lzma_lzma_props_encode+0x3d>
   10e7f:	44 8b 47 1c          	mov    0x1c(%rdi),%r8d
   10e83:	41 83 f8 04          	cmp    $0x4,%r8d
   10e87:	77 14                	ja     10e9d <lzma_lzma_props_encode+0x3d>
   10e89:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
   10e8d:	01 d0                	add    %edx,%eax
   10e8f:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   10e92:	01 c8                	add    %ecx,%eax
   10e94:	88 06                	mov    %al,(%rsi)
   10e96:	8b 07                	mov    (%rdi),%eax
   10e98:	89 46 01             	mov    %eax,0x1(%rsi)
   10e9b:	31 c0                	xor    %eax,%eax
   10e9d:	c3                   	ret    
   10e9e:	66 90                	xchg   %ax,%ax

0000000000010ea0 <lzma_mode_is_supported>:
   10ea0:	ff cf                	dec    %edi
   10ea2:	83 ff 02             	cmp    $0x2,%edi
   10ea5:	0f 92 c0             	setb   %al
   10ea8:	c3                   	ret    
   10ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010eb0 <match>:
   10eb0:	41 57                	push   %r15
   10eb2:	41 56                	push   %r14
   10eb4:	53                   	push   %rbx
   10eb5:	41 89 cf             	mov    %ecx,%r15d
   10eb8:	89 d3                	mov    %edx,%ebx
   10eba:	89 f2                	mov    %esi,%edx
   10ebc:	49 89 fe             	mov    %rdi,%r14
   10ebf:	31 c0                	xor    %eax,%eax
   10ec1:	83 bf e0 02 00 00 07 	cmpl   $0x7,0x2e0(%rdi)
   10ec8:	0f 93 c0             	setae  %al
   10ecb:	8d 04 40             	lea    (%rax,%rax,2),%eax
   10ece:	83 c0 07             	add    $0x7,%eax
   10ed1:	89 87 e0 02 00 00    	mov    %eax,0x2e0(%rdi)
   10ed7:	48 8d b7 00 72 00 00 	lea    0x7200(%rdi),%rsi
   10ede:	44 0f b6 87 8c 0b 00 	movzbl 0xb8c(%rdi),%r8d
   10ee5:	00 
   10ee6:	e8 45 04 00 00       	call   11330 <length>
   10eeb:	81 fb ff 1f 00 00    	cmp    $0x1fff,%ebx
   10ef1:	77 0f                	ja     10f02 <match+0x52>
   10ef3:	89 d8                	mov    %ebx,%eax
   10ef5:	48 8d 0d 04 72 01 00 	lea    0x17204(%rip),%rcx        # 28100 <lzma_fastpos>
   10efc:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10f00:	eb 2e                	jmp    10f30 <match+0x80>
   10f02:	89 d8                	mov    %ebx,%eax
   10f04:	81 fb ff ff ff 01    	cmp    $0x1ffffff,%ebx
   10f0a:	77 13                	ja     10f1f <match+0x6f>
   10f0c:	c1 e8 0c             	shr    $0xc,%eax
   10f0f:	48 8d 0d ea 71 01 00 	lea    0x171ea(%rip),%rcx        # 28100 <lzma_fastpos>
   10f16:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10f1a:	83 c6 18             	add    $0x18,%esi
   10f1d:	eb 11                	jmp    10f30 <match+0x80>
   10f1f:	c1 e8 18             	shr    $0x18,%eax
   10f22:	48 8d 0d d7 71 01 00 	lea    0x171d7(%rip),%rcx        # 28100 <lzma_fastpos>
   10f29:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10f2d:	83 c6 30             	add    $0x30,%esi
   10f30:	41 8d 47 fe          	lea    -0x2(%r15),%eax
   10f34:	41 83 ff 06          	cmp    $0x6,%r15d
   10f38:	b9 03 00 00 00       	mov    $0x3,%ecx
   10f3d:	0f 42 c8             	cmovb  %eax,%ecx
   10f40:	48 c1 e1 07          	shl    $0x7,%rcx
   10f44:	49 8d 04 0e          	lea    (%r14,%rcx,1),%rax
   10f48:	49 8b 56 18          	mov    0x18(%r14),%rdx
   10f4c:	89 f7                	mov    %esi,%edi
   10f4e:	c1 ef 05             	shr    $0x5,%edi
   10f51:	83 e7 01             	and    $0x1,%edi
   10f54:	4c 01 f1             	add    %r14,%rcx
   10f57:	48 81 c1 fe 6e 00 00 	add    $0x6efe,%rcx
   10f5e:	41 89 7c 96 28       	mov    %edi,0x28(%r14,%rdx,4)
   10f63:	49 8b 56 18          	mov    0x18(%r14),%rdx
   10f67:	49 89 8c d6 10 01 00 	mov    %rcx,0x110(%r14,%rdx,8)
   10f6e:	00 
   10f6f:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   10f73:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   10f77:	49 89 56 18          	mov    %rdx,0x18(%r14)
   10f7b:	89 f2                	mov    %esi,%edx
   10f7d:	c1 ea 04             	shr    $0x4,%edx
   10f80:	83 e2 01             	and    $0x1,%edx
   10f83:	44 8d 04 7d 04 00 00 	lea    0x4(,%rdi,2),%r8d
   10f8a:	00 
   10f8b:	49 01 c0             	add    %rax,%r8
   10f8e:	49 81 c0 fc 6e 00 00 	add    $0x6efc,%r8
   10f95:	41 89 54 8e 2c       	mov    %edx,0x2c(%r14,%rcx,4)
   10f9a:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   10f9e:	4d 89 84 ce 10 01 00 	mov    %r8,0x110(%r14,%rcx,8)
   10fa5:	00 
   10fa6:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   10faa:	4c 8d 41 01          	lea    0x1(%rcx),%r8
   10fae:	4d 89 46 18          	mov    %r8,0x18(%r14)
   10fb2:	8d 14 7a             	lea    (%rdx,%rdi,2),%edx
   10fb5:	83 c2 04             	add    $0x4,%edx
   10fb8:	89 f7                	mov    %esi,%edi
   10fba:	c1 ef 03             	shr    $0x3,%edi
   10fbd:	83 e7 01             	and    $0x1,%edi
   10fc0:	44 8d 04 12          	lea    (%rdx,%rdx,1),%r8d
   10fc4:	49 01 c0             	add    %rax,%r8
   10fc7:	49 81 c0 fc 6e 00 00 	add    $0x6efc,%r8
   10fce:	41 89 7c 8e 2c       	mov    %edi,0x2c(%r14,%rcx,4)
   10fd3:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   10fd7:	4d 89 84 ce 10 01 00 	mov    %r8,0x110(%r14,%rcx,8)
   10fde:	00 
   10fdf:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   10fe3:	4c 8d 41 01          	lea    0x1(%rcx),%r8
   10fe7:	4d 89 46 18          	mov    %r8,0x18(%r14)
   10feb:	8d 14 57             	lea    (%rdi,%rdx,2),%edx
   10fee:	89 f7                	mov    %esi,%edi
   10ff0:	c1 ef 02             	shr    $0x2,%edi
   10ff3:	83 e7 01             	and    $0x1,%edi
   10ff6:	4c 8d 04 50          	lea    (%rax,%rdx,2),%r8
   10ffa:	49 81 c0 fc 6e 00 00 	add    $0x6efc,%r8
   11001:	41 89 7c 8e 2c       	mov    %edi,0x2c(%r14,%rcx,4)
   11006:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   1100a:	4d 89 84 ce 10 01 00 	mov    %r8,0x110(%r14,%rcx,8)
   11011:	00 
   11012:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   11016:	4c 8d 41 01          	lea    0x1(%rcx),%r8
   1101a:	4d 89 46 18          	mov    %r8,0x18(%r14)
   1101e:	8d 3c 57             	lea    (%rdi,%rdx,2),%edi
   11021:	89 f2                	mov    %esi,%edx
   11023:	d1 ea                	shr    %edx
   11025:	41 89 d0             	mov    %edx,%r8d
   11028:	41 83 e0 01          	and    $0x1,%r8d
   1102c:	4c 8d 0c 78          	lea    (%rax,%rdi,2),%r9
   11030:	49 81 c1 fc 6e 00 00 	add    $0x6efc,%r9
   11037:	45 89 44 8e 2c       	mov    %r8d,0x2c(%r14,%rcx,4)
   1103c:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   11040:	4d 89 8c ce 10 01 00 	mov    %r9,0x110(%r14,%rcx,8)
   11047:	00 
   11048:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   1104c:	4c 8d 49 01          	lea    0x1(%rcx),%r9
   11050:	4d 89 4e 18          	mov    %r9,0x18(%r14)
   11054:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   11058:	41 89 f0             	mov    %esi,%r8d
   1105b:	41 83 e0 01          	and    $0x1,%r8d
   1105f:	48 8d 04 78          	lea    (%rax,%rdi,2),%rax
   11063:	48 05 fc 6e 00 00    	add    $0x6efc,%rax
   11069:	45 89 44 8e 2c       	mov    %r8d,0x2c(%r14,%rcx,4)
   1106e:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   11072:	49 89 84 ce 10 01 00 	mov    %rax,0x110(%r14,%rcx,8)
   11079:	00 
   1107a:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   1107e:	48 8d 47 01          	lea    0x1(%rdi),%rax
   11082:	49 89 46 18          	mov    %rax,0x18(%r14)
   11086:	83 fe 04             	cmp    $0x4,%esi
   11089:	0f 82 6f 02 00 00    	jb     112fe <match+0x44e>
   1108f:	41 83 c8 02          	or     $0x2,%r8d
   11093:	8d 4a ff             	lea    -0x1(%rdx),%ecx
   11096:	41 d3 e0             	shl    %cl,%r8d
   11099:	89 d8                	mov    %ebx,%eax
   1109b:	44 29 c0             	sub    %r8d,%eax
   1109e:	83 fe 0d             	cmp    $0xd,%esi
   110a1:	0f 87 0b 01 00 00    	ja     111b2 <match+0x302>
   110a7:	44 89 c1             	mov    %r8d,%ecx
   110aa:	49 8d 0c 4e          	lea    (%r14,%rcx,2),%rcx
   110ae:	01 f6                	add    %esi,%esi
   110b0:	48 29 f1             	sub    %rsi,%rcx
   110b3:	4c 8d 81 fc 70 00 00 	lea    0x70fc(%rcx),%r8
   110ba:	89 c6                	mov    %eax,%esi
   110bc:	83 e6 01             	and    $0x1,%esi
   110bf:	41 89 74 be 2c       	mov    %esi,0x2c(%r14,%rdi,4)
   110c4:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   110c8:	4d 89 84 fe 10 01 00 	mov    %r8,0x110(%r14,%rdi,8)
   110cf:	00 
   110d0:	4d 8b 46 18          	mov    0x18(%r14),%r8
   110d4:	49 8d 78 01          	lea    0x1(%r8),%rdi
   110d8:	49 89 7e 18          	mov    %rdi,0x18(%r14)
   110dc:	83 fa 02             	cmp    $0x2,%edx
   110df:	0f 84 19 02 00 00    	je     112fe <match+0x44e>
   110e5:	48 81 c1 fa 70 00 00 	add    $0x70fa,%rcx
   110ec:	83 ce 02             	or     $0x2,%esi
   110ef:	89 c7                	mov    %eax,%edi
   110f1:	d1 ef                	shr    %edi
   110f3:	83 e7 01             	and    $0x1,%edi
   110f6:	4c 8d 0c 71          	lea    (%rcx,%rsi,2),%r9
   110fa:	43 89 7c 86 2c       	mov    %edi,0x2c(%r14,%r8,4)
   110ff:	4d 8b 46 18          	mov    0x18(%r14),%r8
   11103:	4f 89 8c c6 10 01 00 	mov    %r9,0x110(%r14,%r8,8)
   1110a:	00 
   1110b:	4d 8b 46 18          	mov    0x18(%r14),%r8
   1110f:	4d 8d 48 01          	lea    0x1(%r8),%r9
   11113:	4d 89 4e 18          	mov    %r9,0x18(%r14)
   11117:	83 fa 03             	cmp    $0x3,%edx
   1111a:	0f 84 de 01 00 00    	je     112fe <match+0x44e>
   11120:	8d 34 77             	lea    (%rdi,%rsi,2),%esi
   11123:	89 c7                	mov    %eax,%edi
   11125:	c1 ef 02             	shr    $0x2,%edi
   11128:	83 e7 01             	and    $0x1,%edi
   1112b:	4c 8d 0c 71          	lea    (%rcx,%rsi,2),%r9
   1112f:	43 89 7c 86 2c       	mov    %edi,0x2c(%r14,%r8,4)
   11134:	4d 8b 46 18          	mov    0x18(%r14),%r8
   11138:	4f 89 8c c6 10 01 00 	mov    %r9,0x110(%r14,%r8,8)
   1113f:	00 
   11140:	4d 8b 46 18          	mov    0x18(%r14),%r8
   11144:	4d 8d 48 01          	lea    0x1(%r8),%r9
   11148:	4d 89 4e 18          	mov    %r9,0x18(%r14)
   1114c:	83 fa 04             	cmp    $0x4,%edx
   1114f:	0f 84 a9 01 00 00    	je     112fe <match+0x44e>
   11155:	8d 34 77             	lea    (%rdi,%rsi,2),%esi
   11158:	89 c7                	mov    %eax,%edi
   1115a:	c1 ef 03             	shr    $0x3,%edi
   1115d:	83 e7 01             	and    $0x1,%edi
   11160:	4c 8d 0c 71          	lea    (%rcx,%rsi,2),%r9
   11164:	43 89 7c 86 2c       	mov    %edi,0x2c(%r14,%r8,4)
   11169:	4d 8b 46 18          	mov    0x18(%r14),%r8
   1116d:	4f 89 8c c6 10 01 00 	mov    %r9,0x110(%r14,%r8,8)
   11174:	00 
   11175:	4d 8b 46 18          	mov    0x18(%r14),%r8
   11179:	4d 8d 48 01          	lea    0x1(%r8),%r9
   1117d:	4d 89 4e 18          	mov    %r9,0x18(%r14)
   11181:	83 fa 05             	cmp    $0x5,%edx
   11184:	0f 84 74 01 00 00    	je     112fe <match+0x44e>
   1118a:	c1 e8 04             	shr    $0x4,%eax
   1118d:	83 e0 01             	and    $0x1,%eax
   11190:	01 ff                	add    %edi,%edi
   11192:	8d 14 b7             	lea    (%rdi,%rsi,4),%edx
   11195:	48 01 d1             	add    %rdx,%rcx
   11198:	43 89 44 86 2c       	mov    %eax,0x2c(%r14,%r8,4)
   1119d:	49 8b 46 18          	mov    0x18(%r14),%rax
   111a1:	49 89 8c c6 10 01 00 	mov    %rcx,0x110(%r14,%rax,8)
   111a8:	00 
   111a9:	49 ff 46 18          	incq   0x18(%r14)
   111ad:	e9 4c 01 00 00       	jmp    112fe <match+0x44e>
   111b2:	89 c1                	mov    %eax,%ecx
   111b4:	c1 e9 04             	shr    $0x4,%ecx
   111b7:	8d 72 fb             	lea    -0x5(%rdx),%esi
   111ba:	40 f6 c6 01          	test   $0x1,%sil
   111be:	74 1c                	je     111dc <match+0x32c>
   111c0:	8d 72 fa             	lea    -0x6(%rdx),%esi
   111c3:	31 ff                	xor    %edi,%edi
   111c5:	0f a3 f1             	bt     %esi,%ecx
   111c8:	83 d7 02             	adc    $0x2,%edi
   111cb:	4d 8b 46 18          	mov    0x18(%r14),%r8
   111cf:	4d 8d 48 01          	lea    0x1(%r8),%r9
   111d3:	4d 89 4e 18          	mov    %r9,0x18(%r14)
   111d7:	43 89 7c 86 28       	mov    %edi,0x28(%r14,%r8,4)
   111dc:	83 fa 06             	cmp    $0x6,%edx
   111df:	74 55                	je     11236 <match+0x386>
   111e1:	ff ce                	dec    %esi
   111e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   111ea:	84 00 00 00 00 00 
   111f0:	0f a3 f1             	bt     %esi,%ecx
   111f3:	ba 00 00 00 00       	mov    $0x0,%edx
   111f8:	83 d2 02             	adc    $0x2,%edx
   111fb:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   111ff:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   11203:	4d 89 46 18          	mov    %r8,0x18(%r14)
   11207:	41 89 54 be 28       	mov    %edx,0x28(%r14,%rdi,4)
   1120c:	8d 56 ff             	lea    -0x1(%rsi),%edx
   1120f:	0f b6 d2             	movzbl %dl,%edx
   11212:	0f a3 d1             	bt     %edx,%ecx
   11215:	ba 00 00 00 00       	mov    $0x0,%edx
   1121a:	83 d2 02             	adc    $0x2,%edx
   1121d:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   11221:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   11225:	4d 89 46 18          	mov    %r8,0x18(%r14)
   11229:	41 89 54 be 28       	mov    %edx,0x28(%r14,%rdi,4)
   1122e:	83 c6 fe             	add    $0xfffffffe,%esi
   11231:	83 fe ff             	cmp    $0xffffffff,%esi
   11234:	75 ba                	jne    111f0 <match+0x340>
   11236:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   1123a:	89 c2                	mov    %eax,%edx
   1123c:	83 e2 01             	and    $0x1,%edx
   1123f:	89 c6                	mov    %eax,%esi
   11241:	d1 ee                	shr    %esi
   11243:	49 8d be e2 71 00 00 	lea    0x71e2(%r14),%rdi
   1124a:	41 89 54 8e 28       	mov    %edx,0x28(%r14,%rcx,4)
   1124f:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   11253:	49 89 bc ce 10 01 00 	mov    %rdi,0x110(%r14,%rcx,8)
   1125a:	00 
   1125b:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   1125f:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
   11263:	49 89 4e 18          	mov    %rcx,0x18(%r14)
   11267:	83 e6 01             	and    $0x1,%esi
   1126a:	89 c1                	mov    %eax,%ecx
   1126c:	c1 e9 02             	shr    $0x2,%ecx
   1126f:	44 8d 04 55 04 00 00 	lea    0x4(,%rdx,2),%r8d
   11276:	00 
   11277:	4d 01 f0             	add    %r14,%r8
   1127a:	49 81 c0 e0 71 00 00 	add    $0x71e0,%r8
   11281:	41 89 74 be 2c       	mov    %esi,0x2c(%r14,%rdi,4)
   11286:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   1128a:	4d 89 84 fe 10 01 00 	mov    %r8,0x110(%r14,%rdi,8)
   11291:	00 
   11292:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   11296:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   1129a:	4d 89 46 18          	mov    %r8,0x18(%r14)
   1129e:	8d 14 56             	lea    (%rsi,%rdx,2),%edx
   112a1:	83 c2 04             	add    $0x4,%edx
   112a4:	83 e1 01             	and    $0x1,%ecx
   112a7:	c1 e8 03             	shr    $0x3,%eax
   112aa:	83 e0 01             	and    $0x1,%eax
   112ad:	8d 34 12             	lea    (%rdx,%rdx,1),%esi
   112b0:	4c 01 f6             	add    %r14,%rsi
   112b3:	48 81 c6 e0 71 00 00 	add    $0x71e0,%rsi
   112ba:	41 89 4c be 2c       	mov    %ecx,0x2c(%r14,%rdi,4)
   112bf:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   112c3:	49 89 b4 fe 10 01 00 	mov    %rsi,0x110(%r14,%rdi,8)
   112ca:	00 
   112cb:	49 8b 76 18          	mov    0x18(%r14),%rsi
   112cf:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   112d3:	49 89 7e 18          	mov    %rdi,0x18(%r14)
   112d7:	8d 0c 51             	lea    (%rcx,%rdx,2),%ecx
   112da:	49 8d 8c 4e e0 71 00 	lea    0x71e0(%r14,%rcx,2),%rcx
   112e1:	00 
   112e2:	41 89 44 b6 2c       	mov    %eax,0x2c(%r14,%rsi,4)
   112e7:	49 8b 46 18          	mov    0x18(%r14),%rax
   112eb:	49 89 8c c6 10 01 00 	mov    %rcx,0x110(%r14,%rax,8)
   112f2:	00 
   112f3:	49 ff 46 18          	incq   0x18(%r14)
   112f7:	41 ff 86 d8 0e 01 00 	incl   0x10ed8(%r14)
   112fe:	41 8b 86 ec 02 00 00 	mov    0x2ec(%r14),%eax
   11305:	41 89 86 f0 02 00 00 	mov    %eax,0x2f0(%r14)
   1130c:	49 8b 86 e4 02 00 00 	mov    0x2e4(%r14),%rax
   11313:	49 89 86 e8 02 00 00 	mov    %rax,0x2e8(%r14)
   1131a:	41 89 9e e4 02 00 00 	mov    %ebx,0x2e4(%r14)
   11321:	41 ff 86 94 0e 01 00 	incl   0x10e94(%r14)
   11328:	5b                   	pop    %rbx
   11329:	41 5e                	pop    %r14
   1132b:	41 5f                	pop    %r15
   1132d:	c3                   	ret    
   1132e:	66 90                	xchg   %ax,%ax

0000000000011330 <length>:
   11330:	41 56                	push   %r14
   11332:	53                   	push   %rbx
   11333:	8d 41 fe             	lea    -0x2(%rcx),%eax
   11336:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   1133a:	83 f8 07             	cmp    $0x7,%eax
   1133d:	77 3f                	ja     1137e <length+0x4e>
   1133f:	42 c7 44 8f 28 00 00 	movl   $0x0,0x28(%rdi,%r9,4)
   11346:	00 00 
   11348:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   1134c:	4a 89 b4 cf 10 01 00 	mov    %rsi,0x110(%rdi,%r9,8)
   11353:	00 
   11354:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   11358:	4d 8d 4b 01          	lea    0x1(%r11),%r9
   1135c:	4c 89 4f 18          	mov    %r9,0x18(%rdi)
   11360:	89 d3                	mov    %edx,%ebx
   11362:	48 c1 e3 04          	shl    $0x4,%rbx
   11366:	4c 8d 0c 1e          	lea    (%rsi,%rbx,1),%r9
   1136a:	49 83 c1 04          	add    $0x4,%r9
   1136e:	41 89 c2             	mov    %eax,%r10d
   11371:	41 c1 ea 02          	shr    $0x2,%r10d
   11375:	48 01 f3             	add    %rsi,%rbx
   11378:	48 83 c3 06          	add    $0x6,%rbx
   1137c:	eb 70                	jmp    113ee <length+0xbe>
   1137e:	42 c7 44 8f 28 01 00 	movl   $0x1,0x28(%rdi,%r9,4)
   11385:	00 00 
   11387:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1138b:	48 89 b4 c7 10 01 00 	mov    %rsi,0x110(%rdi,%rax,8)
   11392:	00 
   11393:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   11397:	49 8d 41 01          	lea    0x1(%r9),%rax
   1139b:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1139f:	8d 41 f6             	lea    -0xa(%rcx),%eax
   113a2:	4c 8d 56 02          	lea    0x2(%rsi),%r10
   113a6:	83 f8 07             	cmp    $0x7,%eax
   113a9:	77 68                	ja     11413 <length+0xe3>
   113ab:	42 c7 44 8f 2c 00 00 	movl   $0x0,0x2c(%rdi,%r9,4)
   113b2:	00 00 
   113b4:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   113b8:	4e 89 94 cf 10 01 00 	mov    %r10,0x110(%rdi,%r9,8)
   113bf:	00 
   113c0:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   113c4:	4d 8d 4b 01          	lea    0x1(%r11),%r9
   113c8:	4c 89 4f 18          	mov    %r9,0x18(%rdi)
   113cc:	89 d3                	mov    %edx,%ebx
   113ce:	48 c1 e3 04          	shl    $0x4,%rbx
   113d2:	4c 8d 0c 1e          	lea    (%rsi,%rbx,1),%r9
   113d6:	49 81 c1 04 01 00 00 	add    $0x104,%r9
   113dd:	41 89 c2             	mov    %eax,%r10d
   113e0:	41 c1 ea 02          	shr    $0x2,%r10d
   113e4:	48 01 f3             	add    %rsi,%rbx
   113e7:	48 81 c3 06 01 00 00 	add    $0x106,%rbx
   113ee:	46 89 54 9f 2c       	mov    %r10d,0x2c(%rdi,%r11,4)
   113f3:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   113f7:	4a 89 9c df 10 01 00 	mov    %rbx,0x110(%rdi,%r11,8)
   113fe:	00 
   113ff:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   11403:	49 ff c3             	inc    %r11
   11406:	4c 89 5f 18          	mov    %r11,0x18(%rdi)
   1140a:	41 83 ca 02          	or     $0x2,%r10d
   1140e:	e9 6e 01 00 00       	jmp    11581 <length+0x251>
   11413:	42 c7 44 8f 2c 01 00 	movl   $0x1,0x2c(%rdi,%r9,4)
   1141a:	00 00 
   1141c:	48 8b 47 18          	mov    0x18(%rdi),%rax
   11420:	4c 89 94 c7 10 01 00 	mov    %r10,0x110(%rdi,%rax,8)
   11427:	00 
   11428:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   1142c:	49 8d 42 01          	lea    0x1(%r10),%rax
   11430:	48 89 47 18          	mov    %rax,0x18(%rdi)
   11434:	8d 41 ee             	lea    -0x12(%rcx),%eax
   11437:	4c 8d 8e 04 02 00 00 	lea    0x204(%rsi),%r9
   1143e:	41 89 c3             	mov    %eax,%r11d
   11441:	41 c1 eb 07          	shr    $0x7,%r11d
   11445:	41 83 e3 01          	and    $0x1,%r11d
   11449:	48 8d 9e 06 02 00 00 	lea    0x206(%rsi),%rbx
   11450:	46 89 5c 97 2c       	mov    %r11d,0x2c(%rdi,%r10,4)
   11455:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   11459:	4a 89 9c d7 10 01 00 	mov    %rbx,0x110(%rdi,%r10,8)
   11460:	00 
   11461:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   11465:	49 8d 5a 01          	lea    0x1(%r10),%rbx
   11469:	48 89 5f 18          	mov    %rbx,0x18(%rdi)
   1146d:	89 c3                	mov    %eax,%ebx
   1146f:	c1 eb 06             	shr    $0x6,%ebx
   11472:	83 e3 01             	and    $0x1,%ebx
   11475:	46 8d 34 5d 04 00 00 	lea    0x4(,%r11,2),%r14d
   1147c:	00 
   1147d:	49 01 f6             	add    %rsi,%r14
   11480:	49 81 c6 04 02 00 00 	add    $0x204,%r14
   11487:	42 89 5c 97 2c       	mov    %ebx,0x2c(%rdi,%r10,4)
   1148c:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   11490:	4e 89 b4 d7 10 01 00 	mov    %r14,0x110(%rdi,%r10,8)
   11497:	00 
   11498:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   1149c:	4d 8d 72 01          	lea    0x1(%r10),%r14
   114a0:	4c 89 77 18          	mov    %r14,0x18(%rdi)
   114a4:	46 8d 1c 5b          	lea    (%rbx,%r11,2),%r11d
   114a8:	41 83 c3 04          	add    $0x4,%r11d
   114ac:	89 c3                	mov    %eax,%ebx
   114ae:	c1 eb 05             	shr    $0x5,%ebx
   114b1:	83 e3 01             	and    $0x1,%ebx
   114b4:	47 8d 34 1b          	lea    (%r11,%r11,1),%r14d
   114b8:	49 01 f6             	add    %rsi,%r14
   114bb:	49 81 c6 04 02 00 00 	add    $0x204,%r14
   114c2:	42 89 5c 97 2c       	mov    %ebx,0x2c(%rdi,%r10,4)
   114c7:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   114cb:	4e 89 b4 d7 10 01 00 	mov    %r14,0x110(%rdi,%r10,8)
   114d2:	00 
   114d3:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   114d7:	4d 8d 72 01          	lea    0x1(%r10),%r14
   114db:	4c 89 77 18          	mov    %r14,0x18(%rdi)
   114df:	46 8d 1c 5b          	lea    (%rbx,%r11,2),%r11d
   114e3:	89 c3                	mov    %eax,%ebx
   114e5:	c1 eb 04             	shr    $0x4,%ebx
   114e8:	83 e3 01             	and    $0x1,%ebx
   114eb:	4e 8d 34 5e          	lea    (%rsi,%r11,2),%r14
   114ef:	49 81 c6 04 02 00 00 	add    $0x204,%r14
   114f6:	42 89 5c 97 2c       	mov    %ebx,0x2c(%rdi,%r10,4)
   114fb:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   114ff:	4e 89 b4 d7 10 01 00 	mov    %r14,0x110(%rdi,%r10,8)
   11506:	00 
   11507:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   1150b:	4d 8d 72 01          	lea    0x1(%r10),%r14
   1150f:	4c 89 77 18          	mov    %r14,0x18(%rdi)
   11513:	46 8d 1c 5b          	lea    (%rbx,%r11,2),%r11d
   11517:	89 c3                	mov    %eax,%ebx
   11519:	c1 eb 03             	shr    $0x3,%ebx
   1151c:	83 e3 01             	and    $0x1,%ebx
   1151f:	4e 8d 34 5e          	lea    (%rsi,%r11,2),%r14
   11523:	49 81 c6 04 02 00 00 	add    $0x204,%r14
   1152a:	42 89 5c 97 2c       	mov    %ebx,0x2c(%rdi,%r10,4)
   1152f:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   11533:	4e 89 b4 d7 10 01 00 	mov    %r14,0x110(%rdi,%r10,8)
   1153a:	00 
   1153b:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   1153f:	4d 8d 72 01          	lea    0x1(%r10),%r14
   11543:	4c 89 77 18          	mov    %r14,0x18(%rdi)
   11547:	42 8d 1c 5b          	lea    (%rbx,%r11,2),%ebx
   1154b:	41 89 c6             	mov    %eax,%r14d
   1154e:	41 c1 ee 02          	shr    $0x2,%r14d
   11552:	41 83 e6 01          	and    $0x1,%r14d
   11556:	4c 8d 1c 5e          	lea    (%rsi,%rbx,2),%r11
   1155a:	49 81 c3 04 02 00 00 	add    $0x204,%r11
   11561:	46 89 74 97 2c       	mov    %r14d,0x2c(%rdi,%r10,4)
   11566:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   1156a:	4e 89 9c d7 10 01 00 	mov    %r11,0x110(%rdi,%r10,8)
   11571:	00 
   11572:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   11576:	49 ff c3             	inc    %r11
   11579:	4c 89 5f 18          	mov    %r11,0x18(%rdi)
   1157d:	45 8d 14 5e          	lea    (%r14,%rbx,2),%r10d
   11581:	d1 e8                	shr    %eax
   11583:	83 e0 01             	and    $0x1,%eax
   11586:	44 89 d3             	mov    %r10d,%ebx
   11589:	49 8d 1c 59          	lea    (%r9,%rbx,2),%rbx
   1158d:	42 89 44 9f 28       	mov    %eax,0x28(%rdi,%r11,4)
   11592:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   11596:	4a 89 9c df 10 01 00 	mov    %rbx,0x110(%rdi,%r11,8)
   1159d:	00 
   1159e:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   115a2:	49 8d 5b 01          	lea    0x1(%r11),%rbx
   115a6:	48 89 5f 18          	mov    %rbx,0x18(%rdi)
   115aa:	42 8d 04 50          	lea    (%rax,%r10,2),%eax
   115ae:	83 e1 01             	and    $0x1,%ecx
   115b1:	49 8d 04 41          	lea    (%r9,%rax,2),%rax
   115b5:	42 89 4c 9f 2c       	mov    %ecx,0x2c(%rdi,%r11,4)
   115ba:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
   115be:	48 89 84 cf 10 01 00 	mov    %rax,0x110(%rdi,%rcx,8)
   115c5:	00 
   115c6:	48 ff 47 18          	incq   0x18(%rdi)
   115ca:	45 84 c0             	test   %r8b,%r8b
   115cd:	75 0b                	jne    115da <length+0x2aa>
   115cf:	89 d0                	mov    %edx,%eax
   115d1:	ff 8c 86 08 48 00 00 	decl   0x4808(%rsi,%rax,4)
   115d8:	74 04                	je     115de <length+0x2ae>
   115da:	5b                   	pop    %rbx
   115db:	41 5e                	pop    %r14
   115dd:	c3                   	ret    
   115de:	48 89 f7             	mov    %rsi,%rdi
   115e1:	89 d6                	mov    %edx,%esi
   115e3:	5b                   	pop    %rbx
   115e4:	41 5e                	pop    %r14
   115e6:	eb 08                	jmp    115f0 <length_update_prices>
   115e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   115ef:	00 

00000000000115f0 <length_update_prices>:
   115f0:	55                   	push   %rbp
   115f1:	41 57                	push   %r15
   115f3:	41 56                	push   %r14
   115f5:	41 55                	push   %r13
   115f7:	41 54                	push   %r12
   115f9:	53                   	push   %rbx
   115fa:	8b 87 04 48 00 00    	mov    0x4804(%rdi),%eax
   11600:	41 89 f3             	mov    %esi,%r11d
   11603:	42 89 84 9f 08 48 00 	mov    %eax,0x4808(%rdi,%r11,4)
   1160a:	00 
   1160b:	0f b7 1f             	movzwl (%rdi),%ebx
   1160e:	c1 eb 04             	shr    $0x4,%ebx
   11611:	48 8d 0d 88 8c 01 00 	lea    0x18c88(%rip),%rcx        # 2a2a0 <lzma_rc_prices>
   11618:	48 89 da             	mov    %rbx,%rdx
   1161b:	48 83 f2 7f          	xor    $0x7f,%rdx
   1161f:	44 0f b6 04 11       	movzbl (%rcx,%rdx,1),%r8d
   11624:	44 0f b7 4f 02       	movzwl 0x2(%rdi),%r9d
   11629:	41 c1 e9 04          	shr    $0x4,%r9d
   1162d:	4c 89 ca             	mov    %r9,%rdx
   11630:	48 83 f2 7f          	xor    $0x7f,%rdx
   11634:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
   11638:	49 69 f3 40 04 00 00 	imul   $0x440,%r11,%rsi
   1163f:	83 f8 08             	cmp    $0x8,%eax
   11642:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   11648:	41 ba 08 00 00 00    	mov    $0x8,%r10d
   1164e:	44 0f 42 d0          	cmovb  %eax,%r10d
   11652:	48 01 fe             	add    %rdi,%rsi
   11655:	48 81 c6 04 04 00 00 	add    $0x404,%rsi
   1165c:	48 85 c0             	test   %rax,%rax
   1165f:	0f 84 84 05 00 00    	je     11be9 <length_update_prices+0x5f9>
   11665:	46 0f b6 0c 09       	movzbl (%rcx,%r9,1),%r9d
   1166a:	45 01 c1             	add    %r8d,%r9d
   1166d:	0f b6 1c 19          	movzbl (%rcx,%rbx,1),%ebx
   11671:	49 c1 e3 04          	shl    $0x4,%r11
   11675:	4e 8d 34 1f          	lea    (%rdi,%r11,1),%r14
   11679:	49 83 c6 04          	add    $0x4,%r14
   1167d:	31 ed                	xor    %ebp,%ebp
   1167f:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   11685:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1168c:	00 00 00 00 
   11690:	45 89 fd             	mov    %r15d,%r13d
   11693:	41 83 e5 01          	and    $0x1,%r13d
   11697:	41 f7 dd             	neg    %r13d
   1169a:	41 d1 ec             	shr    %r12d
   1169d:	41 83 e7 fe          	and    $0xfffffffe,%r15d
   116a1:	47 0f b7 3c 3e       	movzwl (%r14,%r15,1),%r15d
   116a6:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   116ad:	45 31 fd             	xor    %r15d,%r13d
   116b0:	41 c1 ed 04          	shr    $0x4,%r13d
   116b4:	46 0f b6 3c 29       	movzbl (%rcx,%r13,1),%r15d
   116b9:	44 01 fd             	add    %r15d,%ebp
   116bc:	45 89 e7             	mov    %r12d,%r15d
   116bf:	41 83 fc 01          	cmp    $0x1,%r12d
   116c3:	75 cb                	jne    11690 <length_update_prices+0xa0>
   116c5:	01 dd                	add    %ebx,%ebp
   116c7:	89 2e                	mov    %ebp,(%rsi)
   116c9:	83 f8 01             	cmp    $0x1,%eax
   116cc:	0f 84 75 02 00 00    	je     11947 <length_update_prices+0x357>
   116d2:	41 bc 09 00 00 00    	mov    $0x9,%r12d
   116d8:	31 ed                	xor    %ebp,%ebp
   116da:	41 bf 09 00 00 00    	mov    $0x9,%r15d
   116e0:	45 89 e5             	mov    %r12d,%r13d
   116e3:	41 83 e5 01          	and    $0x1,%r13d
   116e7:	41 f7 dd             	neg    %r13d
   116ea:	41 d1 ef             	shr    %r15d
   116ed:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   116f1:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   116f6:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   116fd:	45 31 e5             	xor    %r12d,%r13d
   11700:	41 c1 ed 04          	shr    $0x4,%r13d
   11704:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11709:	44 01 e5             	add    %r12d,%ebp
   1170c:	45 89 fc             	mov    %r15d,%r12d
   1170f:	41 83 ff 01          	cmp    $0x1,%r15d
   11713:	75 cb                	jne    116e0 <length_update_prices+0xf0>
   11715:	01 dd                	add    %ebx,%ebp
   11717:	89 6e 04             	mov    %ebp,0x4(%rsi)
   1171a:	83 f8 02             	cmp    $0x2,%eax
   1171d:	0f 84 24 02 00 00    	je     11947 <length_update_prices+0x357>
   11723:	41 bc 0a 00 00 00    	mov    $0xa,%r12d
   11729:	31 ed                	xor    %ebp,%ebp
   1172b:	41 bf 0a 00 00 00    	mov    $0xa,%r15d
   11731:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   11738:	0f 1f 84 00 00 00 00 
   1173f:	00 
   11740:	45 89 e5             	mov    %r12d,%r13d
   11743:	41 83 e5 01          	and    $0x1,%r13d
   11747:	41 f7 dd             	neg    %r13d
   1174a:	41 d1 ef             	shr    %r15d
   1174d:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11751:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11756:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   1175d:	45 31 e5             	xor    %r12d,%r13d
   11760:	41 c1 ed 04          	shr    $0x4,%r13d
   11764:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11769:	44 01 e5             	add    %r12d,%ebp
   1176c:	45 89 fc             	mov    %r15d,%r12d
   1176f:	41 83 ff 01          	cmp    $0x1,%r15d
   11773:	75 cb                	jne    11740 <length_update_prices+0x150>
   11775:	01 dd                	add    %ebx,%ebp
   11777:	89 6e 08             	mov    %ebp,0x8(%rsi)
   1177a:	83 f8 03             	cmp    $0x3,%eax
   1177d:	0f 84 c4 01 00 00    	je     11947 <length_update_prices+0x357>
   11783:	41 bc 0b 00 00 00    	mov    $0xb,%r12d
   11789:	31 ed                	xor    %ebp,%ebp
   1178b:	41 bf 0b 00 00 00    	mov    $0xb,%r15d
   11791:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   11798:	0f 1f 84 00 00 00 00 
   1179f:	00 
   117a0:	45 89 e5             	mov    %r12d,%r13d
   117a3:	41 83 e5 01          	and    $0x1,%r13d
   117a7:	41 f7 dd             	neg    %r13d
   117aa:	41 d1 ef             	shr    %r15d
   117ad:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   117b1:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   117b6:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   117bd:	45 31 e5             	xor    %r12d,%r13d
   117c0:	41 c1 ed 04          	shr    $0x4,%r13d
   117c4:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   117c9:	44 01 e5             	add    %r12d,%ebp
   117cc:	45 89 fc             	mov    %r15d,%r12d
   117cf:	41 83 ff 01          	cmp    $0x1,%r15d
   117d3:	75 cb                	jne    117a0 <length_update_prices+0x1b0>
   117d5:	01 dd                	add    %ebx,%ebp
   117d7:	89 6e 0c             	mov    %ebp,0xc(%rsi)
   117da:	83 f8 04             	cmp    $0x4,%eax
   117dd:	0f 84 64 01 00 00    	je     11947 <length_update_prices+0x357>
   117e3:	41 bc 0c 00 00 00    	mov    $0xc,%r12d
   117e9:	31 ed                	xor    %ebp,%ebp
   117eb:	41 bf 0c 00 00 00    	mov    $0xc,%r15d
   117f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   117f8:	0f 1f 84 00 00 00 00 
   117ff:	00 
   11800:	45 89 e5             	mov    %r12d,%r13d
   11803:	41 83 e5 01          	and    $0x1,%r13d
   11807:	41 f7 dd             	neg    %r13d
   1180a:	41 d1 ef             	shr    %r15d
   1180d:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11811:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11816:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   1181d:	45 31 e5             	xor    %r12d,%r13d
   11820:	41 c1 ed 04          	shr    $0x4,%r13d
   11824:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11829:	44 01 e5             	add    %r12d,%ebp
   1182c:	45 89 fc             	mov    %r15d,%r12d
   1182f:	41 83 ff 01          	cmp    $0x1,%r15d
   11833:	75 cb                	jne    11800 <length_update_prices+0x210>
   11835:	01 dd                	add    %ebx,%ebp
   11837:	89 6e 10             	mov    %ebp,0x10(%rsi)
   1183a:	83 f8 05             	cmp    $0x5,%eax
   1183d:	0f 84 04 01 00 00    	je     11947 <length_update_prices+0x357>
   11843:	41 bc 0d 00 00 00    	mov    $0xd,%r12d
   11849:	31 ed                	xor    %ebp,%ebp
   1184b:	41 bf 0d 00 00 00    	mov    $0xd,%r15d
   11851:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   11858:	0f 1f 84 00 00 00 00 
   1185f:	00 
   11860:	45 89 e5             	mov    %r12d,%r13d
   11863:	41 83 e5 01          	and    $0x1,%r13d
   11867:	41 f7 dd             	neg    %r13d
   1186a:	41 d1 ef             	shr    %r15d
   1186d:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11871:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11876:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   1187d:	45 31 e5             	xor    %r12d,%r13d
   11880:	41 c1 ed 04          	shr    $0x4,%r13d
   11884:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11889:	44 01 e5             	add    %r12d,%ebp
   1188c:	45 89 fc             	mov    %r15d,%r12d
   1188f:	41 83 ff 01          	cmp    $0x1,%r15d
   11893:	75 cb                	jne    11860 <length_update_prices+0x270>
   11895:	01 dd                	add    %ebx,%ebp
   11897:	89 6e 14             	mov    %ebp,0x14(%rsi)
   1189a:	83 f8 06             	cmp    $0x6,%eax
   1189d:	0f 84 a4 00 00 00    	je     11947 <length_update_prices+0x357>
   118a3:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
   118a9:	31 ed                	xor    %ebp,%ebp
   118ab:	41 bf 0e 00 00 00    	mov    $0xe,%r15d
   118b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   118b8:	0f 1f 84 00 00 00 00 
   118bf:	00 
   118c0:	45 89 e5             	mov    %r12d,%r13d
   118c3:	41 83 e5 01          	and    $0x1,%r13d
   118c7:	41 f7 dd             	neg    %r13d
   118ca:	41 d1 ef             	shr    %r15d
   118cd:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   118d1:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   118d6:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   118dd:	45 31 e5             	xor    %r12d,%r13d
   118e0:	41 c1 ed 04          	shr    $0x4,%r13d
   118e4:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   118e9:	44 01 e5             	add    %r12d,%ebp
   118ec:	45 89 fc             	mov    %r15d,%r12d
   118ef:	41 83 ff 01          	cmp    $0x1,%r15d
   118f3:	75 cb                	jne    118c0 <length_update_prices+0x2d0>
   118f5:	01 dd                	add    %ebx,%ebp
   118f7:	89 6e 18             	mov    %ebp,0x18(%rsi)
   118fa:	83 f8 07             	cmp    $0x7,%eax
   118fd:	74 48                	je     11947 <length_update_prices+0x357>
   118ff:	41 bc 0f 00 00 00    	mov    $0xf,%r12d
   11905:	31 ed                	xor    %ebp,%ebp
   11907:	41 bf 0f 00 00 00    	mov    $0xf,%r15d
   1190d:	45 89 e5             	mov    %r12d,%r13d
   11910:	41 83 e5 01          	and    $0x1,%r13d
   11914:	41 f7 dd             	neg    %r13d
   11917:	41 d1 ef             	shr    %r15d
   1191a:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   1191e:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11923:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   1192a:	45 31 e5             	xor    %r12d,%r13d
   1192d:	41 c1 ed 04          	shr    $0x4,%r13d
   11931:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11936:	44 01 e5             	add    %r12d,%ebp
   11939:	45 89 fc             	mov    %r15d,%r12d
   1193c:	41 83 ff 01          	cmp    $0x1,%r15d
   11940:	75 cb                	jne    1190d <length_update_prices+0x31d>
   11942:	01 dd                	add    %ebx,%ebp
   11944:	89 6e 1c             	mov    %ebp,0x1c(%rsi)
   11947:	83 f8 10             	cmp    $0x10,%eax
   1194a:	bb 10 00 00 00       	mov    $0x10,%ebx
   1194f:	0f 42 d8             	cmovb  %eax,%ebx
   11952:	83 f8 09             	cmp    $0x9,%eax
   11955:	0f 82 96 02 00 00    	jb     11bf1 <length_update_prices+0x601>
   1195b:	4e 8d 34 1f          	lea    (%rdi,%r11,1),%r14
   1195f:	49 81 c6 04 01 00 00 	add    $0x104,%r14
   11966:	45 89 d3             	mov    %r10d,%r11d
   11969:	41 89 df             	mov    %ebx,%r15d
   1196c:	31 ed                	xor    %ebp,%ebp
   1196e:	45 89 d4             	mov    %r10d,%r12d
   11971:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   11978:	0f 1f 84 00 00 00 00 
   1197f:	00 
   11980:	45 89 d5             	mov    %r10d,%r13d
   11983:	41 83 e5 01          	and    $0x1,%r13d
   11987:	41 f7 dd             	neg    %r13d
   1198a:	41 d1 ec             	shr    %r12d
   1198d:	41 83 e2 fe          	and    $0xfffffffe,%r10d
   11991:	47 0f b7 14 16       	movzwl (%r14,%r10,1),%r10d
   11996:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   1199d:	45 31 d5             	xor    %r10d,%r13d
   119a0:	41 c1 ed 04          	shr    $0x4,%r13d
   119a4:	46 0f b6 14 29       	movzbl (%rcx,%r13,1),%r10d
   119a9:	44 01 d5             	add    %r10d,%ebp
   119ac:	45 89 e2             	mov    %r12d,%r10d
   119af:	41 83 fc 01          	cmp    $0x1,%r12d
   119b3:	75 cb                	jne    11980 <length_update_prices+0x390>
   119b5:	44 01 cd             	add    %r9d,%ebp
   119b8:	42 89 2c 9e          	mov    %ebp,(%rsi,%r11,4)
   119bc:	4d 8d 63 01          	lea    0x1(%r11),%r12
   119c0:	4d 39 fc             	cmp    %r15,%r12
   119c3:	0f 84 22 02 00 00    	je     11beb <length_update_prices+0x5fb>
   119c9:	45 31 d2             	xor    %r10d,%r10d
   119cc:	44 89 e5             	mov    %r12d,%ebp
   119cf:	90                   	nop
   119d0:	45 89 e5             	mov    %r12d,%r13d
   119d3:	41 83 e5 01          	and    $0x1,%r13d
   119d7:	41 f7 dd             	neg    %r13d
   119da:	d1 ed                	shr    %ebp
   119dc:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   119e0:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   119e5:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   119ec:	45 31 e5             	xor    %r12d,%r13d
   119ef:	41 c1 ed 04          	shr    $0x4,%r13d
   119f3:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   119f8:	45 01 e2             	add    %r12d,%r10d
   119fb:	41 89 ec             	mov    %ebp,%r12d
   119fe:	83 fd 01             	cmp    $0x1,%ebp
   11a01:	75 cd                	jne    119d0 <length_update_prices+0x3e0>
   11a03:	45 01 ca             	add    %r9d,%r10d
   11a06:	46 89 54 9e 04       	mov    %r10d,0x4(%rsi,%r11,4)
   11a0b:	4d 8d 63 02          	lea    0x2(%r11),%r12
   11a0f:	4d 39 fc             	cmp    %r15,%r12
   11a12:	0f 84 d3 01 00 00    	je     11beb <length_update_prices+0x5fb>
   11a18:	45 31 d2             	xor    %r10d,%r10d
   11a1b:	44 89 e5             	mov    %r12d,%ebp
   11a1e:	66 90                	xchg   %ax,%ax
   11a20:	45 89 e5             	mov    %r12d,%r13d
   11a23:	41 83 e5 01          	and    $0x1,%r13d
   11a27:	41 f7 dd             	neg    %r13d
   11a2a:	d1 ed                	shr    %ebp
   11a2c:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11a30:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11a35:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   11a3c:	45 31 e5             	xor    %r12d,%r13d
   11a3f:	41 c1 ed 04          	shr    $0x4,%r13d
   11a43:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11a48:	45 01 e2             	add    %r12d,%r10d
   11a4b:	41 89 ec             	mov    %ebp,%r12d
   11a4e:	83 fd 01             	cmp    $0x1,%ebp
   11a51:	75 cd                	jne    11a20 <length_update_prices+0x430>
   11a53:	45 01 ca             	add    %r9d,%r10d
   11a56:	46 89 54 9e 08       	mov    %r10d,0x8(%rsi,%r11,4)
   11a5b:	4d 8d 63 03          	lea    0x3(%r11),%r12
   11a5f:	4d 39 fc             	cmp    %r15,%r12
   11a62:	0f 84 83 01 00 00    	je     11beb <length_update_prices+0x5fb>
   11a68:	45 31 d2             	xor    %r10d,%r10d
   11a6b:	44 89 e5             	mov    %r12d,%ebp
   11a6e:	66 90                	xchg   %ax,%ax
   11a70:	45 89 e5             	mov    %r12d,%r13d
   11a73:	41 83 e5 01          	and    $0x1,%r13d
   11a77:	41 f7 dd             	neg    %r13d
   11a7a:	d1 ed                	shr    %ebp
   11a7c:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11a80:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11a85:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   11a8c:	45 31 e5             	xor    %r12d,%r13d
   11a8f:	41 c1 ed 04          	shr    $0x4,%r13d
   11a93:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11a98:	45 01 e2             	add    %r12d,%r10d
   11a9b:	41 89 ec             	mov    %ebp,%r12d
   11a9e:	83 fd 01             	cmp    $0x1,%ebp
   11aa1:	75 cd                	jne    11a70 <length_update_prices+0x480>
   11aa3:	45 01 ca             	add    %r9d,%r10d
   11aa6:	46 89 54 9e 0c       	mov    %r10d,0xc(%rsi,%r11,4)
   11aab:	4d 8d 63 04          	lea    0x4(%r11),%r12
   11aaf:	4d 39 fc             	cmp    %r15,%r12
   11ab2:	0f 84 33 01 00 00    	je     11beb <length_update_prices+0x5fb>
   11ab8:	45 31 d2             	xor    %r10d,%r10d
   11abb:	44 89 e5             	mov    %r12d,%ebp
   11abe:	66 90                	xchg   %ax,%ax
   11ac0:	45 89 e5             	mov    %r12d,%r13d
   11ac3:	41 83 e5 01          	and    $0x1,%r13d
   11ac7:	41 f7 dd             	neg    %r13d
   11aca:	d1 ed                	shr    %ebp
   11acc:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11ad0:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11ad5:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   11adc:	45 31 e5             	xor    %r12d,%r13d
   11adf:	41 c1 ed 04          	shr    $0x4,%r13d
   11ae3:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11ae8:	45 01 e2             	add    %r12d,%r10d
   11aeb:	41 89 ec             	mov    %ebp,%r12d
   11aee:	83 fd 01             	cmp    $0x1,%ebp
   11af1:	75 cd                	jne    11ac0 <length_update_prices+0x4d0>
   11af3:	45 01 ca             	add    %r9d,%r10d
   11af6:	46 89 54 9e 10       	mov    %r10d,0x10(%rsi,%r11,4)
   11afb:	4d 8d 63 05          	lea    0x5(%r11),%r12
   11aff:	4d 39 fc             	cmp    %r15,%r12
   11b02:	0f 84 e3 00 00 00    	je     11beb <length_update_prices+0x5fb>
   11b08:	45 31 d2             	xor    %r10d,%r10d
   11b0b:	44 89 e5             	mov    %r12d,%ebp
   11b0e:	66 90                	xchg   %ax,%ax
   11b10:	45 89 e5             	mov    %r12d,%r13d
   11b13:	41 83 e5 01          	and    $0x1,%r13d
   11b17:	41 f7 dd             	neg    %r13d
   11b1a:	d1 ed                	shr    %ebp
   11b1c:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11b20:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11b25:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   11b2c:	45 31 e5             	xor    %r12d,%r13d
   11b2f:	41 c1 ed 04          	shr    $0x4,%r13d
   11b33:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11b38:	45 01 e2             	add    %r12d,%r10d
   11b3b:	41 89 ec             	mov    %ebp,%r12d
   11b3e:	83 fd 01             	cmp    $0x1,%ebp
   11b41:	75 cd                	jne    11b10 <length_update_prices+0x520>
   11b43:	45 01 ca             	add    %r9d,%r10d
   11b46:	46 89 54 9e 14       	mov    %r10d,0x14(%rsi,%r11,4)
   11b4b:	4d 8d 63 06          	lea    0x6(%r11),%r12
   11b4f:	4d 39 fc             	cmp    %r15,%r12
   11b52:	0f 84 93 00 00 00    	je     11beb <length_update_prices+0x5fb>
   11b58:	45 31 d2             	xor    %r10d,%r10d
   11b5b:	44 89 e5             	mov    %r12d,%ebp
   11b5e:	45 89 e5             	mov    %r12d,%r13d
   11b61:	41 83 e5 01          	and    $0x1,%r13d
   11b65:	41 f7 dd             	neg    %r13d
   11b68:	d1 ed                	shr    %ebp
   11b6a:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11b6e:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11b73:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   11b7a:	45 31 e5             	xor    %r12d,%r13d
   11b7d:	41 c1 ed 04          	shr    $0x4,%r13d
   11b81:	46 0f b6 24 29       	movzbl (%rcx,%r13,1),%r12d
   11b86:	45 01 e2             	add    %r12d,%r10d
   11b89:	41 89 ec             	mov    %ebp,%r12d
   11b8c:	83 fd 01             	cmp    $0x1,%ebp
   11b8f:	75 cd                	jne    11b5e <length_update_prices+0x56e>
   11b91:	45 01 ca             	add    %r9d,%r10d
   11b94:	46 89 54 9e 18       	mov    %r10d,0x18(%rsi,%r11,4)
   11b99:	4d 8d 63 07          	lea    0x7(%r11),%r12
   11b9d:	4d 39 fc             	cmp    %r15,%r12
   11ba0:	74 49                	je     11beb <length_update_prices+0x5fb>
   11ba2:	45 31 d2             	xor    %r10d,%r10d
   11ba5:	44 89 e5             	mov    %r12d,%ebp
   11ba8:	45 89 e7             	mov    %r12d,%r15d
   11bab:	41 83 e7 01          	and    $0x1,%r15d
   11baf:	41 f7 df             	neg    %r15d
   11bb2:	d1 ed                	shr    %ebp
   11bb4:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   11bb8:	47 0f b7 24 26       	movzwl (%r14,%r12,1),%r12d
   11bbd:	41 81 e7 f0 07 00 00 	and    $0x7f0,%r15d
   11bc4:	45 31 e7             	xor    %r12d,%r15d
   11bc7:	41 c1 ef 04          	shr    $0x4,%r15d
   11bcb:	46 0f b6 3c 39       	movzbl (%rcx,%r15,1),%r15d
   11bd0:	45 01 fa             	add    %r15d,%r10d
   11bd3:	41 89 ec             	mov    %ebp,%r12d
   11bd6:	83 fd 01             	cmp    $0x1,%ebp
   11bd9:	75 cd                	jne    11ba8 <length_update_prices+0x5b8>
   11bdb:	45 01 d1             	add    %r10d,%r9d
   11bde:	46 89 4c 9e 1c       	mov    %r9d,0x1c(%rsi,%r11,4)
   11be3:	39 c3                	cmp    %eax,%ebx
   11be5:	72 11                	jb     11bf8 <length_update_prices+0x608>
   11be7:	eb 6b                	jmp    11c54 <length_update_prices+0x664>
   11be9:	31 db                	xor    %ebx,%ebx
   11beb:	39 c3                	cmp    %eax,%ebx
   11bed:	72 09                	jb     11bf8 <length_update_prices+0x608>
   11bef:	eb 63                	jmp    11c54 <length_update_prices+0x664>
   11bf1:	44 89 d3             	mov    %r10d,%ebx
   11bf4:	39 c3                	cmp    %eax,%ebx
   11bf6:	73 5c                	jae    11c54 <length_update_prices+0x664>
   11bf8:	44 01 c2             	add    %r8d,%edx
   11bfb:	41 89 d8             	mov    %ebx,%r8d
   11bfe:	66 90                	xchg   %ax,%ax
   11c00:	45 8d 98 f0 00 00 00 	lea    0xf0(%r8),%r11d
   11c07:	45 31 c9             	xor    %r9d,%r9d
   11c0a:	45 89 da             	mov    %r11d,%r10d
   11c0d:	0f 1f 00             	nopl   (%rax)
   11c10:	44 89 db             	mov    %r11d,%ebx
   11c13:	83 e3 01             	and    $0x1,%ebx
   11c16:	f7 db                	neg    %ebx
   11c18:	41 d1 ea             	shr    %r10d
   11c1b:	41 83 e3 fe          	and    $0xfffffffe,%r11d
   11c1f:	46 0f b7 9c 1f 04 02 	movzwl 0x204(%rdi,%r11,1),%r11d
   11c26:	00 00 
   11c28:	81 e3 f0 07 00 00    	and    $0x7f0,%ebx
   11c2e:	44 31 db             	xor    %r11d,%ebx
   11c31:	c1 eb 04             	shr    $0x4,%ebx
   11c34:	44 0f b6 1c 19       	movzbl (%rcx,%rbx,1),%r11d
   11c39:	45 01 d9             	add    %r11d,%r9d
   11c3c:	45 89 d3             	mov    %r10d,%r11d
   11c3f:	41 83 fa 01          	cmp    $0x1,%r10d
   11c43:	75 cb                	jne    11c10 <length_update_prices+0x620>
   11c45:	41 01 d1             	add    %edx,%r9d
   11c48:	46 89 0c 86          	mov    %r9d,(%rsi,%r8,4)
   11c4c:	49 ff c0             	inc    %r8
   11c4f:	49 39 c0             	cmp    %rax,%r8
   11c52:	75 ac                	jne    11c00 <length_update_prices+0x610>
   11c54:	5b                   	pop    %rbx
   11c55:	41 5c                	pop    %r12
   11c57:	41 5d                	pop    %r13
   11c59:	41 5e                	pop    %r14
   11c5b:	41 5f                	pop    %r15
   11c5d:	5d                   	pop    %rbp
   11c5e:	c3                   	ret    
   11c5f:	90                   	nop

0000000000011c60 <lzma_encode>:
   11c60:	83 7e 68 01          	cmpl   $0x1,0x68(%rsi)
   11c64:	75 06                	jne    11c6c <lzma_encode+0xc>
   11c66:	b8 08 00 00 00       	mov    $0x8,%eax
   11c6b:	c3                   	ret    
   11c6c:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
   11c72:	e9 b9 d4 ff ff       	jmp    f130 <lzma_lzma_encode>
   11c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c7e:	00 00 

0000000000011c80 <lzma_lzma_preset>:
   11c80:	89 f2                	mov    %esi,%edx
   11c82:	83 e2 1f             	and    $0x1f,%edx
   11c85:	b0 01                	mov    $0x1,%al
   11c87:	83 fa 09             	cmp    $0x9,%edx
   11c8a:	0f 87 bc 00 00 00    	ja     11d4c <lzma_lzma_preset+0xcc>
   11c90:	89 f1                	mov    %esi,%ecx
   11c92:	81 e1 e0 ff ff 7f    	and    $0x7fffffe0,%ecx
   11c98:	0f 85 ae 00 00 00    	jne    11d4c <lzma_lzma_preset+0xcc>
   11c9e:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   11ca5:	00 
   11ca6:	0f 28 05 43 64 01 00 	movaps 0x16443(%rip),%xmm0        # 280f0 <SHA256_K+0x190>
   11cad:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
   11cb1:	48 b8 12 14 15 16 16 	movabs $0x1817171616151412,%rax
   11cb8:	17 17 18 
   11cbb:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
   11cc0:	66 c7 44 24 f8 19 1a 	movw   $0x1a19,-0x8(%rsp)
   11cc7:	0f b6 4c 14 f0       	movzbl -0x10(%rsp,%rdx,1),%ecx
   11ccc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11cd2:	41 d3 e0             	shl    %cl,%r8d
   11cd5:	b8 01 00 00 00       	mov    $0x1,%eax
   11cda:	44 89 07             	mov    %r8d,(%rdi)
   11cdd:	83 fa 03             	cmp    $0x3,%edx
   11ce0:	77 2e                	ja     11d10 <lzma_lzma_preset+0x90>
   11ce2:	83 fa 01             	cmp    $0x1,%edx
   11ce5:	b9 04 00 00 00       	mov    $0x4,%ecx
   11cea:	83 d9 00             	sbb    $0x0,%ecx
   11ced:	83 fa 02             	cmp    $0x2,%edx
   11cf0:	41 b9 80 00 00 00    	mov    $0x80,%r9d
   11cf6:	41 b8 11 01 00 00    	mov    $0x111,%r8d
   11cfc:	45 0f 42 c1          	cmovb  %r9d,%r8d
   11d00:	c7 44 24 ec 04 08 18 	movl   $0x30180804,-0x14(%rsp)
   11d07:	30 
   11d08:	44 0f b6 4c 14 ec    	movzbl -0x14(%rsp,%rdx,1),%r9d
   11d0e:	eb 28                	jmp    11d38 <lzma_lzma_preset+0xb8>
   11d10:	31 c0                	xor    %eax,%eax
   11d12:	83 fa 05             	cmp    $0x5,%edx
   11d15:	0f 95 c0             	setne  %al
   11d18:	c1 e0 05             	shl    $0x5,%eax
   11d1b:	83 c0 20             	add    $0x20,%eax
   11d1e:	83 fa 04             	cmp    $0x4,%edx
   11d21:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   11d27:	44 0f 45 c0          	cmovne %eax,%r8d
   11d2b:	45 31 c9             	xor    %r9d,%r9d
   11d2e:	b9 14 00 00 00       	mov    $0x14,%ecx
   11d33:	b8 02 00 00 00       	mov    $0x2,%eax
   11d38:	89 47 20             	mov    %eax,0x20(%rdi)
   11d3b:	89 4f 28             	mov    %ecx,0x28(%rdi)
   11d3e:	44 89 47 24          	mov    %r8d,0x24(%rdi)
   11d42:	44 89 4f 2c          	mov    %r9d,0x2c(%rdi)
   11d46:	31 c0                	xor    %eax,%eax
   11d48:	85 f6                	test   %esi,%esi
   11d4a:	78 01                	js     11d4d <lzma_lzma_preset+0xcd>
   11d4c:	c3                   	ret    
   11d4d:	c7 47 20 02 00 00 00 	movl   $0x2,0x20(%rdi)
   11d54:	c7 47 28 14 00 00 00 	movl   $0x14,0x28(%rdi)
   11d5b:	b9 c0 00 00 00       	mov    $0xc0,%ecx
   11d60:	83 fa 03             	cmp    $0x3,%edx
   11d63:	74 0f                	je     11d74 <lzma_lzma_preset+0xf4>
   11d65:	83 fa 05             	cmp    $0x5,%edx
   11d68:	74 0a                	je     11d74 <lzma_lzma_preset+0xf4>
   11d6a:	b8 00 02 00 00       	mov    $0x200,%eax
   11d6f:	b9 11 01 00 00       	mov    $0x111,%ecx
   11d74:	89 4f 24             	mov    %ecx,0x24(%rdi)
   11d77:	89 47 2c             	mov    %eax,0x2c(%rdi)
   11d7a:	31 c0                	xor    %eax,%eax
   11d7c:	c3                   	ret    
   11d7d:	0f 1f 00             	nopl   (%rax)

0000000000011d80 <lzma_lzma_optimum_fast>:
   11d80:	55                   	push   %rbp
   11d81:	41 57                	push   %r15
   11d83:	41 56                	push   %r14
   11d85:	41 55                	push   %r13
   11d87:	41 54                	push   %r12
   11d89:	53                   	push   %rbx
   11d8a:	48 83 ec 28          	sub    $0x28,%rsp
   11d8e:	48 89 cd             	mov    %rcx,%rbp
   11d91:	49 89 d3             	mov    %rdx,%r11
   11d94:	48 89 f3             	mov    %rsi,%rbx
   11d97:	49 89 fd             	mov    %rdi,%r13
   11d9a:	44 8b 7e 60          	mov    0x60(%rsi),%r15d
   11d9e:	83 7e 1c 00          	cmpl   $0x0,0x1c(%rsi)
   11da2:	74 14                	je     11db8 <lzma_lzma_optimum_fast+0x38>
   11da4:	41 8b 85 84 0b 00 00 	mov    0xb84(%r13),%eax
   11dab:	45 8b a5 88 0b 00 00 	mov    0xb88(%r13),%r12d
   11db2:	89 44 24 14          	mov    %eax,0x14(%rsp)
   11db6:	eb 1d                	jmp    11dd5 <lzma_lzma_optimum_fast+0x55>
   11db8:	49 8d 95 f4 02 00 00 	lea    0x2f4(%r13),%rdx
   11dbf:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11dc4:	48 89 df             	mov    %rbx,%rdi
   11dc7:	4d 89 de             	mov    %r11,%r14
   11dca:	e8 d1 a8 ff ff       	call   c6a0 <lzma_mf_find>
   11dcf:	4d 89 f3             	mov    %r14,%r11
   11dd2:	41 89 c4             	mov    %eax,%r12d
   11dd5:	44 8b 73 18          	mov    0x18(%rbx),%r14d
   11dd9:	8b 43 24             	mov    0x24(%rbx),%eax
   11ddc:	44 29 f0             	sub    %r14d,%eax
   11ddf:	ff c0                	inc    %eax
   11de1:	3d 11 01 00 00       	cmp    $0x111,%eax
   11de6:	b9 11 01 00 00       	mov    $0x111,%ecx
   11deb:	0f 42 c8             	cmovb  %eax,%ecx
   11dee:	83 f8 02             	cmp    $0x2,%eax
   11df1:	73 13                	jae    11e06 <lzma_lzma_optimum_fast+0x86>
   11df3:	41 c7 03 ff ff ff ff 	movl   $0xffffffff,(%r11)
   11dfa:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   11e01:	e9 ce 07 00 00       	jmp    125d4 <lzma_lzma_optimum_fast+0x854>
   11e06:	44 89 7c 24 04       	mov    %r15d,0x4(%rsp)
   11e0b:	48 8b 13             	mov    (%rbx),%rdx
   11e0e:	4e 8d 3c 32          	lea    (%rdx,%r14,1),%r15
   11e12:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   11e17:	4c 01 f2             	add    %r14,%rdx
   11e1a:	48 ff ca             	dec    %rdx
   11e1d:	0f b6 32             	movzbl (%rdx),%esi
   11e20:	45 8b 8d e4 02 00 00 	mov    0x2e4(%r13),%r9d
   11e27:	4d 89 c8             	mov    %r9,%r8
   11e2a:	49 f7 d8             	neg    %r8
   11e2d:	4c 89 cf             	mov    %r9,%rdi
   11e30:	48 f7 d7             	not    %rdi
   11e33:	44 0f b6 14 17       	movzbl (%rdi,%rdx,1),%r10d
   11e38:	83 f8 02             	cmp    $0x2,%eax
   11e3b:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   11e40:	0f 85 d2 00 00 00    	jne    11f18 <lzma_lzma_optimum_fast+0x198>
   11e46:	83 7c 24 04 02       	cmpl   $0x2,0x4(%rsp)
   11e4b:	0f 86 cc 02 00 00    	jbe    1211d <lzma_lzma_optimum_fast+0x39d>
   11e51:	31 c9                	xor    %ecx,%ecx
   11e53:	bf 01 00 00 00       	mov    $0x1,%edi
   11e58:	41 be 00 00 00 00    	mov    $0x0,%r14d
   11e5e:	44 38 d6             	cmp    %r10b,%sil
   11e61:	75 19                	jne    11e7c <lzma_lzma_optimum_fast+0xfc>
   11e63:	45 0f b6 0f          	movzbl (%r15),%r9d
   11e67:	45 31 f6             	xor    %r14d,%r14d
   11e6a:	31 ff                	xor    %edi,%edi
   11e6c:	47 3a 4c 07 ff       	cmp    -0x1(%r15,%r8,1),%r9b
   11e71:	41 0f 94 c6          	sete   %r14b
   11e75:	40 0f 95 c7          	setne  %dil
   11e79:	45 01 f6             	add    %r14d,%r14d
   11e7c:	45 8b 85 e8 02 00 00 	mov    0x2e8(%r13),%r8d
   11e83:	4d 89 c1             	mov    %r8,%r9
   11e86:	49 f7 d1             	not    %r9
   11e89:	41 3a 34 11          	cmp    (%r9,%rdx,1),%sil
   11e8d:	75 1a                	jne    11ea9 <lzma_lzma_optimum_fast+0x129>
   11e8f:	49 f7 d8             	neg    %r8
   11e92:	45 0f b6 0f          	movzbl (%r15),%r9d
   11e96:	31 c9                	xor    %ecx,%ecx
   11e98:	47 3a 4c 07 ff       	cmp    -0x1(%r15,%r8,1),%r9b
   11e9d:	0f 44 cf             	cmove  %edi,%ecx
   11ea0:	bf 02 00 00 00       	mov    $0x2,%edi
   11ea5:	44 0f 44 f7          	cmove  %edi,%r14d
   11ea9:	41 8b bd ec 02 00 00 	mov    0x2ec(%r13),%edi
   11eb0:	49 89 f8             	mov    %rdi,%r8
   11eb3:	49 f7 d0             	not    %r8
   11eb6:	41 3a 34 10          	cmp    (%r8,%rdx,1),%sil
   11eba:	75 1c                	jne    11ed8 <lzma_lzma_optimum_fast+0x158>
   11ebc:	48 f7 df             	neg    %rdi
   11ebf:	45 0f b6 07          	movzbl (%r15),%r8d
   11ec3:	45 3a 44 3f ff       	cmp    -0x1(%r15,%rdi,1),%r8b
   11ec8:	75 0e                	jne    11ed8 <lzma_lzma_optimum_fast+0x158>
   11eca:	41 83 fe 02          	cmp    $0x2,%r14d
   11ece:	41 be 02 00 00 00    	mov    $0x2,%r14d
   11ed4:	41 0f 42 ce          	cmovb  %r14d,%ecx
   11ed8:	41 8b bd f0 02 00 00 	mov    0x2f0(%r13),%edi
   11edf:	49 89 f8             	mov    %rdi,%r8
   11ee2:	49 f7 d0             	not    %r8
   11ee5:	41 3a 34 10          	cmp    (%r8,%rdx,1),%sil
   11ee9:	0f 85 d1 02 00 00    	jne    121c0 <lzma_lzma_optimum_fast+0x440>
   11eef:	48 f7 df             	neg    %rdi
   11ef2:	41 0f b6 17          	movzbl (%r15),%edx
   11ef6:	41 3a 54 3f ff       	cmp    -0x1(%r15,%rdi,1),%dl
   11efb:	0f 85 bf 02 00 00    	jne    121c0 <lzma_lzma_optimum_fast+0x440>
   11f01:	41 83 fe 02          	cmp    $0x2,%r14d
   11f05:	ba 03 00 00 00       	mov    $0x3,%edx
   11f0a:	0f 42 ca             	cmovb  %edx,%ecx
   11f0d:	41 be 02 00 00 00    	mov    $0x2,%r14d
   11f13:	e9 a8 02 00 00       	jmp    121c0 <lzma_lzma_optimum_fast+0x440>
   11f18:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   11f1d:	83 f9 04             	cmp    $0x4,%ecx
   11f20:	bf 03 00 00 00       	mov    $0x3,%edi
   11f25:	0f 43 f9             	cmovae %ecx,%edi
   11f28:	31 c9                	xor    %ecx,%ecx
   11f2a:	41 be 00 00 00 00    	mov    $0x0,%r14d
   11f30:	44 38 d6             	cmp    %r10b,%sil
   11f33:	75 6c                	jne    11fa1 <lzma_lzma_optimum_fast+0x221>
   11f35:	45 0f b6 17          	movzbl (%r15),%r10d
   11f39:	41 be 00 00 00 00    	mov    $0x0,%r14d
   11f3f:	47 3a 54 07 ff       	cmp    -0x1(%r15,%r8,1),%r10b
   11f44:	75 5b                	jne    11fa1 <lzma_lzma_optimum_fast+0x221>
   11f46:	4c 89 d9             	mov    %r11,%rcx
   11f49:	41 89 f8             	mov    %edi,%r8d
   11f4c:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   11f51:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   11f56:	4f 8d 14 33          	lea    (%r11,%r14,1),%r10
   11f5a:	49 ff c2             	inc    %r10
   11f5d:	4d 29 cb             	sub    %r9,%r11
   11f60:	4d 01 f3             	add    %r14,%r11
   11f63:	41 be 02 00 00 00    	mov    $0x2,%r14d
   11f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11f70:	47 0f b6 4c 32 fe    	movzbl -0x2(%r10,%r14,1),%r9d
   11f76:	47 3a 4c 33 fe       	cmp    -0x2(%r11,%r14,1),%r9b
   11f7b:	75 0b                	jne    11f88 <lzma_lzma_optimum_fast+0x208>
   11f7d:	49 ff c6             	inc    %r14
   11f80:	4d 39 f0             	cmp    %r14,%r8
   11f83:	75 eb                	jne    11f70 <lzma_lzma_optimum_fast+0x1f0>
   11f85:	41 89 fe             	mov    %edi,%r14d
   11f88:	45 31 c0             	xor    %r8d,%r8d
   11f8b:	44 89 f5             	mov    %r14d,%ebp
   11f8e:	44 3b 74 24 04       	cmp    0x4(%rsp),%r14d
   11f93:	49 89 cb             	mov    %rcx,%r11
   11f96:	b9 00 00 00 00       	mov    $0x0,%ecx
   11f9b:	0f 83 a5 03 00 00    	jae    12346 <lzma_lzma_optimum_fast+0x5c6>
   11fa1:	45 8b 8d e8 02 00 00 	mov    0x2e8(%r13),%r9d
   11fa8:	4d 89 c8             	mov    %r9,%r8
   11fab:	49 f7 d0             	not    %r8
   11fae:	41 3a 34 10          	cmp    (%r8,%rdx,1),%sil
   11fb2:	75 5f                	jne    12013 <lzma_lzma_optimum_fast+0x293>
   11fb4:	4d 89 c8             	mov    %r9,%r8
   11fb7:	49 f7 d8             	neg    %r8
   11fba:	45 0f b6 17          	movzbl (%r15),%r10d
   11fbe:	47 3a 54 07 ff       	cmp    -0x1(%r15,%r8,1),%r10b
   11fc3:	75 4e                	jne    12013 <lzma_lzma_optimum_fast+0x293>
   11fc5:	89 f9                	mov    %edi,%ecx
   11fc7:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   11fcc:	4d 29 c8             	sub    %r9,%r8
   11fcf:	4c 03 44 24 18       	add    0x18(%rsp),%r8
   11fd4:	bd 02 00 00 00       	mov    $0x2,%ebp
   11fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11fe0:	45 0f b6 4c 2f ff    	movzbl -0x1(%r15,%rbp,1),%r9d
   11fe6:	45 3a 4c 28 fe       	cmp    -0x2(%r8,%rbp,1),%r9b
   11feb:	75 0a                	jne    11ff7 <lzma_lzma_optimum_fast+0x277>
   11fed:	48 ff c5             	inc    %rbp
   11ff0:	48 39 e9             	cmp    %rbp,%rcx
   11ff3:	75 eb                	jne    11fe0 <lzma_lzma_optimum_fast+0x260>
   11ff5:	89 fd                	mov    %edi,%ebp
   11ff7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11ffd:	3b 6c 24 04          	cmp    0x4(%rsp),%ebp
   12001:	0f 83 3f 03 00 00    	jae    12346 <lzma_lzma_optimum_fast+0x5c6>
   12007:	31 c9                	xor    %ecx,%ecx
   12009:	44 39 f5             	cmp    %r14d,%ebp
   1200c:	0f 97 c1             	seta   %cl
   1200f:	44 0f 47 f5          	cmova  %ebp,%r14d
   12013:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12018:	45 8b 95 ec 02 00 00 	mov    0x2ec(%r13),%r10d
   1201f:	4d 89 d0             	mov    %r10,%r8
   12022:	49 f7 d0             	not    %r8
   12025:	41 3a 34 10          	cmp    (%r8,%rdx,1),%sil
   12029:	75 6c                	jne    12097 <lzma_lzma_optimum_fast+0x317>
   1202b:	4d 89 d0             	mov    %r10,%r8
   1202e:	49 f7 d8             	neg    %r8
   12031:	45 0f b6 0f          	movzbl (%r15),%r9d
   12035:	47 3a 4c 07 ff       	cmp    -0x1(%r15,%r8,1),%r9b
   1203a:	75 5b                	jne    12097 <lzma_lzma_optimum_fast+0x317>
   1203c:	41 89 f8             	mov    %edi,%r8d
   1203f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   12044:	4d 29 d1             	sub    %r10,%r9
   12047:	4c 03 4c 24 18       	add    0x18(%rsp),%r9
   1204c:	bd 02 00 00 00       	mov    $0x2,%ebp
   12051:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   12058:	0f 1f 84 00 00 00 00 
   1205f:	00 
   12060:	45 0f b6 54 2f ff    	movzbl -0x1(%r15,%rbp,1),%r10d
   12066:	45 3a 54 29 fe       	cmp    -0x2(%r9,%rbp,1),%r10b
   1206b:	75 0a                	jne    12077 <lzma_lzma_optimum_fast+0x2f7>
   1206d:	48 ff c5             	inc    %rbp
   12070:	49 39 e8             	cmp    %rbp,%r8
   12073:	75 eb                	jne    12060 <lzma_lzma_optimum_fast+0x2e0>
   12075:	89 fd                	mov    %edi,%ebp
   12077:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1207d:	3b 6c 24 04          	cmp    0x4(%rsp),%ebp
   12081:	0f 83 bf 02 00 00    	jae    12346 <lzma_lzma_optimum_fast+0x5c6>
   12087:	44 39 f5             	cmp    %r14d,%ebp
   1208a:	41 0f 47 c8          	cmova  %r8d,%ecx
   1208e:	44 0f 47 f5          	cmova  %ebp,%r14d
   12092:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12097:	45 8b 85 f0 02 00 00 	mov    0x2f0(%r13),%r8d
   1209e:	4d 89 c1             	mov    %r8,%r9
   120a1:	49 f7 d1             	not    %r9
   120a4:	41 3a 34 11          	cmp    (%r9,%rdx,1),%sil
   120a8:	0f 85 12 01 00 00    	jne    121c0 <lzma_lzma_optimum_fast+0x440>
   120ae:	4c 89 c2             	mov    %r8,%rdx
   120b1:	48 f7 da             	neg    %rdx
   120b4:	41 0f b6 37          	movzbl (%r15),%esi
   120b8:	41 3a 74 17 ff       	cmp    -0x1(%r15,%rdx,1),%sil
   120bd:	0f 85 fd 00 00 00    	jne    121c0 <lzma_lzma_optimum_fast+0x440>
   120c3:	89 fa                	mov    %edi,%edx
   120c5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   120ca:	4c 29 c6             	sub    %r8,%rsi
   120cd:	48 03 74 24 18       	add    0x18(%rsp),%rsi
   120d2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   120d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   120df:	00 
   120e0:	47 0f b6 4c 07 ff    	movzbl -0x1(%r15,%r8,1),%r9d
   120e6:	46 3a 4c 06 fe       	cmp    -0x2(%rsi,%r8,1),%r9b
   120eb:	0f 85 40 02 00 00    	jne    12331 <lzma_lzma_optimum_fast+0x5b1>
   120f1:	49 ff c0             	inc    %r8
   120f4:	4c 39 c2             	cmp    %r8,%rdx
   120f7:	75 e7                	jne    120e0 <lzma_lzma_optimum_fast+0x360>
   120f9:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   120ff:	3b 7c 24 04          	cmp    0x4(%rsp),%edi
   12103:	0f 83 3b 02 00 00    	jae    12344 <lzma_lzma_optimum_fast+0x5c4>
   12109:	44 39 f7             	cmp    %r14d,%edi
   1210c:	ba 03 00 00 00       	mov    $0x3,%edx
   12111:	0f 47 ca             	cmova  %edx,%ecx
   12114:	44 0f 47 f7          	cmova  %edi,%r14d
   12118:	e9 a3 00 00 00       	jmp    121c0 <lzma_lzma_optimum_fast+0x440>
   1211d:	44 38 d6             	cmp    %r10b,%sil
   12120:	75 0d                	jne    1212f <lzma_lzma_optimum_fast+0x3af>
   12122:	41 0f b6 0f          	movzbl (%r15),%ecx
   12126:	31 ff                	xor    %edi,%edi
   12128:	43 3a 4c 07 ff       	cmp    -0x1(%r15,%r8,1),%cl
   1212d:	74 7a                	je     121a9 <lzma_lzma_optimum_fast+0x429>
   1212f:	41 8b 8d e8 02 00 00 	mov    0x2e8(%r13),%ecx
   12136:	48 89 cf             	mov    %rcx,%rdi
   12139:	48 f7 d7             	not    %rdi
   1213c:	40 3a 34 17          	cmp    (%rdi,%rdx,1),%sil
   12140:	75 13                	jne    12155 <lzma_lzma_optimum_fast+0x3d5>
   12142:	48 f7 d9             	neg    %rcx
   12145:	45 0f b6 07          	movzbl (%r15),%r8d
   12149:	bf 01 00 00 00       	mov    $0x1,%edi
   1214e:	45 3a 44 0f ff       	cmp    -0x1(%r15,%rcx,1),%r8b
   12153:	74 54                	je     121a9 <lzma_lzma_optimum_fast+0x429>
   12155:	41 8b 8d ec 02 00 00 	mov    0x2ec(%r13),%ecx
   1215c:	48 89 cf             	mov    %rcx,%rdi
   1215f:	48 f7 d7             	not    %rdi
   12162:	40 3a 34 17          	cmp    (%rdi,%rdx,1),%sil
   12166:	75 13                	jne    1217b <lzma_lzma_optimum_fast+0x3fb>
   12168:	48 f7 d9             	neg    %rcx
   1216b:	45 0f b6 07          	movzbl (%r15),%r8d
   1216f:	bf 02 00 00 00       	mov    $0x2,%edi
   12174:	45 3a 44 0f ff       	cmp    -0x1(%r15,%rcx,1),%r8b
   12179:	74 2e                	je     121a9 <lzma_lzma_optimum_fast+0x429>
   1217b:	45 8b 85 f0 02 00 00 	mov    0x2f0(%r13),%r8d
   12182:	4c 89 c7             	mov    %r8,%rdi
   12185:	48 f7 d7             	not    %rdi
   12188:	31 c9                	xor    %ecx,%ecx
   1218a:	40 3a 34 17          	cmp    (%rdi,%rdx,1),%sil
   1218e:	75 2d                	jne    121bd <lzma_lzma_optimum_fast+0x43d>
   12190:	49 f7 d8             	neg    %r8
   12193:	41 0f b6 17          	movzbl (%r15),%edx
   12197:	bf 03 00 00 00       	mov    $0x3,%edi
   1219c:	41 be 00 00 00 00    	mov    $0x0,%r14d
   121a2:	43 3a 54 07 ff       	cmp    -0x1(%r15,%r8,1),%dl
   121a7:	75 17                	jne    121c0 <lzma_lzma_optimum_fast+0x440>
   121a9:	41 89 3b             	mov    %edi,(%r11)
   121ac:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%rbp)
   121b3:	bd 01 00 00 00       	mov    $0x1,%ebp
   121b8:	e9 9b 01 00 00       	jmp    12358 <lzma_lzma_optimum_fast+0x5d8>
   121bd:	45 31 f6             	xor    %r14d,%r14d
   121c0:	44 3b 64 24 04       	cmp    0x4(%rsp),%r12d
   121c5:	0f 83 cd 00 00 00    	jae    12298 <lzma_lzma_optimum_fast+0x518>
   121cb:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   121d0:	31 ed                	xor    %ebp,%ebp
   121d2:	41 83 fc 02          	cmp    $0x2,%r12d
   121d6:	72 6f                	jb     12247 <lzma_lzma_optimum_fast+0x4c7>
   121d8:	8b 54 24 14          	mov    0x14(%rsp),%edx
   121dc:	8d 72 ff             	lea    -0x1(%rdx),%esi
   121df:	41 8b ac f5 f8 02 00 	mov    0x2f8(%r13,%rsi,8),%ebp
   121e6:	00 
   121e7:	48 83 fa 02          	cmp    $0x2,%rdx
   121eb:	72 43                	jb     12230 <lzma_lzma_optimum_fast+0x4b0>
   121ed:	48 8d 34 d5 e8 02 00 	lea    0x2e8(,%rdx,8),%rsi
   121f4:	00 
   121f5:	4c 01 ee             	add    %r13,%rsi
   121f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   121ff:	00 
   12200:	8b 7e fc             	mov    -0x4(%rsi),%edi
   12203:	44 8d 47 01          	lea    0x1(%rdi),%r8d
   12207:	45 39 c4             	cmp    %r8d,%r12d
   1220a:	75 24                	jne    12230 <lzma_lzma_optimum_fast+0x4b0>
   1220c:	41 89 e9             	mov    %ebp,%r9d
   1220f:	41 c1 e9 07          	shr    $0x7,%r9d
   12213:	44 8b 06             	mov    (%rsi),%r8d
   12216:	45 39 c1             	cmp    %r8d,%r9d
   12219:	76 15                	jbe    12230 <lzma_lzma_optimum_fast+0x4b0>
   1221b:	ff ca                	dec    %edx
   1221d:	89 54 24 14          	mov    %edx,0x14(%rsp)
   12221:	48 83 c6 f8          	add    $0xfffffffffffffff8,%rsi
   12225:	44 89 c5             	mov    %r8d,%ebp
   12228:	41 89 fc             	mov    %edi,%r12d
   1222b:	83 fa 01             	cmp    $0x1,%edx
   1222e:	77 d0                	ja     12200 <lzma_lzma_optimum_fast+0x480>
   12230:	83 fd 7f             	cmp    $0x7f,%ebp
   12233:	ba 01 00 00 00       	mov    $0x1,%edx
   12238:	41 0f 46 d4          	cmovbe %r12d,%edx
   1223c:	41 83 fc 02          	cmp    $0x2,%r12d
   12240:	41 0f 45 d4          	cmovne %r12d,%edx
   12244:	41 89 d4             	mov    %edx,%r12d
   12247:	41 83 fe 02          	cmp    $0x2,%r14d
   1224b:	72 7e                	jb     122cb <lzma_lzma_optimum_fast+0x54b>
   1224d:	41 8d 56 01          	lea    0x1(%r14),%edx
   12251:	44 39 e2             	cmp    %r12d,%edx
   12254:	73 22                	jae    12278 <lzma_lzma_optimum_fast+0x4f8>
   12256:	41 8d 56 02          	lea    0x2(%r14),%edx
   1225a:	44 39 e2             	cmp    %r12d,%edx
   1225d:	72 08                	jb     12267 <lzma_lzma_optimum_fast+0x4e7>
   1225f:	81 fd 00 02 00 00    	cmp    $0x200,%ebp
   12265:	77 11                	ja     12278 <lzma_lzma_optimum_fast+0x4f8>
   12267:	41 8d 56 03          	lea    0x3(%r14),%edx
   1226b:	44 39 e2             	cmp    %r12d,%edx
   1226e:	72 5b                	jb     122cb <lzma_lzma_optimum_fast+0x54b>
   12270:	81 fd 01 80 00 00    	cmp    $0x8001,%ebp
   12276:	72 53                	jb     122cb <lzma_lzma_optimum_fast+0x54b>
   12278:	41 89 0b             	mov    %ecx,(%r11)
   1227b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   12280:	44 89 30             	mov    %r14d,(%rax)
   12283:	41 ff ce             	dec    %r14d
   12286:	48 89 df             	mov    %rbx,%rdi
   12289:	44 89 f6             	mov    %r14d,%esi
   1228c:	ff 53 38             	call   *0x38(%rbx)
   1228f:	44 01 73 1c          	add    %r14d,0x1c(%rbx)
   12293:	e9 3c 03 00 00       	jmp    125d4 <lzma_lzma_optimum_fast+0x854>
   12298:	8b 44 24 14          	mov    0x14(%rsp),%eax
   1229c:	ff c8                	dec    %eax
   1229e:	41 8b 84 c5 f8 02 00 	mov    0x2f8(%r13,%rax,8),%eax
   122a5:	00 
   122a6:	83 c0 04             	add    $0x4,%eax
   122a9:	41 89 03             	mov    %eax,(%r11)
   122ac:	44 89 65 00          	mov    %r12d,0x0(%rbp)
   122b0:	41 ff cc             	dec    %r12d
   122b3:	0f 84 1b 03 00 00    	je     125d4 <lzma_lzma_optimum_fast+0x854>
   122b9:	48 89 df             	mov    %rbx,%rdi
   122bc:	44 89 e6             	mov    %r12d,%esi
   122bf:	ff 53 38             	call   *0x38(%rbx)
   122c2:	44 01 63 1c          	add    %r12d,0x1c(%rbx)
   122c6:	e9 09 03 00 00       	jmp    125d4 <lzma_lzma_optimum_fast+0x854>
   122cb:	83 f8 02             	cmp    $0x2,%eax
   122ce:	74 55                	je     12325 <lzma_lzma_optimum_fast+0x5a5>
   122d0:	41 83 fc 01          	cmp    $0x1,%r12d
   122d4:	76 4f                	jbe    12325 <lzma_lzma_optimum_fast+0x5a5>
   122d6:	4d 89 de             	mov    %r11,%r14
   122d9:	49 8d b5 84 0b 00 00 	lea    0xb84(%r13),%rsi
   122e0:	49 8d 95 f4 02 00 00 	lea    0x2f4(%r13),%rdx
   122e7:	48 89 df             	mov    %rbx,%rdi
   122ea:	e8 b1 a3 ff ff       	call   c6a0 <lzma_mf_find>
   122ef:	41 89 85 88 0b 00 00 	mov    %eax,0xb88(%r13)
   122f6:	83 f8 02             	cmp    $0x2,%eax
   122f9:	0f 82 a1 00 00 00    	jb     123a0 <lzma_lzma_optimum_fast+0x620>
   122ff:	41 8b 8d 84 0b 00 00 	mov    0xb84(%r13),%ecx
   12306:	ff c9                	dec    %ecx
   12308:	41 8b 8c cd f8 02 00 	mov    0x2f8(%r13,%rcx,8),%ecx
   1230f:	00 
   12310:	44 39 e0             	cmp    %r12d,%eax
   12313:	72 53                	jb     12368 <lzma_lzma_optimum_fast+0x5e8>
   12315:	39 e9                	cmp    %ebp,%ecx
   12317:	73 4f                	jae    12368 <lzma_lzma_optimum_fast+0x5e8>
   12319:	41 c7 06 ff ff ff ff 	movl   $0xffffffff,(%r14)
   12320:	e9 a4 02 00 00       	jmp    125c9 <lzma_lzma_optimum_fast+0x849>
   12325:	41 c7 03 ff ff ff ff 	movl   $0xffffffff,(%r11)
   1232c:	e9 98 02 00 00       	jmp    125c9 <lzma_lzma_optimum_fast+0x849>
   12331:	44 89 c7             	mov    %r8d,%edi
   12334:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   1233a:	3b 7c 24 04          	cmp    0x4(%rsp),%edi
   1233e:	0f 82 c5 fd ff ff    	jb     12109 <lzma_lzma_optimum_fast+0x389>
   12344:	89 fd                	mov    %edi,%ebp
   12346:	45 89 03             	mov    %r8d,(%r11)
   12349:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1234e:	89 28                	mov    %ebp,(%rax)
   12350:	ff cd                	dec    %ebp
   12352:	0f 84 7c 02 00 00    	je     125d4 <lzma_lzma_optimum_fast+0x854>
   12358:	48 89 df             	mov    %rbx,%rdi
   1235b:	89 ee                	mov    %ebp,%esi
   1235d:	ff 53 38             	call   *0x38(%rbx)
   12360:	01 6b 1c             	add    %ebp,0x1c(%rbx)
   12363:	e9 6c 02 00 00       	jmp    125d4 <lzma_lzma_optimum_fast+0x854>
   12368:	41 8d 7c 24 01       	lea    0x1(%r12),%edi
   1236d:	39 f8                	cmp    %edi,%eax
   1236f:	0f 94 c2             	sete   %dl
   12372:	89 ce                	mov    %ecx,%esi
   12374:	c1 ee 07             	shr    $0x7,%esi
   12377:	39 ee                	cmp    %ebp,%esi
   12379:	40 0f 96 c6          	setbe  %sil
   1237d:	39 f8                	cmp    %edi,%eax
   1237f:	77 98                	ja     12319 <lzma_lzma_optimum_fast+0x599>
   12381:	40 20 f2             	and    %sil,%dl
   12384:	75 93                	jne    12319 <lzma_lzma_optimum_fast+0x599>
   12386:	41 83 fc 03          	cmp    $0x3,%r12d
   1238a:	72 14                	jb     123a0 <lzma_lzma_optimum_fast+0x620>
   1238c:	ff c0                	inc    %eax
   1238e:	44 39 e0             	cmp    %r12d,%eax
   12391:	72 0d                	jb     123a0 <lzma_lzma_optimum_fast+0x620>
   12393:	89 e8                	mov    %ebp,%eax
   12395:	c1 e8 07             	shr    $0x7,%eax
   12398:	39 c8                	cmp    %ecx,%eax
   1239a:	0f 87 79 ff ff ff    	ja     12319 <lzma_lzma_optimum_fast+0x599>
   123a0:	41 8d 4c 24 ff       	lea    -0x1(%r12),%ecx
   123a5:	41 0f b6 07          	movzbl (%r15),%eax
   123a9:	41 8b 95 e4 02 00 00 	mov    0x2e4(%r13),%edx
   123b0:	48 89 d6             	mov    %rdx,%rsi
   123b3:	48 f7 de             	neg    %rsi
   123b6:	48 89 d7             	mov    %rdx,%rdi
   123b9:	48 f7 d7             	not    %rdi
   123bc:	42 0f b6 3c 3f       	movzbl (%rdi,%r15,1),%edi
   123c1:	83 f9 02             	cmp    $0x2,%ecx
   123c4:	4d 89 f2             	mov    %r14,%r10
   123c7:	76 5c                	jbe    12425 <lzma_lzma_optimum_fast+0x6a5>
   123c9:	40 38 f8             	cmp    %dil,%al
   123cc:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   123d1:	0f 85 da 00 00 00    	jne    124b1 <lzma_lzma_optimum_fast+0x731>
   123d7:	41 0f b6 7f 01       	movzbl 0x1(%r15),%edi
   123dc:	41 3a 3c 37          	cmp    (%r15,%rsi,1),%dil
   123e0:	0f 85 cb 00 00 00    	jne    124b1 <lzma_lzma_optimum_fast+0x731>
   123e6:	89 ce                	mov    %ecx,%esi
   123e8:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   123ed:	4b 8d 3c 0b          	lea    (%r11,%r9,1),%rdi
   123f1:	48 83 c7 02          	add    $0x2,%rdi
   123f5:	4d 89 d8             	mov    %r11,%r8
   123f8:	49 29 d0             	sub    %rdx,%r8
   123fb:	4b 8d 14 01          	lea    (%r9,%r8,1),%rdx
   123ff:	48 ff c2             	inc    %rdx
   12402:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   12406:	45 31 c0             	xor    %r8d,%r8d
   12409:	46 0f b6 0c 07       	movzbl (%rdi,%r8,1),%r9d
   1240e:	46 3a 0c 02          	cmp    (%rdx,%r8,1),%r9b
   12412:	0f 85 99 00 00 00    	jne    124b1 <lzma_lzma_optimum_fast+0x731>
   12418:	49 ff c0             	inc    %r8
   1241b:	4c 39 c6             	cmp    %r8,%rsi
   1241e:	75 e9                	jne    12409 <lzma_lzma_optimum_fast+0x689>
   12420:	e9 9d 01 00 00       	jmp    125c2 <lzma_lzma_optimum_fast+0x842>
   12425:	40 38 f8             	cmp    %dil,%al
   12428:	75 0f                	jne    12439 <lzma_lzma_optimum_fast+0x6b9>
   1242a:	41 0f b6 4f 01       	movzbl 0x1(%r15),%ecx
   1242f:	41 3a 0c 37          	cmp    (%r15,%rsi,1),%cl
   12433:	0f 84 89 01 00 00    	je     125c2 <lzma_lzma_optimum_fast+0x842>
   12439:	41 8b 8d e8 02 00 00 	mov    0x2e8(%r13),%ecx
   12440:	48 89 ca             	mov    %rcx,%rdx
   12443:	48 f7 d2             	not    %rdx
   12446:	42 3a 04 3a          	cmp    (%rdx,%r15,1),%al
   1244a:	75 12                	jne    1245e <lzma_lzma_optimum_fast+0x6de>
   1244c:	48 f7 d9             	neg    %rcx
   1244f:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
   12454:	41 3a 14 0f          	cmp    (%r15,%rcx,1),%dl
   12458:	0f 84 64 01 00 00    	je     125c2 <lzma_lzma_optimum_fast+0x842>
   1245e:	41 8b 8d ec 02 00 00 	mov    0x2ec(%r13),%ecx
   12465:	48 89 ca             	mov    %rcx,%rdx
   12468:	48 f7 d2             	not    %rdx
   1246b:	42 3a 04 3a          	cmp    (%rdx,%r15,1),%al
   1246f:	75 12                	jne    12483 <lzma_lzma_optimum_fast+0x703>
   12471:	48 f7 d9             	neg    %rcx
   12474:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
   12479:	41 3a 14 0f          	cmp    (%r15,%rcx,1),%dl
   1247d:	0f 84 3f 01 00 00    	je     125c2 <lzma_lzma_optimum_fast+0x842>
   12483:	41 8b 8d f0 02 00 00 	mov    0x2f0(%r13),%ecx
   1248a:	48 89 ca             	mov    %rcx,%rdx
   1248d:	48 f7 d2             	not    %rdx
   12490:	42 3a 04 3a          	cmp    (%rdx,%r15,1),%al
   12494:	0f 85 49 01 00 00    	jne    125e3 <lzma_lzma_optimum_fast+0x863>
   1249a:	48 f7 d9             	neg    %rcx
   1249d:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
   124a2:	41 3a 04 0f          	cmp    (%r15,%rcx,1),%al
   124a6:	0f 84 16 01 00 00    	je     125c2 <lzma_lzma_optimum_fast+0x842>
   124ac:	e9 32 01 00 00       	jmp    125e3 <lzma_lzma_optimum_fast+0x863>
   124b1:	41 8b b5 e8 02 00 00 	mov    0x2e8(%r13),%esi
   124b8:	48 89 f2             	mov    %rsi,%rdx
   124bb:	48 f7 d2             	not    %rdx
   124be:	42 3a 04 3a          	cmp    (%rdx,%r15,1),%al
   124c2:	75 4c                	jne    12510 <lzma_lzma_optimum_fast+0x790>
   124c4:	48 89 f2             	mov    %rsi,%rdx
   124c7:	48 f7 da             	neg    %rdx
   124ca:	41 0f b6 7f 01       	movzbl 0x1(%r15),%edi
   124cf:	41 3a 3c 17          	cmp    (%r15,%rdx,1),%dil
   124d3:	75 3b                	jne    12510 <lzma_lzma_optimum_fast+0x790>
   124d5:	89 ca                	mov    %ecx,%edx
   124d7:	48 83 c2 fe          	add    $0xfffffffffffffffe,%rdx
   124db:	4c 89 df             	mov    %r11,%rdi
   124de:	48 29 f7             	sub    %rsi,%rdi
   124e1:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   124e6:	49 8d 34 38          	lea    (%r8,%rdi,1),%rsi
   124ea:	48 ff c6             	inc    %rsi
   124ed:	4b 8d 3c 03          	lea    (%r11,%r8,1),%rdi
   124f1:	48 83 c7 02          	add    $0x2,%rdi
   124f5:	45 31 c0             	xor    %r8d,%r8d
   124f8:	46 0f b6 0c 07       	movzbl (%rdi,%r8,1),%r9d
   124fd:	46 3a 0c 06          	cmp    (%rsi,%r8,1),%r9b
   12501:	75 0d                	jne    12510 <lzma_lzma_optimum_fast+0x790>
   12503:	49 ff c0             	inc    %r8
   12506:	4c 39 c2             	cmp    %r8,%rdx
   12509:	75 ed                	jne    124f8 <lzma_lzma_optimum_fast+0x778>
   1250b:	e9 b2 00 00 00       	jmp    125c2 <lzma_lzma_optimum_fast+0x842>
   12510:	41 8b b5 ec 02 00 00 	mov    0x2ec(%r13),%esi
   12517:	48 89 f2             	mov    %rsi,%rdx
   1251a:	48 f7 d2             	not    %rdx
   1251d:	42 3a 04 3a          	cmp    (%rdx,%r15,1),%al
   12521:	75 49                	jne    1256c <lzma_lzma_optimum_fast+0x7ec>
   12523:	48 89 f2             	mov    %rsi,%rdx
   12526:	48 f7 da             	neg    %rdx
   12529:	41 0f b6 7f 01       	movzbl 0x1(%r15),%edi
   1252e:	41 3a 3c 17          	cmp    (%r15,%rdx,1),%dil
   12532:	75 38                	jne    1256c <lzma_lzma_optimum_fast+0x7ec>
   12534:	89 ca                	mov    %ecx,%edx
   12536:	48 83 c2 fe          	add    $0xfffffffffffffffe,%rdx
   1253a:	4c 89 df             	mov    %r11,%rdi
   1253d:	48 29 f7             	sub    %rsi,%rdi
   12540:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   12545:	49 8d 34 38          	lea    (%r8,%rdi,1),%rsi
   12549:	48 ff c6             	inc    %rsi
   1254c:	4b 8d 3c 03          	lea    (%r11,%r8,1),%rdi
   12550:	48 83 c7 02          	add    $0x2,%rdi
   12554:	45 31 c0             	xor    %r8d,%r8d
   12557:	46 0f b6 0c 07       	movzbl (%rdi,%r8,1),%r9d
   1255c:	46 3a 0c 06          	cmp    (%rsi,%r8,1),%r9b
   12560:	75 0a                	jne    1256c <lzma_lzma_optimum_fast+0x7ec>
   12562:	49 ff c0             	inc    %r8
   12565:	4c 39 c2             	cmp    %r8,%rdx
   12568:	75 ed                	jne    12557 <lzma_lzma_optimum_fast+0x7d7>
   1256a:	eb 56                	jmp    125c2 <lzma_lzma_optimum_fast+0x842>
   1256c:	41 8b 95 f0 02 00 00 	mov    0x2f0(%r13),%edx
   12573:	48 89 d6             	mov    %rdx,%rsi
   12576:	48 f7 d6             	not    %rsi
   12579:	42 3a 04 3e          	cmp    (%rsi,%r15,1),%al
   1257d:	75 64                	jne    125e3 <lzma_lzma_optimum_fast+0x863>
   1257f:	48 89 d0             	mov    %rdx,%rax
   12582:	48 f7 d8             	neg    %rax
   12585:	41 0f b6 77 01       	movzbl 0x1(%r15),%esi
   1258a:	41 3a 34 07          	cmp    (%r15,%rax,1),%sil
   1258e:	75 53                	jne    125e3 <lzma_lzma_optimum_fast+0x863>
   12590:	89 c8                	mov    %ecx,%eax
   12592:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   12596:	4c 89 d9             	mov    %r11,%rcx
   12599:	48 29 d1             	sub    %rdx,%rcx
   1259c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   125a1:	48 01 d1             	add    %rdx,%rcx
   125a4:	48 ff c1             	inc    %rcx
   125a7:	4c 01 da             	add    %r11,%rdx
   125aa:	48 83 c2 02          	add    $0x2,%rdx
   125ae:	31 f6                	xor    %esi,%esi
   125b0:	0f b6 3c 32          	movzbl (%rdx,%rsi,1),%edi
   125b4:	40 3a 3c 31          	cmp    (%rcx,%rsi,1),%dil
   125b8:	75 29                	jne    125e3 <lzma_lzma_optimum_fast+0x863>
   125ba:	48 ff c6             	inc    %rsi
   125bd:	48 39 f0             	cmp    %rsi,%rax
   125c0:	75 ee                	jne    125b0 <lzma_lzma_optimum_fast+0x830>
   125c2:	41 c7 02 ff ff ff ff 	movl   $0xffffffff,(%r10)
   125c9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   125ce:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   125d4:	48 83 c4 28          	add    $0x28,%rsp
   125d8:	5b                   	pop    %rbx
   125d9:	41 5c                	pop    %r12
   125db:	41 5d                	pop    %r13
   125dd:	41 5e                	pop    %r14
   125df:	41 5f                	pop    %r15
   125e1:	5d                   	pop    %rbp
   125e2:	c3                   	ret    
   125e3:	83 c5 04             	add    $0x4,%ebp
   125e6:	41 89 2a             	mov    %ebp,(%r10)
   125e9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   125ee:	44 89 20             	mov    %r12d,(%rax)
   125f1:	41 83 c4 fe          	add    $0xfffffffe,%r12d
   125f5:	0f 85 be fc ff ff    	jne    122b9 <lzma_lzma_optimum_fast+0x539>
   125fb:	eb d7                	jmp    125d4 <lzma_lzma_optimum_fast+0x854>
   125fd:	0f 1f 00             	nopl   (%rax)

0000000000012600 <lzma_lzma_optimum_normal>:
   12600:	55                   	push   %rbp
   12601:	41 57                	push   %r15
   12603:	41 56                	push   %r14
   12605:	41 55                	push   %r13
   12607:	41 54                	push   %r12
   12609:	53                   	push   %rbx
   1260a:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   12611:	4c 89 84 24 00 01 00 	mov    %r8,0x100(%rsp)
   12618:	00 
   12619:	49 89 ca             	mov    %rcx,%r10
   1261c:	48 89 d3             	mov    %rdx,%rbx
   1261f:	49 89 fe             	mov    %rdi,%r14
   12622:	8b 87 e0 0e 01 00    	mov    0x10ee0(%rdi),%eax
   12628:	39 87 dc 0e 01 00    	cmp    %eax,0x10edc(%rdi)
   1262e:	75 3b                	jne    1266b <lzma_lzma_optimum_normal+0x6b>
   12630:	83 7e 1c 00          	cmpl   $0x0,0x1c(%rsi)
   12634:	48 89 b4 24 e8 00 00 	mov    %rsi,0xe8(%rsp)
   1263b:	00 
   1263c:	4c 89 94 24 b8 00 00 	mov    %r10,0xb8(%rsp)
   12643:	00 
   12644:	74 5b                	je     126a1 <lzma_lzma_optimum_normal+0xa1>
   12646:	8b 46 60             	mov    0x60(%rsi),%eax
   12649:	89 44 24 10          	mov    %eax,0x10(%rsp)
   1264d:	41 8b 8e 84 0b 00 00 	mov    0xb84(%r14),%ecx
   12654:	41 8b 86 88 0b 00 00 	mov    0xb88(%r14),%eax
   1265b:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1265f:	89 8c 24 b4 00 00 00 	mov    %ecx,0xb4(%rsp)
   12666:	e9 02 06 00 00       	jmp    12c6d <lzma_lzma_optimum_normal+0x66d>
   1266b:	48 6b c8 2c          	imul   $0x2c,%rax,%rcx
   1266f:	41 8b 94 0e f8 0e 01 	mov    0x10ef8(%r14,%rcx,1),%edx
   12676:	00 
   12677:	89 d6                	mov    %edx,%esi
   12679:	29 c6                	sub    %eax,%esi
   1267b:	41 89 32             	mov    %esi,(%r10)
   1267e:	41 8b 84 0e fc 0e 01 	mov    0x10efc(%r14,%rcx,1),%eax
   12685:	00 
   12686:	89 03                	mov    %eax,(%rbx)
   12688:	41 89 96 e0 0e 01 00 	mov    %edx,0x10ee0(%r14)
   1268f:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
   12696:	5b                   	pop    %rbx
   12697:	41 5c                	pop    %r12
   12699:	41 5d                	pop    %r13
   1269b:	41 5e                	pop    %r14
   1269d:	41 5f                	pop    %r15
   1269f:	5d                   	pop    %rbp
   126a0:	c3                   	ret    
   126a1:	41 81 be 94 0e 01 00 	cmpl   $0x80,0x10e94(%r14)
   126a8:	80 00 00 00 
   126ac:	0f 82 97 04 00 00    	jb     12b49 <lzma_lzma_optimum_normal+0x549>
   126b2:	31 c0                	xor    %eax,%eax
   126b4:	41 83 be 90 0e 01 00 	cmpl   $0x0,0x10e90(%r14)
   126bb:	00 
   126bc:	be 00 00 00 00       	mov    $0x0,%esi
   126c1:	0f 84 a8 00 00 00    	je     1276f <lzma_lzma_optimum_normal+0x16f>
   126c7:	31 c9                	xor    %ecx,%ecx
   126c9:	48 8d 15 d0 7b 01 00 	lea    0x17bd0(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   126d0:	44 8d 41 40          	lea    0x40(%rcx),%r8d
   126d4:	31 f6                	xor    %esi,%esi
   126d6:	44 89 c7             	mov    %r8d,%edi
   126d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   126e0:	45 89 c1             	mov    %r8d,%r9d
   126e3:	41 83 e1 01          	and    $0x1,%r9d
   126e7:	41 f7 d9             	neg    %r9d
   126ea:	d1 ef                	shr    %edi
   126ec:	41 83 e0 fe          	and    $0xfffffffe,%r8d
   126f0:	47 0f b7 84 06 fc 6e 	movzwl 0x6efc(%r14,%r8,1),%r8d
   126f7:	00 00 
   126f9:	41 81 e1 f0 07 00 00 	and    $0x7f0,%r9d
   12700:	45 31 c1             	xor    %r8d,%r9d
   12703:	41 c1 e9 04          	shr    $0x4,%r9d
   12707:	46 0f b6 04 0a       	movzbl (%rdx,%r9,1),%r8d
   1270c:	44 01 c6             	add    %r8d,%esi
   1270f:	41 89 f8             	mov    %edi,%r8d
   12712:	83 ff 01             	cmp    $0x1,%edi
   12715:	75 c9                	jne    126e0 <lzma_lzma_optimum_normal+0xe0>
   12717:	41 89 b4 8e 90 02 01 	mov    %esi,0x10290(%r14,%rcx,4)
   1271e:	00 
   1271f:	48 ff c1             	inc    %rcx
   12722:	41 8b b6 90 0e 01 00 	mov    0x10e90(%r14),%esi
   12729:	48 39 f1             	cmp    %rsi,%rcx
   1272c:	72 a2                	jb     126d0 <lzma_lzma_optimum_normal+0xd0>
   1272e:	83 fe 0f             	cmp    $0xf,%esi
   12731:	72 3c                	jb     1276f <lzma_lzma_optimum_normal+0x16f>
   12733:	ba b2 40 00 00       	mov    $0x40b2,%edx
   12738:	b9 70 00 00 00       	mov    $0x70,%ecx
   1273d:	0f 1f 00             	nopl   (%rax)
   12740:	89 ce                	mov    %ecx,%esi
   12742:	83 e6 f0             	and    $0xfffffff0,%esi
   12745:	41 8b 3c 96          	mov    (%r14,%rdx,4),%edi
   12749:	01 fe                	add    %edi,%esi
   1274b:	83 c6 b0             	add    $0xffffffb0,%esi
   1274e:	41 89 34 96          	mov    %esi,(%r14,%rdx,4)
   12752:	41 8b b6 90 0e 01 00 	mov    0x10e90(%r14),%esi
   12759:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   1275d:	48 81 c2 5d bf ff ff 	add    $0xffffffffffffbf5d,%rdx
   12764:	83 c1 08             	add    $0x8,%ecx
   12767:	48 39 f2             	cmp    %rsi,%rdx
   1276a:	48 89 fa             	mov    %rdi,%rdx
   1276d:	72 d1                	jb     12740 <lzma_lzma_optimum_normal+0x140>
   1276f:	41 0f 10 86 90 02 01 	movups 0x10290(%r14),%xmm0
   12776:	00 
   12777:	41 0f 11 86 90 06 01 	movups %xmm0,0x10690(%r14)
   1277e:	00 
   1277f:	85 f6                	test   %esi,%esi
   12781:	0f 84 a8 00 00 00    	je     1282f <lzma_lzma_optimum_normal+0x22f>
   12787:	31 c9                	xor    %ecx,%ecx
   12789:	48 8d 15 10 7b 01 00 	lea    0x17b10(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   12790:	8d 79 40             	lea    0x40(%rcx),%edi
   12793:	31 c0                	xor    %eax,%eax
   12795:	89 fe                	mov    %edi,%esi
   12797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1279e:	00 00 
   127a0:	41 89 f8             	mov    %edi,%r8d
   127a3:	41 83 e0 01          	and    $0x1,%r8d
   127a7:	41 f7 d8             	neg    %r8d
   127aa:	d1 ee                	shr    %esi
   127ac:	83 e7 fe             	and    $0xfffffffe,%edi
   127af:	41 0f b7 bc 3e 7c 6f 	movzwl 0x6f7c(%r14,%rdi,1),%edi
   127b6:	00 00 
   127b8:	41 81 e0 f0 07 00 00 	and    $0x7f0,%r8d
   127bf:	41 31 f8             	xor    %edi,%r8d
   127c2:	41 c1 e8 04          	shr    $0x4,%r8d
   127c6:	42 0f b6 3c 02       	movzbl (%rdx,%r8,1),%edi
   127cb:	01 f8                	add    %edi,%eax
   127cd:	89 f7                	mov    %esi,%edi
   127cf:	83 fe 01             	cmp    $0x1,%esi
   127d2:	75 cc                	jne    127a0 <lzma_lzma_optimum_normal+0x1a0>
   127d4:	41 89 84 8e 90 03 01 	mov    %eax,0x10390(%r14,%rcx,4)
   127db:	00 
   127dc:	48 ff c1             	inc    %rcx
   127df:	41 8b 86 90 0e 01 00 	mov    0x10e90(%r14),%eax
   127e6:	48 39 c1             	cmp    %rax,%rcx
   127e9:	72 a5                	jb     12790 <lzma_lzma_optimum_normal+0x190>
   127eb:	83 f8 0f             	cmp    $0xf,%eax
   127ee:	72 3f                	jb     1282f <lzma_lzma_optimum_normal+0x22f>
   127f0:	ba f2 40 00 00       	mov    $0x40f2,%edx
   127f5:	b9 70 00 00 00       	mov    $0x70,%ecx
   127fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12800:	89 c8                	mov    %ecx,%eax
   12802:	83 e0 f0             	and    $0xfffffff0,%eax
   12805:	41 8b 34 96          	mov    (%r14,%rdx,4),%esi
   12809:	01 f0                	add    %esi,%eax
   1280b:	83 c0 b0             	add    $0xffffffb0,%eax
   1280e:	41 89 04 96          	mov    %eax,(%r14,%rdx,4)
   12812:	41 8b 86 90 0e 01 00 	mov    0x10e90(%r14),%eax
   12819:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1281d:	48 81 c2 1d bf ff ff 	add    $0xffffffffffffbf1d,%rdx
   12824:	83 c1 08             	add    $0x8,%ecx
   12827:	48 39 c2             	cmp    %rax,%rdx
   1282a:	48 89 f2             	mov    %rsi,%rdx
   1282d:	72 d1                	jb     12800 <lzma_lzma_optimum_normal+0x200>
   1282f:	41 0f 10 86 90 03 01 	movups 0x10390(%r14),%xmm0
   12836:	00 
   12837:	41 0f 11 86 90 08 01 	movups %xmm0,0x10890(%r14)
   1283e:	00 
   1283f:	85 c0                	test   %eax,%eax
   12841:	0f 84 aa 00 00 00    	je     128f1 <lzma_lzma_optimum_normal+0x2f1>
   12847:	31 c0                	xor    %eax,%eax
   12849:	48 8d 0d 50 7a 01 00 	lea    0x17a50(%rip),%rcx        # 2a2a0 <lzma_rc_prices>
   12850:	8d 78 40             	lea    0x40(%rax),%edi
   12853:	31 d2                	xor    %edx,%edx
   12855:	89 fe                	mov    %edi,%esi
   12857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1285e:	00 00 
   12860:	41 89 f8             	mov    %edi,%r8d
   12863:	41 83 e0 01          	and    $0x1,%r8d
   12867:	41 f7 d8             	neg    %r8d
   1286a:	d1 ee                	shr    %esi
   1286c:	83 e7 fe             	and    $0xfffffffe,%edi
   1286f:	41 0f b7 bc 3e fc 6f 	movzwl 0x6ffc(%r14,%rdi,1),%edi
   12876:	00 00 
   12878:	41 81 e0 f0 07 00 00 	and    $0x7f0,%r8d
   1287f:	41 31 f8             	xor    %edi,%r8d
   12882:	41 c1 e8 04          	shr    $0x4,%r8d
   12886:	42 0f b6 3c 01       	movzbl (%rcx,%r8,1),%edi
   1288b:	01 fa                	add    %edi,%edx
   1288d:	89 f7                	mov    %esi,%edi
   1288f:	83 fe 01             	cmp    $0x1,%esi
   12892:	75 cc                	jne    12860 <lzma_lzma_optimum_normal+0x260>
   12894:	41 89 94 86 90 04 01 	mov    %edx,0x10490(%r14,%rax,4)
   1289b:	00 
   1289c:	48 ff c0             	inc    %rax
   1289f:	41 8b 96 90 0e 01 00 	mov    0x10e90(%r14),%edx
   128a6:	48 39 d0             	cmp    %rdx,%rax
   128a9:	72 a5                	jb     12850 <lzma_lzma_optimum_normal+0x250>
   128ab:	83 fa 0f             	cmp    $0xf,%edx
   128ae:	72 43                	jb     128f3 <lzma_lzma_optimum_normal+0x2f3>
   128b0:	b9 32 41 00 00       	mov    $0x4132,%ecx
   128b5:	b8 70 00 00 00       	mov    $0x70,%eax
   128ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   128c0:	89 c2                	mov    %eax,%edx
   128c2:	83 e2 f0             	and    $0xfffffff0,%edx
   128c5:	41 8b 34 8e          	mov    (%r14,%rcx,4),%esi
   128c9:	01 f2                	add    %esi,%edx
   128cb:	83 c2 b0             	add    $0xffffffb0,%edx
   128ce:	41 89 14 8e          	mov    %edx,(%r14,%rcx,4)
   128d2:	41 8b 96 90 0e 01 00 	mov    0x10e90(%r14),%edx
   128d9:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   128dd:	48 81 c1 dd be ff ff 	add    $0xffffffffffffbedd,%rcx
   128e4:	83 c0 08             	add    $0x8,%eax
   128e7:	48 39 d1             	cmp    %rdx,%rcx
   128ea:	48 89 f1             	mov    %rsi,%rcx
   128ed:	72 d1                	jb     128c0 <lzma_lzma_optimum_normal+0x2c0>
   128ef:	eb 02                	jmp    128f3 <lzma_lzma_optimum_normal+0x2f3>
   128f1:	31 d2                	xor    %edx,%edx
   128f3:	41 0f 10 86 90 04 01 	movups 0x10490(%r14),%xmm0
   128fa:	00 
   128fb:	41 0f 11 86 90 0a 01 	movups %xmm0,0x10a90(%r14)
   12902:	00 
   12903:	85 d2                	test   %edx,%edx
   12905:	0f 84 b4 00 00 00    	je     129bf <lzma_lzma_optimum_normal+0x3bf>
   1290b:	31 c0                	xor    %eax,%eax
   1290d:	48 8d 0d 8c 79 01 00 	lea    0x1798c(%rip),%rcx        # 2a2a0 <lzma_rc_prices>
   12914:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1291b:	00 00 00 00 00 
   12920:	8d 78 40             	lea    0x40(%rax),%edi
   12923:	31 d2                	xor    %edx,%edx
   12925:	89 fe                	mov    %edi,%esi
   12927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1292e:	00 00 
   12930:	41 89 f8             	mov    %edi,%r8d
   12933:	41 83 e0 01          	and    $0x1,%r8d
   12937:	41 f7 d8             	neg    %r8d
   1293a:	d1 ee                	shr    %esi
   1293c:	83 e7 fe             	and    $0xfffffffe,%edi
   1293f:	41 0f b7 bc 3e 7c 70 	movzwl 0x707c(%r14,%rdi,1),%edi
   12946:	00 00 
   12948:	41 81 e0 f0 07 00 00 	and    $0x7f0,%r8d
   1294f:	41 31 f8             	xor    %edi,%r8d
   12952:	41 c1 e8 04          	shr    $0x4,%r8d
   12956:	42 0f b6 3c 01       	movzbl (%rcx,%r8,1),%edi
   1295b:	01 fa                	add    %edi,%edx
   1295d:	89 f7                	mov    %esi,%edi
   1295f:	83 fe 01             	cmp    $0x1,%esi
   12962:	75 cc                	jne    12930 <lzma_lzma_optimum_normal+0x330>
   12964:	41 89 94 86 90 05 01 	mov    %edx,0x10590(%r14,%rax,4)
   1296b:	00 
   1296c:	48 ff c0             	inc    %rax
   1296f:	41 8b 96 90 0e 01 00 	mov    0x10e90(%r14),%edx
   12976:	48 39 d0             	cmp    %rdx,%rax
   12979:	72 a5                	jb     12920 <lzma_lzma_optimum_normal+0x320>
   1297b:	83 fa 0f             	cmp    $0xf,%edx
   1297e:	72 3f                	jb     129bf <lzma_lzma_optimum_normal+0x3bf>
   12980:	b9 72 41 00 00       	mov    $0x4172,%ecx
   12985:	b8 70 00 00 00       	mov    $0x70,%eax
   1298a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12990:	89 c2                	mov    %eax,%edx
   12992:	83 e2 f0             	and    $0xfffffff0,%edx
   12995:	41 8b 34 8e          	mov    (%r14,%rcx,4),%esi
   12999:	01 f2                	add    %esi,%edx
   1299b:	83 c2 b0             	add    $0xffffffb0,%edx
   1299e:	41 89 14 8e          	mov    %edx,(%r14,%rcx,4)
   129a2:	41 8b 96 90 0e 01 00 	mov    0x10e90(%r14),%edx
   129a9:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   129ad:	48 81 c1 9d be ff ff 	add    $0xffffffffffffbe9d,%rcx
   129b4:	83 c0 08             	add    $0x8,%eax
   129b7:	48 39 d1             	cmp    %rdx,%rcx
   129ba:	48 89 f1             	mov    %rsi,%rcx
   129bd:	72 d1                	jb     12990 <lzma_lzma_optimum_normal+0x390>
   129bf:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   129c6:	00 
   129c7:	41 0f 10 86 90 05 01 	movups 0x10590(%r14),%xmm0
   129ce:	00 
   129cf:	41 0f 11 86 90 0c 01 	movups %xmm0,0x10c90(%r14)
   129d6:	00 
   129d7:	49 8d 86 fc 70 00 00 	lea    0x70fc(%r14),%rax
   129de:	be 04 00 00 00       	mov    $0x4,%esi
   129e3:	48 8d 3d b6 78 01 00 	lea    0x178b6(%rip),%rdi        # 2a2a0 <lzma_rc_prices>
   129ea:	eb 5d                	jmp    12a49 <lzma_lzma_optimum_normal+0x449>
   129ec:	0f 1f 40 00          	nopl   0x0(%rax)
   129f0:	43 8b 8c 86 90 02 01 	mov    0x10290(%r14,%r8,4),%ecx
   129f7:	00 
   129f8:	44 01 d9             	add    %r11d,%ecx
   129fb:	41 89 8c b6 90 06 01 	mov    %ecx,0x10690(%r14,%rsi,4)
   12a02:	00 
   12a03:	43 8b 8c 86 90 03 01 	mov    0x10390(%r14,%r8,4),%ecx
   12a0a:	00 
   12a0b:	44 01 d9             	add    %r11d,%ecx
   12a0e:	41 89 8c b6 90 08 01 	mov    %ecx,0x10890(%r14,%rsi,4)
   12a15:	00 
   12a16:	43 8b 8c 86 90 04 01 	mov    0x10490(%r14,%r8,4),%ecx
   12a1d:	00 
   12a1e:	44 01 d9             	add    %r11d,%ecx
   12a21:	41 89 8c b6 90 0a 01 	mov    %ecx,0x10a90(%r14,%rsi,4)
   12a28:	00 
   12a29:	47 03 9c 86 90 05 01 	add    0x10590(%r14,%r8,4),%r11d
   12a30:	00 
   12a31:	45 89 9c b6 90 0c 01 	mov    %r11d,0x10c90(%r14,%rsi,4)
   12a38:	00 
   12a39:	48 ff c6             	inc    %rsi
   12a3c:	48 81 fe 80 00 00 00 	cmp    $0x80,%rsi
   12a43:	0f 84 e5 00 00 00    	je     12b2e <lzma_lzma_optimum_normal+0x52e>
   12a49:	48 8d 0d b0 56 01 00 	lea    0x156b0(%rip),%rcx        # 28100 <lzma_fastpos>
   12a50:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
   12a55:	45 89 c3             	mov    %r8d,%r11d
   12a58:	41 d1 eb             	shr    %r11d
   12a5b:	41 8d 4b ff          	lea    -0x1(%r11),%ecx
   12a5f:	44 89 c3             	mov    %r8d,%ebx
   12a62:	83 e3 01             	and    $0x1,%ebx
   12a65:	83 cb 02             	or     $0x2,%ebx
   12a68:	d3 e3                	shl    %cl,%ebx
   12a6a:	4c 8d 0c 58          	lea    (%rax,%rbx,2),%r9
   12a6e:	47 8d 14 00          	lea    (%r8,%r8,1),%r10d
   12a72:	4d 29 d1             	sub    %r10,%r9
   12a75:	49 83 c1 fe          	add    $0xfffffffffffffffe,%r9
   12a79:	89 f2                	mov    %esi,%edx
   12a7b:	29 da                	sub    %ebx,%edx
   12a7d:	41 83 fb 02          	cmp    $0x2,%r11d
   12a81:	75 0d                	jne    12a90 <lzma_lzma_optimum_normal+0x490>
   12a83:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   12a89:	45 31 db             	xor    %r11d,%r11d
   12a8c:	eb 73                	jmp    12b01 <lzma_lzma_optimum_normal+0x501>
   12a8e:	66 90                	xchg   %ax,%ax
   12a90:	89 cb                	mov    %ecx,%ebx
   12a92:	83 e3 fe             	and    $0xfffffffe,%ebx
   12a95:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   12a9b:	45 31 db             	xor    %r11d,%r11d
   12a9e:	66 90                	xchg   %ax,%ax
   12aa0:	41 89 d5             	mov    %edx,%r13d
   12aa3:	41 83 e5 01          	and    $0x1,%r13d
   12aa7:	47 8d 64 7d 00       	lea    0x0(%r13,%r15,2),%r12d
   12aac:	41 f7 dd             	neg    %r13d
   12aaf:	41 89 d2             	mov    %edx,%r10d
   12ab2:	41 d1 ea             	shr    %r10d
   12ab5:	45 89 ff             	mov    %r15d,%r15d
   12ab8:	43 0f b7 2c 79       	movzwl (%r9,%r15,2),%ebp
   12abd:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   12ac4:	41 31 ed             	xor    %ebp,%r13d
   12ac7:	41 c1 ed 04          	shr    $0x4,%r13d
   12acb:	42 0f b6 2c 2f       	movzbl (%rdi,%r13,1),%ebp
   12ad0:	44 01 dd             	add    %r11d,%ebp
   12ad3:	41 83 e2 01          	and    $0x1,%r10d
   12ad7:	47 8d 3c 62          	lea    (%r10,%r12,2),%r15d
   12adb:	41 f7 da             	neg    %r10d
   12ade:	c1 ea 02             	shr    $0x2,%edx
   12ae1:	47 0f b7 1c 61       	movzwl (%r9,%r12,2),%r11d
   12ae6:	41 81 e2 f0 07 00 00 	and    $0x7f0,%r10d
   12aed:	45 31 da             	xor    %r11d,%r10d
   12af0:	41 c1 ea 04          	shr    $0x4,%r10d
   12af4:	46 0f b6 1c 17       	movzbl (%rdi,%r10,1),%r11d
   12af9:	41 01 eb             	add    %ebp,%r11d
   12afc:	83 c3 fe             	add    $0xfffffffe,%ebx
   12aff:	75 9f                	jne    12aa0 <lzma_lzma_optimum_normal+0x4a0>
   12b01:	f6 c1 01             	test   $0x1,%cl
   12b04:	0f 84 e6 fe ff ff    	je     129f0 <lzma_lzma_optimum_normal+0x3f0>
   12b0a:	83 e2 01             	and    $0x1,%edx
   12b0d:	f7 da                	neg    %edx
   12b0f:	44 89 f9             	mov    %r15d,%ecx
   12b12:	41 0f b7 0c 49       	movzwl (%r9,%rcx,2),%ecx
   12b17:	81 e2 f0 07 00 00    	and    $0x7f0,%edx
   12b1d:	31 ca                	xor    %ecx,%edx
   12b1f:	c1 ea 04             	shr    $0x4,%edx
   12b22:	0f b6 0c 17          	movzbl (%rdi,%rdx,1),%ecx
   12b26:	41 01 cb             	add    %ecx,%r11d
   12b29:	e9 c2 fe ff ff       	jmp    129f0 <lzma_lzma_optimum_normal+0x3f0>
   12b2e:	41 c7 86 94 0e 01 00 	movl   $0x0,0x10e94(%r14)
   12b35:	00 00 00 00 
   12b39:	4c 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%r10
   12b40:	00 
   12b41:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   12b48:	00 
   12b49:	4d 89 d7             	mov    %r10,%r15
   12b4c:	41 83 be d8 0e 01 00 	cmpl   $0x10,0x10ed8(%r14)
   12b53:	10 
   12b54:	0f 82 e2 00 00 00    	jb     12c3c <lzma_lzma_optimum_normal+0x63c>
   12b5a:	41 0f b7 86 e2 71 00 	movzwl 0x71e2(%r14),%eax
   12b61:	00 
   12b62:	31 c9                	xor    %ecx,%ecx
   12b64:	48 8d 15 35 77 01 00 	lea    0x17735(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   12b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12b70:	41 89 c8             	mov    %ecx,%r8d
   12b73:	41 83 e0 01          	and    $0x1,%r8d
   12b77:	89 cf                	mov    %ecx,%edi
   12b79:	d1 ef                	shr    %edi
   12b7b:	83 e7 01             	and    $0x1,%edi
   12b7e:	46 8d 0c 45 04 00 00 	lea    0x4(,%r8,2),%r9d
   12b85:	00 
   12b86:	42 8d 34 47          	lea    (%rdi,%r8,2),%esi
   12b8a:	83 c6 04             	add    $0x4,%esi
   12b8d:	41 f7 d8             	neg    %r8d
   12b90:	41 81 e0 f0 07 00 00 	and    $0x7f0,%r8d
   12b97:	41 31 c0             	xor    %eax,%r8d
   12b9a:	41 c1 e8 04          	shr    $0x4,%r8d
   12b9e:	46 0f b6 04 02       	movzbl (%rdx,%r8,1),%r8d
   12ba3:	f7 df                	neg    %edi
   12ba5:	41 89 ca             	mov    %ecx,%r10d
   12ba8:	41 c1 ea 02          	shr    $0x2,%r10d
   12bac:	47 0f b7 8c 0e e0 71 	movzwl 0x71e0(%r14,%r9,1),%r9d
   12bb3:	00 00 
   12bb5:	81 e7 f0 07 00 00    	and    $0x7f0,%edi
   12bbb:	44 31 cf             	xor    %r9d,%edi
   12bbe:	c1 ef 04             	shr    $0x4,%edi
   12bc1:	0f b6 3c 3a          	movzbl (%rdx,%rdi,1),%edi
   12bc5:	44 01 c7             	add    %r8d,%edi
   12bc8:	41 83 e2 01          	and    $0x1,%r10d
   12bcc:	45 8d 04 72          	lea    (%r10,%rsi,2),%r8d
   12bd0:	41 f7 da             	neg    %r10d
   12bd3:	01 f6                	add    %esi,%esi
   12bd5:	41 0f b7 b4 36 e0 71 	movzwl 0x71e0(%r14,%rsi,1),%esi
   12bdc:	00 00 
   12bde:	41 81 e2 f0 07 00 00 	and    $0x7f0,%r10d
   12be5:	41 31 f2             	xor    %esi,%r10d
   12be8:	41 c1 ea 04          	shr    $0x4,%r10d
   12bec:	42 0f b6 34 12       	movzbl (%rdx,%r10,1),%esi
   12bf1:	01 fe                	add    %edi,%esi
   12bf3:	43 0f b7 bc 46 e0 71 	movzwl 0x71e0(%r14,%r8,2),%edi
   12bfa:	00 00 
   12bfc:	41 89 c8             	mov    %ecx,%r8d
   12bff:	41 c1 e0 1c          	shl    $0x1c,%r8d
   12c03:	41 c1 f8 1f          	sar    $0x1f,%r8d
   12c07:	41 81 e0 f0 07 00 00 	and    $0x7f0,%r8d
   12c0e:	41 31 f8             	xor    %edi,%r8d
   12c11:	41 c1 e8 04          	shr    $0x4,%r8d
   12c15:	42 0f b6 3c 02       	movzbl (%rdx,%r8,1),%edi
   12c1a:	01 f7                	add    %esi,%edi
   12c1c:	41 89 bc 8e 98 0e 01 	mov    %edi,0x10e98(%r14,%rcx,4)
   12c23:	00 
   12c24:	48 ff c1             	inc    %rcx
   12c27:	48 83 f9 10          	cmp    $0x10,%rcx
   12c2b:	0f 85 3f ff ff ff    	jne    12b70 <lzma_lzma_optimum_normal+0x570>
   12c31:	41 c7 86 d8 0e 01 00 	movl   $0x0,0x10ed8(%r14)
   12c38:	00 00 00 00 
   12c3c:	4c 8b ac 24 e8 00 00 	mov    0xe8(%rsp),%r13
   12c43:	00 
   12c44:	41 8b 45 60          	mov    0x60(%r13),%eax
   12c48:	89 44 24 10          	mov    %eax,0x10(%rsp)
   12c4c:	49 8d 96 f4 02 00 00 	lea    0x2f4(%r14),%rdx
   12c53:	48 8d b4 24 b4 00 00 	lea    0xb4(%rsp),%rsi
   12c5a:	00 
   12c5b:	4c 89 ef             	mov    %r13,%rdi
   12c5e:	e8 3d 9a ff ff       	call   c6a0 <lzma_mf_find>
   12c63:	89 44 24 30          	mov    %eax,0x30(%rsp)
   12c67:	4d 89 fa             	mov    %r15,%r10
   12c6a:	4c 89 ee             	mov    %r13,%rsi
   12c6d:	8b 46 18             	mov    0x18(%rsi),%eax
   12c70:	8b 56 24             	mov    0x24(%rsi),%edx
   12c73:	29 c2                	sub    %eax,%edx
   12c75:	ff c2                	inc    %edx
   12c77:	b9 11 01 00 00       	mov    $0x111,%ecx
   12c7c:	81 fa 10 01 00 00    	cmp    $0x110,%edx
   12c82:	77 19                	ja     12c9d <lzma_lzma_optimum_normal+0x69d>
   12c84:	89 d1                	mov    %edx,%ecx
   12c86:	83 fa 01             	cmp    $0x1,%edx
   12c89:	77 12                	ja     12c9d <lzma_lzma_optimum_normal+0x69d>
   12c8b:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   12c91:	41 c7 02 01 00 00 00 	movl   $0x1,(%r10)
   12c98:	e9 f2 f9 ff ff       	jmp    1268f <lzma_lzma_optimum_normal+0x8f>
   12c9d:	48 8b 16             	mov    (%rsi),%rdx
   12ca0:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
   12ca4:	4c 8d 0c 02          	lea    (%rdx,%rax,1),%r9
   12ca8:	49 ff c9             	dec    %r9
   12cab:	44 0f b6 6c 02 ff    	movzbl -0x1(%rdx,%rax,1),%r13d
   12cb1:	41 8b ae e4 02 00 00 	mov    0x2e4(%r14),%ebp
   12cb8:	48 89 ef             	mov    %rbp,%rdi
   12cbb:	48 f7 d7             	not    %rdi
   12cbe:	42 0f b6 74 27 ff    	movzbl -0x1(%rdi,%r12,1),%esi
   12cc4:	31 ff                	xor    %edi,%edi
   12cc6:	89 74 24 18          	mov    %esi,0x18(%rsp)
   12cca:	41 38 f5             	cmp    %sil,%r13b
   12ccd:	75 58                	jne    12d27 <lzma_lzma_optimum_normal+0x727>
   12ccf:	48 89 ef             	mov    %rbp,%rdi
   12cd2:	48 f7 df             	neg    %rdi
   12cd5:	45 0f b6 04 24       	movzbl (%r12),%r8d
   12cda:	45 0f b6 54 3c ff    	movzbl -0x1(%r12,%rdi,1),%r10d
   12ce0:	31 ff                	xor    %edi,%edi
   12ce2:	45 38 d0             	cmp    %r10b,%r8b
   12ce5:	40 0f 94 c7          	sete   %dil
   12ce9:	01 ff                	add    %edi,%edi
   12ceb:	83 f9 03             	cmp    $0x3,%ecx
   12cee:	72 37                	jb     12d27 <lzma_lzma_optimum_normal+0x727>
   12cf0:	45 38 d0             	cmp    %r10b,%r8b
   12cf3:	75 32                	jne    12d27 <lzma_lzma_optimum_normal+0x727>
   12cf5:	41 89 c8             	mov    %ecx,%r8d
   12cf8:	49 89 c2             	mov    %rax,%r10
   12cfb:	49 29 ea             	sub    %rbp,%r10
   12cfe:	49 01 d2             	add    %rdx,%r10
   12d01:	bf 02 00 00 00       	mov    $0x2,%edi
   12d06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12d0d:	00 00 00 
   12d10:	45 0f b6 5c 3c ff    	movzbl -0x1(%r12,%rdi,1),%r11d
   12d16:	45 3a 5c 3a fe       	cmp    -0x2(%r10,%rdi,1),%r11b
   12d1b:	75 0a                	jne    12d27 <lzma_lzma_optimum_normal+0x727>
   12d1d:	48 ff c7             	inc    %rdi
   12d20:	49 39 f8             	cmp    %rdi,%r8
   12d23:	75 eb                	jne    12d10 <lzma_lzma_optimum_normal+0x710>
   12d25:	89 cf                	mov    %ecx,%edi
   12d27:	89 7c 24 60          	mov    %edi,0x60(%rsp)
   12d2b:	45 8b be e8 02 00 00 	mov    0x2e8(%r14),%r15d
   12d32:	4d 89 f8             	mov    %r15,%r8
   12d35:	49 f7 d0             	not    %r8
   12d38:	47 3a 2c 08          	cmp    (%r8,%r9,1),%r13b
   12d3c:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   12d41:	75 69                	jne    12dac <lzma_lzma_optimum_normal+0x7ac>
   12d43:	4d 89 f8             	mov    %r15,%r8
   12d46:	49 f7 d8             	neg    %r8
   12d49:	45 0f b6 14 24       	movzbl (%r12),%r10d
   12d4e:	47 3a 54 04 ff       	cmp    -0x1(%r12,%r8,1),%r10b
   12d53:	75 57                	jne    12dac <lzma_lzma_optimum_normal+0x7ac>
   12d55:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12d5b:	83 f9 03             	cmp    $0x3,%ecx
   12d5e:	72 3b                	jb     12d9b <lzma_lzma_optimum_normal+0x79b>
   12d60:	48 89 de             	mov    %rbx,%rsi
   12d63:	41 89 ca             	mov    %ecx,%r10d
   12d66:	49 89 c3             	mov    %rax,%r11
   12d69:	4d 29 fb             	sub    %r15,%r11
   12d6c:	49 01 d3             	add    %rdx,%r11
   12d6f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12d75:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   12d7c:	00 00 00 00 
   12d80:	43 0f b6 5c 04 ff    	movzbl -0x1(%r12,%r8,1),%ebx
   12d86:	43 3a 5c 03 fe       	cmp    -0x2(%r11,%r8,1),%bl
   12d8b:	75 0b                	jne    12d98 <lzma_lzma_optimum_normal+0x798>
   12d8d:	49 ff c0             	inc    %r8
   12d90:	4d 39 c2             	cmp    %r8,%r10
   12d93:	75 eb                	jne    12d80 <lzma_lzma_optimum_normal+0x780>
   12d95:	41 89 c8             	mov    %ecx,%r8d
   12d98:	48 89 f3             	mov    %rsi,%rbx
   12d9b:	44 89 44 24 64       	mov    %r8d,0x64(%rsp)
   12da0:	45 31 ff             	xor    %r15d,%r15d
   12da3:	41 39 f8             	cmp    %edi,%r8d
   12da6:	41 0f 97 c7          	seta   %r15b
   12daa:	eb 0e                	jmp    12dba <lzma_lzma_optimum_normal+0x7ba>
   12dac:	c7 44 24 64 00 00 00 	movl   $0x0,0x64(%rsp)
   12db3:	00 
   12db4:	45 31 c0             	xor    %r8d,%r8d
   12db7:	45 31 ff             	xor    %r15d,%r15d
   12dba:	41 8b b6 ec 02 00 00 	mov    0x2ec(%r14),%esi
   12dc1:	49 89 f2             	mov    %rsi,%r10
   12dc4:	49 f7 d2             	not    %r10
   12dc7:	47 3a 2c 0a          	cmp    (%r10,%r9,1),%r13b
   12dcb:	0f 85 7d 00 00 00    	jne    12e4e <lzma_lzma_optimum_normal+0x84e>
   12dd1:	49 89 f2             	mov    %rsi,%r10
   12dd4:	49 f7 da             	neg    %r10
   12dd7:	45 0f b6 1c 24       	movzbl (%r12),%r11d
   12ddc:	47 3a 5c 14 ff       	cmp    -0x1(%r12,%r10,1),%r11b
   12de1:	75 6b                	jne    12e4e <lzma_lzma_optimum_normal+0x84e>
   12de3:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   12de9:	83 f9 03             	cmp    $0x3,%ecx
   12dec:	72 47                	jb     12e35 <lzma_lzma_optimum_normal+0x835>
   12dee:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   12df3:	49 89 f2             	mov    %rsi,%r10
   12df6:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   12dfd:	00 
   12dfe:	89 cd                	mov    %ecx,%ebp
   12e00:	49 89 c3             	mov    %rax,%r11
   12e03:	49 29 f3             	sub    %rsi,%r11
   12e06:	49 01 d3             	add    %rdx,%r11
   12e09:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   12e0f:	90                   	nop
   12e10:	43 0f b6 5c 14 ff    	movzbl -0x1(%r12,%r10,1),%ebx
   12e16:	43 3a 5c 13 fe       	cmp    -0x2(%r11,%r10,1),%bl
   12e1b:	75 0b                	jne    12e28 <lzma_lzma_optimum_normal+0x828>
   12e1d:	49 ff c2             	inc    %r10
   12e20:	4c 39 d5             	cmp    %r10,%rbp
   12e23:	75 eb                	jne    12e10 <lzma_lzma_optimum_normal+0x810>
   12e25:	41 89 ca             	mov    %ecx,%r10d
   12e28:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
   12e2f:	00 
   12e30:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   12e35:	44 89 54 24 68       	mov    %r10d,0x68(%rsp)
   12e3a:	45 89 fb             	mov    %r15d,%r11d
   12e3d:	46 3b 54 9c 60       	cmp    0x60(%rsp,%r11,4),%r10d
   12e42:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   12e48:	45 0f 47 fb          	cmova  %r11d,%r15d
   12e4c:	eb 0b                	jmp    12e59 <lzma_lzma_optimum_normal+0x859>
   12e4e:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
   12e55:	00 
   12e56:	45 31 d2             	xor    %r10d,%r10d
   12e59:	45 8b 9e f0 02 00 00 	mov    0x2f0(%r14),%r11d
   12e60:	4c 89 9c 24 c8 00 00 	mov    %r11,0xc8(%rsp)
   12e67:	00 
   12e68:	49 f7 d3             	not    %r11
   12e6b:	47 3a 2c 0b          	cmp    (%r11,%r9,1),%r13b
   12e6f:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   12e74:	75 6a                	jne    12ee0 <lzma_lzma_optimum_normal+0x8e0>
   12e76:	4c 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%r9
   12e7d:	00 
   12e7e:	49 f7 d9             	neg    %r9
   12e81:	45 0f b6 1c 24       	movzbl (%r12),%r11d
   12e86:	47 3a 5c 0c ff       	cmp    -0x1(%r12,%r9,1),%r11b
   12e8b:	75 53                	jne    12ee0 <lzma_lzma_optimum_normal+0x8e0>
   12e8d:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   12e93:	83 f9 03             	cmp    $0x3,%ecx
   12e96:	72 30                	jb     12ec8 <lzma_lzma_optimum_normal+0x8c8>
   12e98:	41 89 cb             	mov    %ecx,%r11d
   12e9b:	48 2b 84 24 c8 00 00 	sub    0xc8(%rsp),%rax
   12ea2:	00 
   12ea3:	48 01 c2             	add    %rax,%rdx
   12ea6:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   12eac:	0f 1f 40 00          	nopl   0x0(%rax)
   12eb0:	43 0f b6 44 0c ff    	movzbl -0x1(%r12,%r9,1),%eax
   12eb6:	42 3a 44 0a fe       	cmp    -0x2(%rdx,%r9,1),%al
   12ebb:	75 0b                	jne    12ec8 <lzma_lzma_optimum_normal+0x8c8>
   12ebd:	49 ff c1             	inc    %r9
   12ec0:	4d 39 cb             	cmp    %r9,%r11
   12ec3:	75 eb                	jne    12eb0 <lzma_lzma_optimum_normal+0x8b0>
   12ec5:	41 89 c9             	mov    %ecx,%r9d
   12ec8:	44 89 4c 24 6c       	mov    %r9d,0x6c(%rsp)
   12ecd:	44 89 f8             	mov    %r15d,%eax
   12ed0:	44 3b 4c 84 60       	cmp    0x60(%rsp,%rax,4),%r9d
   12ed5:	b8 03 00 00 00       	mov    $0x3,%eax
   12eda:	44 0f 47 f8          	cmova  %eax,%r15d
   12ede:	eb 0b                	jmp    12eeb <lzma_lzma_optimum_normal+0x8eb>
   12ee0:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%rsp)
   12ee7:	00 
   12ee8:	45 31 c9             	xor    %r9d,%r9d
   12eeb:	44 89 f8             	mov    %r15d,%eax
   12eee:	8b 74 84 60          	mov    0x60(%rsp,%rax,4),%esi
   12ef2:	8b 44 24 10          	mov    0x10(%rsp),%eax
   12ef6:	39 c6                	cmp    %eax,%esi
   12ef8:	73 2b                	jae    12f25 <lzma_lzma_optimum_normal+0x925>
   12efa:	39 44 24 30          	cmp    %eax,0x30(%rsp)
   12efe:	73 54                	jae    12f54 <lzma_lzma_optimum_normal+0x954>
   12f00:	44 3a 6c 24 18       	cmp    0x18(%rsp),%r13b
   12f05:	0f 84 8f 00 00 00    	je     12f9a <lzma_lzma_optimum_normal+0x99a>
   12f0b:	89 f0                	mov    %esi,%eax
   12f0d:	0b 44 24 30          	or     0x30(%rsp),%eax
   12f11:	83 f8 01             	cmp    $0x1,%eax
   12f14:	0f 87 80 00 00 00    	ja     12f9a <lzma_lzma_optimum_normal+0x99a>
   12f1a:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   12f20:	e9 cb 02 00 00       	jmp    131f0 <lzma_lzma_optimum_normal+0xbf0>
   12f25:	44 89 3b             	mov    %r15d,(%rbx)
   12f28:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   12f2f:	00 
   12f30:	89 30                	mov    %esi,(%rax)
   12f32:	ff ce                	dec    %esi
   12f34:	0f 84 55 f7 ff ff    	je     1268f <lzma_lzma_optimum_normal+0x8f>
   12f3a:	48 8b 9c 24 e8 00 00 	mov    0xe8(%rsp),%rbx
   12f41:	00 
   12f42:	48 89 df             	mov    %rbx,%rdi
   12f45:	49 89 f6             	mov    %rsi,%r14
   12f48:	ff 53 38             	call   *0x38(%rbx)
   12f4b:	44 01 73 1c          	add    %r14d,0x1c(%rbx)
   12f4f:	e9 3b f7 ff ff       	jmp    1268f <lzma_lzma_optimum_normal+0x8f>
   12f54:	8b 84 24 b4 00 00 00 	mov    0xb4(%rsp),%eax
   12f5b:	ff c8                	dec    %eax
   12f5d:	41 8b 84 c6 f8 02 00 	mov    0x2f8(%r14,%rax,8),%eax
   12f64:	00 
   12f65:	83 c0 04             	add    $0x4,%eax
   12f68:	89 03                	mov    %eax,(%rbx)
   12f6a:	8b 74 24 30          	mov    0x30(%rsp),%esi
   12f6e:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   12f75:	00 
   12f76:	89 30                	mov    %esi,(%rax)
   12f78:	ff ce                	dec    %esi
   12f7a:	0f 84 0f f7 ff ff    	je     1268f <lzma_lzma_optimum_normal+0x8f>
   12f80:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
   12f87:	00 
   12f88:	4c 89 f7             	mov    %r14,%rdi
   12f8b:	89 f3                	mov    %esi,%ebx
   12f8d:	41 ff 56 38          	call   *0x38(%r14)
   12f91:	41 01 5e 1c          	add    %ebx,0x1c(%r14)
   12f95:	e9 f5 f6 ff ff       	jmp    1268f <lzma_lzma_optimum_normal+0x8f>
   12f9a:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   12f9f:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
   12fa6:	00 
   12fa7:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   12fac:	41 8b ae e0 02 00 00 	mov    0x2e0(%r14),%ebp
   12fb3:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   12fb8:	41 89 ae e4 0e 01 00 	mov    %ebp,0x10ee4(%r14)
   12fbf:	41 8b 9e 90 0b 00 00 	mov    0xb90(%r14),%ebx
   12fc6:	48 8b 8c 24 00 01 00 	mov    0x100(%rsp),%rcx
   12fcd:	00 
   12fce:	21 cb                	and    %ecx,%ebx
   12fd0:	48 c1 e5 05          	shl    $0x5,%rbp
   12fd4:	4c 01 f5             	add    %r14,%rbp
   12fd7:	0f b7 84 5d 9c 6b 00 	movzwl 0x6b9c(%rbp,%rbx,2),%eax
   12fde:	00 
   12fdf:	c1 e8 04             	shr    $0x4,%eax
   12fe2:	41 8b 96 98 0b 00 00 	mov    0xb98(%r14),%edx
   12fe9:	21 ca                	and    %ecx,%edx
   12feb:	41 0f b6 8e 94 0b 00 	movzbl 0xb94(%r14),%ecx
   12ff2:	00 
   12ff3:	d3 e2                	shl    %cl,%edx
   12ff5:	45 0f b6 5c 24 fe    	movzbl -0x2(%r12),%r11d
   12ffb:	40 b6 08             	mov    $0x8,%sil
   12ffe:	40 28 ce             	sub    %cl,%sil
   13001:	89 f1                	mov    %esi,%ecx
   13003:	41 d3 eb             	shr    %cl,%r11d
   13006:	41 01 d3             	add    %edx,%r11d
   13009:	4b 8d 0c 5b          	lea    (%r11,%r11,2),%rcx
   1300d:	48 c1 e1 09          	shl    $0x9,%rcx
   13011:	45 8d bd 00 01 00 00 	lea    0x100(%r13),%r15d
   13018:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   1301d:	48 89 ac 24 c0 00 00 	mov    %rbp,0xc0(%rsp)
   13024:	00 
   13025:	48 8d 14 5d 9c 6b 00 	lea    0x6b9c(,%rbx,2),%rdx
   1302c:	00 
   1302d:	48 01 ea             	add    %rbp,%rdx
   13030:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   13037:	00 
   13038:	48 8d 15 61 72 01 00 	lea    0x17261(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   1303f:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   13043:	89 44 24 44          	mov    %eax,0x44(%rsp)
   13047:	49 8d 34 0e          	lea    (%r14,%rcx,1),%rsi
   1304b:	48 81 c6 9c 0b 00 00 	add    $0xb9c,%rsi
   13052:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13057:	48 83 f8 06          	cmp    $0x6,%rax
   1305b:	76 71                	jbe    130ce <lzma_lzma_optimum_normal+0xace>
   1305d:	31 c0                	xor    %eax,%eax
   1305f:	b9 00 01 00 00       	mov    $0x100,%ecx
   13064:	8b 54 24 18          	mov    0x18(%rsp),%edx
   13068:	4c 8d 25 31 72 01 00 	lea    0x17231(%rip),%r12        # 2a2a0 <lzma_rc_prices>
   1306f:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   13074:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1307b:	00 00 00 00 00 
   13080:	01 d2                	add    %edx,%edx
   13082:	41 89 d3             	mov    %edx,%r11d
   13085:	41 21 cb             	and    %ecx,%r11d
   13088:	44 89 fb             	mov    %r15d,%ebx
   1308b:	c1 eb 08             	shr    $0x8,%ebx
   1308e:	01 cb                	add    %ecx,%ebx
   13090:	44 01 db             	add    %r11d,%ebx
   13093:	44 0f b7 1c 5e       	movzwl (%rsi,%rbx,2),%r11d
   13098:	41 0f be df          	movsbl %r15b,%ebx
   1309c:	c1 eb 07             	shr    $0x7,%ebx
   1309f:	81 e3 f0 07 00 00    	and    $0x7f0,%ebx
   130a5:	44 31 db             	xor    %r11d,%ebx
   130a8:	c1 eb 04             	shr    $0x4,%ebx
   130ab:	45 0f b6 1c 1c       	movzbl (%r12,%rbx,1),%r11d
   130b0:	44 01 d8             	add    %r11d,%eax
   130b3:	47 8d 1c 3f          	lea    (%r15,%r15,1),%r11d
   130b7:	44 89 db             	mov    %r11d,%ebx
   130ba:	31 d3                	xor    %edx,%ebx
   130bc:	f7 d3                	not    %ebx
   130be:	21 d9                	and    %ebx,%ecx
   130c0:	41 81 ff 00 80 00 00 	cmp    $0x8000,%r15d
   130c7:	45 89 df             	mov    %r11d,%r15d
   130ca:	72 b4                	jb     13080 <lzma_lzma_optimum_normal+0xa80>
   130cc:	eb 40                	jmp    1310e <lzma_lzma_optimum_normal+0xb0e>
   130ce:	31 c0                	xor    %eax,%eax
   130d0:	44 89 f9             	mov    %r15d,%ecx
   130d3:	4c 8d 25 c6 71 01 00 	lea    0x171c6(%rip),%r12        # 2a2a0 <lzma_rc_prices>
   130da:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   130df:	90                   	nop
   130e0:	44 89 fa             	mov    %r15d,%edx
   130e3:	83 e2 01             	and    $0x1,%edx
   130e6:	f7 da                	neg    %edx
   130e8:	d1 e9                	shr    %ecx
   130ea:	41 83 e7 fe          	and    $0xfffffffe,%r15d
   130ee:	46 0f b7 1c 3e       	movzwl (%rsi,%r15,1),%r11d
   130f3:	81 e2 f0 07 00 00    	and    $0x7f0,%edx
   130f9:	44 31 da             	xor    %r11d,%edx
   130fc:	c1 ea 04             	shr    $0x4,%edx
   130ff:	41 0f b6 14 14       	movzbl (%r12,%rdx,1),%edx
   13104:	01 d0                	add    %edx,%eax
   13106:	41 89 cf             	mov    %ecx,%r15d
   13109:	83 f9 01             	cmp    $0x1,%ecx
   1310c:	75 d2                	jne    130e0 <lzma_lzma_optimum_normal+0xae0>
   1310e:	03 44 24 44          	add    0x44(%rsp),%eax
   13112:	41 89 86 20 0f 01 00 	mov    %eax,0x10f20(%r14)
   13119:	41 c7 86 28 0f 01 00 	movl   $0xffffffff,0x10f28(%r14)
   13120:	ff ff ff ff 
   13124:	41 c6 86 14 0f 01 00 	movb   $0x0,0x10f14(%r14)
   1312b:	00 
   1312c:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   13133:	00 
   13134:	0f b7 09             	movzwl (%rcx),%ecx
   13137:	c1 e9 04             	shr    $0x4,%ecx
   1313a:	48 83 f1 7f          	xor    $0x7f,%rcx
   1313e:	41 0f b6 0c 0c       	movzbl (%r12,%rcx,1),%ecx
   13143:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   13148:	43 0f b7 94 5e 1c 6d 	movzwl 0x6d1c(%r14,%r11,2),%edx
   1314f:	00 00 
   13151:	c1 ea 04             	shr    $0x4,%edx
   13154:	48 83 f2 7f          	xor    $0x7f,%rdx
   13158:	41 0f b6 34 14       	movzbl (%r12,%rdx,1),%esi
   1315d:	01 ce                	add    %ecx,%esi
   1315f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   13164:	44 3a 6c 24 18       	cmp    0x18(%rsp),%r13b
   13169:	74 0c                	je     13177 <lzma_lzma_optimum_normal+0xb77>
   1316b:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   13170:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   13175:	eb 5c                	jmp    131d3 <lzma_lzma_optimum_normal+0xbd3>
   13177:	47 0f b7 9c 5e 34 6d 	movzwl 0x6d34(%r14,%r11,2),%r11d
   1317e:	00 00 
   13180:	41 c1 eb 04          	shr    $0x4,%r11d
   13184:	47 0f b6 1c 1c       	movzbl (%r12,%r11,1),%r11d
   13189:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
   1318e:	48 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%rbx
   13195:	00 
   13196:	42 0f b7 9c 6b 7c 6d 	movzwl 0x6d7c(%rbx,%r13,2),%ebx
   1319d:	00 00 
   1319f:	c1 eb 04             	shr    $0x4,%ebx
   131a2:	41 0f b6 1c 1c       	movzbl (%r12,%rbx,1),%ebx
   131a7:	41 01 f3             	add    %esi,%r11d
   131aa:	41 01 db             	add    %ebx,%r11d
   131ad:	41 39 c3             	cmp    %eax,%r11d
   131b0:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   131b5:	73 1c                	jae    131d3 <lzma_lzma_optimum_normal+0xbd3>
   131b7:	45 89 9e 20 0f 01 00 	mov    %r11d,0x10f20(%r14)
   131be:	41 c7 86 28 0f 01 00 	movl   $0x0,0x10f28(%r14)
   131c5:	00 00 00 00 
   131c9:	41 c6 86 14 0f 01 00 	movb   $0x0,0x10f14(%r14)
   131d0:	00 
   131d1:	31 d2                	xor    %edx,%edx
   131d3:	8b 44 24 30          	mov    0x30(%rsp),%eax
   131d7:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   131dc:	39 d8                	cmp    %ebx,%eax
   131de:	0f 47 d8             	cmova  %eax,%ebx
   131e1:	83 fb 01             	cmp    $0x1,%ebx
   131e4:	77 1d                	ja     13203 <lzma_lzma_optimum_normal+0xc03>
   131e6:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   131ed:	00 
   131ee:	89 10                	mov    %edx,(%rax)
   131f0:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   131f7:	00 
   131f8:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   131fe:	e9 8c f4 ff ff       	jmp    1268f <lzma_lzma_optimum_normal+0x8f>
   13203:	41 c7 86 24 0f 01 00 	movl   $0x0,0x10f24(%r14)
   1320a:	00 00 00 00 
   1320e:	41 89 ae 00 0f 01 00 	mov    %ebp,0x10f00(%r14)
   13215:	45 89 be 04 0f 01 00 	mov    %r15d,0x10f04(%r14)
   1321c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13221:	41 89 86 08 0f 01 00 	mov    %eax,0x10f08(%r14)
   13228:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1322f:	00 
   13230:	41 89 86 0c 0f 01 00 	mov    %eax,0x10f0c(%r14)
   13237:	89 d8                	mov    %ebx,%eax
   13239:	44 8d 5b ff          	lea    -0x1(%rbx),%r11d
   1323d:	8d 53 fe             	lea    -0x2(%rbx),%edx
   13240:	41 f6 c3 03          	test   $0x3,%r11b
   13244:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   13249:	74 40                	je     1328b <lzma_lzma_optimum_normal+0xc8b>
   1324b:	4c 6b d8 2c          	imul   $0x2c,%rax,%r11
   1324f:	4d 01 f3             	add    %r14,%r11
   13252:	49 81 c3 f4 0e 01 00 	add    $0x10ef4,%r11
   13259:	ff cb                	dec    %ebx
   1325b:	0f b6 db             	movzbl %bl,%ebx
   1325e:	83 e3 03             	and    $0x3,%ebx
   13261:	45 31 ff             	xor    %r15d,%r15d
   13264:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1326b:	00 00 00 00 00 
   13270:	41 c7 03 00 00 00 40 	movl   $0x40000000,(%r11)
   13277:	49 ff c7             	inc    %r15
   1327a:	49 83 c3 d4          	add    $0xffffffffffffffd4,%r11
   1327e:	44 39 fb             	cmp    %r15d,%ebx
   13281:	75 ed                	jne    13270 <lzma_lzma_optimum_normal+0xc70>
   13283:	4c 29 f8             	sub    %r15,%rax
   13286:	41 89 c3             	mov    %eax,%r11d
   13289:	eb 03                	jmp    1328e <lzma_lzma_optimum_normal+0xc8e>
   1328b:	41 89 db             	mov    %ebx,%r11d
   1328e:	83 fa 03             	cmp    $0x3,%edx
   13291:	72 3b                	jb     132ce <lzma_lzma_optimum_normal+0xcce>
   13293:	48 6b c0 2c          	imul   $0x2c,%rax,%rax
   13297:	4c 01 f0             	add    %r14,%rax
   1329a:	48 05 f4 0e 01 00    	add    $0x10ef4,%rax
   132a0:	c7 00 00 00 00 40    	movl   $0x40000000,(%rax)
   132a6:	c7 40 d4 00 00 00 40 	movl   $0x40000000,-0x2c(%rax)
   132ad:	c7 40 a8 00 00 00 40 	movl   $0x40000000,-0x58(%rax)
   132b4:	c7 80 7c ff ff ff 00 	movl   $0x40000000,-0x84(%rax)
   132bb:	00 00 40 
   132be:	41 83 c3 fc          	add    $0xfffffffc,%r11d
   132c2:	48 05 50 ff ff ff    	add    $0xffffffffffffff50,%rax
   132c8:	41 83 fb 01          	cmp    $0x1,%r11d
   132cc:	77 d2                	ja     132a0 <lzma_lzma_optimum_normal+0xca0>
   132ce:	83 ff 02             	cmp    $0x2,%edi
   132d1:	0f 83 d0 18 00 00    	jae    14ba7 <lzma_lzma_optimum_normal+0x25a7>
   132d7:	41 83 f8 02          	cmp    $0x2,%r8d
   132db:	0f 83 67 19 00 00    	jae    14c48 <lzma_lzma_optimum_normal+0x2648>
   132e1:	41 83 fa 02          	cmp    $0x2,%r10d
   132e5:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   132ea:	0f 83 f5 19 00 00    	jae    14ce5 <lzma_lzma_optimum_normal+0x26e5>
   132f0:	41 83 f9 02          	cmp    $0x2,%r9d
   132f4:	0f 83 9b 1a 00 00    	jae    14d95 <lzma_lzma_optimum_normal+0x2795>
   132fa:	8d 47 01             	lea    0x1(%rdi),%eax
   132fd:	83 ff 02             	cmp    $0x2,%edi
   13300:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   13306:	44 0f 43 d8          	cmovae %eax,%r11d
   1330a:	44 3b 5c 24 30       	cmp    0x30(%rsp),%r11d
   1330f:	0f 87 6e 01 00 00    	ja     13483 <lzma_lzma_optimum_normal+0xe83>
   13315:	43 0f b7 84 7e 1c 6d 	movzwl 0x6d1c(%r14,%r15,2),%eax
   1331c:	00 00 
   1331e:	c1 e8 04             	shr    $0x4,%eax
   13321:	48 8d 15 78 6f 01 00 	lea    0x16f78(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   13328:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   1332c:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   13332:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   13339:	1f 84 00 00 00 00 00 
   13340:	41 ff c4             	inc    %r12d
   13343:	47 3b 9c e6 f4 02 00 	cmp    0x2f4(%r14,%r12,8),%r11d
   1334a:	00 
   1334b:	77 f3                	ja     13340 <lzma_lzma_optimum_normal+0xd40>
   1334d:	01 c8                	add    %ecx,%eax
   1334f:	8b 94 24 b4 00 00 00 	mov    0xb4(%rsp),%edx
   13356:	49 69 f5 40 04 00 00 	imul   $0x440,%r13,%rsi
   1335d:	4c 01 f6             	add    %r14,%rsi
   13360:	41 b9 06 00 00 00    	mov    $0x6,%r9d
   13366:	41 ba 0c 00 00 00    	mov    $0xc,%r10d
   1336c:	48 8d 1d 8d 4d 01 00 	lea    0x14d8d(%rip),%rbx        # 28100 <lzma_fastpos>
   13373:	eb 16                	jmp    1338b <lzma_lzma_optimum_normal+0xd8b>
   13375:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1337c:	00 00 00 00 
   13380:	39 cd                	cmp    %ecx,%ebp
   13382:	45 0f 45 e7          	cmovne %r15d,%r12d
   13386:	ff c5                	inc    %ebp
   13388:	41 89 eb             	mov    %ebp,%r11d
   1338b:	45 89 e7             	mov    %r12d,%r15d
   1338e:	47 8b 84 fe f8 02 00 	mov    0x2f8(%r14,%r15,8),%r8d
   13395:	00 
   13396:	41 8d 6b fe          	lea    -0x2(%r11),%ebp
   1339a:	41 83 fb 06          	cmp    $0x6,%r11d
   1339e:	b9 03 00 00 00       	mov    $0x3,%ecx
   133a3:	0f 42 cd             	cmovb  %ebp,%ecx
   133a6:	41 89 cd             	mov    %ecx,%r13d
   133a9:	49 83 f8 7f          	cmp    $0x7f,%r8
   133ad:	77 11                	ja     133c0 <lzma_lzma_optimum_normal+0xdc0>
   133af:	49 c1 e5 09          	shl    $0x9,%r13
   133b3:	4d 01 f5             	add    %r14,%r13
   133b6:	43 8b 8c 85 90 06 01 	mov    0x10690(%r13,%r8,4),%ecx
   133bd:	00 
   133be:	eb 59                	jmp    13419 <lzma_lzma_optimum_normal+0xe19>
   133c0:	45 85 c0             	test   %r8d,%r8d
   133c3:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   133c8:	bf 12 00 00 00       	mov    $0x12,%edi
   133cd:	0f 49 cf             	cmovns %edi,%ecx
   133d0:	bf 3c 00 00 00       	mov    $0x3c,%edi
   133d5:	41 bc 24 00 00 00    	mov    $0x24,%r12d
   133db:	41 0f 49 fc          	cmovns %r12d,%edi
   133df:	41 81 f8 00 00 08 00 	cmp    $0x80000,%r8d
   133e6:	41 0f 42 c9          	cmovb  %r9d,%ecx
   133ea:	41 0f 42 fa          	cmovb  %r10d,%edi
   133ee:	4d 89 c4             	mov    %r8,%r12
   133f1:	49 d3 ec             	shr    %cl,%r12
   133f4:	46 0f b6 24 23       	movzbl (%rbx,%r12,1),%r12d
   133f9:	41 01 fc             	add    %edi,%r12d
   133fc:	49 c1 e5 08          	shl    $0x8,%r13
   13400:	4d 01 f5             	add    %r14,%r13
   13403:	44 89 c1             	mov    %r8d,%ecx
   13406:	83 e1 0f             	and    $0xf,%ecx
   13409:	41 8b 8c 8e 98 0e 01 	mov    0x10e98(%r14,%rcx,4),%ecx
   13410:	00 
   13411:	43 03 8c a5 90 02 01 	add    0x10290(%r13,%r12,4),%ecx
   13418:	00 
   13419:	01 c1                	add    %eax,%ecx
   1341b:	89 ef                	mov    %ebp,%edi
   1341d:	03 8c be 04 76 00 00 	add    0x7604(%rsi,%rdi,4),%ecx
   13424:	44 89 df             	mov    %r11d,%edi
   13427:	4c 6b df 2c          	imul   $0x2c,%rdi,%r11
   1342b:	43 3b 8c 1e f4 0e 01 	cmp    0x10ef4(%r14,%r11,1),%ecx
   13432:	00 
   13433:	73 2e                	jae    13463 <lzma_lzma_optimum_normal+0xe63>
   13435:	4b 8d 3c 1e          	lea    (%r14,%r11,1),%rdi
   13439:	48 81 c7 f4 0e 01 00 	add    $0x10ef4,%rdi
   13440:	89 0f                	mov    %ecx,(%rdi)
   13442:	43 c7 84 1e f8 0e 01 	movl   $0x0,0x10ef8(%r14,%r11,1)
   13449:	00 00 00 00 00 
   1344e:	41 8d 48 04          	lea    0x4(%r8),%ecx
   13452:	43 89 8c 1e fc 0e 01 	mov    %ecx,0x10efc(%r14,%r11,1)
   13459:	00 
   1345a:	43 c6 84 1e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%r11,1)
   13461:	00 00 
   13463:	43 8b 8c fe f4 02 00 	mov    0x2f4(%r14,%r15,8),%ecx
   1346a:	00 
   1346b:	83 c5 02             	add    $0x2,%ebp
   1346e:	45 8d 67 01          	lea    0x1(%r15),%r12d
   13472:	39 cd                	cmp    %ecx,%ebp
   13474:	0f 85 06 ff ff ff    	jne    13380 <lzma_lzma_optimum_normal+0xd80>
   1347a:	41 39 d4             	cmp    %edx,%r12d
   1347d:	0f 85 fd fe ff ff    	jne    13380 <lzma_lzma_optimum_normal+0xd80>
   13483:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   13488:	83 f9 ff             	cmp    $0xffffffff,%ecx
   1348b:	0f 84 fe f1 ff ff    	je     1268f <lzma_lzma_optimum_normal+0x8f>
   13491:	49 8d 86 e4 02 00 00 	lea    0x2e4(%r14),%rax
   13498:	49 8d 96 00 0f 01 00 	lea    0x10f00(%r14),%rdx
   1349f:	48 89 94 24 30 01 00 	mov    %rdx,0x130(%rsp)
   134a6:	00 
   134a7:	0f 10 00             	movups (%rax),%xmm0
   134aa:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   134af:	49 8d 86 84 0b 00 00 	lea    0xb84(%r14),%rax
   134b6:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   134bd:	00 
   134be:	49 8d 86 f4 02 00 00 	lea    0x2f4(%r14),%rax
   134c5:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   134cc:	00 
   134cd:	49 8d 86 10 0f 01 00 	lea    0x10f10(%r14),%rax
   134d4:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   134db:	00 
   134dc:	49 8d 86 20 0f 01 00 	lea    0x10f20(%r14),%rax
   134e3:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   134ea:	00 
   134eb:	49 8d 86 a4 0f 01 00 	lea    0x10fa4(%r14),%rax
   134f2:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   134f9:	00 
   134fa:	49 8d 86 4c be 00 00 	lea    0xbe4c(%r14),%rax
   13501:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   13508:	00 
   13509:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   13510:	00 
   13511:	ff c0                	inc    %eax
   13513:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1351a:	00 
   1351b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   13521:	b8 fe 0f 00 00       	mov    $0xffe,%eax
   13526:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1352b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13531:	31 c0                	xor    %eax,%eax
   13533:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1353a:	00 
   1353b:	eb 4e                	jmp    1358b <lzma_lzma_optimum_normal+0xf8b>
   1353d:	0f 1f 00             	nopl   (%rax)
   13540:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   13545:	89 c8                	mov    %ecx,%eax
   13547:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   1354c:	ff ca                	dec    %edx
   1354e:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
   13553:	41 ff c5             	inc    %r13d
   13556:	48 8b 94 24 08 01 00 	mov    0x108(%rsp),%rdx
   1355d:	00 
   1355e:	ff c2                	inc    %edx
   13560:	48 89 94 24 08 01 00 	mov    %rdx,0x108(%rsp)
   13567:	00 
   13568:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   1356f:	00 
   13570:	ff c2                	inc    %edx
   13572:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
   13579:	00 
   1357a:	4c 8b a4 24 38 01 00 	mov    0x138(%rsp),%r12
   13581:	00 
   13582:	49 39 c4             	cmp    %rax,%r12
   13585:	0f 83 c9 18 00 00    	jae    14e54 <lzma_lzma_optimum_normal+0x2854>
   1358b:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   13590:	48 8b 9c 24 e8 00 00 	mov    0xe8(%rsp),%rbx
   13597:	00 
   13598:	48 89 df             	mov    %rbx,%rdi
   1359b:	48 8b b4 24 60 01 00 	mov    0x160(%rsp),%rsi
   135a2:	00 
   135a3:	48 8b 94 24 58 01 00 	mov    0x158(%rsp),%rdx
   135aa:	00 
   135ab:	e8 f0 90 ff ff       	call   c6a0 <lzma_mf_find>
   135b0:	89 c2                	mov    %eax,%edx
   135b2:	41 89 86 88 0b 00 00 	mov    %eax,0xb88(%r14)
   135b9:	8b 4b 60             	mov    0x60(%rbx),%ecx
   135bc:	48 89 c8             	mov    %rcx,%rax
   135bf:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   135c4:	48 89 94 24 f0 00 00 	mov    %rdx,0xf0(%rsp)
   135cb:	00 
   135cc:	39 ca                	cmp    %ecx,%edx
   135ce:	0f 83 80 18 00 00    	jae    14e54 <lzma_lzma_optimum_normal+0x2854>
   135d4:	4c 8b 0b             	mov    (%rbx),%r9
   135d7:	44 8b 53 18          	mov    0x18(%rbx),%r10d
   135db:	8b 4b 24             	mov    0x24(%rbx),%ecx
   135de:	44 29 d1             	sub    %r10d,%ecx
   135e1:	ff c1                	inc    %ecx
   135e3:	b8 ff 0f 00 00       	mov    $0xfff,%eax
   135e8:	44 29 e0             	sub    %r12d,%eax
   135eb:	39 c1                	cmp    %eax,%ecx
   135ed:	89 8c 24 84 00 00 00 	mov    %ecx,0x84(%rsp)
   135f4:	0f 42 c1             	cmovb  %ecx,%eax
   135f7:	89 84 24 a8 00 00 00 	mov    %eax,0xa8(%rsp)
   135fe:	41 8b 86 84 0b 00 00 	mov    0xb84(%r14),%eax
   13605:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
   1360c:	4d 6b fc 2c          	imul   $0x2c,%r12,%r15
   13610:	43 8b 8c 3e f8 0e 01 	mov    0x10ef8(%r14,%r15,1),%ecx
   13617:	00 
   13618:	43 80 bc 3e e8 0e 01 	cmpb   $0x0,0x10ee8(%r14,%r15,1)
   1361f:	00 00 
   13621:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   13626:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1362b:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   13630:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   13635:	74 62                	je     13699 <lzma_lzma_optimum_normal+0x1099>
   13637:	43 80 bc 3e e9 0e 01 	cmpb   $0x0,0x10ee9(%r14,%r15,1)
   1363e:	00 00 
   13640:	0f 84 97 00 00 00    	je     136dd <lzma_lzma_optimum_normal+0x10dd>
   13646:	43 8b 84 3e ec 0e 01 	mov    0x10eec(%r14,%r15,1),%eax
   1364d:	00 
   1364e:	48 6b d0 2c          	imul   $0x2c,%rax,%rdx
   13652:	31 f6                	xor    %esi,%esi
   13654:	31 ff                	xor    %edi,%edi
   13656:	41 83 bc 16 e4 0e 01 	cmpl   $0x7,0x10ee4(%r14,%rdx,1)
   1365d:	00 07 
   1365f:	4d 89 e0             	mov    %r12,%r8
   13662:	47 8b a4 3e f0 0e 01 	mov    0x10ef0(%r14,%r15,1),%r12d
   13669:	00 
   1366a:	40 0f 92 c6          	setb   %sil
   1366e:	40 0f 93 c7          	setae  %dil
   13672:	41 83 fc 04          	cmp    $0x4,%r12d
   13676:	8d 54 7f 08          	lea    0x8(%rdi,%rdi,2),%edx
   1367a:	8d 7c 7f 07          	lea    0x7(%rdi,%rdi,2),%edi
   1367e:	0f 42 fa             	cmovb  %edx,%edi
   13681:	8d 14 76             	lea    (%rsi,%rsi,2),%edx
   13684:	01 fa                	add    %edi,%edx
   13686:	83 c2 fa             	add    $0xfffffffa,%edx
   13689:	49 39 c8             	cmp    %rcx,%r8
   1368c:	0f 85 a1 00 00 00    	jne    13733 <lzma_lzma_optimum_normal+0x1133>
   13692:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13697:	eb 16                	jmp    136af <lzma_lzma_optimum_normal+0x10af>
   13699:	48 6b c1 2c          	imul   $0x2c,%rcx,%rax
   1369d:	41 8b 94 06 e4 0e 01 	mov    0x10ee4(%r14,%rax,1),%edx
   136a4:	00 
   136a5:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   136aa:	48 39 c8             	cmp    %rcx,%rax
   136ad:	75 60                	jne    1370f <lzma_lzma_optimum_normal+0x110f>
   136af:	43 83 bc 3e fc 0e 01 	cmpl   $0x0,0x10efc(%r14,%r15,1)
   136b6:	00 00 
   136b8:	0f 84 e5 00 00 00    	je     137a3 <lzma_lzma_optimum_normal+0x11a3>
   136be:	31 c0                	xor    %eax,%eax
   136c0:	83 fa 0a             	cmp    $0xa,%edx
   136c3:	0f 92 c0             	setb   %al
   136c6:	83 fa 04             	cmp    $0x4,%edx
   136c9:	8d 04 40             	lea    (%rax,%rax,2),%eax
   136cc:	8d 5c 02 fa          	lea    -0x6(%rdx,%rax,1),%ebx
   136d0:	b8 00 00 00 00       	mov    $0x0,%eax
   136d5:	0f 42 d8             	cmovb  %eax,%ebx
   136d8:	e9 63 01 00 00       	jmp    13840 <lzma_lzma_optimum_normal+0x1240>
   136dd:	89 c8                	mov    %ecx,%eax
   136df:	ff c8                	dec    %eax
   136e1:	48 6b d0 2c          	imul   $0x2c,%rax,%rdx
   136e5:	41 8b 94 16 e4 0e 01 	mov    0x10ee4(%r14,%rdx,1),%edx
   136ec:	00 
   136ed:	31 f6                	xor    %esi,%esi
   136ef:	83 fa 0a             	cmp    $0xa,%edx
   136f2:	40 0f 92 c6          	setb   %sil
   136f6:	83 fa 04             	cmp    $0x4,%edx
   136f9:	8d 34 76             	lea    (%rsi,%rsi,2),%esi
   136fc:	8d 54 32 fa          	lea    -0x6(%rdx,%rsi,1),%edx
   13700:	be 00 00 00 00       	mov    $0x0,%esi
   13705:	0f 42 d6             	cmovb  %esi,%edx
   13708:	49 39 cc             	cmp    %rcx,%r12
   1370b:	89 c1                	mov    %eax,%ecx
   1370d:	74 a0                	je     136af <lzma_lzma_optimum_normal+0x10af>
   1370f:	47 8b a4 3e fc 0e 01 	mov    0x10efc(%r14,%r15,1),%r12d
   13716:	00 
   13717:	89 c8                	mov    %ecx,%eax
   13719:	31 c9                	xor    %ecx,%ecx
   1371b:	41 83 fc 03          	cmp    $0x3,%r12d
   1371f:	0f 87 92 00 00 00    	ja     137b7 <lzma_lzma_optimum_normal+0x11b7>
   13725:	83 fa 07             	cmp    $0x7,%edx
   13728:	0f 93 c1             	setae  %cl
   1372b:	8d 1c 49             	lea    (%rcx,%rcx,2),%ebx
   1372e:	83 c3 08             	add    $0x8,%ebx
   13731:	eb 14                	jmp    13747 <lzma_lzma_optimum_normal+0x1147>
   13733:	31 c9                	xor    %ecx,%ecx
   13735:	83 fa 07             	cmp    $0x7,%edx
   13738:	0f 93 c1             	setae  %cl
   1373b:	8d 1c 49             	lea    (%rcx,%rcx,2),%ebx
   1373e:	83 c3 08             	add    $0x8,%ebx
   13741:	41 83 fc 03          	cmp    $0x3,%r12d
   13745:	77 7c                	ja     137c3 <lzma_lzma_optimum_normal+0x11c3>
   13747:	44 89 e1             	mov    %r12d,%ecx
   1374a:	48 6b e8 2c          	imul   $0x2c,%rax,%rbp
   1374e:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   13752:	8b 84 88 00 0f 01 00 	mov    0x10f00(%rax,%rcx,4),%eax
   13759:	89 44 24 60          	mov    %eax,0x60(%rsp)
   1375d:	45 85 e4             	test   %r12d,%r12d
   13760:	0f 84 8a 00 00 00    	je     137f0 <lzma_lzma_optimum_normal+0x11f0>
   13766:	45 8d 6c 24 01       	lea    0x1(%r12),%r13d
   1376b:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   13772:	00 
   13773:	48 8d 34 28          	lea    (%rax,%rbp,1),%rsi
   13777:	4a 8d 14 ad fc ff ff 	lea    -0x4(,%r13,4),%rdx
   1377e:	ff 
   1377f:	48 8d 7c 24 64       	lea    0x64(%rsp),%rdi
   13784:	e8 c7 e9 fe ff       	call   2150 <memcpy@plt>
   13789:	41 83 fc 02          	cmp    $0x2,%r12d
   1378d:	76 67                	jbe    137f6 <lzma_lzma_optimum_normal+0x11f6>
   1378f:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13794:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   13799:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1379e:	e9 9d 00 00 00       	jmp    13840 <lzma_lzma_optimum_normal+0x1240>
   137a3:	31 c0                	xor    %eax,%eax
   137a5:	83 fa 07             	cmp    $0x7,%edx
   137a8:	0f 93 c0             	setae  %al
   137ab:	8d 1c 45 09 00 00 00 	lea    0x9(,%rax,2),%ebx
   137b2:	e9 89 00 00 00       	jmp    13840 <lzma_lzma_optimum_normal+0x1240>
   137b7:	83 fa 07             	cmp    $0x7,%edx
   137ba:	0f 93 c1             	setae  %cl
   137bd:	8d 1c 49             	lea    (%rcx,%rcx,2),%ebx
   137c0:	83 c3 07             	add    $0x7,%ebx
   137c3:	41 83 c4 fc          	add    $0xfffffffc,%r12d
   137c7:	44 89 64 24 60       	mov    %r12d,0x60(%rsp)
   137cc:	48 6b c0 2c          	imul   $0x2c,%rax,%rax
   137d0:	49 8b 8c 06 00 0f 01 	mov    0x10f00(%r14,%rax,1),%rcx
   137d7:	00 
   137d8:	48 89 4c 24 64       	mov    %rcx,0x64(%rsp)
   137dd:	41 8b 84 06 08 0f 01 	mov    0x10f08(%r14,%rax,1),%eax
   137e4:	00 
   137e5:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
   137e9:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   137ee:	eb 50                	jmp    13840 <lzma_lzma_optimum_normal+0x1240>
   137f0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   137f6:	44 89 ea             	mov    %r13d,%edx
   137f9:	41 8d 74 24 02       	lea    0x2(%r12),%esi
   137fe:	b9 05 00 00 00       	mov    $0x5,%ecx
   13803:	48 29 f1             	sub    %rsi,%rcx
   13806:	48 83 f9 0c          	cmp    $0xc,%rcx
   1380a:	0f 83 fd 03 00 00    	jae    13c0d <lzma_lzma_optimum_normal+0x160d>
   13810:	48 89 d0             	mov    %rdx,%rax
   13813:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13818:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1381d:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   13822:	48 03 ac 24 30 01 00 	add    0x130(%rsp),%rbp
   13829:	00 
   1382a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13830:	8b 4c 85 00          	mov    0x0(%rbp,%rax,4),%ecx
   13834:	89 4c 84 60          	mov    %ecx,0x60(%rsp,%rax,4)
   13838:	48 ff c0             	inc    %rax
   1383b:	83 f8 04             	cmp    $0x4,%eax
   1383e:	75 f0                	jne    13830 <lzma_lzma_optimum_normal+0x1230>
   13840:	4f 8d 04 11          	lea    (%r9,%r10,1),%r8
   13844:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   1384b:	00 
   1384c:	41 8d 0c 04          	lea    (%r12,%rax,1),%ecx
   13850:	4b 8d 04 3e          	lea    (%r14,%r15,1),%rax
   13854:	48 05 e4 0e 01 00    	add    $0x10ee4,%rax
   1385a:	89 18                	mov    %ebx,(%rax)
   1385c:	8b 74 24 60          	mov    0x60(%rsp),%esi
   13860:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   13865:	43 0f 11 84 3e 00 0f 	movups %xmm0,0x10f00(%r14,%r15,1)
   1386c:	01 00 
   1386e:	43 8b 94 3e f4 0e 01 	mov    0x10ef4(%r14,%r15,1),%edx
   13875:	00 
   13876:	4c 89 c0             	mov    %r8,%rax
   13879:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1387e:	48 29 f0             	sub    %rsi,%rax
   13881:	44 0f b6 50 fe       	movzbl -0x2(%rax),%r10d
   13886:	41 8b 86 90 0b 00 00 	mov    0xb90(%r14),%eax
   1388d:	45 8b 8e 94 0b 00 00 	mov    0xb94(%r14),%r9d
   13894:	89 44 24 44          	mov    %eax,0x44(%rsp)
   13898:	41 89 c3             	mov    %eax,%r11d
   1389b:	41 21 cb             	and    %ecx,%r11d
   1389e:	89 df                	mov    %ebx,%edi
   138a0:	41 8b 86 98 0b 00 00 	mov    0xb98(%r14),%eax
   138a7:	89 84 24 e4 00 00 00 	mov    %eax,0xe4(%rsp)
   138ae:	48 89 ce             	mov    %rcx,%rsi
   138b1:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
   138b8:	00 
   138b9:	21 c8                	and    %ecx,%eax
   138bb:	44 89 c9             	mov    %r9d,%ecx
   138be:	d3 e0                	shl    %cl,%eax
   138c0:	48 89 f9             	mov    %rdi,%rcx
   138c3:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   138c8:	41 0f b6 70 fe       	movzbl -0x2(%r8),%esi
   138cd:	b9 08 00 00 00       	mov    $0x8,%ecx
   138d2:	44 89 8c 24 24 01 00 	mov    %r9d,0x124(%rsp)
   138d9:	00 
   138da:	44 29 c9             	sub    %r9d,%ecx
   138dd:	89 8c 24 20 01 00 00 	mov    %ecx,0x120(%rsp)
   138e4:	d3 ee                	shr    %cl,%esi
   138e6:	48 c1 e7 05          	shl    $0x5,%rdi
   138ea:	4c 01 f7             	add    %r14,%rdi
   138ed:	01 c6                	add    %eax,%esi
   138ef:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   138f4:	46 0f b7 8c 5f 9c 6b 	movzwl 0x6b9c(%rdi,%r11,2),%r9d
   138fb:	00 00 
   138fd:	41 c1 e9 04          	shr    $0x4,%r9d
   13901:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   13905:	48 c1 e0 09          	shl    $0x9,%rax
   13909:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
   1390d:	49 81 c7 9c 0b 00 00 	add    $0xb9c,%r15
   13914:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
   1391b:	00 
   1391c:	45 0f b6 58 ff       	movzbl -0x1(%r8),%r11d
   13921:	48 8d 05 78 69 01 00 	lea    0x16978(%rip),%rax        # 2a2a0 <lzma_rc_prices>
   13928:	42 0f b6 0c 08       	movzbl (%rax,%r9,1),%ecx
   1392d:	45 8d a3 00 01 00 00 	lea    0x100(%r11),%r12d
   13934:	83 fb 06             	cmp    $0x6,%ebx
   13937:	76 6a                	jbe    139a3 <lzma_lzma_optimum_normal+0x13a3>
   13939:	31 db                	xor    %ebx,%ebx
   1393b:	be 00 01 00 00       	mov    $0x100,%esi
   13940:	44 89 d5             	mov    %r10d,%ebp
   13943:	4c 8d 05 56 69 01 00 	lea    0x16956(%rip),%r8        # 2a2a0 <lzma_rc_prices>
   1394a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13950:	01 ed                	add    %ebp,%ebp
   13952:	89 e8                	mov    %ebp,%eax
   13954:	21 f0                	and    %esi,%eax
   13956:	45 89 e5             	mov    %r12d,%r13d
   13959:	41 c1 ed 08          	shr    $0x8,%r13d
   1395d:	41 01 f5             	add    %esi,%r13d
   13960:	41 01 c5             	add    %eax,%r13d
   13963:	43 0f b7 04 6f       	movzwl (%r15,%r13,2),%eax
   13968:	45 0f be ec          	movsbl %r12b,%r13d
   1396c:	41 c1 ed 07          	shr    $0x7,%r13d
   13970:	41 81 e5 f0 07 00 00 	and    $0x7f0,%r13d
   13977:	41 31 c5             	xor    %eax,%r13d
   1397a:	41 c1 ed 04          	shr    $0x4,%r13d
   1397e:	43 0f b6 04 28       	movzbl (%r8,%r13,1),%eax
   13983:	01 c3                	add    %eax,%ebx
   13985:	43 8d 04 24          	lea    (%r12,%r12,1),%eax
   13989:	41 89 c5             	mov    %eax,%r13d
   1398c:	41 31 ed             	xor    %ebp,%r13d
   1398f:	41 f7 d5             	not    %r13d
   13992:	44 21 ee             	and    %r13d,%esi
   13995:	41 81 fc 00 80 00 00 	cmp    $0x8000,%r12d
   1399c:	41 89 c4             	mov    %eax,%r12d
   1399f:	72 af                	jb     13950 <lzma_lzma_optimum_normal+0x1350>
   139a1:	eb 39                	jmp    139dc <lzma_lzma_optimum_normal+0x13dc>
   139a3:	31 db                	xor    %ebx,%ebx
   139a5:	44 89 e6             	mov    %r12d,%esi
   139a8:	4c 8d 05 f1 68 01 00 	lea    0x168f1(%rip),%r8        # 2a2a0 <lzma_rc_prices>
   139af:	90                   	nop
   139b0:	44 89 e0             	mov    %r12d,%eax
   139b3:	83 e0 01             	and    $0x1,%eax
   139b6:	f7 d8                	neg    %eax
   139b8:	d1 ee                	shr    %esi
   139ba:	41 83 e4 fe          	and    $0xfffffffe,%r12d
   139be:	43 0f b7 2c 27       	movzwl (%r15,%r12,1),%ebp
   139c3:	25 f0 07 00 00       	and    $0x7f0,%eax
   139c8:	31 e8                	xor    %ebp,%eax
   139ca:	c1 e8 04             	shr    $0x4,%eax
   139cd:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
   139d2:	01 c3                	add    %eax,%ebx
   139d4:	41 89 f4             	mov    %esi,%r12d
   139d7:	83 fe 01             	cmp    $0x1,%esi
   139da:	75 d4                	jne    139b0 <lzma_lzma_optimum_normal+0x13b0>
   139dc:	01 d1                	add    %edx,%ecx
   139de:	01 d9                	add    %ebx,%ecx
   139e0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   139e5:	4c 8d 46 01          	lea    0x1(%rsi),%r8
   139e9:	4c 89 c0             	mov    %r8,%rax
   139ec:	4c 89 84 24 38 01 00 	mov    %r8,0x138(%rsp)
   139f3:	00 
   139f4:	4d 6b f8 2c          	imul   $0x2c,%r8,%r15
   139f8:	4f 8d 24 3e          	lea    (%r14,%r15,1),%r12
   139fc:	49 81 c4 f4 0e 01 00 	add    $0x10ef4,%r12
   13a03:	43 8b ac 3e f4 0e 01 	mov    0x10ef4(%r14,%r15,1),%ebp
   13a0a:	00 
   13a0b:	39 e9                	cmp    %ebp,%ecx
   13a0d:	73 3e                	jae    13a4d <lzma_lzma_optimum_normal+0x144d>
   13a0f:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   13a14:	48 8d 04 47          	lea    (%rdi,%rax,2),%rax
   13a18:	48 05 9c 6b 00 00    	add    $0x6b9c,%rax
   13a1e:	41 89 0c 24          	mov    %ecx,(%r12)
   13a22:	43 89 b4 3e f8 0e 01 	mov    %esi,0x10ef8(%r14,%r15,1)
   13a29:	00 
   13a2a:	43 c7 84 3e fc 0e 01 	movl   $0xffffffff,0x10efc(%r14,%r15,1)
   13a31:	00 ff ff ff ff 
   13a36:	43 c6 84 3e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%r15,1)
   13a3d:	00 00 
   13a3f:	44 0f b7 08          	movzwl (%rax),%r9d
   13a43:	41 c1 e9 04          	shr    $0x4,%r9d
   13a47:	b3 01                	mov    $0x1,%bl
   13a49:	89 cd                	mov    %ecx,%ebp
   13a4b:	eb 02                	jmp    13a4f <lzma_lzma_optimum_normal+0x144f>
   13a4d:	31 db                	xor    %ebx,%ebx
   13a4f:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   13a54:	41 0f b7 c1          	movzwl %r9w,%eax
   13a58:	48 83 f0 7f          	xor    $0x7f,%rax
   13a5c:	48 8d 35 3d 68 01 00 	lea    0x1683d(%rip),%rsi        # 2a2a0 <lzma_rc_prices>
   13a63:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   13a67:	01 c2                	add    %eax,%edx
   13a69:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13a6e:	41 0f b7 84 46 1c 6d 	movzwl 0x6d1c(%r14,%rax,2),%eax
   13a75:	00 00 
   13a77:	c1 e8 04             	shr    $0x4,%eax
   13a7a:	48 83 f0 7f          	xor    $0x7f,%rax
   13a7e:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   13a82:	89 94 24 c8 00 00 00 	mov    %edx,0xc8(%rsp)
   13a89:	01 d0                	add    %edx,%eax
   13a8b:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
   13a92:	45 38 da             	cmp    %r11b,%r10b
   13a95:	0f 85 90 00 00 00    	jne    13b2b <lzma_lzma_optimum_normal+0x152b>
   13a9b:	43 8b 84 3e f8 0e 01 	mov    0x10ef8(%r14,%r15,1),%eax
   13aa2:	00 
   13aa3:	48 39 44 24 18       	cmp    %rax,0x18(%rsp)
   13aa8:	44 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%r9d
   13aaf:	00 
   13ab0:	76 0b                	jbe    13abd <lzma_lzma_optimum_normal+0x14bd>
   13ab2:	43 83 bc 3e fc 0e 01 	cmpl   $0x0,0x10efc(%r14,%r15,1)
   13ab9:	00 00 
   13abb:	74 76                	je     13b33 <lzma_lzma_optimum_normal+0x1533>
   13abd:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   13ac2:	41 0f b7 84 46 34 6d 	movzwl 0x6d34(%r14,%rax,2),%eax
   13ac9:	00 00 
   13acb:	c1 e8 04             	shr    $0x4,%eax
   13ace:	4c 8d 05 cb 67 01 00 	lea    0x167cb(%rip),%r8        # 2a2a0 <lzma_rc_prices>
   13ad5:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
   13ada:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   13adf:	0f b7 b4 57 7c 6d 00 	movzwl 0x6d7c(%rdi,%rdx,2),%esi
   13ae6:	00 
   13ae7:	c1 ee 04             	shr    $0x4,%esi
   13aea:	41 0f b6 34 30       	movzbl (%r8,%rsi,1),%esi
   13aef:	03 84 24 88 00 00 00 	add    0x88(%rsp),%eax
   13af6:	01 f0                	add    %esi,%eax
   13af8:	39 e8                	cmp    %ebp,%eax
   13afa:	77 37                	ja     13b33 <lzma_lzma_optimum_normal+0x1533>
   13afc:	4b 8d 34 3e          	lea    (%r14,%r15,1),%rsi
   13b00:	48 81 c6 f8 0e 01 00 	add    $0x10ef8,%rsi
   13b07:	41 89 04 24          	mov    %eax,(%r12)
   13b0b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13b10:	89 06                	mov    %eax,(%rsi)
   13b12:	43 c7 84 3e fc 0e 01 	movl   $0x0,0x10efc(%r14,%r15,1)
   13b19:	00 00 00 00 00 
   13b1e:	43 c6 84 3e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%r15,1)
   13b25:	00 00 
   13b27:	b3 01                	mov    $0x1,%bl
   13b29:	eb 08                	jmp    13b33 <lzma_lzma_optimum_normal+0x1533>
   13b2b:	44 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%r9d
   13b32:	00 
   13b33:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   13b38:	89 c0                	mov    %eax,%eax
   13b3a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   13b3f:	41 83 f9 02          	cmp    $0x2,%r9d
   13b43:	48 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%rbp
   13b4a:	00 
   13b4b:	0f 82 ef f9 ff ff    	jb     13540 <lzma_lzma_optimum_normal+0xf40>
   13b51:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   13b56:	41 39 c1             	cmp    %eax,%r9d
   13b59:	41 0f 42 c1          	cmovb  %r9d,%eax
   13b5d:	89 44 24 54          	mov    %eax,0x54(%rsp)
   13b61:	44 8b 8c 24 84 00 00 	mov    0x84(%rsp),%r9d
   13b68:	00 
   13b69:	45 38 da             	cmp    %r11b,%r10b
   13b6c:	0f 84 8c 00 00 00    	je     13bfe <lzma_lzma_optimum_normal+0x15fe>
   13b72:	84 db                	test   %bl,%bl
   13b74:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13b79:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   13b7e:	0f 85 21 03 00 00    	jne    13ea5 <lzma_lzma_optimum_normal+0x18a5>
   13b84:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   13b89:	ff c0                	inc    %eax
   13b8b:	8b b4 24 a8 00 00 00 	mov    0xa8(%rsp),%esi
   13b92:	39 f0                	cmp    %esi,%eax
   13b94:	41 89 f2             	mov    %esi,%r10d
   13b97:	44 0f 42 d0          	cmovb  %eax,%r10d
   13b9b:	41 83 fa 02          	cmp    $0x2,%r10d
   13b9f:	0f 82 00 03 00 00    	jb     13ea5 <lzma_lzma_optimum_normal+0x18a5>
   13ba5:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   13baa:	4d 39 c8             	cmp    %r9,%r8
   13bad:	4c 89 ce             	mov    %r9,%rsi
   13bb0:	49 0f 42 f0          	cmovb  %r8,%rsi
   13bb4:	89 c0                	mov    %eax,%eax
   13bb6:	48 39 c6             	cmp    %rax,%rsi
   13bb9:	48 0f 43 f0          	cmovae %rax,%rsi
   13bbd:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13bc2:	48 2b 44 24 38       	sub    0x38(%rsp),%rax
   13bc7:	48 03 44 24 10       	add    0x10(%rsp),%rax
   13bcc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13bd2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   13bd9:	1f 84 00 00 00 00 00 
   13be0:	46 0f b6 5c 05 ff    	movzbl -0x1(%rbp,%r8,1),%r11d
   13be6:	46 3a 5c 00 fe       	cmp    -0x2(%rax,%r8,1),%r11b
   13beb:	0f 85 ac 00 00 00    	jne    13c9d <lzma_lzma_optimum_normal+0x169d>
   13bf1:	49 ff c0             	inc    %r8
   13bf4:	4c 39 c6             	cmp    %r8,%rsi
   13bf7:	75 e7                	jne    13be0 <lzma_lzma_optimum_normal+0x15e0>
   13bf9:	e9 a2 00 00 00       	jmp    13ca0 <lzma_lzma_optimum_normal+0x16a0>
   13bfe:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13c03:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   13c08:	e9 98 02 00 00       	jmp    13ea5 <lzma_lzma_optimum_normal+0x18a5>
   13c0d:	b8 04 00 00 00       	mov    $0x4,%eax
   13c12:	48 29 f0             	sub    %rsi,%rax
   13c15:	be fd ff ff ff       	mov    $0xfffffffd,%esi
   13c1a:	44 29 e6             	sub    %r12d,%esi
   13c1d:	39 c6                	cmp    %eax,%esi
   13c1f:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   13c24:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   13c29:	0f 82 7a 01 00 00    	jb     13da9 <lzma_lzma_optimum_normal+0x17a9>
   13c2f:	48 c1 e8 20          	shr    $0x20,%rax
   13c33:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13c38:	0f 85 63 01 00 00    	jne    13da1 <lzma_lzma_optimum_normal+0x17a1>
   13c3e:	48 89 ce             	mov    %rcx,%rsi
   13c41:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   13c45:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
   13c49:	48 8d 3c 95 00 00 00 	lea    0x0(,%rdx,4),%rdi
   13c50:	00 
   13c51:	48 01 ef             	add    %rbp,%rdi
   13c54:	48 03 bc 24 48 01 00 	add    0x148(%rsp),%rdi
   13c5b:	00 
   13c5c:	4c 8d 44 24 64       	lea    0x64(%rsp),%r8
   13c61:	49 8d 14 90          	lea    (%r8,%rdx,4),%rdx
   13c65:	48 83 c2 0c          	add    $0xc,%rdx
   13c69:	45 31 c0             	xor    %r8d,%r8d
   13c6c:	0f 1f 40 00          	nopl   0x0(%rax)
   13c70:	42 0f 10 44 87 f0    	movups -0x10(%rdi,%r8,4),%xmm0
   13c76:	42 0f 10 0c 87       	movups (%rdi,%r8,4),%xmm1
   13c7b:	42 0f 11 44 82 f0    	movups %xmm0,-0x10(%rdx,%r8,4)
   13c81:	42 0f 11 0c 82       	movups %xmm1,(%rdx,%r8,4)
   13c86:	49 83 c0 08          	add    $0x8,%r8
   13c8a:	4c 39 c6             	cmp    %r8,%rsi
   13c8d:	75 e1                	jne    13c70 <lzma_lzma_optimum_normal+0x1670>
   13c8f:	48 39 f1             	cmp    %rsi,%rcx
   13c92:	0f 85 8a fb ff ff    	jne    13822 <lzma_lzma_optimum_normal+0x1222>
   13c98:	e9 a3 fb ff ff       	jmp    13840 <lzma_lzma_optimum_normal+0x1240>
   13c9d:	45 89 c2             	mov    %r8d,%r10d
   13ca0:	41 8d 52 fd          	lea    -0x3(%r10),%edx
   13ca4:	83 fa fd             	cmp    $0xfffffffd,%edx
   13ca7:	0f 87 f8 01 00 00    	ja     13ea5 <lzma_lzma_optimum_normal+0x18a5>
   13cad:	31 c0                	xor    %eax,%eax
   13caf:	83 fb 0a             	cmp    $0xa,%ebx
   13cb2:	0f 92 c0             	setb   %al
   13cb5:	83 fb 04             	cmp    $0x4,%ebx
   13cb8:	8d 04 40             	lea    (%rax,%rax,2),%eax
   13cbb:	8d 5c 03 fa          	lea    -0x6(%rbx,%rax,1),%ebx
   13cbf:	b8 00 00 00 00       	mov    $0x0,%eax
   13cc4:	0f 42 d8             	cmovb  %eax,%ebx
   13cc7:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
   13cce:	00 
   13ccf:	44 8d 58 01          	lea    0x1(%rax),%r11d
   13cd3:	44 23 5c 24 44       	and    0x44(%rsp),%r11d
   13cd8:	49 89 df             	mov    %rbx,%r15
   13cdb:	49 c1 e7 05          	shl    $0x5,%r15
   13cdf:	4d 01 f7             	add    %r14,%r15
   13ce2:	43 0f b7 84 5f 9c 6b 	movzwl 0x6b9c(%r15,%r11,2),%eax
   13ce9:	00 00 
   13ceb:	c1 e8 04             	shr    $0x4,%eax
   13cee:	48 83 f0 7f          	xor    $0x7f,%rax
   13cf2:	48 8d 35 a7 65 01 00 	lea    0x165a7(%rip),%rsi        # 2a2a0 <lzma_rc_prices>
   13cf9:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   13cfd:	89 84 24 18 01 00 00 	mov    %eax,0x118(%rsp)
   13d04:	41 0f b7 84 5e 1c 6d 	movzwl 0x6d1c(%r14,%rbx,2),%eax
   13d0b:	00 00 
   13d0d:	c1 e8 04             	shr    $0x4,%eax
   13d10:	48 83 f0 7f          	xor    $0x7f,%rax
   13d14:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   13d18:	89 84 24 98 00 00 00 	mov    %eax,0x98(%rsp)
   13d1f:	43 8d 2c 22          	lea    (%r10,%r12,1),%ebp
   13d23:	89 ee                	mov    %ebp,%esi
   13d25:	89 e8                	mov    %ebp,%eax
   13d27:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13d2c:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   13d31:	44 29 c6             	sub    %r8d,%esi
   13d34:	0f 86 c4 00 00 00    	jbe    13dfe <lzma_lzma_optimum_normal+0x17fe>
   13d3a:	45 89 c5             	mov    %r8d,%r13d
   13d3d:	4c 89 e8             	mov    %r13,%rax
   13d40:	40 f6 c6 03          	test   $0x3,%sil
   13d44:	74 42                	je     13d88 <lzma_lzma_optimum_normal+0x1788>
   13d46:	49 6b f5 2c          	imul   $0x2c,%r13,%rsi
   13d4a:	48 03 b4 24 d8 00 00 	add    0xd8(%rsp),%rsi
   13d51:	00 
   13d52:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13d57:	44 01 d0             	add    %r10d,%eax
   13d5a:	44 28 c0             	sub    %r8b,%al
   13d5d:	44 0f b6 e0          	movzbl %al,%r12d
   13d61:	41 83 e4 03          	and    $0x3,%r12d
   13d65:	49 f7 dc             	neg    %r12
   13d68:	45 31 c0             	xor    %r8d,%r8d
   13d6b:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   13d71:	49 ff c8             	dec    %r8
   13d74:	48 83 c6 2c          	add    $0x2c,%rsi
   13d78:	4d 39 c4             	cmp    %r8,%r12
   13d7b:	75 ee                	jne    13d6b <lzma_lzma_optimum_normal+0x176b>
   13d7d:	4c 89 e8             	mov    %r13,%rax
   13d80:	4c 29 c0             	sub    %r8,%rax
   13d83:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13d88:	4c 2b 6c 24 38       	sub    0x38(%rsp),%r13
   13d8d:	49 83 fd fc          	cmp    $0xfffffffffffffffc,%r13
   13d91:	76 23                	jbe    13db6 <lzma_lzma_optimum_normal+0x17b6>
   13d93:	89 e8                	mov    %ebp,%eax
   13d95:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13d9a:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   13d9f:	eb 5d                	jmp    13dfe <lzma_lzma_optimum_normal+0x17fe>
   13da1:	48 89 d0             	mov    %rdx,%rax
   13da4:	e9 79 fa ff ff       	jmp    13822 <lzma_lzma_optimum_normal+0x1222>
   13da9:	48 89 d0             	mov    %rdx,%rax
   13dac:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13db1:	e9 6c fa ff ff       	jmp    13822 <lzma_lzma_optimum_normal+0x1222>
   13db6:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   13dbb:	45 01 ea             	add    %r13d,%r10d
   13dbe:	49 29 c2             	sub    %rax,%r10
   13dc1:	48 6b c0 2c          	imul   $0x2c,%rax,%rax
   13dc5:	48 03 84 24 d0 00 00 	add    0xd0(%rsp),%rax
   13dcc:	00 
   13dcd:	c7 80 7c ff ff ff 00 	movl   $0x40000000,-0x84(%rax)
   13dd4:	00 00 40 
   13dd7:	c7 40 a8 00 00 00 40 	movl   $0x40000000,-0x58(%rax)
   13dde:	c7 40 d4 00 00 00 40 	movl   $0x40000000,-0x2c(%rax)
   13de5:	c7 00 00 00 00 40    	movl   $0x40000000,(%rax)
   13deb:	48 05 b0 00 00 00    	add    $0xb0,%rax
   13df1:	49 83 c2 fc          	add    $0xfffffffffffffffc,%r10
   13df5:	75 d6                	jne    13dcd <lzma_lzma_optimum_normal+0x17cd>
   13df7:	89 e8                	mov    %ebp,%eax
   13df9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   13dfe:	89 d0                	mov    %edx,%eax
   13e00:	49 69 f3 40 04 00 00 	imul   $0x440,%r11,%rsi
   13e07:	4c 01 f6             	add    %r14,%rsi
   13e0a:	45 0f b7 84 5e 34 6d 	movzwl 0x6d34(%r14,%rbx,2),%r8d
   13e11:	00 00 
   13e13:	41 c1 e8 04          	shr    $0x4,%r8d
   13e17:	48 8d 1d 82 64 01 00 	lea    0x16482(%rip),%rbx        # 2a2a0 <lzma_rc_prices>
   13e1e:	46 0f b6 04 03       	movzbl (%rbx,%r8,1),%r8d
   13e23:	47 0f b7 94 5f 7c 6d 	movzwl 0x6d7c(%r15,%r11,2),%r10d
   13e2a:	00 00 
   13e2c:	41 c1 ea 04          	shr    $0x4,%r10d
   13e30:	49 83 f2 7f          	xor    $0x7f,%r10
   13e34:	46 0f b6 14 13       	movzbl (%rbx,%r10,1),%r10d
   13e39:	03 8c 24 18 01 00 00 	add    0x118(%rsp),%ecx
   13e40:	03 8c 24 98 00 00 00 	add    0x98(%rsp),%ecx
   13e47:	03 8c 86 4c be 00 00 	add    0xbe4c(%rsi,%rax,4),%ecx
   13e4e:	44 01 c1             	add    %r8d,%ecx
   13e51:	44 01 d1             	add    %r10d,%ecx
   13e54:	48 6b 44 24 38 2c    	imul   $0x2c,0x38(%rsp),%rax
   13e5a:	41 3b 8c 06 f4 0e 01 	cmp    0x10ef4(%r14,%rax,1),%ecx
   13e61:	00 
   13e62:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   13e67:	48 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%rbp
   13e6e:	00 
   13e6f:	73 34                	jae    13ea5 <lzma_lzma_optimum_normal+0x18a5>
   13e71:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
   13e75:	48 81 c6 f4 0e 01 00 	add    $0x10ef4,%rsi
   13e7c:	89 0e                	mov    %ecx,(%rsi)
   13e7e:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
   13e85:	00 
   13e86:	41 89 8c 06 f8 0e 01 	mov    %ecx,0x10ef8(%r14,%rax,1)
   13e8d:	00 
   13e8e:	41 c7 84 06 fc 0e 01 	movl   $0x0,0x10efc(%r14,%rax,1)
   13e95:	00 00 00 00 00 
   13e9a:	66 41 c7 84 06 e8 0e 	movw   $0x1,0x10ee8(%r14,%rax,1)
   13ea1:	01 00 01 00 
   13ea5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13eaa:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   13eaf:	48 01 c8             	add    %rcx,%rax
   13eb2:	48 ff c8             	dec    %rax
   13eb5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13eba:	48 8d 45 fe          	lea    -0x2(%rbp),%rax
   13ebe:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   13ec5:	00 
   13ec6:	31 c0                	xor    %eax,%eax
   13ec8:	83 fb 07             	cmp    $0x7,%ebx
   13ecb:	0f 93 c0             	setae  %al
   13ece:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   13ed3:	48 8d 8c 77 7c 6d 00 	lea    0x6d7c(%rdi,%rsi,2),%rcx
   13eda:	00 
   13edb:	48 89 8c 24 68 01 00 	mov    %rcx,0x168(%rsp)
   13ee2:	00 
   13ee3:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   13ee7:	48 83 c2 08          	add    $0x8,%rdx
   13eeb:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   13ef0:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   13ef5:	48 39 c1             	cmp    %rax,%rcx
   13ef8:	49 89 c3             	mov    %rax,%r11
   13efb:	4c 0f 42 d9          	cmovb  %rcx,%r11
   13eff:	4d 39 cb             	cmp    %r9,%r11
   13f02:	4d 0f 43 d9          	cmovae %r9,%r11
   13f06:	48 69 ce 40 04 00 00 	imul   $0x440,%rsi,%rcx
   13f0d:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
   13f14:	00 
   13f15:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   13f1a:	48 01 c8             	add    %rcx,%rax
   13f1d:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   13f24:	00 
   13f25:	b8 02 00 00 00       	mov    $0x2,%eax
   13f2a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13f2f:	c1 e2 05             	shl    $0x5,%edx
   13f32:	4c 01 f2             	add    %r14,%rdx
   13f35:	48 89 94 24 70 01 00 	mov    %rdx,0x170(%rsp)
   13f3c:	00 
   13f3d:	45 31 d2             	xor    %r10d,%r10d
   13f40:	48 8d 15 59 63 01 00 	lea    0x16359(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   13f47:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   13f4b:	4c 89 9c 24 98 00 00 	mov    %r11,0x98(%rsp)
   13f52:	00 
   13f53:	eb 2b                	jmp    13f80 <lzma_lzma_optimum_normal+0x1980>
   13f55:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13f5a:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   13f5f:	48 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%rbp
   13f66:	00 
   13f67:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   13f6b:	4c 8b 9c 24 98 00 00 	mov    0x98(%rsp),%r11
   13f72:	00 
   13f73:	49 ff c2             	inc    %r10
   13f76:	49 83 fa 04          	cmp    $0x4,%r10
   13f7a:	0f 84 68 05 00 00    	je     144e8 <lzma_lzma_optimum_normal+0x1ee8>
   13f80:	42 8b 74 94 60       	mov    0x60(%rsp,%r10,4),%esi
   13f85:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   13f8a:	48 89 c8             	mov    %rcx,%rax
   13f8d:	48 29 f0             	sub    %rsi,%rax
   13f90:	0f b6 09             	movzbl (%rcx),%ecx
   13f93:	3a 48 ff             	cmp    -0x1(%rax),%cl
   13f96:	75 db                	jne    13f73 <lzma_lzma_optimum_normal+0x1973>
   13f98:	0f b6 4d 00          	movzbl 0x0(%rbp),%ecx
   13f9c:	3a 08                	cmp    (%rax),%cl
   13f9e:	75 d3                	jne    13f73 <lzma_lzma_optimum_normal+0x1973>
   13fa0:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   13fa6:	83 ff 03             	cmp    $0x3,%edi
   13fa9:	72 2d                	jb     13fd8 <lzma_lzma_optimum_normal+0x19d8>
   13fab:	48 f7 de             	neg    %rsi
   13fae:	48 01 ee             	add    %rbp,%rsi
   13fb1:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   13fb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13fbe:	00 00 
   13fc0:	42 0f b6 4c 3d ff    	movzbl -0x1(%rbp,%r15,1),%ecx
   13fc6:	42 3a 4c 3e fe       	cmp    -0x2(%rsi,%r15,1),%cl
   13fcb:	75 0b                	jne    13fd8 <lzma_lzma_optimum_normal+0x19d8>
   13fcd:	49 ff c7             	inc    %r15
   13fd0:	4d 39 fb             	cmp    %r15,%r11
   13fd3:	75 eb                	jne    13fc0 <lzma_lzma_optimum_normal+0x19c0>
   13fd5:	41 89 ff             	mov    %edi,%r15d
   13fd8:	43 8d 2c 27          	lea    (%r15,%r12,1),%ebp
   13fdc:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   13fe1:	39 ef                	cmp    %ebp,%edi
   13fe3:	0f 83 a9 00 00 00    	jae    14092 <lzma_lzma_optimum_normal+0x1a92>
   13fe9:	41 89 f8             	mov    %edi,%r8d
   13fec:	89 e9                	mov    %ebp,%ecx
   13fee:	29 f9                	sub    %edi,%ecx
   13ff0:	4c 89 c6             	mov    %r8,%rsi
   13ff3:	f6 c1 03             	test   $0x3,%cl
   13ff6:	74 40                	je     14038 <lzma_lzma_optimum_normal+0x1a38>
   13ff8:	49 6b f0 2c          	imul   $0x2c,%r8,%rsi
   13ffc:	48 03 b4 24 d8 00 00 	add    0xd8(%rsp),%rsi
   14003:	00 
   14004:	43 8d 0c 2f          	lea    (%r15,%r13,1),%ecx
   14008:	40 28 f9             	sub    %dil,%cl
   1400b:	44 0f b6 c9          	movzbl %cl,%r9d
   1400f:	41 83 e1 03          	and    $0x3,%r9d
   14013:	49 f7 d9             	neg    %r9
   14016:	31 c9                	xor    %ecx,%ecx
   14018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1401f:	00 
   14020:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   14026:	48 ff c9             	dec    %rcx
   14029:	48 83 c6 2c          	add    $0x2c,%rsi
   1402d:	49 39 c9             	cmp    %rcx,%r9
   14030:	75 ee                	jne    14020 <lzma_lzma_optimum_normal+0x1a20>
   14032:	4c 89 c6             	mov    %r8,%rsi
   14035:	48 29 ce             	sub    %rcx,%rsi
   14038:	89 e9                	mov    %ebp,%ecx
   1403a:	49 29 c8             	sub    %rcx,%r8
   1403d:	89 e9                	mov    %ebp,%ecx
   1403f:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   14044:	49 83 f8 fc          	cmp    $0xfffffffffffffffc,%r8
   14048:	77 48                	ja     14092 <lzma_lzma_optimum_normal+0x1a92>
   1404a:	43 8d 0c 2f          	lea    (%r15,%r13,1),%ecx
   1404e:	48 29 f1             	sub    %rsi,%rcx
   14051:	48 6b f6 2c          	imul   $0x2c,%rsi,%rsi
   14055:	48 03 b4 24 d0 00 00 	add    0xd0(%rsp),%rsi
   1405c:	00 
   1405d:	0f 1f 00             	nopl   (%rax)
   14060:	c7 86 7c ff ff ff 00 	movl   $0x40000000,-0x84(%rsi)
   14067:	00 00 40 
   1406a:	c7 46 a8 00 00 00 40 	movl   $0x40000000,-0x58(%rsi)
   14071:	c7 46 d4 00 00 00 40 	movl   $0x40000000,-0x2c(%rsi)
   14078:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   1407e:	48 81 c6 b0 00 00 00 	add    $0xb0,%rsi
   14085:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
   14089:	75 d5                	jne    14060 <lzma_lzma_optimum_normal+0x1a60>
   1408b:	89 e9                	mov    %ebp,%ecx
   1408d:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   14092:	41 0f b7 8c 5e 34 6d 	movzwl 0x6d34(%r14,%rbx,2),%ecx
   14099:	00 00 
   1409b:	c1 e9 04             	shr    $0x4,%ecx
   1409e:	4d 85 d2             	test   %r10,%r10
   140a1:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   140a6:	74 24                	je     140cc <lzma_lzma_optimum_normal+0x1acc>
   140a8:	0f b7 c9             	movzwl %cx,%ecx
   140ab:	48 83 f1 7f          	xor    $0x7f,%rcx
   140af:	44 0f b6 0c 0a       	movzbl (%rdx,%rcx,1),%r9d
   140b4:	41 0f b7 8c 5e 4c 6d 	movzwl 0x6d4c(%r14,%rbx,2),%ecx
   140bb:	00 00 
   140bd:	c1 e9 04             	shr    $0x4,%ecx
   140c0:	49 83 fa 01          	cmp    $0x1,%r10
   140c4:	75 23                	jne    140e9 <lzma_lzma_optimum_normal+0x1ae9>
   140c6:	0f b6 34 0a          	movzbl (%rdx,%rcx,1),%esi
   140ca:	eb 4c                	jmp    14118 <lzma_lzma_optimum_normal+0x1b18>
   140cc:	44 0f b6 0c 0a       	movzbl (%rdx,%rcx,1),%r9d
   140d1:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   140d8:	00 
   140d9:	0f b7 09             	movzwl (%rcx),%ecx
   140dc:	c1 e9 04             	shr    $0x4,%ecx
   140df:	48 83 f1 7f          	xor    $0x7f,%rcx
   140e3:	0f b6 34 0a          	movzbl (%rdx,%rcx,1),%esi
   140e7:	eb 2f                	jmp    14118 <lzma_lzma_optimum_normal+0x1b18>
   140e9:	0f b7 c9             	movzwl %cx,%ecx
   140ec:	48 83 f1 7f          	xor    $0x7f,%rcx
   140f0:	0f b6 34 0a          	movzbl (%rdx,%rcx,1),%esi
   140f4:	44 01 ce             	add    %r9d,%esi
   140f7:	41 0f b7 8c 5e 64 6d 	movzwl 0x6d64(%r14,%rbx,2),%ecx
   140fe:	00 00 
   14100:	bf 02 00 00 00       	mov    $0x2,%edi
   14105:	44 29 d7             	sub    %r10d,%edi
   14108:	81 e7 f0 07 00 00    	and    $0x7f0,%edi
   1410e:	31 cf                	xor    %ecx,%edi
   14110:	c1 ef 04             	shr    $0x4,%edi
   14113:	44 0f b6 0c 3a       	movzbl (%rdx,%rdi,1),%r9d
   14118:	48 ff c8             	dec    %rax
   1411b:	44 03 8c 24 88 00 00 	add    0x88(%rsp),%r9d
   14122:	00 
   14123:	41 01 f1             	add    %esi,%r9d
   14126:	41 8d 6f fe          	lea    -0x2(%r15),%ebp
   1412a:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
   14131:	00 
   14132:	48 8d 34 a9          	lea    (%rcx,%rbp,4),%rsi
   14136:	45 89 f8             	mov    %r15d,%r8d
   14139:	eb 12                	jmp    1414d <lzma_lzma_optimum_normal+0x1b4d>
   1413b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14140:	41 ff c8             	dec    %r8d
   14143:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
   14147:	41 83 f8 01          	cmp    $0x1,%r8d
   1414b:	76 43                	jbe    14190 <lzma_lzma_optimum_normal+0x1b90>
   1414d:	8b 0e                	mov    (%rsi),%ecx
   1414f:	44 01 c9             	add    %r9d,%ecx
   14152:	43 8d 3c 28          	lea    (%r8,%r13,1),%edi
   14156:	48 6b ff 2c          	imul   $0x2c,%rdi,%rdi
   1415a:	41 3b 8c 3e f4 0e 01 	cmp    0x10ef4(%r14,%rdi,1),%ecx
   14161:	00 
   14162:	73 dc                	jae    14140 <lzma_lzma_optimum_normal+0x1b40>
   14164:	4d 8d 1c 3e          	lea    (%r14,%rdi,1),%r11
   14168:	49 81 c3 f4 0e 01 00 	add    $0x10ef4,%r11
   1416f:	41 89 0b             	mov    %ecx,(%r11)
   14172:	45 89 a4 3e f8 0e 01 	mov    %r12d,0x10ef8(%r14,%rdi,1)
   14179:	00 
   1417a:	45 89 94 3e fc 0e 01 	mov    %r10d,0x10efc(%r14,%rdi,1)
   14181:	00 
   14182:	41 c6 84 3e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%rdi,1)
   14189:	00 00 
   1418b:	eb b3                	jmp    14140 <lzma_lzma_optimum_normal+0x1b40>
   1418d:	0f 1f 00             	nopl   (%rax)
   14190:	45 8d 47 01          	lea    0x1(%r15),%r8d
   14194:	4d 85 d2             	test   %r10,%r10
   14197:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1419c:	41 0f 44 c8          	cmove  %r8d,%ecx
   141a0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   141a5:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   141aa:	41 8d 34 0f          	lea    (%r15,%rcx,1),%esi
   141ae:	ff c6                	inc    %esi
   141b0:	44 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%r11d
   141b7:	00 
   141b8:	44 39 de             	cmp    %r11d,%esi
   141bb:	44 0f 42 de          	cmovb  %esi,%r11d
   141bf:	44 89 c3             	mov    %r8d,%ebx
   141c2:	45 39 d8             	cmp    %r11d,%r8d
   141c5:	73 52                	jae    14219 <lzma_lzma_optimum_normal+0x1c19>
   141c7:	44 89 c3             	mov    %r8d,%ebx
   141ca:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   141cf:	39 f1                	cmp    %esi,%ecx
   141d1:	0f 42 f1             	cmovb  %ecx,%esi
   141d4:	8b 8c 24 84 00 00 00 	mov    0x84(%rsp),%ecx
   141db:	39 ce                	cmp    %ecx,%esi
   141dd:	0f 43 f1             	cmovae %ecx,%esi
   141e0:	f7 de                	neg    %esi
   141e2:	48 01 de             	add    %rbx,%rsi
   141e5:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   141ea:	48 89 c1             	mov    %rax,%rcx
   141ed:	45 31 e4             	xor    %r12d,%r12d
   141f0:	41 0f b6 7c 1d 00    	movzbl 0x0(%r13,%rbx,1),%edi
   141f6:	40 3a 3c 19          	cmp    (%rcx,%rbx,1),%dil
   141fa:	75 15                	jne    14211 <lzma_lzma_optimum_normal+0x1c11>
   141fc:	49 ff c4             	inc    %r12
   141ff:	48 ff c1             	inc    %rcx
   14202:	49 ff c5             	inc    %r13
   14205:	89 f7                	mov    %esi,%edi
   14207:	44 01 e7             	add    %r12d,%edi
   1420a:	75 e4                	jne    141f0 <lzma_lzma_optimum_normal+0x1bf0>
   1420c:	44 89 db             	mov    %r11d,%ebx
   1420f:	eb 03                	jmp    14214 <lzma_lzma_optimum_normal+0x1c14>
   14211:	44 01 e3             	add    %r12d,%ebx
   14214:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   14219:	41 89 dc             	mov    %ebx,%r12d
   1421c:	45 29 c4             	sub    %r8d,%r12d
   1421f:	41 83 fc 02          	cmp    $0x2,%r12d
   14223:	0f 82 2c fd ff ff    	jb     13f55 <lzma_lzma_optimum_normal+0x1955>
   14229:	48 8b 8c 24 40 01 00 	mov    0x140(%rsp),%rcx
   14230:	00 
   14231:	45 8d 1c 0f          	lea    (%r15,%rcx,1),%r11d
   14235:	44 89 d9             	mov    %r11d,%ecx
   14238:	23 4c 24 44          	and    0x44(%rsp),%ecx
   1423c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   14241:	4c 01 f6             	add    %r14,%rsi
   14244:	8b ac ae 4c be 00 00 	mov    0xbe4c(%rsi,%rbp,4),%ebp
   1424b:	48 8b b4 24 70 01 00 	mov    0x170(%rsp),%rsi
   14252:	00 
   14253:	0f b7 8c 4e 9c 6b 00 	movzwl 0x6b9c(%rsi,%rcx,2),%ecx
   1425a:	00 
   1425b:	c1 e9 04             	shr    $0x4,%ecx
   1425e:	0f b6 0c 0a          	movzbl (%rdx,%rcx,1),%ecx
   14262:	89 8c 24 f8 00 00 00 	mov    %ecx,0xf8(%rsp)
   14269:	41 8d 4f ff          	lea    -0x1(%r15),%ecx
   1426d:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
   14272:	41 0f b6 74 0d 00    	movzbl 0x0(%r13,%rcx,1),%esi
   14278:	44 89 ff             	mov    %r15d,%edi
   1427b:	44 0f b6 04 38       	movzbl (%rax,%rdi,1),%r8d
   14280:	44 89 d8             	mov    %r11d,%eax
   14283:	23 84 24 e4 00 00 00 	and    0xe4(%rsp),%eax
   1428a:	8b 8c 24 24 01 00 00 	mov    0x124(%rsp),%ecx
   14291:	d3 e0                	shl    %cl,%eax
   14293:	8b 8c 24 20 01 00 00 	mov    0x120(%rsp),%ecx
   1429a:	d3 ee                	shr    %cl,%esi
   1429c:	45 0f b6 7c 3d 00    	movzbl 0x0(%r13,%rdi,1),%r15d
   142a2:	01 c6                	add    %eax,%esi
   142a4:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   142a8:	48 c1 e0 09          	shl    $0x9,%rax
   142ac:	4d 8d 2c 06          	lea    (%r14,%rax,1),%r13
   142b0:	49 81 c5 9c 0b 00 00 	add    $0xb9c,%r13
   142b7:	41 81 cf 00 01 00 00 	or     $0x100,%r15d
   142be:	31 c9                	xor    %ecx,%ecx
   142c0:	be 00 01 00 00       	mov    $0x100,%esi
   142c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   142cc:	00 00 00 00 
   142d0:	45 01 c0             	add    %r8d,%r8d
   142d3:	44 89 c0             	mov    %r8d,%eax
   142d6:	21 f0                	and    %esi,%eax
   142d8:	44 89 ff             	mov    %r15d,%edi
   142db:	c1 ef 08             	shr    $0x8,%edi
   142de:	01 f7                	add    %esi,%edi
   142e0:	01 c7                	add    %eax,%edi
   142e2:	41 0f b7 44 7d 00    	movzwl 0x0(%r13,%rdi,2),%eax
   142e8:	41 0f be ff          	movsbl %r15b,%edi
   142ec:	c1 ef 07             	shr    $0x7,%edi
   142ef:	81 e7 f0 07 00 00    	and    $0x7f0,%edi
   142f5:	31 c7                	xor    %eax,%edi
   142f7:	c1 ef 04             	shr    $0x4,%edi
   142fa:	0f b6 04 3a          	movzbl (%rdx,%rdi,1),%eax
   142fe:	01 c1                	add    %eax,%ecx
   14300:	43 8d 04 3f          	lea    (%r15,%r15,1),%eax
   14304:	89 c7                	mov    %eax,%edi
   14306:	44 31 c7             	xor    %r8d,%edi
   14309:	f7 d7                	not    %edi
   1430b:	21 fe                	and    %edi,%esi
   1430d:	41 81 ff 00 80 00 00 	cmp    $0x8000,%r15d
   14314:	41 89 c7             	mov    %eax,%r15d
   14317:	72 b7                	jb     142d0 <lzma_lzma_optimum_normal+0x1cd0>
   14319:	41 ff c3             	inc    %r11d
   1431c:	44 23 5c 24 44       	and    0x44(%rsp),%r11d
   14321:	43 0f b7 84 5e 3c 6c 	movzwl 0x6c3c(%r14,%r11,2),%eax
   14328:	00 00 
   1432a:	c1 e8 04             	shr    $0x4,%eax
   1432d:	48 83 f0 7f          	xor    $0x7f,%rax
   14331:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   14335:	89 84 24 2c 01 00 00 	mov    %eax,0x12c(%rsp)
   1433c:	41 0f b7 86 26 6d 00 	movzwl 0x6d26(%r14),%eax
   14343:	00 
   14344:	c1 e8 04             	shr    $0x4,%eax
   14347:	48 83 f0 7f          	xor    $0x7f,%rax
   1434b:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   1434f:	89 84 24 28 01 00 00 	mov    %eax,0x128(%rsp)
   14356:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1435b:	45 8d 3c 04          	lea    (%r12,%rax,1),%r15d
   1435f:	41 ff c7             	inc    %r15d
   14362:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   14367:	44 39 ff             	cmp    %r15d,%edi
   1436a:	73 67                	jae    143d3 <lzma_lzma_optimum_normal+0x1dd3>
   1436c:	41 89 fd             	mov    %edi,%r13d
   1436f:	44 89 fe             	mov    %r15d,%esi
   14372:	29 fe                	sub    %edi,%esi
   14374:	4c 89 e8             	mov    %r13,%rax
   14377:	40 f6 c6 03          	test   $0x3,%sil
   1437b:	74 3b                	je     143b8 <lzma_lzma_optimum_normal+0x1db8>
   1437d:	49 6b f5 2c          	imul   $0x2c,%r13,%rsi
   14381:	48 03 b4 24 d8 00 00 	add    0xd8(%rsp),%rsi
   14388:	00 
   14389:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1438e:	01 d8                	add    %ebx,%eax
   14390:	40 28 f8             	sub    %dil,%al
   14393:	44 0f b6 c0          	movzbl %al,%r8d
   14397:	41 83 e0 03          	and    $0x3,%r8d
   1439b:	49 f7 d8             	neg    %r8
   1439e:	31 ff                	xor    %edi,%edi
   143a0:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   143a6:	48 ff cf             	dec    %rdi
   143a9:	48 83 c6 2c          	add    $0x2c,%rsi
   143ad:	49 39 f8             	cmp    %rdi,%r8
   143b0:	75 ee                	jne    143a0 <lzma_lzma_optimum_normal+0x1da0>
   143b2:	4c 89 e8             	mov    %r13,%rax
   143b5:	48 29 f8             	sub    %rdi,%rax
   143b8:	45 89 f8             	mov    %r15d,%r8d
   143bb:	4d 29 c5             	sub    %r8,%r13
   143be:	49 83 fd fc          	cmp    $0xfffffffffffffffc,%r13
   143c2:	76 19                	jbe    143dd <lzma_lzma_optimum_normal+0x1ddd>
   143c4:	44 89 f8             	mov    %r15d,%eax
   143c7:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   143cc:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   143d1:	eb 5f                	jmp    14432 <lzma_lzma_optimum_normal+0x1e32>
   143d3:	45 89 f8             	mov    %r15d,%r8d
   143d6:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   143db:	eb 55                	jmp    14432 <lzma_lzma_optimum_normal+0x1e32>
   143dd:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   143e2:	44 01 eb             	add    %r13d,%ebx
   143e5:	48 29 c3             	sub    %rax,%rbx
   143e8:	48 6b c0 2c          	imul   $0x2c,%rax,%rax
   143ec:	48 03 84 24 d0 00 00 	add    0xd0(%rsp),%rax
   143f3:	00 
   143f4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   143fb:	00 00 00 00 00 
   14400:	c7 80 7c ff ff ff 00 	movl   $0x40000000,-0x84(%rax)
   14407:	00 00 40 
   1440a:	c7 40 a8 00 00 00 40 	movl   $0x40000000,-0x58(%rax)
   14411:	c7 40 d4 00 00 00 40 	movl   $0x40000000,-0x2c(%rax)
   14418:	c7 00 00 00 00 40    	movl   $0x40000000,(%rax)
   1441e:	48 05 b0 00 00 00    	add    $0xb0,%rax
   14424:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   14428:	75 d6                	jne    14400 <lzma_lzma_optimum_normal+0x1e00>
   1442a:	44 89 f8             	mov    %r15d,%eax
   1442d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   14432:	41 83 c4 fe          	add    $0xfffffffe,%r12d
   14436:	49 69 c3 40 04 00 00 	imul   $0x440,%r11,%rax
   1443d:	4c 01 f0             	add    %r14,%rax
   14440:	41 0f b7 b6 3e 6d 00 	movzwl 0x6d3e(%r14),%esi
   14447:	00 
   14448:	c1 ee 04             	shr    $0x4,%esi
   1444b:	0f b6 34 32          	movzbl (%rdx,%rsi,1),%esi
   1444f:	43 0f b7 bc 5e 1c 6e 	movzwl 0x6e1c(%r14,%r11,2),%edi
   14456:	00 00 
   14458:	c1 ef 04             	shr    $0x4,%edi
   1445b:	48 83 f7 7f          	xor    $0x7f,%rdi
   1445f:	0f b6 3c 3a          	movzbl (%rdx,%rdi,1),%edi
   14463:	44 01 cd             	add    %r9d,%ebp
   14466:	03 ac 24 f8 00 00 00 	add    0xf8(%rsp),%ebp
   1446d:	01 cd                	add    %ecx,%ebp
   1446f:	03 ac 24 2c 01 00 00 	add    0x12c(%rsp),%ebp
   14476:	03 ac 24 28 01 00 00 	add    0x128(%rsp),%ebp
   1447d:	42 03 ac a0 4c be 00 	add    0xbe4c(%rax,%r12,4),%ebp
   14484:	00 
   14485:	01 f5                	add    %esi,%ebp
   14487:	01 fd                	add    %edi,%ebp
   14489:	49 6b c0 2c          	imul   $0x2c,%r8,%rax
   1448d:	41 3b ac 06 f4 0e 01 	cmp    0x10ef4(%r14,%rax,1),%ebp
   14494:	00 
   14495:	0f 83 ba fa ff ff    	jae    13f55 <lzma_lzma_optimum_normal+0x1955>
   1449b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   144a0:	ff c6                	inc    %esi
   144a2:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
   144a6:	48 81 c1 f4 0e 01 00 	add    $0x10ef4,%rcx
   144ad:	89 29                	mov    %ebp,(%rcx)
   144af:	41 89 b4 06 f8 0e 01 	mov    %esi,0x10ef8(%r14,%rax,1)
   144b6:	00 
   144b7:	41 c7 84 06 fc 0e 01 	movl   $0x0,0x10efc(%r14,%rax,1)
   144be:	00 00 00 00 00 
   144c3:	66 41 c7 84 06 e8 0e 	movw   $0x101,0x10ee8(%r14,%rax,1)
   144ca:	01 00 01 01 
   144ce:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   144d3:	45 89 a4 06 ec 0e 01 	mov    %r12d,0x10eec(%r14,%rax,1)
   144da:	00 
   144db:	45 89 94 06 f0 0e 01 	mov    %r10d,0x10ef0(%r14,%rax,1)
   144e2:	00 
   144e3:	e9 72 fa ff ff       	jmp    13f5a <lzma_lzma_optimum_normal+0x195a>
   144e8:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   144ef:	00 
   144f0:	89 c1                	mov    %eax,%ecx
   144f2:	39 f8                	cmp    %edi,%eax
   144f4:	41 ba 12 00 00 00    	mov    $0x12,%r10d
   144fa:	76 23                	jbe    1451f <lzma_lzma_optimum_normal+0x1f1f>
   144fc:	31 c9                	xor    %ecx,%ecx
   144fe:	66 90                	xchg   %ax,%ax
   14500:	89 c8                	mov    %ecx,%eax
   14502:	ff c1                	inc    %ecx
   14504:	41 3b bc c6 f4 02 00 	cmp    0x2f4(%r14,%rax,8),%edi
   1450b:	00 
   1450c:	77 f2                	ja     14500 <lzma_lzma_optimum_normal+0x1f00>
   1450e:	89 8c 24 8c 00 00 00 	mov    %ecx,0x8c(%rsp)
   14515:	41 89 bc c6 f4 02 00 	mov    %edi,0x2f4(%r14,%rax,8)
   1451c:	00 
   1451d:	89 f9                	mov    %edi,%ecx
   1451f:	3b 4c 24 38          	cmp    0x38(%rsp),%ecx
   14523:	0f 82 17 f0 ff ff    	jb     13540 <lzma_lzma_optimum_normal+0xf40>
   14529:	41 0f b7 84 5e 1c 6d 	movzwl 0x6d1c(%r14,%rbx,2),%eax
   14530:	00 00 
   14532:	c1 e8 04             	shr    $0x4,%eax
   14535:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   14539:	44 01 e1             	add    %r12d,%ecx
   1453c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   14541:	41 39 c9             	cmp    %ecx,%r9d
   14544:	0f 83 06 01 00 00    	jae    14650 <lzma_lzma_optimum_normal+0x2050>
   1454a:	44 89 cf             	mov    %r9d,%edi
   1454d:	41 89 c8             	mov    %ecx,%r8d
   14550:	45 29 c8             	sub    %r9d,%r8d
   14553:	48 89 fe             	mov    %rdi,%rsi
   14556:	41 f6 c0 03          	test   $0x3,%r8b
   1455a:	74 72                	je     145ce <lzma_lzma_optimum_normal+0x1fce>
   1455c:	48 6b f7 2c          	imul   $0x2c,%rdi,%rsi
   14560:	48 03 b4 24 d8 00 00 	add    0xd8(%rsp),%rsi
   14567:	00 
   14568:	4c 8b 44 24 58       	mov    0x58(%rsp),%r8
   1456d:	4c 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%r10
   14574:	00 
   14575:	45 39 c2             	cmp    %r8d,%r10d
   14578:	45 0f 42 c2          	cmovb  %r10d,%r8d
   1457c:	4c 8b 54 24 78       	mov    0x78(%rsp),%r10
   14581:	45 39 d0             	cmp    %r10d,%r8d
   14584:	45 0f 43 c2          	cmovae %r10d,%r8d
   14588:	44 8b 94 24 84 00 00 	mov    0x84(%rsp),%r10d
   1458f:	00 
   14590:	45 39 d0             	cmp    %r10d,%r8d
   14593:	45 0f 43 c2          	cmovae %r10d,%r8d
   14597:	45 00 e8             	add    %r13b,%r8b
   1459a:	45 28 c8             	sub    %r9b,%r8b
   1459d:	45 0f b6 c0          	movzbl %r8b,%r8d
   145a1:	41 83 e0 03          	and    $0x3,%r8d
   145a5:	49 f7 d8             	neg    %r8
   145a8:	45 31 c9             	xor    %r9d,%r9d
   145ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   145b0:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   145b6:	49 ff c9             	dec    %r9
   145b9:	48 83 c6 2c          	add    $0x2c,%rsi
   145bd:	4d 39 c8             	cmp    %r9,%r8
   145c0:	75 ee                	jne    145b0 <lzma_lzma_optimum_normal+0x1fb0>
   145c2:	48 89 fe             	mov    %rdi,%rsi
   145c5:	4c 29 ce             	sub    %r9,%rsi
   145c8:	41 ba 12 00 00 00    	mov    $0x12,%r10d
   145ce:	41 89 c8             	mov    %ecx,%r8d
   145d1:	4c 29 c7             	sub    %r8,%rdi
   145d4:	48 83 ff fc          	cmp    $0xfffffffffffffffc,%rdi
   145d8:	77 71                	ja     1464b <lzma_lzma_optimum_normal+0x204b>
   145da:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   145df:	4c 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%r8
   145e6:	00 
   145e7:	41 39 f8             	cmp    %edi,%r8d
   145ea:	44 0f 43 c7          	cmovae %edi,%r8d
   145ee:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   145f3:	41 39 f8             	cmp    %edi,%r8d
   145f6:	44 0f 43 c7          	cmovae %edi,%r8d
   145fa:	8b bc 24 84 00 00 00 	mov    0x84(%rsp),%edi
   14601:	41 39 f8             	cmp    %edi,%r8d
   14604:	44 0f 43 c7          	cmovae %edi,%r8d
   14608:	45 01 e8             	add    %r13d,%r8d
   1460b:	48 6b fe 2c          	imul   $0x2c,%rsi,%rdi
   1460f:	4c 29 c6             	sub    %r8,%rsi
   14612:	48 03 bc 24 d0 00 00 	add    0xd0(%rsp),%rdi
   14619:	00 
   1461a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14620:	c7 87 7c ff ff ff 00 	movl   $0x40000000,-0x84(%rdi)
   14627:	00 00 40 
   1462a:	c7 47 a8 00 00 00 40 	movl   $0x40000000,-0x58(%rdi)
   14631:	c7 47 d4 00 00 00 40 	movl   $0x40000000,-0x2c(%rdi)
   14638:	c7 07 00 00 00 40    	movl   $0x40000000,(%rdi)
   1463e:	48 81 c7 b0 00 00 00 	add    $0xb0,%rdi
   14645:	48 83 c6 04          	add    $0x4,%rsi
   14649:	75 d5                	jne    14620 <lzma_lzma_optimum_normal+0x2020>
   1464b:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   14650:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   14655:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1465a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14660:	ff c7                	inc    %edi
   14662:	41 3b b4 fe f4 02 00 	cmp    0x2f4(%r14,%rdi,8),%esi
   14669:	00 
   1466a:	77 f4                	ja     14660 <lzma_lzma_optimum_normal+0x2060>
   1466c:	31 c9                	xor    %ecx,%ecx
   1466e:	83 fb 07             	cmp    $0x7,%ebx
   14671:	0f 93 c1             	setae  %cl
   14674:	01 84 24 c8 00 00 00 	add    %eax,0xc8(%rsp)
   1467b:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   1467f:	48 83 c1 07          	add    $0x7,%rcx
   14683:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   14688:	ff c0                	inc    %eax
   1468a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1468f:	c1 e1 05             	shl    $0x5,%ecx
   14692:	4c 01 f1             	add    %r14,%rcx
   14695:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
   1469c:	00 
   1469d:	41 89 f3             	mov    %esi,%r11d
   146a0:	eb 24                	jmp    146c6 <lzma_lzma_optimum_normal+0x20c6>
   146a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   146a9:	1f 84 00 00 00 00 00 
   146b0:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   146b5:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   146bc:	ff c7                	inc    %edi
   146be:	39 c7                	cmp    %eax,%edi
   146c0:	0f 84 7a ee ff ff    	je     13540 <lzma_lzma_optimum_normal+0xf40>
   146c6:	44 89 dd             	mov    %r11d,%ebp
   146c9:	89 ff                	mov    %edi,%edi
   146cb:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   146d2:	00 
   146d3:	01 e8                	add    %ebp,%eax
   146d5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   146da:	44 8d 5d fe          	lea    -0x2(%rbp),%r11d
   146de:	45 31 c0             	xor    %r8d,%r8d
   146e1:	41 bd 24 00 00 00    	mov    $0x24,%r13d
   146e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   146ee:	00 00 
   146f0:	41 8d 04 28          	lea    (%r8,%rbp,1),%eax
   146f4:	45 8b 8c fe f8 02 00 	mov    0x2f8(%r14,%rdi,8),%r9d
   146fb:	00 
   146fc:	83 f8 06             	cmp    $0x6,%eax
   146ff:	42 8d 5c 05 fe       	lea    -0x2(%rbp,%r8,1),%ebx
   14704:	b9 03 00 00 00       	mov    $0x3,%ecx
   14709:	0f 42 cb             	cmovb  %ebx,%ecx
   1470c:	89 ce                	mov    %ecx,%esi
   1470e:	49 83 f9 7f          	cmp    $0x7f,%r9
   14712:	77 1c                	ja     14730 <lzma_lzma_optimum_normal+0x2130>
   14714:	48 c1 e6 09          	shl    $0x9,%rsi
   14718:	4c 01 f6             	add    %r14,%rsi
   1471b:	46 8b bc 8e 90 06 01 	mov    0x10690(%rsi,%r9,4),%r15d
   14722:	00 
   14723:	eb 74                	jmp    14799 <lzma_lzma_optimum_normal+0x2199>
   14725:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1472c:	00 00 00 00 
   14730:	45 85 c9             	test   %r9d,%r9d
   14733:	b9 1e 00 00 00       	mov    $0x1e,%ecx
   14738:	41 0f 49 ca          	cmovns %r10d,%ecx
   1473c:	41 bf 3c 00 00 00    	mov    $0x3c,%r15d
   14742:	45 0f 49 fd          	cmovns %r13d,%r15d
   14746:	41 81 f9 00 00 08 00 	cmp    $0x80000,%r9d
   1474d:	41 bc 06 00 00 00    	mov    $0x6,%r12d
   14753:	41 0f 42 cc          	cmovb  %r12d,%ecx
   14757:	41 bc 0c 00 00 00    	mov    $0xc,%r12d
   1475d:	45 0f 42 fc          	cmovb  %r12d,%r15d
   14761:	4d 89 cc             	mov    %r9,%r12
   14764:	49 d3 ec             	shr    %cl,%r12
   14767:	48 8d 0d 92 39 01 00 	lea    0x13992(%rip),%rcx        # 28100 <lzma_fastpos>
   1476e:	42 0f b6 0c 21       	movzbl (%rcx,%r12,1),%ecx
   14773:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   14778:	44 01 f9             	add    %r15d,%ecx
   1477b:	48 c1 e6 08          	shl    $0x8,%rsi
   1477f:	4c 01 f6             	add    %r14,%rsi
   14782:	45 89 cf             	mov    %r9d,%r15d
   14785:	41 83 e7 0f          	and    $0xf,%r15d
   14789:	47 8b bc be 98 0e 01 	mov    0x10e98(%r14,%r15,4),%r15d
   14790:	00 
   14791:	44 03 bc 8e 90 02 01 	add    0x10290(%rsi,%rcx,4),%r15d
   14798:	00 
   14799:	44 03 bc 24 c8 00 00 	add    0xc8(%rsp),%r15d
   147a0:	00 
   147a1:	43 8d 0c 03          	lea    (%r11,%r8,1),%ecx
   147a5:	89 c9                	mov    %ecx,%ecx
   147a7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   147ac:	4c 01 f6             	add    %r14,%rsi
   147af:	44 03 bc 8e 04 76 00 	add    0x7604(%rsi,%rcx,4),%r15d
   147b6:	00 
   147b7:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   147bc:	44 01 c1             	add    %r8d,%ecx
   147bf:	ff c1                	inc    %ecx
   147c1:	48 6b c9 2c          	imul   $0x2c,%rcx,%rcx
   147c5:	45 3b bc 0e f4 0e 01 	cmp    0x10ef4(%r14,%rcx,1),%r15d
   147cc:	00 
   147cd:	73 2b                	jae    147fa <lzma_lzma_optimum_normal+0x21fa>
   147cf:	49 8d 34 0e          	lea    (%r14,%rcx,1),%rsi
   147d3:	48 81 c6 f4 0e 01 00 	add    $0x10ef4,%rsi
   147da:	44 89 3e             	mov    %r15d,(%rsi)
   147dd:	45 89 a4 0e f8 0e 01 	mov    %r12d,0x10ef8(%r14,%rcx,1)
   147e4:	00 
   147e5:	41 8d 71 04          	lea    0x4(%r9),%esi
   147e9:	41 89 b4 0e fc 0e 01 	mov    %esi,0x10efc(%r14,%rcx,1)
   147f0:	00 
   147f1:	41 c6 84 0e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%rcx,1)
   147f8:	00 00 
   147fa:	83 c3 02             	add    $0x2,%ebx
   147fd:	41 3b 9c fe f4 02 00 	cmp    0x2f4(%r14,%rdi,8),%ebx
   14804:	00 
   14805:	74 09                	je     14810 <lzma_lzma_optimum_normal+0x2210>
   14807:	41 ff c0             	inc    %r8d
   1480a:	e9 e1 fe ff ff       	jmp    146f0 <lzma_lzma_optimum_normal+0x20f0>
   1480f:	90                   	nop
   14810:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   14815:	44 01 c1             	add    %r8d,%ecx
   14818:	ff c1                	inc    %ecx
   1481a:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1481f:	4c 8b ac 24 18 01 00 	mov    0x118(%rsp),%r13
   14826:	00 
   14827:	4d 29 cd             	sub    %r9,%r13
   1482a:	45 8d 1c 28          	lea    (%r8,%rbp,1),%r11d
   1482e:	41 ff c3             	inc    %r11d
   14831:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   14836:	01 c1                	add    %eax,%ecx
   14838:	8b b4 24 a8 00 00 00 	mov    0xa8(%rsp),%esi
   1483f:	39 f1                	cmp    %esi,%ecx
   14841:	0f 43 ce             	cmovae %esi,%ecx
   14844:	44 89 db             	mov    %r11d,%ebx
   14847:	41 39 cb             	cmp    %ecx,%r11d
   1484a:	73 2c                	jae    14878 <lzma_lzma_optimum_normal+0x2278>
   1484c:	89 c9                	mov    %ecx,%ecx
   1484e:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   14853:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1485a:	84 00 00 00 00 00 
   14860:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   14865:	0f b6 34 1e          	movzbl (%rsi,%rbx,1),%esi
   14869:	41 3a 74 1d 00       	cmp    0x0(%r13,%rbx,1),%sil
   1486e:	75 08                	jne    14878 <lzma_lzma_optimum_normal+0x2278>
   14870:	48 ff c3             	inc    %rbx
   14873:	48 39 cb             	cmp    %rcx,%rbx
   14876:	72 e8                	jb     14860 <lzma_lzma_optimum_normal+0x2260>
   14878:	89 e9                	mov    %ebp,%ecx
   1487a:	f7 d1                	not    %ecx
   1487c:	01 d9                	add    %ebx,%ecx
   1487e:	44 29 c1             	sub    %r8d,%ecx
   14881:	83 f9 02             	cmp    $0x2,%ecx
   14884:	0f 82 26 fe ff ff    	jb     146b0 <lzma_lzma_optimum_normal+0x20b0>
   1488a:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   14891:	00 
   14892:	44 89 9c 24 a0 00 00 	mov    %r11d,0xa0(%rsp)
   14899:	00 
   1489a:	48 8b 8c 24 08 01 00 	mov    0x108(%rsp),%rcx
   148a1:	00 
   148a2:	8d 34 08             	lea    (%rax,%rcx,1),%esi
   148a5:	41 89 f2             	mov    %esi,%r10d
   148a8:	44 23 54 24 44       	and    0x44(%rsp),%r10d
   148ad:	48 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%rcx
   148b4:	00 
   148b5:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   148ba:	42 0f b7 8c 51 9c 6b 	movzwl 0x6b9c(%rcx,%r10,2),%ecx
   148c1:	00 00 
   148c3:	c1 e9 04             	shr    $0x4,%ecx
   148c6:	0f b6 0c 0a          	movzbl (%rdx,%rcx,1),%ecx
   148ca:	89 8c 24 88 00 00 00 	mov    %ecx,0x88(%rsp)
   148d1:	41 8d 0c 28          	lea    (%r8,%rbp,1),%ecx
   148d5:	ff c9                	dec    %ecx
   148d7:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   148dc:	45 0f b6 1c 0c       	movzbl (%r12,%rcx,1),%r11d
   148e1:	23 b4 24 e4 00 00 00 	and    0xe4(%rsp),%esi
   148e8:	41 0f b6 8e 94 0b 00 	movzbl 0xb94(%r14),%ecx
   148ef:	00 
   148f0:	d3 e6                	shl    %cl,%esi
   148f2:	49 89 d2             	mov    %rdx,%r10
   148f5:	89 c2                	mov    %eax,%edx
   148f7:	45 0f b6 6c 15 00    	movzbl 0x0(%r13,%rdx,1),%r13d
   148fd:	b0 08                	mov    $0x8,%al
   148ff:	28 c8                	sub    %cl,%al
   14901:	89 c1                	mov    %eax,%ecx
   14903:	41 d3 eb             	shr    %cl,%r11d
   14906:	45 0f b6 24 14       	movzbl (%r12,%rdx,1),%r12d
   1490b:	41 01 f3             	add    %esi,%r11d
   1490e:	4b 8d 04 5b          	lea    (%r11,%r11,2),%rax
   14912:	48 c1 e0 09          	shl    $0x9,%rax
   14916:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
   1491a:	48 81 c6 9c 0b 00 00 	add    $0xb9c,%rsi
   14921:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   14928:	31 c0                	xor    %eax,%eax
   1492a:	41 bb 00 01 00 00    	mov    $0x100,%r11d
   14930:	45 01 ed             	add    %r13d,%r13d
   14933:	44 89 ea             	mov    %r13d,%edx
   14936:	44 21 da             	and    %r11d,%edx
   14939:	44 89 e1             	mov    %r12d,%ecx
   1493c:	c1 e9 08             	shr    $0x8,%ecx
   1493f:	44 01 d9             	add    %r11d,%ecx
   14942:	01 d1                	add    %edx,%ecx
   14944:	0f b7 0c 4e          	movzwl (%rsi,%rcx,2),%ecx
   14948:	41 0f be d4          	movsbl %r12b,%edx
   1494c:	c1 ea 07             	shr    $0x7,%edx
   1494f:	81 e2 f0 07 00 00    	and    $0x7f0,%edx
   14955:	31 ca                	xor    %ecx,%edx
   14957:	c1 ea 04             	shr    $0x4,%edx
   1495a:	41 0f b6 0c 12       	movzbl (%r10,%rdx,1),%ecx
   1495f:	01 c8                	add    %ecx,%eax
   14961:	43 8d 0c 24          	lea    (%r12,%r12,1),%ecx
   14965:	89 ca                	mov    %ecx,%edx
   14967:	44 31 ea             	xor    %r13d,%edx
   1496a:	f7 d2                	not    %edx
   1496c:	41 21 d3             	and    %edx,%r11d
   1496f:	41 81 fc 00 80 00 00 	cmp    $0x8000,%r12d
   14976:	41 89 cc             	mov    %ecx,%r12d
   14979:	72 b5                	jb     14930 <lzma_lzma_optimum_normal+0x2330>
   1497b:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
   14980:	41 ff c3             	inc    %r11d
   14983:	44 23 5c 24 44       	and    0x44(%rsp),%r11d
   14988:	43 0f b7 8c 5e 1c 6c 	movzwl 0x6c1c(%r14,%r11,2),%ecx
   1498f:	00 00 
   14991:	c1 e9 04             	shr    $0x4,%ecx
   14994:	48 83 f1 7f          	xor    $0x7f,%rcx
   14998:	41 0f b6 0c 0a       	movzbl (%r10,%rcx,1),%ecx
   1499d:	89 4c 24 54          	mov    %ecx,0x54(%rsp)
   149a1:	41 0f b7 8e 24 6d 00 	movzwl 0x6d24(%r14),%ecx
   149a8:	00 
   149a9:	c1 e9 04             	shr    $0x4,%ecx
   149ac:	48 83 f1 7f          	xor    $0x7f,%rcx
   149b0:	41 0f b6 0c 0a       	movzbl (%r10,%rcx,1),%ecx
   149b5:	89 8c 24 98 00 00 00 	mov    %ecx,0x98(%rsp)
   149bc:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   149c1:	44 01 c1             	add    %r8d,%ecx
   149c4:	48 8b 94 24 10 01 00 	mov    0x110(%rsp),%rdx
   149cb:	00 
   149cc:	44 8d 64 0a 02       	lea    0x2(%rdx,%rcx,1),%r12d
   149d1:	44 89 e1             	mov    %r12d,%ecx
   149d4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   149d9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   149de:	44 39 e2             	cmp    %r12d,%edx
   149e1:	73 7d                	jae    14a60 <lzma_lzma_optimum_normal+0x2460>
   149e3:	4d 89 da             	mov    %r11,%r10
   149e6:	41 89 d5             	mov    %edx,%r13d
   149e9:	44 89 e1             	mov    %r12d,%ecx
   149ec:	29 d1                	sub    %edx,%ecx
   149ee:	4d 89 eb             	mov    %r13,%r11
   149f1:	f6 c1 03             	test   $0x3,%cl
   149f4:	74 42                	je     14a38 <lzma_lzma_optimum_normal+0x2438>
   149f6:	49 6b f5 2c          	imul   $0x2c,%r13,%rsi
   149fa:	48 03 b4 24 d8 00 00 	add    0xd8(%rsp),%rsi
   14a01:	00 
   14a02:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   14a07:	01 d9                	add    %ebx,%ecx
   14a09:	28 d1                	sub    %dl,%cl
   14a0b:	44 0f b6 d9          	movzbl %cl,%r11d
   14a0f:	41 83 e3 03          	and    $0x3,%r11d
   14a13:	49 f7 db             	neg    %r11
   14a16:	31 c9                	xor    %ecx,%ecx
   14a18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14a1f:	00 
   14a20:	c7 06 00 00 00 40    	movl   $0x40000000,(%rsi)
   14a26:	48 ff c9             	dec    %rcx
   14a29:	48 83 c6 2c          	add    $0x2c,%rsi
   14a2d:	49 39 cb             	cmp    %rcx,%r11
   14a30:	75 ee                	jne    14a20 <lzma_lzma_optimum_normal+0x2420>
   14a32:	4d 89 eb             	mov    %r13,%r11
   14a35:	49 29 cb             	sub    %rcx,%r11
   14a38:	4c 2b 6c 24 48       	sub    0x48(%rsp),%r13
   14a3d:	49 83 fd fc          	cmp    $0xfffffffffffffffc,%r13
   14a41:	76 24                	jbe    14a67 <lzma_lzma_optimum_normal+0x2467>
   14a43:	44 89 e1             	mov    %r12d,%ecx
   14a46:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   14a4b:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   14a50:	eb 65                	jmp    14ab7 <lzma_lzma_optimum_normal+0x24b7>
   14a52:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   14a59:	1f 84 00 00 00 00 00 
   14a60:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   14a65:	eb 53                	jmp    14aba <lzma_lzma_optimum_normal+0x24ba>
   14a67:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   14a6c:	42 8d 34 2b          	lea    (%rbx,%r13,1),%esi
   14a70:	4c 29 de             	sub    %r11,%rsi
   14a73:	4d 6b db 2c          	imul   $0x2c,%r11,%r11
   14a77:	4c 03 9c 24 d0 00 00 	add    0xd0(%rsp),%r11
   14a7e:	00 
   14a7f:	90                   	nop
   14a80:	41 c7 83 7c ff ff ff 	movl   $0x40000000,-0x84(%r11)
   14a87:	00 00 00 40 
   14a8b:	41 c7 43 a8 00 00 00 	movl   $0x40000000,-0x58(%r11)
   14a92:	40 
   14a93:	41 c7 43 d4 00 00 00 	movl   $0x40000000,-0x2c(%r11)
   14a9a:	40 
   14a9b:	41 c7 03 00 00 00 40 	movl   $0x40000000,(%r11)
   14aa2:	49 81 c3 b0 00 00 00 	add    $0xb0,%r11
   14aa9:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
   14aad:	75 d1                	jne    14a80 <lzma_lzma_optimum_normal+0x2480>
   14aaf:	44 89 e1             	mov    %r12d,%ecx
   14ab2:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   14ab7:	4d 89 d3             	mov    %r10,%r11
   14aba:	29 eb                	sub    %ebp,%ebx
   14abc:	44 29 c3             	sub    %r8d,%ebx
   14abf:	83 c3 fd             	add    $0xfffffffd,%ebx
   14ac2:	49 69 cb 40 04 00 00 	imul   $0x440,%r11,%rcx
   14ac9:	4c 01 f1             	add    %r14,%rcx
   14acc:	41 0f b7 96 3c 6d 00 	movzwl 0x6d3c(%r14),%edx
   14ad3:	00 
   14ad4:	c1 ea 04             	shr    $0x4,%edx
   14ad7:	4c 8d 15 c2 57 01 00 	lea    0x157c2(%rip),%r10        # 2a2a0 <lzma_rc_prices>
   14ade:	41 0f b6 14 12       	movzbl (%r10,%rdx,1),%edx
   14ae3:	43 0f b7 b4 5e fc 6d 	movzwl 0x6dfc(%r14,%r11,2),%esi
   14aea:	00 00 
   14aec:	c1 ee 04             	shr    $0x4,%esi
   14aef:	48 83 f6 7f          	xor    $0x7f,%rsi
   14af3:	41 0f b6 34 32       	movzbl (%r10,%rsi,1),%esi
   14af8:	44 03 bc 24 88 00 00 	add    0x88(%rsp),%r15d
   14aff:	00 
   14b00:	41 01 c7             	add    %eax,%r15d
   14b03:	44 03 7c 24 54       	add    0x54(%rsp),%r15d
   14b08:	44 03 bc 24 98 00 00 	add    0x98(%rsp),%r15d
   14b0f:	00 
   14b10:	44 03 bc 99 4c be 00 	add    0xbe4c(%rcx,%rbx,4),%r15d
   14b17:	00 
   14b18:	41 01 d7             	add    %edx,%r15d
   14b1b:	41 01 f7             	add    %esi,%r15d
   14b1e:	48 6b 44 24 48 2c    	imul   $0x2c,0x48(%rsp),%rax
   14b24:	45 3b bc 06 f4 0e 01 	cmp    0x10ef4(%r14,%rax,1),%r15d
   14b2b:	00 
   14b2c:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   14b31:	44 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%r11d
   14b38:	00 
   14b39:	73 49                	jae    14b84 <lzma_lzma_optimum_normal+0x2584>
   14b3b:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   14b40:	44 01 c1             	add    %r8d,%ecx
   14b43:	83 c1 02             	add    $0x2,%ecx
   14b46:	49 8d 94 06 f4 0e 01 	lea    0x10ef4(%r14,%rax,1),%rdx
   14b4d:	00 
   14b4e:	44 89 3a             	mov    %r15d,(%rdx)
   14b51:	41 89 8c 06 f8 0e 01 	mov    %ecx,0x10ef8(%r14,%rax,1)
   14b58:	00 
   14b59:	41 c7 84 06 fc 0e 01 	movl   $0x0,0x10efc(%r14,%rax,1)
   14b60:	00 00 00 00 00 
   14b65:	66 41 c7 84 06 e8 0e 	movw   $0x101,0x10ee8(%r14,%rax,1)
   14b6c:	01 00 01 01 
   14b70:	45 89 a4 06 ec 0e 01 	mov    %r12d,0x10eec(%r14,%rax,1)
   14b77:	00 
   14b78:	41 8d 49 04          	lea    0x4(%r9),%ecx
   14b7c:	41 89 8c 06 f0 0e 01 	mov    %ecx,0x10ef0(%r14,%rax,1)
   14b83:	00 
   14b84:	48 8d 15 15 57 01 00 	lea    0x15715(%rip),%rdx        # 2a2a0 <lzma_rc_prices>
   14b8b:	41 ba 12 00 00 00    	mov    $0x12,%r10d
   14b91:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   14b98:	ff c7                	inc    %edi
   14b9a:	39 c7                	cmp    %eax,%edi
   14b9c:	0f 85 24 fb ff ff    	jne    146c6 <lzma_lzma_optimum_normal+0x20c6>
   14ba2:	e9 99 e9 ff ff       	jmp    13540 <lzma_lzma_optimum_normal+0xf40>
   14ba7:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   14bae:	00 
   14baf:	42 0f b7 84 68 7c 6d 	movzwl 0x6d7c(%rax,%r13,2),%eax
   14bb6:	00 00 
   14bb8:	c1 e8 04             	shr    $0x4,%eax
   14bbb:	48 83 f0 7f          	xor    $0x7f,%rax
   14bbf:	4c 8d 1d da 56 01 00 	lea    0x156da(%rip),%r11        # 2a2a0 <lzma_rc_prices>
   14bc6:	41 0f b6 14 03       	movzbl (%r11,%rax,1),%edx
   14bcb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14bd0:	41 0f b7 84 46 34 6d 	movzwl 0x6d34(%r14,%rax,2),%eax
   14bd7:	00 00 
   14bd9:	c1 e8 04             	shr    $0x4,%eax
   14bdc:	41 0f b6 04 03       	movzbl (%r11,%rax,1),%eax
   14be1:	01 f0                	add    %esi,%eax
   14be3:	01 d0                	add    %edx,%eax
   14be5:	89 fa                	mov    %edi,%edx
   14be7:	4c 6b da 2c          	imul   $0x2c,%rdx,%r11
   14beb:	4d 01 f3             	add    %r14,%r11
   14bee:	49 81 c3 fc 0e 01 00 	add    $0x10efc,%r11
   14bf5:	49 69 dd 40 04 00 00 	imul   $0x440,%r13,%rbx
   14bfc:	4c 01 f3             	add    %r14,%rbx
   14bff:	48 81 c3 44 be 00 00 	add    $0xbe44,%rbx
   14c06:	48 ff ca             	dec    %rdx
   14c09:	eb 1e                	jmp    14c29 <lzma_lzma_optimum_normal+0x2629>
   14c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14c10:	49 83 c3 d4          	add    $0xffffffffffffffd4,%r11
   14c14:	49 89 d7             	mov    %rdx,%r15
   14c17:	49 ff cf             	dec    %r15
   14c1a:	f7 c2 fe ff ff ff    	test   $0xfffffffe,%edx
   14c20:	4c 89 fa             	mov    %r15,%rdx
   14c23:	0f 84 ae e6 ff ff    	je     132d7 <lzma_lzma_optimum_normal+0xcd7>
   14c29:	8b 6c 93 04          	mov    0x4(%rbx,%rdx,4),%ebp
   14c2d:	01 c5                	add    %eax,%ebp
   14c2f:	41 3b 6b f8          	cmp    -0x8(%r11),%ebp
   14c33:	73 db                	jae    14c10 <lzma_lzma_optimum_normal+0x2610>
   14c35:	41 89 6b f8          	mov    %ebp,-0x8(%r11)
   14c39:	49 c7 43 fc 00 00 00 	movq   $0x0,-0x4(%r11)
   14c40:	00 
   14c41:	41 c6 43 ec 00       	movb   $0x0,-0x14(%r11)
   14c46:	eb c8                	jmp    14c10 <lzma_lzma_optimum_normal+0x2610>
   14c48:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   14c4d:	41 0f b7 84 5e 34 6d 	movzwl 0x6d34(%r14,%rbx,2),%eax
   14c54:	00 00 
   14c56:	c1 e8 04             	shr    $0x4,%eax
   14c59:	48 83 f0 7f          	xor    $0x7f,%rax
   14c5d:	4c 8d 1d 3c 56 01 00 	lea    0x1563c(%rip),%r11        # 2a2a0 <lzma_rc_prices>
   14c64:	41 0f b6 04 03       	movzbl (%r11,%rax,1),%eax
   14c69:	41 0f b7 94 5e 4c 6d 	movzwl 0x6d4c(%r14,%rbx,2),%edx
   14c70:	00 00 
   14c72:	c1 ea 04             	shr    $0x4,%edx
   14c75:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   14c7a:	01 f0                	add    %esi,%eax
   14c7c:	01 d0                	add    %edx,%eax
   14c7e:	44 89 c2             	mov    %r8d,%edx
   14c81:	4c 6b c2 2c          	imul   $0x2c,%rdx,%r8
   14c85:	4d 01 f0             	add    %r14,%r8
   14c88:	49 81 c0 fc 0e 01 00 	add    $0x10efc,%r8
   14c8f:	4d 69 dd 40 04 00 00 	imul   $0x440,%r13,%r11
   14c96:	4d 01 f3             	add    %r14,%r11
   14c99:	49 81 c3 44 be 00 00 	add    $0xbe44,%r11
   14ca0:	48 ff ca             	dec    %rdx
   14ca3:	48 bb 00 00 00 00 01 	movabs $0x100000000,%rbx
   14caa:	00 00 00 
   14cad:	eb 1a                	jmp    14cc9 <lzma_lzma_optimum_normal+0x26c9>
   14caf:	90                   	nop
   14cb0:	49 83 c0 d4          	add    $0xffffffffffffffd4,%r8
   14cb4:	49 89 d7             	mov    %rdx,%r15
   14cb7:	49 ff cf             	dec    %r15
   14cba:	f7 c2 fe ff ff ff    	test   $0xfffffffe,%edx
   14cc0:	4c 89 fa             	mov    %r15,%rdx
   14cc3:	0f 84 18 e6 ff ff    	je     132e1 <lzma_lzma_optimum_normal+0xce1>
   14cc9:	41 8b 6c 93 04       	mov    0x4(%r11,%rdx,4),%ebp
   14cce:	01 c5                	add    %eax,%ebp
   14cd0:	41 3b 68 f8          	cmp    -0x8(%r8),%ebp
   14cd4:	73 da                	jae    14cb0 <lzma_lzma_optimum_normal+0x26b0>
   14cd6:	41 89 68 f8          	mov    %ebp,-0x8(%r8)
   14cda:	49 89 58 fc          	mov    %rbx,-0x4(%r8)
   14cde:	41 c6 40 ec 00       	movb   $0x0,-0x14(%r8)
   14ce3:	eb cb                	jmp    14cb0 <lzma_lzma_optimum_normal+0x26b0>
   14ce5:	43 0f b7 84 7e 64 6d 	movzwl 0x6d64(%r14,%r15,2),%eax
   14cec:	00 00 
   14cee:	c1 e8 04             	shr    $0x4,%eax
   14cf1:	4c 8d 1d a8 55 01 00 	lea    0x155a8(%rip),%r11        # 2a2a0 <lzma_rc_prices>
   14cf8:	41 0f b6 04 03       	movzbl (%r11,%rax,1),%eax
   14cfd:	43 0f b7 94 7e 4c 6d 	movzwl 0x6d4c(%r14,%r15,2),%edx
   14d04:	00 00 
   14d06:	c1 ea 04             	shr    $0x4,%edx
   14d09:	48 83 f2 7f          	xor    $0x7f,%rdx
   14d0d:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
   14d12:	47 0f b7 84 7e 34 6d 	movzwl 0x6d34(%r14,%r15,2),%r8d
   14d19:	00 00 
   14d1b:	41 c1 e8 04          	shr    $0x4,%r8d
   14d1f:	49 83 f0 7f          	xor    $0x7f,%r8
   14d23:	47 0f b6 04 03       	movzbl (%r11,%r8,1),%r8d
   14d28:	01 f0                	add    %esi,%eax
   14d2a:	01 d0                	add    %edx,%eax
   14d2c:	44 01 c0             	add    %r8d,%eax
   14d2f:	44 89 d2             	mov    %r10d,%edx
   14d32:	4c 6b c2 2c          	imul   $0x2c,%rdx,%r8
   14d36:	4d 01 f0             	add    %r14,%r8
   14d39:	49 81 c0 fc 0e 01 00 	add    $0x10efc,%r8
   14d40:	4d 69 d5 40 04 00 00 	imul   $0x440,%r13,%r10
   14d47:	4d 01 f2             	add    %r14,%r10
   14d4a:	49 81 c2 44 be 00 00 	add    $0xbe44,%r10
   14d51:	48 ff ca             	dec    %rdx
   14d54:	49 bb 00 00 00 00 02 	movabs $0x200000000,%r11
   14d5b:	00 00 00 
   14d5e:	eb 19                	jmp    14d79 <lzma_lzma_optimum_normal+0x2779>
   14d60:	49 83 c0 d4          	add    $0xffffffffffffffd4,%r8
   14d64:	48 89 d3             	mov    %rdx,%rbx
   14d67:	48 ff cb             	dec    %rbx
   14d6a:	f7 c2 fe ff ff ff    	test   $0xfffffffe,%edx
   14d70:	48 89 da             	mov    %rbx,%rdx
   14d73:	0f 84 77 e5 ff ff    	je     132f0 <lzma_lzma_optimum_normal+0xcf0>
   14d79:	41 8b 5c 92 04       	mov    0x4(%r10,%rdx,4),%ebx
   14d7e:	01 c3                	add    %eax,%ebx
   14d80:	41 3b 58 f8          	cmp    -0x8(%r8),%ebx
   14d84:	73 da                	jae    14d60 <lzma_lzma_optimum_normal+0x2760>
   14d86:	41 89 58 f8          	mov    %ebx,-0x8(%r8)
   14d8a:	4d 89 58 fc          	mov    %r11,-0x4(%r8)
   14d8e:	41 c6 40 ec 00       	movb   $0x0,-0x14(%r8)
   14d93:	eb cb                	jmp    14d60 <lzma_lzma_optimum_normal+0x2760>
   14d95:	43 0f b7 84 7e 64 6d 	movzwl 0x6d64(%r14,%r15,2),%eax
   14d9c:	00 00 
   14d9e:	c1 e8 04             	shr    $0x4,%eax
   14da1:	48 83 f0 7f          	xor    $0x7f,%rax
   14da5:	4c 8d 15 f4 54 01 00 	lea    0x154f4(%rip),%r10        # 2a2a0 <lzma_rc_prices>
   14dac:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
   14db1:	43 0f b7 94 7e 4c 6d 	movzwl 0x6d4c(%r14,%r15,2),%edx
   14db8:	00 00 
   14dba:	c1 ea 04             	shr    $0x4,%edx
   14dbd:	48 83 f2 7f          	xor    $0x7f,%rdx
   14dc1:	41 0f b6 14 12       	movzbl (%r10,%rdx,1),%edx
   14dc6:	47 0f b7 84 7e 34 6d 	movzwl 0x6d34(%r14,%r15,2),%r8d
   14dcd:	00 00 
   14dcf:	41 c1 e8 04          	shr    $0x4,%r8d
   14dd3:	49 83 f0 7f          	xor    $0x7f,%r8
   14dd7:	47 0f b6 04 02       	movzbl (%r10,%r8,1),%r8d
   14ddc:	41 01 d0             	add    %edx,%r8d
   14ddf:	01 c6                	add    %eax,%esi
   14de1:	44 01 c6             	add    %r8d,%esi
   14de4:	44 89 c8             	mov    %r9d,%eax
   14de7:	48 6b d0 2c          	imul   $0x2c,%rax,%rdx
   14deb:	4c 01 f2             	add    %r14,%rdx
   14dee:	48 81 c2 fc 0e 01 00 	add    $0x10efc,%rdx
   14df5:	4d 69 c5 40 04 00 00 	imul   $0x440,%r13,%r8
   14dfc:	4d 01 f0             	add    %r14,%r8
   14dff:	49 81 c0 44 be 00 00 	add    $0xbe44,%r8
   14e06:	48 ff c8             	dec    %rax
   14e09:	49 b9 00 00 00 00 03 	movabs $0x300000000,%r9
   14e10:	00 00 00 
   14e13:	eb 23                	jmp    14e38 <lzma_lzma_optimum_normal+0x2838>
   14e15:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   14e1c:	00 00 00 00 
   14e20:	48 83 c2 d4          	add    $0xffffffffffffffd4,%rdx
   14e24:	49 89 c2             	mov    %rax,%r10
   14e27:	49 ff ca             	dec    %r10
   14e2a:	a9 fe ff ff ff       	test   $0xfffffffe,%eax
   14e2f:	4c 89 d0             	mov    %r10,%rax
   14e32:	0f 84 c2 e4 ff ff    	je     132fa <lzma_lzma_optimum_normal+0xcfa>
   14e38:	45 8b 54 80 04       	mov    0x4(%r8,%rax,4),%r10d
   14e3d:	41 01 f2             	add    %esi,%r10d
   14e40:	44 3b 52 f8          	cmp    -0x8(%rdx),%r10d
   14e44:	73 da                	jae    14e20 <lzma_lzma_optimum_normal+0x2820>
   14e46:	44 89 52 f8          	mov    %r10d,-0x8(%rdx)
   14e4a:	4c 89 4a fc          	mov    %r9,-0x4(%rdx)
   14e4e:	c6 42 ec 00          	movb   $0x0,-0x14(%rdx)
   14e52:	eb cc                	jmp    14e20 <lzma_lzma_optimum_normal+0x2820>
   14e54:	45 89 a6 dc 0e 01 00 	mov    %r12d,0x10edc(%r14)
   14e5b:	44 89 e0             	mov    %r12d,%eax
   14e5e:	48 6b c0 2c          	imul   $0x2c,%rax,%rax
   14e62:	41 8b bc 06 f8 0e 01 	mov    0x10ef8(%r14,%rax,1),%edi
   14e69:	00 
   14e6a:	41 8b 8c 06 fc 0e 01 	mov    0x10efc(%r14,%rax,1),%ecx
   14e71:	00 
   14e72:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   14e79:	00 
   14e7a:	eb 1e                	jmp    14e9a <lzma_lzma_optimum_normal+0x289a>
   14e7c:	45 8b 11             	mov    (%r9),%r10d
   14e7f:	43 8b bc 06 f8 0e 01 	mov    0x10ef8(%r14,%r8,1),%edi
   14e86:	00 
   14e87:	41 89 09             	mov    %ecx,(%r9)
   14e8a:	43 89 94 06 f8 0e 01 	mov    %edx,0x10ef8(%r14,%r8,1)
   14e91:	00 
   14e92:	44 89 d1             	mov    %r10d,%ecx
   14e95:	48 85 f6             	test   %rsi,%rsi
   14e98:	74 63                	je     14efd <lzma_lzma_optimum_normal+0x28fd>
   14e9a:	44 89 e2             	mov    %r12d,%edx
   14e9d:	41 89 fc             	mov    %edi,%r12d
   14ea0:	89 d6                	mov    %edx,%esi
   14ea2:	4c 6b de 2c          	imul   $0x2c,%rsi,%r11
   14ea6:	89 fe                	mov    %edi,%esi
   14ea8:	4c 6b c6 2c          	imul   $0x2c,%rsi,%r8
   14eac:	43 80 bc 1e e8 0e 01 	cmpb   $0x0,0x10ee8(%r14,%r11,1)
   14eb3:	00 00 
   14eb5:	4f 8d 8c 06 fc 0e 01 	lea    0x10efc(%r14,%r8,1),%r9
   14ebc:	00 
   14ebd:	74 bd                	je     14e7c <lzma_lzma_optimum_normal+0x287c>
   14ebf:	43 c6 84 06 e8 0e 01 	movb   $0x0,0x10ee8(%r14,%r8,1)
   14ec6:	00 00 
   14ec8:	8d 7e ff             	lea    -0x1(%rsi),%edi
   14ecb:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
   14ed1:	43 80 bc 1e e9 0e 01 	cmpb   $0x0,0x10ee9(%r14,%r11,1)
   14ed8:	00 00 
   14eda:	74 ab                	je     14e87 <lzma_lzma_optimum_normal+0x2887>
   14edc:	89 fb                	mov    %edi,%ebx
   14ede:	48 6b db 2c          	imul   $0x2c,%rbx,%rbx
   14ee2:	41 c6 84 1e e8 0e 01 	movb   $0x0,0x10ee8(%r14,%rbx,1)
   14ee9:	00 00 
   14eeb:	4f 8b 9c 1e ec 0e 01 	mov    0x10eec(%r14,%r11,1),%r11
   14ef2:	00 
   14ef3:	4d 89 9c 1e f8 0e 01 	mov    %r11,0x10ef8(%r14,%rbx,1)
   14efa:	00 
   14efb:	eb 8a                	jmp    14e87 <lzma_lzma_optimum_normal+0x2887>
   14efd:	41 8b 8e f8 0e 01 00 	mov    0x10ef8(%r14),%ecx
   14f04:	41 89 8e e0 0e 01 00 	mov    %ecx,0x10ee0(%r14)
   14f0b:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   14f12:	00 
   14f13:	89 0a                	mov    %ecx,(%rdx)
   14f15:	41 8b 8e fc 0e 01 00 	mov    0x10efc(%r14),%ecx
   14f1c:	89 08                	mov    %ecx,(%rax)
   14f1e:	e9 6c d7 ff ff       	jmp    1268f <lzma_lzma_optimum_normal+0x8f>
   14f23:	90                   	nop
   14f24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   14f2b:	00 00 00 
   14f2e:	66 90                	xchg   %ax,%ax

0000000000014f30 <lzma_lzma_decoder_create>:
   14f30:	41 57                	push   %r15
   14f32:	41 56                	push   %r14
   14f34:	53                   	push   %rbx
   14f35:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   14f39:	75 42                	jne    14f7d <lzma_lzma_decoder_create+0x4d>
   14f3b:	48 89 fb             	mov    %rdi,%rbx
   14f3e:	49 89 d6             	mov    %rdx,%r14
   14f41:	49 89 cf             	mov    %rcx,%r15
   14f44:	bf c0 6e 00 00       	mov    $0x6ec0,%edi
   14f49:	e8 72 df fe ff       	call   2ec0 <lzma_alloc>
   14f4e:	48 89 03             	mov    %rax,(%rbx)
   14f51:	48 85 c0             	test   %rax,%rax
   14f54:	74 43                	je     14f99 <lzma_lzma_decoder_create+0x69>
   14f56:	48 8d 05 53 00 00 00 	lea    0x53(%rip),%rax        # 14fb0 <lzma_decode>
   14f5d:	48 89 43 08          	mov    %rax,0x8(%rbx)
   14f61:	48 8d 05 08 3a 00 00 	lea    0x3a08(%rip),%rax        # 18970 <lzma_decoder_reset>
   14f68:	48 89 43 10          	mov    %rax,0x10(%rbx)
   14f6c:	48 8d 05 dd 44 00 00 	lea    0x44dd(%rip),%rax        # 19450 <lzma_decoder_uncompressed>
   14f73:	48 89 43 18          	mov    %rax,0x18(%rbx)
   14f77:	4c 89 f9             	mov    %r15,%rcx
   14f7a:	4c 89 f2             	mov    %r14,%rdx
   14f7d:	8b 02                	mov    (%rdx),%eax
   14f7f:	48 89 01             	mov    %rax,(%rcx)
   14f82:	48 8b 42 08          	mov    0x8(%rdx),%rax
   14f86:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14f8a:	8b 42 10             	mov    0x10(%rdx),%eax
   14f8d:	48 89 41 10          	mov    %rax,0x10(%rcx)
   14f91:	31 c0                	xor    %eax,%eax
   14f93:	5b                   	pop    %rbx
   14f94:	41 5e                	pop    %r14
   14f96:	41 5f                	pop    %r15
   14f98:	c3                   	ret    
   14f99:	b8 05 00 00 00       	mov    $0x5,%eax
   14f9e:	5b                   	pop    %rbx
   14f9f:	41 5e                	pop    %r14
   14fa1:	41 5f                	pop    %r15
   14fa3:	c3                   	ret    
   14fa4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   14fab:	00 00 00 00 00 

0000000000014fb0 <lzma_decode>:
   14fb0:	55                   	push   %rbp
   14fb1:	41 57                	push   %r15
   14fb3:	41 56                	push   %r14
   14fb5:	41 55                	push   %r13
   14fb7:	41 54                	push   %r12
   14fb9:	53                   	push   %rbx
   14fba:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   14fc1:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   14fc6:	8b 87 74 6e 00 00    	mov    0x6e74(%rdi),%eax
   14fcc:	85 c0                	test   %eax,%eax
   14fce:	74 48                	je     15018 <lzma_decode+0x68>
   14fd0:	4c 8b 31             	mov    (%rcx),%r14
   14fd3:	ff c8                	dec    %eax
   14fd5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   14fdc:	00 00 00 00 
   14fe0:	4c 39 74 24 28       	cmp    %r14,0x28(%rsp)
   14fe5:	0f 84 5f 01 00 00    	je     1514a <lzma_decode+0x19a>
   14feb:	44 8b 8f 70 6e 00 00 	mov    0x6e70(%rdi),%r9d
   14ff2:	41 c1 e1 08          	shl    $0x8,%r9d
   14ff6:	46 0f b6 3c 32       	movzbl (%rdx,%r14,1),%r15d
   14ffb:	45 09 cf             	or     %r9d,%r15d
   14ffe:	44 89 bf 70 6e 00 00 	mov    %r15d,0x6e70(%rdi)
   15005:	49 ff c6             	inc    %r14
   15008:	4c 89 31             	mov    %r14,(%rcx)
   1500b:	89 87 74 6e 00 00    	mov    %eax,0x6e74(%rdi)
   15011:	83 c0 ff             	add    $0xffffffff,%eax
   15014:	72 ca                	jb     14fe0 <lzma_decode+0x30>
   15016:	eb 0a                	jmp    15022 <lzma_decode+0x72>
   15018:	44 8b bf 70 6e 00 00 	mov    0x6e70(%rdi),%r15d
   1501f:	4c 8b 31             	mov    (%rcx),%r14
   15022:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   15029:	00 
   1502a:	4c 8b 56 08          	mov    0x8(%rsi),%r10
   1502e:	48 8b 46 10          	mov    0x10(%rsi),%rax
   15032:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   15037:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1503b:	8b 9f 6c 6e 00 00    	mov    0x6e6c(%rdi),%ebx
   15041:	8b 8f 78 6e 00 00    	mov    0x6e78(%rdi),%ecx
   15047:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   1504b:	8b af 7c 6e 00 00    	mov    0x6e7c(%rdi),%ebp
   15051:	8b 8f 80 6e 00 00    	mov    0x6e80(%rdi),%ecx
   15057:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
   1505b:	8b 8f 84 6e 00 00    	mov    0x6e84(%rdi),%ecx
   15061:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   15065:	8b 8f 88 6e 00 00    	mov    0x6e88(%rdi),%ecx
   1506b:	89 4c 24 54          	mov    %ecx,0x54(%rsp)
   1506f:	4c 8b a7 a8 6e 00 00 	mov    0x6ea8(%rdi),%r12
   15076:	8b 8f b0 6e 00 00    	mov    0x6eb0(%rdi),%ecx
   1507c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   15081:	4c 8b af 98 6e 00 00 	mov    0x6e98(%rdi),%r13
   15088:	48 89 c1             	mov    %rax,%rcx
   1508b:	4c 29 d1             	sub    %r10,%rcx
   1508e:	4f 8d 1c 2a          	lea    (%r10,%r13,1),%r11
   15092:	49 39 cd             	cmp    %rcx,%r13
   15095:	4c 0f 43 d8          	cmovae %rax,%r11
   15099:	44 8b 8f b4 6e 00 00 	mov    0x6eb4(%rdi),%r9d
   150a0:	4c 89 ac 24 c0 00 00 	mov    %r13,0xc0(%rsp)
   150a7:	00 
   150a8:	49 83 fd ff          	cmp    $0xffffffffffffffff,%r13
   150ac:	4c 0f 44 d8          	cmove  %rax,%r11
   150b0:	4c 89 5c 24 68       	mov    %r11,0x68(%rsp)
   150b5:	8b 87 b8 6e 00 00    	mov    0x6eb8(%rdi),%eax
   150bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   150c0:	8b 87 bc 6e 00 00    	mov    0x6ebc(%rdi),%eax
   150c6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   150cb:	8b 8f a0 6e 00 00    	mov    0x6ea0(%rdi),%ecx
   150d1:	48 83 f9 46          	cmp    $0x46,%rcx
   150d5:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
   150dc:	00 
   150dd:	4c 89 94 24 a8 00 00 	mov    %r10,0xa8(%rsp)
   150e4:	00 
   150e5:	77 6a                	ja     15151 <lzma_decode+0x1a1>
   150e7:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   150ec:	48 8b 06             	mov    (%rsi),%rax
   150ef:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   150f4:	48 8b 46 20          	mov    0x20(%rsi),%rax
   150f8:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   150fd:	8b b7 8c 6e 00 00    	mov    0x6e8c(%rdi),%esi
   15103:	8b 87 94 6e 00 00    	mov    0x6e94(%rdi),%eax
   15109:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   15110:	00 
   15111:	8b 87 90 6e 00 00    	mov    0x6e90(%rdi),%eax
   15117:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1511e:	00 
   1511f:	44 89 d0             	mov    %r10d,%eax
   15122:	89 74 24 64          	mov    %esi,0x64(%rsp)
   15126:	21 f0                	and    %esi,%eax
   15128:	4c 8d 0d d1 4f 01 00 	lea    0x14fd1(%rip),%r9        # 2a100 <lzma_fastpos+0x2000>
   1512f:	49 63 0c 89          	movslq (%r9,%rcx,4),%rcx
   15133:	4c 01 c9             	add    %r9,%rcx
   15136:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   1513b:	4c 89 e6             	mov    %r12,%rsi
   1513e:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   15143:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   15148:	ff e1                	jmp    *%rcx
   1514a:	31 c0                	xor    %eax,%eax
   1514c:	e9 c6 23 00 00       	jmp    17517 <lzma_decode+0x2567>
   15151:	4c 89 d6             	mov    %r10,%rsi
   15154:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1515a:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1515f:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   15164:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   15169:	77 1b                	ja     15186 <lzma_decode+0x1d6>
   1516b:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15170:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15175:	75 16                	jne    1518d <lzma_decode+0x1dd>
   15177:	c7 87 a0 6e 00 00 00 	movl   $0x0,0x6ea0(%rdi)
   1517e:	00 00 00 
   15181:	e9 aa 2e 00 00       	jmp    18030 <lzma_decode+0x3080>
   15186:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1518b:	eb 15                	jmp    151a2 <lzma_decode+0x1f2>
   1518d:	c1 e3 08             	shl    $0x8,%ebx
   15190:	41 c1 e7 08          	shl    $0x8,%r15d
   15194:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   15199:	49 ff c6             	inc    %r14
   1519c:	44 09 f8             	or     %r15d,%eax
   1519f:	41 89 c7             	mov    %eax,%r15d
   151a2:	c7 87 a0 6e 00 00 01 	movl   $0x1,0x6ea0(%rdi)
   151a9:	00 00 00 
   151ac:	31 c9                	xor    %ecx,%ecx
   151ae:	b2 01                	mov    $0x1,%dl
   151b0:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   151b5:	e9 7a 2e 00 00       	jmp    18034 <lzma_decode+0x3084>
   151ba:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   151bf:	21 c8                	and    %ecx,%eax
   151c1:	48 83 bc 24 c0 00 00 	cmpq   $0xffffffffffffffff,0xc0(%rsp)
   151c8:	00 ff 
   151ca:	74 10                	je     151dc <lzma_decode+0x22c>
   151cc:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   151d1:	48 39 4c 24 40       	cmp    %rcx,0x40(%rsp)
   151d6:	0f 84 6a 2d 00 00    	je     17f46 <lzma_decode+0x2f96>
   151dc:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   151e2:	77 23                	ja     15207 <lzma_decode+0x257>
   151e4:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   151e9:	0f 84 5f 36 00 00    	je     1884e <lzma_decode+0x389e>
   151ef:	89 d9                	mov    %ebx,%ecx
   151f1:	c1 e1 08             	shl    $0x8,%ecx
   151f4:	41 c1 e7 08          	shl    $0x8,%r15d
   151f8:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   151fd:	49 ff c6             	inc    %r14
   15200:	45 09 cf             	or     %r9d,%r15d
   15203:	89 cb                	mov    %ecx,%ebx
   15205:	eb 02                	jmp    15209 <lzma_decode+0x259>
   15207:	89 d9                	mov    %ebx,%ecx
   15209:	c1 eb 0b             	shr    $0xb,%ebx
   1520c:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   15211:	45 89 c1             	mov    %r8d,%r9d
   15214:	41 89 c3             	mov    %eax,%r11d
   15217:	49 c1 e1 05          	shl    $0x5,%r9
   1521b:	49 01 f9             	add    %rdi,%r9
   1521e:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15222:	49 81 c2 00 60 00 00 	add    $0x6000,%r10
   15229:	47 0f b7 9c 59 00 60 	movzwl 0x6000(%r9,%r11,2),%r11d
   15230:	00 00 
   15232:	41 0f af db          	imul   %r11d,%ebx
   15236:	45 89 f9             	mov    %r15d,%r9d
   15239:	41 29 d9             	sub    %ebx,%r9d
   1523c:	0f 83 62 04 00 00    	jae    156a4 <lzma_decode+0x6f4>
   15242:	b8 00 08 00 00       	mov    $0x800,%eax
   15247:	44 29 d8             	sub    %r11d,%eax
   1524a:	c1 e8 05             	shr    $0x5,%eax
   1524d:	44 01 d8             	add    %r11d,%eax
   15250:	66 41 89 02          	mov    %ax,(%r10)
   15254:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   15259:	45 89 d9             	mov    %r11d,%r9d
   1525c:	44 23 8c 24 a0 00 00 	and    0xa0(%rsp),%r9d
   15263:	00 
   15264:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
   1526b:	00 
   1526c:	44 89 e9             	mov    %r13d,%ecx
   1526f:	49 d3 e1             	shl    %cl,%r9
   15272:	31 c9                	xor    %ecx,%ecx
   15274:	4d 85 db             	test   %r11,%r11
   15277:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1527c:	48 0f 44 ce          	cmove  %rsi,%rcx
   15280:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   15285:	4c 01 d8             	add    %r11,%rax
   15288:	44 0f b6 54 01 ff    	movzbl -0x1(%rcx,%rax,1),%r10d
   1528e:	b1 08                	mov    $0x8,%cl
   15290:	44 28 e9             	sub    %r13b,%cl
   15293:	41 d3 ea             	shr    %cl,%r10d
   15296:	4d 01 ca             	add    %r9,%r10
   15299:	48 89 f9             	mov    %rdi,%rcx
   1529c:	4b 8d 3c 52          	lea    (%r10,%r10,2),%rdi
   152a0:	48 c1 e7 09          	shl    $0x9,%rdi
   152a4:	49 89 ca             	mov    %rcx,%r10
   152a7:	48 01 cf             	add    %rcx,%rdi
   152aa:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   152b0:	41 83 f8 06          	cmp    $0x6,%r8d
   152b4:	0f 87 68 23 00 00    	ja     17622 <lzma_decode+0x2672>
   152ba:	48 89 fe             	mov    %rdi,%rsi
   152bd:	4c 89 d7             	mov    %r10,%rdi
   152c0:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   152c6:	77 23                	ja     152eb <lzma_decode+0x33b>
   152c8:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   152cd:	0f 84 b9 31 00 00    	je     1848c <lzma_decode+0x34dc>
   152d3:	89 d8                	mov    %ebx,%eax
   152d5:	c1 e0 08             	shl    $0x8,%eax
   152d8:	41 c1 e7 08          	shl    $0x8,%r15d
   152dc:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   152e1:	49 ff c6             	inc    %r14
   152e4:	41 09 cf             	or     %ecx,%r15d
   152e7:	89 c3                	mov    %eax,%ebx
   152e9:	eb 02                	jmp    152ed <lzma_decode+0x33d>
   152eb:	89 d8                	mov    %ebx,%eax
   152ed:	c1 eb 0b             	shr    $0xb,%ebx
   152f0:	45 89 e9             	mov    %r13d,%r9d
   152f3:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   152f8:	41 0f af da          	imul   %r10d,%ebx
   152fc:	45 01 ed             	add    %r13d,%r13d
   152ff:	44 89 f9             	mov    %r15d,%ecx
   15302:	29 d9                	sub    %ebx,%ecx
   15304:	73 3e                	jae    15344 <lzma_decode+0x394>
   15306:	b8 00 08 00 00       	mov    $0x800,%eax
   1530b:	44 29 d0             	sub    %r10d,%eax
   1530e:	c1 e8 05             	shr    $0x5,%eax
   15311:	44 01 d0             	add    %r10d,%eax
   15314:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   15319:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1531f:	77 45                	ja     15366 <lzma_decode+0x3b6>
   15321:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15326:	0f 84 95 31 00 00    	je     184c1 <lzma_decode+0x3511>
   1532c:	89 d8                	mov    %ebx,%eax
   1532e:	c1 e0 08             	shl    $0x8,%eax
   15331:	41 c1 e7 08          	shl    $0x8,%r15d
   15335:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1533a:	49 ff c6             	inc    %r14
   1533d:	41 09 cf             	or     %ecx,%r15d
   15340:	89 c3                	mov    %eax,%ebx
   15342:	eb 24                	jmp    15368 <lzma_decode+0x3b8>
   15344:	29 d8                	sub    %ebx,%eax
   15346:	45 89 d3             	mov    %r10d,%r11d
   15349:	41 c1 eb 05          	shr    $0x5,%r11d
   1534d:	45 29 da             	sub    %r11d,%r10d
   15350:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   15355:	41 83 cd 01          	or     $0x1,%r13d
   15359:	89 c3                	mov    %eax,%ebx
   1535b:	41 89 cf             	mov    %ecx,%r15d
   1535e:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15364:	76 bb                	jbe    15321 <lzma_decode+0x371>
   15366:	89 d8                	mov    %ebx,%eax
   15368:	c1 eb 0b             	shr    $0xb,%ebx
   1536b:	45 89 e9             	mov    %r13d,%r9d
   1536e:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   15373:	41 0f af da          	imul   %r10d,%ebx
   15377:	45 01 ed             	add    %r13d,%r13d
   1537a:	44 89 f9             	mov    %r15d,%ecx
   1537d:	29 d9                	sub    %ebx,%ecx
   1537f:	73 3e                	jae    153bf <lzma_decode+0x40f>
   15381:	b8 00 08 00 00       	mov    $0x800,%eax
   15386:	44 29 d0             	sub    %r10d,%eax
   15389:	c1 e8 05             	shr    $0x5,%eax
   1538c:	44 01 d0             	add    %r10d,%eax
   1538f:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   15394:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1539a:	77 45                	ja     153e1 <lzma_decode+0x431>
   1539c:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   153a1:	0f 84 0b 30 00 00    	je     183b2 <lzma_decode+0x3402>
   153a7:	89 d8                	mov    %ebx,%eax
   153a9:	c1 e0 08             	shl    $0x8,%eax
   153ac:	41 c1 e7 08          	shl    $0x8,%r15d
   153b0:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   153b5:	49 ff c6             	inc    %r14
   153b8:	41 09 cf             	or     %ecx,%r15d
   153bb:	89 c3                	mov    %eax,%ebx
   153bd:	eb 24                	jmp    153e3 <lzma_decode+0x433>
   153bf:	29 d8                	sub    %ebx,%eax
   153c1:	45 89 d3             	mov    %r10d,%r11d
   153c4:	41 c1 eb 05          	shr    $0x5,%r11d
   153c8:	45 29 da             	sub    %r11d,%r10d
   153cb:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   153d0:	41 83 cd 01          	or     $0x1,%r13d
   153d4:	89 c3                	mov    %eax,%ebx
   153d6:	41 89 cf             	mov    %ecx,%r15d
   153d9:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   153df:	76 bb                	jbe    1539c <lzma_decode+0x3ec>
   153e1:	89 d8                	mov    %ebx,%eax
   153e3:	c1 eb 0b             	shr    $0xb,%ebx
   153e6:	45 89 e9             	mov    %r13d,%r9d
   153e9:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   153ee:	41 0f af da          	imul   %r10d,%ebx
   153f2:	45 01 ed             	add    %r13d,%r13d
   153f5:	44 89 f9             	mov    %r15d,%ecx
   153f8:	29 d9                	sub    %ebx,%ecx
   153fa:	73 41                	jae    1543d <lzma_decode+0x48d>
   153fc:	b8 00 08 00 00       	mov    $0x800,%eax
   15401:	44 29 d0             	sub    %r10d,%eax
   15404:	c1 e8 05             	shr    $0x5,%eax
   15407:	44 01 d0             	add    %r10d,%eax
   1540a:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   1540f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15415:	77 48                	ja     1545f <lzma_decode+0x4af>
   15417:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1541c:	0f 84 d2 2f 00 00    	je     183f4 <lzma_decode+0x3444>
   15422:	89 d8                	mov    %ebx,%eax
   15424:	c1 e0 08             	shl    $0x8,%eax
   15427:	41 c1 e7 08          	shl    $0x8,%r15d
   1542b:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   15430:	49 ff c6             	inc    %r14
   15433:	44 09 f9             	or     %r15d,%ecx
   15436:	41 89 cf             	mov    %ecx,%r15d
   15439:	89 c3                	mov    %eax,%ebx
   1543b:	eb 24                	jmp    15461 <lzma_decode+0x4b1>
   1543d:	29 d8                	sub    %ebx,%eax
   1543f:	45 89 d3             	mov    %r10d,%r11d
   15442:	41 c1 eb 05          	shr    $0x5,%r11d
   15446:	45 29 da             	sub    %r11d,%r10d
   15449:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   1544e:	41 83 cd 01          	or     $0x1,%r13d
   15452:	89 c3                	mov    %eax,%ebx
   15454:	41 89 cf             	mov    %ecx,%r15d
   15457:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1545d:	76 b8                	jbe    15417 <lzma_decode+0x467>
   1545f:	89 d8                	mov    %ebx,%eax
   15461:	c1 eb 0b             	shr    $0xb,%ebx
   15464:	45 89 e9             	mov    %r13d,%r9d
   15467:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   1546c:	41 0f af da          	imul   %r10d,%ebx
   15470:	45 01 ed             	add    %r13d,%r13d
   15473:	44 89 f9             	mov    %r15d,%ecx
   15476:	29 d9                	sub    %ebx,%ecx
   15478:	73 41                	jae    154bb <lzma_decode+0x50b>
   1547a:	b8 00 08 00 00       	mov    $0x800,%eax
   1547f:	44 29 d0             	sub    %r10d,%eax
   15482:	c1 e8 05             	shr    $0x5,%eax
   15485:	44 01 d0             	add    %r10d,%eax
   15488:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   1548d:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15493:	77 48                	ja     154dd <lzma_decode+0x52d>
   15495:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1549a:	0f 84 aa 2f 00 00    	je     1844a <lzma_decode+0x349a>
   154a0:	89 d8                	mov    %ebx,%eax
   154a2:	c1 e0 08             	shl    $0x8,%eax
   154a5:	41 c1 e7 08          	shl    $0x8,%r15d
   154a9:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   154ae:	49 ff c6             	inc    %r14
   154b1:	44 09 f9             	or     %r15d,%ecx
   154b4:	41 89 cf             	mov    %ecx,%r15d
   154b7:	89 c3                	mov    %eax,%ebx
   154b9:	eb 24                	jmp    154df <lzma_decode+0x52f>
   154bb:	29 d8                	sub    %ebx,%eax
   154bd:	45 89 d3             	mov    %r10d,%r11d
   154c0:	41 c1 eb 05          	shr    $0x5,%r11d
   154c4:	45 29 da             	sub    %r11d,%r10d
   154c7:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   154cc:	41 83 cd 01          	or     $0x1,%r13d
   154d0:	89 c3                	mov    %eax,%ebx
   154d2:	41 89 cf             	mov    %ecx,%r15d
   154d5:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   154db:	76 b8                	jbe    15495 <lzma_decode+0x4e5>
   154dd:	89 d8                	mov    %ebx,%eax
   154df:	c1 eb 0b             	shr    $0xb,%ebx
   154e2:	45 89 e9             	mov    %r13d,%r9d
   154e5:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   154ea:	41 0f af da          	imul   %r10d,%ebx
   154ee:	45 01 ed             	add    %r13d,%r13d
   154f1:	44 89 f9             	mov    %r15d,%ecx
   154f4:	29 d9                	sub    %ebx,%ecx
   154f6:	73 41                	jae    15539 <lzma_decode+0x589>
   154f8:	b8 00 08 00 00       	mov    $0x800,%eax
   154fd:	44 29 d0             	sub    %r10d,%eax
   15500:	c1 e8 05             	shr    $0x5,%eax
   15503:	44 01 d0             	add    %r10d,%eax
   15506:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   1550b:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15511:	77 48                	ja     1555b <lzma_decode+0x5ab>
   15513:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15518:	0f 84 52 2e 00 00    	je     18370 <lzma_decode+0x33c0>
   1551e:	89 d8                	mov    %ebx,%eax
   15520:	c1 e0 08             	shl    $0x8,%eax
   15523:	41 c1 e7 08          	shl    $0x8,%r15d
   15527:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1552c:	49 ff c6             	inc    %r14
   1552f:	44 09 f9             	or     %r15d,%ecx
   15532:	41 89 cf             	mov    %ecx,%r15d
   15535:	89 c3                	mov    %eax,%ebx
   15537:	eb 24                	jmp    1555d <lzma_decode+0x5ad>
   15539:	29 d8                	sub    %ebx,%eax
   1553b:	45 89 d3             	mov    %r10d,%r11d
   1553e:	41 c1 eb 05          	shr    $0x5,%r11d
   15542:	45 29 da             	sub    %r11d,%r10d
   15545:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   1554a:	41 83 cd 01          	or     $0x1,%r13d
   1554e:	89 c3                	mov    %eax,%ebx
   15550:	41 89 cf             	mov    %ecx,%r15d
   15553:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15559:	76 b8                	jbe    15513 <lzma_decode+0x563>
   1555b:	89 d8                	mov    %ebx,%eax
   1555d:	c1 eb 0b             	shr    $0xb,%ebx
   15560:	45 89 e9             	mov    %r13d,%r9d
   15563:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   15568:	41 0f af da          	imul   %r10d,%ebx
   1556c:	45 01 ed             	add    %r13d,%r13d
   1556f:	44 89 f9             	mov    %r15d,%ecx
   15572:	29 d9                	sub    %ebx,%ecx
   15574:	73 41                	jae    155b7 <lzma_decode+0x607>
   15576:	b8 00 08 00 00       	mov    $0x800,%eax
   1557b:	44 29 d0             	sub    %r10d,%eax
   1557e:	c1 e8 05             	shr    $0x5,%eax
   15581:	44 01 d0             	add    %r10d,%eax
   15584:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   15589:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1558f:	77 48                	ja     155d9 <lzma_decode+0x629>
   15591:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15596:	0f 84 f5 2d 00 00    	je     18391 <lzma_decode+0x33e1>
   1559c:	89 d8                	mov    %ebx,%eax
   1559e:	c1 e0 08             	shl    $0x8,%eax
   155a1:	41 c1 e7 08          	shl    $0x8,%r15d
   155a5:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   155aa:	49 ff c6             	inc    %r14
   155ad:	44 09 f9             	or     %r15d,%ecx
   155b0:	41 89 cf             	mov    %ecx,%r15d
   155b3:	89 c3                	mov    %eax,%ebx
   155b5:	eb 24                	jmp    155db <lzma_decode+0x62b>
   155b7:	29 d8                	sub    %ebx,%eax
   155b9:	45 89 d3             	mov    %r10d,%r11d
   155bc:	41 c1 eb 05          	shr    $0x5,%r11d
   155c0:	45 29 da             	sub    %r11d,%r10d
   155c3:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   155c8:	41 83 cd 01          	or     $0x1,%r13d
   155cc:	89 c3                	mov    %eax,%ebx
   155ce:	41 89 cf             	mov    %ecx,%r15d
   155d1:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   155d7:	76 b8                	jbe    15591 <lzma_decode+0x5e1>
   155d9:	89 d8                	mov    %ebx,%eax
   155db:	c1 eb 0b             	shr    $0xb,%ebx
   155de:	45 89 e9             	mov    %r13d,%r9d
   155e1:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   155e6:	41 0f af da          	imul   %r10d,%ebx
   155ea:	45 01 ed             	add    %r13d,%r13d
   155ed:	44 89 f9             	mov    %r15d,%ecx
   155f0:	29 d9                	sub    %ebx,%ecx
   155f2:	73 1d                	jae    15611 <lzma_decode+0x661>
   155f4:	b8 00 08 00 00       	mov    $0x800,%eax
   155f9:	44 29 d0             	sub    %r10d,%eax
   155fc:	c1 e8 05             	shr    $0x5,%eax
   155ff:	44 01 d0             	add    %r10d,%eax
   15602:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   15607:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1560d:	76 24                	jbe    15633 <lzma_decode+0x683>
   1560f:	eb 42                	jmp    15653 <lzma_decode+0x6a3>
   15611:	29 d8                	sub    %ebx,%eax
   15613:	45 89 d3             	mov    %r10d,%r11d
   15616:	41 c1 eb 05          	shr    $0x5,%r11d
   1561a:	45 29 da             	sub    %r11d,%r10d
   1561d:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   15622:	41 83 cd 01          	or     $0x1,%r13d
   15626:	89 c3                	mov    %eax,%ebx
   15628:	41 89 cf             	mov    %ecx,%r15d
   1562b:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15631:	77 20                	ja     15653 <lzma_decode+0x6a3>
   15633:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15638:	0f 84 2d 2e 00 00    	je     1846b <lzma_decode+0x34bb>
   1563e:	c1 e3 08             	shl    $0x8,%ebx
   15641:	41 c1 e7 08          	shl    $0x8,%r15d
   15645:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   1564a:	49 ff c6             	inc    %r14
   1564d:	44 09 f8             	or     %r15d,%eax
   15650:	41 89 c7             	mov    %eax,%r15d
   15653:	89 d8                	mov    %ebx,%eax
   15655:	c1 e8 0b             	shr    $0xb,%eax
   15658:	45 89 e9             	mov    %r13d,%r9d
   1565b:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   15660:	41 0f af c2          	imul   %r10d,%eax
   15664:	45 01 ed             	add    %r13d,%r13d
   15667:	44 89 f9             	mov    %r15d,%ecx
   1566a:	29 c1                	sub    %eax,%ecx
   1566c:	73 18                	jae    15686 <lzma_decode+0x6d6>
   1566e:	b9 00 08 00 00       	mov    $0x800,%ecx
   15673:	44 29 d1             	sub    %r10d,%ecx
   15676:	c1 e9 05             	shr    $0x5,%ecx
   15679:	44 01 d1             	add    %r10d,%ecx
   1567c:	66 42 89 0c 4e       	mov    %cx,(%rsi,%r9,2)
   15681:	e9 39 25 00 00       	jmp    17bbf <lzma_decode+0x2c0f>
   15686:	29 c3                	sub    %eax,%ebx
   15688:	44 89 d0             	mov    %r10d,%eax
   1568b:	c1 e8 05             	shr    $0x5,%eax
   1568e:	41 29 c2             	sub    %eax,%r10d
   15691:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   15696:	41 83 cd 01          	or     $0x1,%r13d
   1569a:	89 d8                	mov    %ebx,%eax
   1569c:	41 89 cf             	mov    %ecx,%r15d
   1569f:	e9 1b 25 00 00       	jmp    17bbf <lzma_decode+0x2c0f>
   156a4:	29 d9                	sub    %ebx,%ecx
   156a6:	44 89 db             	mov    %r11d,%ebx
   156a9:	c1 eb 05             	shr    $0x5,%ebx
   156ac:	41 29 db             	sub    %ebx,%r11d
   156af:	66 45 89 1a          	mov    %r11w,(%r10)
   156b3:	89 cb                	mov    %ecx,%ebx
   156b5:	45 89 cf             	mov    %r9d,%r15d
   156b8:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   156bd:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
   156c2:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
   156c6:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   156ca:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   156d0:	77 29                	ja     156fb <lzma_decode+0x74b>
   156d2:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   156d7:	0f 84 10 2c 00 00    	je     182ed <lzma_decode+0x333d>
   156dd:	41 89 da             	mov    %ebx,%r10d
   156e0:	41 c1 e2 08          	shl    $0x8,%r10d
   156e4:	41 c1 e7 08          	shl    $0x8,%r15d
   156e8:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   156ed:	49 ff c6             	inc    %r14
   156f0:	44 09 f9             	or     %r15d,%ecx
   156f3:	41 89 cf             	mov    %ecx,%r15d
   156f6:	44 89 d3             	mov    %r10d,%ebx
   156f9:	eb 03                	jmp    156fe <lzma_decode+0x74e>
   156fb:	41 89 da             	mov    %ebx,%r10d
   156fe:	c1 eb 0b             	shr    $0xb,%ebx
   15701:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   15706:	44 89 c1             	mov    %r8d,%ecx
   15709:	0f b7 ac 4f 80 61 00 	movzwl 0x6180(%rdi,%rcx,2),%ebp
   15710:	00 
   15711:	0f af dd             	imul   %ebp,%ebx
   15714:	45 89 fb             	mov    %r15d,%r11d
   15717:	41 29 db             	sub    %ebx,%r11d
   1571a:	0f 83 4e 01 00 00    	jae    1586e <lzma_decode+0x8be>
   15720:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   15726:	41 29 ea             	sub    %ebp,%r10d
   15729:	41 c1 ea 05          	shr    $0x5,%r10d
   1572d:	41 01 ea             	add    %ebp,%r10d
   15730:	66 44 89 94 4f 80 61 	mov    %r10w,0x6180(%rdi,%rcx,2)
   15737:	00 00 
   15739:	31 c9                	xor    %ecx,%ecx
   1573b:	41 83 f8 07          	cmp    $0x7,%r8d
   1573f:	0f 93 c1             	setae  %cl
   15742:	8d 4c 49 07          	lea    0x7(%rcx,%rcx,2),%ecx
   15746:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   1574a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   15750:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   15755:	89 e9                	mov    %ebp,%ecx
   15757:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   1575b:	44 89 4c 24 54       	mov    %r9d,0x54(%rsp)
   15760:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15766:	77 26                	ja     1578e <lzma_decode+0x7de>
   15768:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1576d:	0f 84 51 2e 00 00    	je     185c4 <lzma_decode+0x3614>
   15773:	89 d9                	mov    %ebx,%ecx
   15775:	c1 e1 08             	shl    $0x8,%ecx
   15778:	41 c1 e7 08          	shl    $0x8,%r15d
   1577c:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15781:	49 ff c6             	inc    %r14
   15784:	45 09 f9             	or     %r15d,%r9d
   15787:	45 89 cf             	mov    %r9d,%r15d
   1578a:	89 cb                	mov    %ecx,%ebx
   1578c:	eb 02                	jmp    15790 <lzma_decode+0x7e0>
   1578e:	89 d9                	mov    %ebx,%ecx
   15790:	c1 eb 0b             	shr    $0xb,%ebx
   15793:	44 0f b7 97 64 66 00 	movzwl 0x6664(%rdi),%r10d
   1579a:	00 
   1579b:	41 0f af da          	imul   %r10d,%ebx
   1579f:	45 89 f9             	mov    %r15d,%r9d
   157a2:	41 29 d9             	sub    %ebx,%r9d
   157a5:	0f 83 ac 09 00 00    	jae    16157 <lzma_decode+0x11a7>
   157ab:	b9 00 08 00 00       	mov    $0x800,%ecx
   157b0:	44 29 d1             	sub    %r10d,%ecx
   157b3:	c1 e9 05             	shr    $0x5,%ecx
   157b6:	44 01 d1             	add    %r10d,%ecx
   157b9:	66 89 8f 64 66 00 00 	mov    %cx,0x6664(%rdi)
   157c0:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   157c6:	77 26                	ja     157ee <lzma_decode+0x83e>
   157c8:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   157cd:	0f 84 8e 2d 00 00    	je     18561 <lzma_decode+0x35b1>
   157d3:	89 d9                	mov    %ebx,%ecx
   157d5:	c1 e1 08             	shl    $0x8,%ecx
   157d8:	41 c1 e7 08          	shl    $0x8,%r15d
   157dc:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   157e1:	49 ff c6             	inc    %r14
   157e4:	45 09 f9             	or     %r15d,%r9d
   157e7:	45 89 cf             	mov    %r9d,%r15d
   157ea:	89 cb                	mov    %ecx,%ebx
   157ec:	eb 02                	jmp    157f0 <lzma_decode+0x840>
   157ee:	89 d9                	mov    %ebx,%ecx
   157f0:	c1 eb 0b             	shr    $0xb,%ebx
   157f3:	41 89 c1             	mov    %eax,%r9d
   157f6:	45 89 eb             	mov    %r13d,%r11d
   157f9:	49 c1 e1 04          	shl    $0x4,%r9
   157fd:	49 01 f9             	add    %rdi,%r9
   15800:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15804:	49 81 c2 68 66 00 00 	add    $0x6668,%r10
   1580b:	47 0f b7 9c 59 68 66 	movzwl 0x6668(%r9,%r11,2),%r11d
   15812:	00 00 
   15814:	41 0f af db          	imul   %r11d,%ebx
   15818:	45 01 ed             	add    %r13d,%r13d
   1581b:	45 89 f9             	mov    %r15d,%r9d
   1581e:	41 29 d9             	sub    %ebx,%r9d
   15821:	0f 83 11 08 00 00    	jae    16038 <lzma_decode+0x1088>
   15827:	b9 00 08 00 00       	mov    $0x800,%ecx
   1582c:	44 29 d9             	sub    %r11d,%ecx
   1582f:	c1 e9 05             	shr    $0x5,%ecx
   15832:	44 01 d9             	add    %r11d,%ecx
   15835:	66 41 89 0a          	mov    %cx,(%r10)
   15839:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1583f:	0f 87 17 08 00 00    	ja     1605c <lzma_decode+0x10ac>
   15845:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1584a:	0f 84 92 2c 00 00    	je     184e2 <lzma_decode+0x3532>
   15850:	89 d9                	mov    %ebx,%ecx
   15852:	c1 e1 08             	shl    $0x8,%ecx
   15855:	41 c1 e7 08          	shl    $0x8,%r15d
   15859:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   1585e:	49 ff c6             	inc    %r14
   15861:	45 09 f9             	or     %r15d,%r9d
   15864:	45 89 cf             	mov    %r9d,%r15d
   15867:	89 cb                	mov    %ecx,%ebx
   15869:	e9 f0 07 00 00       	jmp    1605e <lzma_decode+0x10ae>
   1586e:	41 29 da             	sub    %ebx,%r10d
   15871:	89 eb                	mov    %ebp,%ebx
   15873:	c1 eb 05             	shr    $0x5,%ebx
   15876:	29 dd                	sub    %ebx,%ebp
   15878:	66 89 ac 4f 80 61 00 	mov    %bp,0x6180(%rdi,%rcx,2)
   1587f:	00 
   15880:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   15886:	0f 84 8a 2f 00 00    	je     18816 <lzma_decode+0x3866>
   1588c:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   15890:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
   15894:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
   15899:	44 89 d3             	mov    %r10d,%ebx
   1589c:	45 89 df             	mov    %r11d,%r15d
   1589f:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   158a4:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   158aa:	77 24                	ja     158d0 <lzma_decode+0x920>
   158ac:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   158b1:	0f 84 91 2d 00 00    	je     18648 <lzma_decode+0x3698>
   158b7:	89 d9                	mov    %ebx,%ecx
   158b9:	c1 e1 08             	shl    $0x8,%ecx
   158bc:	41 c1 e7 08          	shl    $0x8,%r15d
   158c0:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   158c5:	49 ff c6             	inc    %r14
   158c8:	45 09 f9             	or     %r15d,%r9d
   158cb:	45 89 cf             	mov    %r9d,%r15d
   158ce:	eb 02                	jmp    158d2 <lzma_decode+0x922>
   158d0:	89 d9                	mov    %ebx,%ecx
   158d2:	89 cb                	mov    %ecx,%ebx
   158d4:	c1 eb 0b             	shr    $0xb,%ebx
   158d7:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   158dc:	46 0f b7 9c 57 98 61 	movzwl 0x6198(%rdi,%r10,2),%r11d
   158e3:	00 00 
   158e5:	41 0f af db          	imul   %r11d,%ebx
   158e9:	45 89 f9             	mov    %r15d,%r9d
   158ec:	41 29 d9             	sub    %ebx,%r9d
   158ef:	0f 83 16 01 00 00    	jae    15a0b <lzma_decode+0xa5b>
   158f5:	b9 00 08 00 00       	mov    $0x800,%ecx
   158fa:	44 29 d9             	sub    %r11d,%ecx
   158fd:	c1 e9 05             	shr    $0x5,%ecx
   15900:	44 01 d9             	add    %r11d,%ecx
   15903:	66 42 89 8c 57 98 61 	mov    %cx,0x6198(%rdi,%r10,2)
   1590a:	00 00 
   1590c:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15912:	77 24                	ja     15938 <lzma_decode+0x988>
   15914:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15919:	0f 84 8f 27 00 00    	je     180ae <lzma_decode+0x30fe>
   1591f:	89 d9                	mov    %ebx,%ecx
   15921:	c1 e1 08             	shl    $0x8,%ecx
   15924:	41 c1 e7 08          	shl    $0x8,%r15d
   15928:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   1592d:	49 ff c6             	inc    %r14
   15930:	45 09 f9             	or     %r15d,%r9d
   15933:	45 89 cf             	mov    %r9d,%r15d
   15936:	eb 02                	jmp    1593a <lzma_decode+0x98a>
   15938:	89 d9                	mov    %ebx,%ecx
   1593a:	89 cb                	mov    %ecx,%ebx
   1593c:	c1 eb 0b             	shr    $0xb,%ebx
   1593f:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   15944:	45 89 c1             	mov    %r8d,%r9d
   15947:	41 89 c3             	mov    %eax,%r11d
   1594a:	49 c1 e1 05          	shl    $0x5,%r9
   1594e:	49 01 f9             	add    %rdi,%r9
   15951:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15955:	49 81 c2 e0 61 00 00 	add    $0x61e0,%r10
   1595c:	47 0f b7 9c 59 e0 61 	movzwl 0x61e0(%r9,%r11,2),%r11d
   15963:	00 00 
   15965:	41 0f af db          	imul   %r11d,%ebx
   15969:	45 89 f9             	mov    %r15d,%r9d
   1596c:	41 29 d9             	sub    %ebx,%r9d
   1596f:	0f 83 23 01 00 00    	jae    15a98 <lzma_decode+0xae8>
   15975:	b8 00 08 00 00       	mov    $0x800,%eax
   1597a:	44 29 d8             	sub    %r11d,%eax
   1597d:	c1 e8 05             	shr    $0x5,%eax
   15980:	44 01 d8             	add    %r11d,%eax
   15983:	66 41 89 02          	mov    %ax,(%r10)
   15987:	31 c0                	xor    %eax,%eax
   15989:	41 83 f8 07          	cmp    $0x7,%r8d
   1598d:	0f 93 c0             	setae  %al
   15990:	8d 04 45 09 00 00 00 	lea    0x9(,%rax,2),%eax
   15997:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1599b:	49 89 fb             	mov    %rdi,%r11
   1599e:	48 89 f7             	mov    %rsi,%rdi
   159a1:	44 8b 54 24 64       	mov    0x64(%rsp),%r10d
   159a6:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   159ab:	48 3b 44 24 68       	cmp    0x68(%rsp),%rax
   159b0:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   159b5:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   159ba:	0f 84 c4 25 00 00    	je     17f84 <lzma_decode+0x2fd4>
   159c0:	48 01 c8             	add    %rcx,%rax
   159c3:	48 89 ce             	mov    %rcx,%rsi
   159c6:	89 e9                	mov    %ebp,%ecx
   159c8:	49 89 c9             	mov    %rcx,%r9
   159cb:	49 f7 d1             	not    %r9
   159ce:	49 01 c1             	add    %rax,%r9
   159d1:	31 c0                	xor    %eax,%eax
   159d3:	48 39 4c 24 40       	cmp    %rcx,0x40(%rsp)
   159d8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   159dd:	49 0f 46 c0          	cmovbe %r8,%rax
   159e1:	42 0f b6 04 08       	movzbl (%rax,%r9,1),%eax
   159e6:	88 04 0e             	mov    %al,(%rsi,%rcx,1)
   159e9:	48 ff c1             	inc    %rcx
   159ec:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   159f1:	48 39 c1             	cmp    %rax,%rcx
   159f4:	48 0f 47 c1          	cmova  %rcx,%rax
   159f8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   159fd:	44 89 d0             	mov    %r10d,%eax
   15a00:	48 89 fe             	mov    %rdi,%rsi
   15a03:	4c 89 df             	mov    %r11,%rdi
   15a06:	e9 af f7 ff ff       	jmp    151ba <lzma_decode+0x20a>
   15a0b:	29 d9                	sub    %ebx,%ecx
   15a0d:	44 89 db             	mov    %r11d,%ebx
   15a10:	c1 eb 05             	shr    $0x5,%ebx
   15a13:	41 29 db             	sub    %ebx,%r11d
   15a16:	66 46 89 9c 57 98 61 	mov    %r11w,0x6198(%rdi,%r10,2)
   15a1d:	00 00 
   15a1f:	89 cb                	mov    %ecx,%ebx
   15a21:	45 89 cf             	mov    %r9d,%r15d
   15a24:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15a2a:	77 22                	ja     15a4e <lzma_decode+0xa9e>
   15a2c:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15a31:	0f 84 7c 2d 00 00    	je     187b3 <lzma_decode+0x3803>
   15a37:	c1 e3 08             	shl    $0x8,%ebx
   15a3a:	41 c1 e7 08          	shl    $0x8,%r15d
   15a3e:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15a43:	49 ff c6             	inc    %r14
   15a46:	45 09 f9             	or     %r15d,%r9d
   15a49:	45 89 cf             	mov    %r9d,%r15d
   15a4c:	eb 03                	jmp    15a51 <lzma_decode+0xaa1>
   15a4e:	45 89 f9             	mov    %r15d,%r9d
   15a51:	89 d9                	mov    %ebx,%ecx
   15a53:	c1 e9 0b             	shr    $0xb,%ecx
   15a56:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   15a5b:	46 0f b7 9c 57 b0 61 	movzwl 0x61b0(%rdi,%r10,2),%r11d
   15a62:	00 00 
   15a64:	41 0f af cb          	imul   %r11d,%ecx
   15a68:	41 29 cf             	sub    %ecx,%r15d
   15a6b:	73 4f                	jae    15abc <lzma_decode+0xb0c>
   15a6d:	bb 00 08 00 00       	mov    $0x800,%ebx
   15a72:	44 29 db             	sub    %r11d,%ebx
   15a75:	c1 eb 05             	shr    $0x5,%ebx
   15a78:	44 01 db             	add    %r11d,%ebx
   15a7b:	66 42 89 9c 57 b0 61 	mov    %bx,0x61b0(%rdi,%r10,2)
   15a82:	00 00 
   15a84:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
   15a89:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
   15a8e:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   15a93:	e9 ef 00 00 00       	jmp    15b87 <lzma_decode+0xbd7>
   15a98:	29 d9                	sub    %ebx,%ecx
   15a9a:	44 89 db             	mov    %r11d,%ebx
   15a9d:	c1 eb 05             	shr    $0x5,%ebx
   15aa0:	41 29 db             	sub    %ebx,%r11d
   15aa3:	66 45 89 1a          	mov    %r11w,(%r10)
   15aa7:	41 89 ea             	mov    %ebp,%r10d
   15aaa:	44 8b 5c 24 34       	mov    0x34(%rsp),%r11d
   15aaf:	44 89 dd             	mov    %r11d,%ebp
   15ab2:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
   15ab7:	e9 cb 00 00 00       	jmp    15b87 <lzma_decode+0xbd7>
   15abc:	29 cb                	sub    %ecx,%ebx
   15abe:	44 89 d9             	mov    %r11d,%ecx
   15ac1:	c1 e9 05             	shr    $0x5,%ecx
   15ac4:	41 29 cb             	sub    %ecx,%r11d
   15ac7:	66 46 89 9c 57 b0 61 	mov    %r11w,0x61b0(%rdi,%r10,2)
   15ace:	00 00 
   15ad0:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   15ad5:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15adb:	77 2a                	ja     15b07 <lzma_decode+0xb57>
   15add:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   15ae2:	49 89 f4             	mov    %rsi,%r12
   15ae5:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15aea:	0f 84 6c 28 00 00    	je     1835c <lzma_decode+0x33ac>
   15af0:	48 89 ee             	mov    %rbp,%rsi
   15af3:	c1 e3 08             	shl    $0x8,%ebx
   15af6:	41 c1 e7 08          	shl    $0x8,%r15d
   15afa:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15aff:	49 ff c6             	inc    %r14
   15b02:	45 09 f9             	or     %r15d,%r9d
   15b05:	eb 09                	jmp    15b10 <lzma_decode+0xb60>
   15b07:	49 89 f4             	mov    %rsi,%r12
   15b0a:	48 89 ee             	mov    %rbp,%rsi
   15b0d:	45 89 f9             	mov    %r15d,%r9d
   15b10:	89 d9                	mov    %ebx,%ecx
   15b12:	c1 e9 0b             	shr    $0xb,%ecx
   15b15:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   15b1a:	42 0f b7 ac 57 c8 61 	movzwl 0x61c8(%rdi,%r10,2),%ebp
   15b21:	00 00 
   15b23:	0f af cd             	imul   %ebp,%ecx
   15b26:	45 89 cb             	mov    %r9d,%r11d
   15b29:	41 29 cb             	sub    %ecx,%r11d
   15b2c:	73 20                	jae    15b4e <lzma_decode+0xb9e>
   15b2e:	41 bb 00 08 00 00    	mov    $0x800,%r11d
   15b34:	41 29 eb             	sub    %ebp,%r11d
   15b37:	41 c1 eb 05          	shr    $0x5,%r11d
   15b3b:	41 01 eb             	add    %ebp,%r11d
   15b3e:	66 46 89 9c 57 c8 61 	mov    %r11w,0x61c8(%rdi,%r10,2)
   15b45:	00 00 
   15b47:	44 8b 54 24 04       	mov    0x4(%rsp),%r10d
   15b4c:	eb 24                	jmp    15b72 <lzma_decode+0xbc2>
   15b4e:	29 cb                	sub    %ecx,%ebx
   15b50:	89 e9                	mov    %ebp,%ecx
   15b52:	c1 e9 05             	shr    $0x5,%ecx
   15b55:	29 cd                	sub    %ecx,%ebp
   15b57:	66 42 89 ac 57 c8 61 	mov    %bp,0x61c8(%rdi,%r10,2)
   15b5e:	00 00 
   15b60:	44 8b 54 24 54       	mov    0x54(%rsp),%r10d
   15b65:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   15b69:	89 4c 24 54          	mov    %ecx,0x54(%rsp)
   15b6d:	89 d9                	mov    %ebx,%ecx
   15b6f:	45 89 d9             	mov    %r11d,%r9d
   15b72:	44 8b 5c 24 34       	mov    0x34(%rsp),%r11d
   15b77:	48 89 f5             	mov    %rsi,%rbp
   15b7a:	4c 89 e6             	mov    %r12,%rsi
   15b7d:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
   15b82:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   15b87:	44 89 5c 24 04       	mov    %r11d,0x4(%rsp)
   15b8c:	41 89 eb             	mov    %ebp,%r11d
   15b8f:	89 6c 24 34          	mov    %ebp,0x34(%rsp)
   15b93:	45 31 db             	xor    %r11d,%r11d
   15b96:	41 83 f8 07          	cmp    $0x7,%r8d
   15b9a:	41 0f 93 c3          	setae  %r11b
   15b9e:	47 8d 44 5b 08       	lea    0x8(%r11,%r11,2),%r8d
   15ba3:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
   15ba8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   15bae:	44 89 d5             	mov    %r10d,%ebp
   15bb1:	89 cb                	mov    %ecx,%ebx
   15bb3:	45 89 cf             	mov    %r9d,%r15d
   15bb6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15bbc:	77 24                	ja     15be2 <lzma_decode+0xc32>
   15bbe:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15bc3:	0f 84 8a 25 00 00    	je     18153 <lzma_decode+0x31a3>
   15bc9:	89 d9                	mov    %ebx,%ecx
   15bcb:	c1 e1 08             	shl    $0x8,%ecx
   15bce:	41 c1 e7 08          	shl    $0x8,%r15d
   15bd2:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15bd7:	49 ff c6             	inc    %r14
   15bda:	45 09 f9             	or     %r15d,%r9d
   15bdd:	45 89 cf             	mov    %r9d,%r15d
   15be0:	eb 02                	jmp    15be4 <lzma_decode+0xc34>
   15be2:	89 d9                	mov    %ebx,%ecx
   15be4:	89 cb                	mov    %ecx,%ebx
   15be6:	c1 eb 0b             	shr    $0xb,%ebx
   15be9:	44 0f b7 97 68 6a 00 	movzwl 0x6a68(%rdi),%r10d
   15bf0:	00 
   15bf1:	41 0f af da          	imul   %r10d,%ebx
   15bf5:	45 89 f9             	mov    %r15d,%r9d
   15bf8:	41 29 d9             	sub    %ebx,%r9d
   15bfb:	0f 83 d5 01 00 00    	jae    15dd6 <lzma_decode+0xe26>
   15c01:	b9 00 08 00 00       	mov    $0x800,%ecx
   15c06:	44 29 d1             	sub    %r10d,%ecx
   15c09:	c1 e9 05             	shr    $0x5,%ecx
   15c0c:	44 01 d1             	add    %r10d,%ecx
   15c0f:	66 89 8f 68 6a 00 00 	mov    %cx,0x6a68(%rdi)
   15c16:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15c1c:	77 24                	ja     15c42 <lzma_decode+0xc92>
   15c1e:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15c23:	0f 84 c4 2a 00 00    	je     186ed <lzma_decode+0x373d>
   15c29:	89 d9                	mov    %ebx,%ecx
   15c2b:	c1 e1 08             	shl    $0x8,%ecx
   15c2e:	41 c1 e7 08          	shl    $0x8,%r15d
   15c32:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15c37:	49 ff c6             	inc    %r14
   15c3a:	45 09 f9             	or     %r15d,%r9d
   15c3d:	45 89 cf             	mov    %r9d,%r15d
   15c40:	eb 02                	jmp    15c44 <lzma_decode+0xc94>
   15c42:	89 d9                	mov    %ebx,%ecx
   15c44:	89 cb                	mov    %ecx,%ebx
   15c46:	c1 eb 0b             	shr    $0xb,%ebx
   15c49:	41 89 c1             	mov    %eax,%r9d
   15c4c:	45 89 eb             	mov    %r13d,%r11d
   15c4f:	49 c1 e1 04          	shl    $0x4,%r9
   15c53:	49 01 f9             	add    %rdi,%r9
   15c56:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15c5a:	49 81 c2 6c 6a 00 00 	add    $0x6a6c,%r10
   15c61:	47 0f b7 9c 59 6c 6a 	movzwl 0x6a6c(%r9,%r11,2),%r11d
   15c68:	00 00 
   15c6a:	41 0f af db          	imul   %r11d,%ebx
   15c6e:	45 01 ed             	add    %r13d,%r13d
   15c71:	45 89 f9             	mov    %r15d,%r9d
   15c74:	41 29 d9             	sub    %ebx,%r9d
   15c77:	73 3e                	jae    15cb7 <lzma_decode+0xd07>
   15c79:	b9 00 08 00 00       	mov    $0x800,%ecx
   15c7e:	44 29 d9             	sub    %r11d,%ecx
   15c81:	c1 e9 05             	shr    $0x5,%ecx
   15c84:	44 01 d9             	add    %r11d,%ecx
   15c87:	66 41 89 0a          	mov    %cx,(%r10)
   15c8b:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15c91:	77 44                	ja     15cd7 <lzma_decode+0xd27>
   15c93:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15c98:	0f 84 ef 23 00 00    	je     1808d <lzma_decode+0x30dd>
   15c9e:	89 d9                	mov    %ebx,%ecx
   15ca0:	c1 e1 08             	shl    $0x8,%ecx
   15ca3:	41 c1 e7 08          	shl    $0x8,%r15d
   15ca7:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15cac:	49 ff c6             	inc    %r14
   15caf:	45 09 f9             	or     %r15d,%r9d
   15cb2:	45 89 cf             	mov    %r9d,%r15d
   15cb5:	eb 22                	jmp    15cd9 <lzma_decode+0xd29>
   15cb7:	29 d9                	sub    %ebx,%ecx
   15cb9:	44 89 db             	mov    %r11d,%ebx
   15cbc:	c1 eb 05             	shr    $0x5,%ebx
   15cbf:	41 29 db             	sub    %ebx,%r11d
   15cc2:	66 45 89 1a          	mov    %r11w,(%r10)
   15cc6:	41 83 cd 01          	or     $0x1,%r13d
   15cca:	89 cb                	mov    %ecx,%ebx
   15ccc:	45 89 cf             	mov    %r9d,%r15d
   15ccf:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15cd5:	76 bc                	jbe    15c93 <lzma_decode+0xce3>
   15cd7:	89 d9                	mov    %ebx,%ecx
   15cd9:	89 cb                	mov    %ecx,%ebx
   15cdb:	c1 eb 0b             	shr    $0xb,%ebx
   15cde:	41 89 c1             	mov    %eax,%r9d
   15ce1:	45 89 eb             	mov    %r13d,%r11d
   15ce4:	49 c1 e1 04          	shl    $0x4,%r9
   15ce8:	49 01 f9             	add    %rdi,%r9
   15ceb:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15cef:	49 81 c2 6c 6a 00 00 	add    $0x6a6c,%r10
   15cf6:	47 0f b7 9c 59 6c 6a 	movzwl 0x6a6c(%r9,%r11,2),%r11d
   15cfd:	00 00 
   15cff:	41 0f af db          	imul   %r11d,%ebx
   15d03:	45 01 ed             	add    %r13d,%r13d
   15d06:	45 89 f9             	mov    %r15d,%r9d
   15d09:	41 29 d9             	sub    %ebx,%r9d
   15d0c:	73 1c                	jae    15d2a <lzma_decode+0xd7a>
   15d0e:	b9 00 08 00 00       	mov    $0x800,%ecx
   15d13:	44 29 d9             	sub    %r11d,%ecx
   15d16:	c1 e9 05             	shr    $0x5,%ecx
   15d19:	44 01 d9             	add    %r11d,%ecx
   15d1c:	66 41 89 0a          	mov    %cx,(%r10)
   15d20:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15d26:	76 22                	jbe    15d4a <lzma_decode+0xd9a>
   15d28:	eb 40                	jmp    15d6a <lzma_decode+0xdba>
   15d2a:	29 d9                	sub    %ebx,%ecx
   15d2c:	44 89 db             	mov    %r11d,%ebx
   15d2f:	c1 eb 05             	shr    $0x5,%ebx
   15d32:	41 29 db             	sub    %ebx,%r11d
   15d35:	66 45 89 1a          	mov    %r11w,(%r10)
   15d39:	41 83 cd 01          	or     $0x1,%r13d
   15d3d:	89 cb                	mov    %ecx,%ebx
   15d3f:	45 89 cf             	mov    %r9d,%r15d
   15d42:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15d48:	77 20                	ja     15d6a <lzma_decode+0xdba>
   15d4a:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15d4f:	0f 84 14 29 00 00    	je     18669 <lzma_decode+0x36b9>
   15d55:	c1 e3 08             	shl    $0x8,%ebx
   15d58:	41 c1 e7 08          	shl    $0x8,%r15d
   15d5c:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   15d61:	49 ff c6             	inc    %r14
   15d64:	44 09 f9             	or     %r15d,%ecx
   15d67:	41 89 cf             	mov    %ecx,%r15d
   15d6a:	89 d9                	mov    %ebx,%ecx
   15d6c:	c1 e9 0b             	shr    $0xb,%ecx
   15d6f:	41 89 c1             	mov    %eax,%r9d
   15d72:	45 89 ea             	mov    %r13d,%r10d
   15d75:	49 c1 e1 04          	shl    $0x4,%r9
   15d79:	49 01 f9             	add    %rdi,%r9
   15d7c:	4b 8d 04 51          	lea    (%r9,%r10,2),%rax
   15d80:	48 05 6c 6a 00 00    	add    $0x6a6c,%rax
   15d86:	47 0f b7 8c 51 6c 6a 	movzwl 0x6a6c(%r9,%r10,2),%r9d
   15d8d:	00 00 
   15d8f:	41 0f af c9          	imul   %r9d,%ecx
   15d93:	45 01 ed             	add    %r13d,%r13d
   15d96:	45 89 fb             	mov    %r15d,%r11d
   15d99:	41 29 cb             	sub    %ecx,%r11d
   15d9c:	73 12                	jae    15db0 <lzma_decode+0xe00>
   15d9e:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   15da4:	45 29 ca             	sub    %r9d,%r10d
   15da7:	41 c1 ea 05          	shr    $0x5,%r10d
   15dab:	45 01 ca             	add    %r9d,%r10d
   15dae:	eb 17                	jmp    15dc7 <lzma_decode+0xe17>
   15db0:	29 cb                	sub    %ecx,%ebx
   15db2:	44 89 c9             	mov    %r9d,%ecx
   15db5:	c1 e9 05             	shr    $0x5,%ecx
   15db8:	41 29 c9             	sub    %ecx,%r9d
   15dbb:	41 83 cd 01          	or     $0x1,%r13d
   15dbf:	45 89 ca             	mov    %r9d,%r10d
   15dc2:	89 d9                	mov    %ebx,%ecx
   15dc4:	45 89 df             	mov    %r11d,%r15d
   15dc7:	66 44 89 10          	mov    %r10w,(%rax)
   15dcb:	45 8d 65 fa          	lea    -0x6(%r13),%r12d
   15dcf:	89 cb                	mov    %ecx,%ebx
   15dd1:	e9 63 15 00 00       	jmp    17339 <lzma_decode+0x2389>
   15dd6:	29 d9                	sub    %ebx,%ecx
   15dd8:	45 89 d3             	mov    %r10d,%r11d
   15ddb:	41 c1 eb 05          	shr    $0x5,%r11d
   15ddf:	45 29 da             	sub    %r11d,%r10d
   15de2:	66 44 89 97 68 6a 00 	mov    %r10w,0x6a68(%rdi)
   15de9:	00 
   15dea:	89 cb                	mov    %ecx,%ebx
   15dec:	45 89 cf             	mov    %r9d,%r15d
   15def:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15df5:	77 24                	ja     15e1b <lzma_decode+0xe6b>
   15df7:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15dfc:	0f 84 30 23 00 00    	je     18132 <lzma_decode+0x3182>
   15e02:	89 d9                	mov    %ebx,%ecx
   15e04:	c1 e1 08             	shl    $0x8,%ecx
   15e07:	41 c1 e7 08          	shl    $0x8,%r15d
   15e0b:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15e10:	49 ff c6             	inc    %r14
   15e13:	45 09 f9             	or     %r15d,%r9d
   15e16:	45 89 cf             	mov    %r9d,%r15d
   15e19:	eb 02                	jmp    15e1d <lzma_decode+0xe6d>
   15e1b:	89 d9                	mov    %ebx,%ecx
   15e1d:	89 cb                	mov    %ecx,%ebx
   15e1f:	c1 eb 0b             	shr    $0xb,%ebx
   15e22:	44 0f b7 97 6a 6a 00 	movzwl 0x6a6a(%rdi),%r10d
   15e29:	00 
   15e2a:	41 0f af da          	imul   %r10d,%ebx
   15e2e:	45 89 f9             	mov    %r15d,%r9d
   15e31:	41 29 d9             	sub    %ebx,%r9d
   15e34:	0f 83 c1 00 00 00    	jae    15efb <lzma_decode+0xf4b>
   15e3a:	b9 00 08 00 00       	mov    $0x800,%ecx
   15e3f:	44 29 d1             	sub    %r10d,%ecx
   15e42:	c1 e9 05             	shr    $0x5,%ecx
   15e45:	44 01 d1             	add    %r10d,%ecx
   15e48:	66 89 8f 6a 6a 00 00 	mov    %cx,0x6a6a(%rdi)
   15e4f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15e55:	77 24                	ja     15e7b <lzma_decode+0xecb>
   15e57:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15e5c:	0f 84 71 25 00 00    	je     183d3 <lzma_decode+0x3423>
   15e62:	89 d9                	mov    %ebx,%ecx
   15e64:	c1 e1 08             	shl    $0x8,%ecx
   15e67:	41 c1 e7 08          	shl    $0x8,%r15d
   15e6b:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15e70:	49 ff c6             	inc    %r14
   15e73:	45 09 f9             	or     %r15d,%r9d
   15e76:	45 89 cf             	mov    %r9d,%r15d
   15e79:	eb 02                	jmp    15e7d <lzma_decode+0xecd>
   15e7b:	89 d9                	mov    %ebx,%ecx
   15e7d:	89 cb                	mov    %ecx,%ebx
   15e7f:	c1 eb 0b             	shr    $0xb,%ebx
   15e82:	41 89 c1             	mov    %eax,%r9d
   15e85:	45 89 eb             	mov    %r13d,%r11d
   15e88:	49 c1 e1 04          	shl    $0x4,%r9
   15e8c:	49 01 f9             	add    %rdi,%r9
   15e8f:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   15e93:	49 81 c2 6c 6b 00 00 	add    $0x6b6c,%r10
   15e9a:	47 0f b7 9c 59 6c 6b 	movzwl 0x6b6c(%r9,%r11,2),%r11d
   15ea1:	00 00 
   15ea3:	41 0f af db          	imul   %r11d,%ebx
   15ea7:	45 01 ed             	add    %r13d,%r13d
   15eaa:	45 89 f9             	mov    %r15d,%r9d
   15ead:	41 29 d9             	sub    %ebx,%r9d
   15eb0:	0f 83 a1 10 00 00    	jae    16f57 <lzma_decode+0x1fa7>
   15eb6:	b9 00 08 00 00       	mov    $0x800,%ecx
   15ebb:	44 29 d9             	sub    %r11d,%ecx
   15ebe:	c1 e9 05             	shr    $0x5,%ecx
   15ec1:	44 01 d9             	add    %r11d,%ecx
   15ec4:	66 41 89 0a          	mov    %cx,(%r10)
   15ec8:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15ece:	0f 87 a7 10 00 00    	ja     16f7b <lzma_decode+0x1fcb>
   15ed4:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15ed9:	0f 84 a4 23 00 00    	je     18283 <lzma_decode+0x32d3>
   15edf:	89 d9                	mov    %ebx,%ecx
   15ee1:	c1 e1 08             	shl    $0x8,%ecx
   15ee4:	41 c1 e7 08          	shl    $0x8,%r15d
   15ee8:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   15eed:	49 ff c6             	inc    %r14
   15ef0:	45 09 f9             	or     %r15d,%r9d
   15ef3:	45 89 cf             	mov    %r9d,%r15d
   15ef6:	e9 82 10 00 00       	jmp    16f7d <lzma_decode+0x1fcd>
   15efb:	29 d9                	sub    %ebx,%ecx
   15efd:	44 89 d0             	mov    %r10d,%eax
   15f00:	c1 e8 05             	shr    $0x5,%eax
   15f03:	41 29 c2             	sub    %eax,%r10d
   15f06:	66 44 89 97 6a 6a 00 	mov    %r10w,0x6a6a(%rdi)
   15f0d:	00 
   15f0e:	89 cb                	mov    %ecx,%ebx
   15f10:	45 89 cf             	mov    %r9d,%r15d
   15f13:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15f19:	77 24                	ja     15f3f <lzma_decode+0xf8f>
   15f1b:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15f20:	0f 84 6c 28 00 00    	je     18792 <lzma_decode+0x37e2>
   15f26:	89 d8                	mov    %ebx,%eax
   15f28:	c1 e0 08             	shl    $0x8,%eax
   15f2b:	41 c1 e7 08          	shl    $0x8,%r15d
   15f2f:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   15f34:	49 ff c6             	inc    %r14
   15f37:	44 09 f9             	or     %r15d,%ecx
   15f3a:	41 89 cf             	mov    %ecx,%r15d
   15f3d:	eb 02                	jmp    15f41 <lzma_decode+0xf91>
   15f3f:	89 d8                	mov    %ebx,%eax
   15f41:	89 c3                	mov    %eax,%ebx
   15f43:	c1 eb 0b             	shr    $0xb,%ebx
   15f46:	45 89 e9             	mov    %r13d,%r9d
   15f49:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   15f50:	00 00 
   15f52:	41 0f af da          	imul   %r10d,%ebx
   15f56:	45 01 ed             	add    %r13d,%r13d
   15f59:	44 89 f9             	mov    %r15d,%ecx
   15f5c:	29 d9                	sub    %ebx,%ecx
   15f5e:	73 43                	jae    15fa3 <lzma_decode+0xff3>
   15f60:	b8 00 08 00 00       	mov    $0x800,%eax
   15f65:	44 29 d0             	sub    %r10d,%eax
   15f68:	c1 e8 05             	shr    $0x5,%eax
   15f6b:	44 01 d0             	add    %r10d,%eax
   15f6e:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   15f75:	00 00 
   15f77:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15f7d:	77 4a                	ja     15fc9 <lzma_decode+0x1019>
   15f7f:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   15f84:	0f 84 95 25 00 00    	je     1851f <lzma_decode+0x356f>
   15f8a:	89 d8                	mov    %ebx,%eax
   15f8c:	c1 e0 08             	shl    $0x8,%eax
   15f8f:	41 c1 e7 08          	shl    $0x8,%r15d
   15f93:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   15f98:	49 ff c6             	inc    %r14
   15f9b:	44 09 f9             	or     %r15d,%ecx
   15f9e:	41 89 cf             	mov    %ecx,%r15d
   15fa1:	eb 28                	jmp    15fcb <lzma_decode+0x101b>
   15fa3:	29 d8                	sub    %ebx,%eax
   15fa5:	45 89 d3             	mov    %r10d,%r11d
   15fa8:	41 c1 eb 05          	shr    $0x5,%r11d
   15fac:	45 29 da             	sub    %r11d,%r10d
   15faf:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   15fb6:	00 00 
   15fb8:	41 83 cd 01          	or     $0x1,%r13d
   15fbc:	89 c3                	mov    %eax,%ebx
   15fbe:	41 89 cf             	mov    %ecx,%r15d
   15fc1:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   15fc7:	76 b6                	jbe    15f7f <lzma_decode+0xfcf>
   15fc9:	89 d8                	mov    %ebx,%eax
   15fcb:	89 c3                	mov    %eax,%ebx
   15fcd:	c1 eb 0b             	shr    $0xb,%ebx
   15fd0:	45 89 e9             	mov    %r13d,%r9d
   15fd3:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   15fda:	00 00 
   15fdc:	41 0f af da          	imul   %r10d,%ebx
   15fe0:	45 01 ed             	add    %r13d,%r13d
   15fe3:	44 89 f9             	mov    %r15d,%ecx
   15fe6:	29 d9                	sub    %ebx,%ecx
   15fe8:	0f 83 0c 07 00 00    	jae    166fa <lzma_decode+0x174a>
   15fee:	b8 00 08 00 00       	mov    $0x800,%eax
   15ff3:	44 29 d0             	sub    %r10d,%eax
   15ff6:	c1 e8 05             	shr    $0x5,%eax
   15ff9:	44 01 d0             	add    %r10d,%eax
   15ffc:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   16003:	00 00 
   16005:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1600b:	0f 87 13 07 00 00    	ja     16724 <lzma_decode+0x1774>
   16011:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16016:	0f 84 9c 22 00 00    	je     182b8 <lzma_decode+0x3308>
   1601c:	89 d8                	mov    %ebx,%eax
   1601e:	c1 e0 08             	shl    $0x8,%eax
   16021:	41 c1 e7 08          	shl    $0x8,%r15d
   16025:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1602a:	49 ff c6             	inc    %r14
   1602d:	44 09 f9             	or     %r15d,%ecx
   16030:	41 89 cf             	mov    %ecx,%r15d
   16033:	e9 ee 06 00 00       	jmp    16726 <lzma_decode+0x1776>
   16038:	29 d9                	sub    %ebx,%ecx
   1603a:	44 89 db             	mov    %r11d,%ebx
   1603d:	c1 eb 05             	shr    $0x5,%ebx
   16040:	41 29 db             	sub    %ebx,%r11d
   16043:	66 45 89 1a          	mov    %r11w,(%r10)
   16047:	41 83 cd 01          	or     $0x1,%r13d
   1604b:	89 cb                	mov    %ecx,%ebx
   1604d:	45 89 cf             	mov    %r9d,%r15d
   16050:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16056:	0f 86 e9 f7 ff ff    	jbe    15845 <lzma_decode+0x895>
   1605c:	89 d9                	mov    %ebx,%ecx
   1605e:	c1 eb 0b             	shr    $0xb,%ebx
   16061:	41 89 c1             	mov    %eax,%r9d
   16064:	45 89 eb             	mov    %r13d,%r11d
   16067:	49 c1 e1 04          	shl    $0x4,%r9
   1606b:	49 01 f9             	add    %rdi,%r9
   1606e:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   16072:	49 81 c2 68 66 00 00 	add    $0x6668,%r10
   16079:	47 0f b7 9c 59 68 66 	movzwl 0x6668(%r9,%r11,2),%r11d
   16080:	00 00 
   16082:	41 0f af db          	imul   %r11d,%ebx
   16086:	45 01 ed             	add    %r13d,%r13d
   16089:	45 89 f9             	mov    %r15d,%r9d
   1608c:	41 29 d9             	sub    %ebx,%r9d
   1608f:	73 1c                	jae    160ad <lzma_decode+0x10fd>
   16091:	b9 00 08 00 00       	mov    $0x800,%ecx
   16096:	44 29 d9             	sub    %r11d,%ecx
   16099:	c1 e9 05             	shr    $0x5,%ecx
   1609c:	44 01 d9             	add    %r11d,%ecx
   1609f:	66 41 89 0a          	mov    %cx,(%r10)
   160a3:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   160a9:	76 22                	jbe    160cd <lzma_decode+0x111d>
   160ab:	eb 40                	jmp    160ed <lzma_decode+0x113d>
   160ad:	29 d9                	sub    %ebx,%ecx
   160af:	44 89 db             	mov    %r11d,%ebx
   160b2:	c1 eb 05             	shr    $0x5,%ebx
   160b5:	41 29 db             	sub    %ebx,%r11d
   160b8:	66 45 89 1a          	mov    %r11w,(%r10)
   160bc:	41 83 cd 01          	or     $0x1,%r13d
   160c0:	89 cb                	mov    %ecx,%ebx
   160c2:	45 89 cf             	mov    %r9d,%r15d
   160c5:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   160cb:	77 20                	ja     160ed <lzma_decode+0x113d>
   160cd:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   160d2:	0f 84 2e 25 00 00    	je     18606 <lzma_decode+0x3656>
   160d8:	c1 e3 08             	shl    $0x8,%ebx
   160db:	41 c1 e7 08          	shl    $0x8,%r15d
   160df:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   160e4:	49 ff c6             	inc    %r14
   160e7:	44 09 f9             	or     %r15d,%ecx
   160ea:	41 89 cf             	mov    %ecx,%r15d
   160ed:	89 d9                	mov    %ebx,%ecx
   160ef:	c1 e9 0b             	shr    $0xb,%ecx
   160f2:	41 89 c1             	mov    %eax,%r9d
   160f5:	45 89 ea             	mov    %r13d,%r10d
   160f8:	49 c1 e1 04          	shl    $0x4,%r9
   160fc:	49 01 f9             	add    %rdi,%r9
   160ff:	4b 8d 04 51          	lea    (%r9,%r10,2),%rax
   16103:	48 05 68 66 00 00    	add    $0x6668,%rax
   16109:	47 0f b7 8c 51 68 66 	movzwl 0x6668(%r9,%r10,2),%r9d
   16110:	00 00 
   16112:	41 0f af c9          	imul   %r9d,%ecx
   16116:	45 01 ed             	add    %r13d,%r13d
   16119:	45 89 fb             	mov    %r15d,%r11d
   1611c:	41 29 cb             	sub    %ecx,%r11d
   1611f:	73 12                	jae    16133 <lzma_decode+0x1183>
   16121:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16127:	45 29 ca             	sub    %r9d,%r10d
   1612a:	41 c1 ea 05          	shr    $0x5,%r10d
   1612e:	45 01 ca             	add    %r9d,%r10d
   16131:	eb 17                	jmp    1614a <lzma_decode+0x119a>
   16133:	29 cb                	sub    %ecx,%ebx
   16135:	44 89 c9             	mov    %r9d,%ecx
   16138:	c1 e9 05             	shr    $0x5,%ecx
   1613b:	41 29 c9             	sub    %ecx,%r9d
   1613e:	41 83 cd 01          	or     $0x1,%r13d
   16142:	45 89 ca             	mov    %r9d,%r10d
   16145:	89 d9                	mov    %ebx,%ecx
   16147:	45 89 df             	mov    %r11d,%r15d
   1614a:	66 44 89 10          	mov    %r10w,(%rax)
   1614e:	41 83 c5 fa          	add    $0xfffffffa,%r13d
   16152:	e9 e5 08 00 00       	jmp    16a3c <lzma_decode+0x1a8c>
   16157:	29 d9                	sub    %ebx,%ecx
   16159:	45 89 d3             	mov    %r10d,%r11d
   1615c:	41 c1 eb 05          	shr    $0x5,%r11d
   16160:	45 29 da             	sub    %r11d,%r10d
   16163:	66 44 89 97 64 66 00 	mov    %r10w,0x6664(%rdi)
   1616a:	00 
   1616b:	89 cb                	mov    %ecx,%ebx
   1616d:	45 89 cf             	mov    %r9d,%r15d
   16170:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16176:	77 26                	ja     1619e <lzma_decode+0x11ee>
   16178:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1617d:	0f 84 96 20 00 00    	je     18219 <lzma_decode+0x3269>
   16183:	89 d9                	mov    %ebx,%ecx
   16185:	c1 e1 08             	shl    $0x8,%ecx
   16188:	41 c1 e7 08          	shl    $0x8,%r15d
   1618c:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   16191:	49 ff c6             	inc    %r14
   16194:	45 09 f9             	or     %r15d,%r9d
   16197:	45 89 cf             	mov    %r9d,%r15d
   1619a:	89 cb                	mov    %ecx,%ebx
   1619c:	eb 02                	jmp    161a0 <lzma_decode+0x11f0>
   1619e:	89 d9                	mov    %ebx,%ecx
   161a0:	c1 eb 0b             	shr    $0xb,%ebx
   161a3:	44 0f b7 97 66 66 00 	movzwl 0x6666(%rdi),%r10d
   161aa:	00 
   161ab:	41 0f af da          	imul   %r10d,%ebx
   161af:	45 89 f9             	mov    %r15d,%r9d
   161b2:	41 29 d9             	sub    %ebx,%r9d
   161b5:	0f 83 b6 01 00 00    	jae    16371 <lzma_decode+0x13c1>
   161bb:	b9 00 08 00 00       	mov    $0x800,%ecx
   161c0:	44 29 d1             	sub    %r10d,%ecx
   161c3:	c1 e9 05             	shr    $0x5,%ecx
   161c6:	44 01 d1             	add    %r10d,%ecx
   161c9:	66 89 8f 66 66 00 00 	mov    %cx,0x6666(%rdi)
   161d0:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   161d6:	77 26                	ja     161fe <lzma_decode+0x124e>
   161d8:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   161dd:	0f 84 c0 23 00 00    	je     185a3 <lzma_decode+0x35f3>
   161e3:	89 d9                	mov    %ebx,%ecx
   161e5:	c1 e1 08             	shl    $0x8,%ecx
   161e8:	41 c1 e7 08          	shl    $0x8,%r15d
   161ec:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   161f1:	49 ff c6             	inc    %r14
   161f4:	45 09 f9             	or     %r15d,%r9d
   161f7:	45 89 cf             	mov    %r9d,%r15d
   161fa:	89 cb                	mov    %ecx,%ebx
   161fc:	eb 02                	jmp    16200 <lzma_decode+0x1250>
   161fe:	89 d9                	mov    %ebx,%ecx
   16200:	c1 eb 0b             	shr    $0xb,%ebx
   16203:	41 89 c1             	mov    %eax,%r9d
   16206:	45 89 eb             	mov    %r13d,%r11d
   16209:	49 c1 e1 04          	shl    $0x4,%r9
   1620d:	49 01 f9             	add    %rdi,%r9
   16210:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   16214:	49 81 c2 68 67 00 00 	add    $0x6768,%r10
   1621b:	47 0f b7 9c 59 68 67 	movzwl 0x6768(%r9,%r11,2),%r11d
   16222:	00 00 
   16224:	41 0f af db          	imul   %r11d,%ebx
   16228:	45 01 ed             	add    %r13d,%r13d
   1622b:	45 89 f9             	mov    %r15d,%r9d
   1622e:	41 29 d9             	sub    %ebx,%r9d
   16231:	73 3e                	jae    16271 <lzma_decode+0x12c1>
   16233:	b9 00 08 00 00       	mov    $0x800,%ecx
   16238:	44 29 d9             	sub    %r11d,%ecx
   1623b:	c1 e9 05             	shr    $0x5,%ecx
   1623e:	44 01 d9             	add    %r11d,%ecx
   16241:	66 41 89 0a          	mov    %cx,(%r10)
   16245:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1624b:	77 44                	ja     16291 <lzma_decode+0x12e1>
   1624d:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16252:	0f 84 e3 20 00 00    	je     1833b <lzma_decode+0x338b>
   16258:	89 d9                	mov    %ebx,%ecx
   1625a:	c1 e1 08             	shl    $0x8,%ecx
   1625d:	41 c1 e7 08          	shl    $0x8,%r15d
   16261:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   16266:	49 ff c6             	inc    %r14
   16269:	45 09 f9             	or     %r15d,%r9d
   1626c:	45 89 cf             	mov    %r9d,%r15d
   1626f:	eb 22                	jmp    16293 <lzma_decode+0x12e3>
   16271:	29 d9                	sub    %ebx,%ecx
   16273:	44 89 db             	mov    %r11d,%ebx
   16276:	c1 eb 05             	shr    $0x5,%ebx
   16279:	41 29 db             	sub    %ebx,%r11d
   1627c:	66 45 89 1a          	mov    %r11w,(%r10)
   16280:	41 83 cd 01          	or     $0x1,%r13d
   16284:	89 cb                	mov    %ecx,%ebx
   16286:	45 89 cf             	mov    %r9d,%r15d
   16289:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1628f:	76 bc                	jbe    1624d <lzma_decode+0x129d>
   16291:	89 d9                	mov    %ebx,%ecx
   16293:	89 cb                	mov    %ecx,%ebx
   16295:	c1 eb 0b             	shr    $0xb,%ebx
   16298:	41 89 c1             	mov    %eax,%r9d
   1629b:	45 89 eb             	mov    %r13d,%r11d
   1629e:	49 c1 e1 04          	shl    $0x4,%r9
   162a2:	49 01 f9             	add    %rdi,%r9
   162a5:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   162a9:	49 81 c2 68 67 00 00 	add    $0x6768,%r10
   162b0:	47 0f b7 9c 59 68 67 	movzwl 0x6768(%r9,%r11,2),%r11d
   162b7:	00 00 
   162b9:	41 0f af db          	imul   %r11d,%ebx
   162bd:	45 01 ed             	add    %r13d,%r13d
   162c0:	45 89 f9             	mov    %r15d,%r9d
   162c3:	41 29 d9             	sub    %ebx,%r9d
   162c6:	73 1c                	jae    162e4 <lzma_decode+0x1334>
   162c8:	b9 00 08 00 00       	mov    $0x800,%ecx
   162cd:	44 29 d9             	sub    %r11d,%ecx
   162d0:	c1 e9 05             	shr    $0x5,%ecx
   162d3:	44 01 d9             	add    %r11d,%ecx
   162d6:	66 41 89 0a          	mov    %cx,(%r10)
   162da:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   162e0:	76 22                	jbe    16304 <lzma_decode+0x1354>
   162e2:	eb 40                	jmp    16324 <lzma_decode+0x1374>
   162e4:	29 d9                	sub    %ebx,%ecx
   162e6:	44 89 db             	mov    %r11d,%ebx
   162e9:	c1 eb 05             	shr    $0x5,%ebx
   162ec:	41 29 db             	sub    %ebx,%r11d
   162ef:	66 45 89 1a          	mov    %r11w,(%r10)
   162f3:	41 83 cd 01          	or     $0x1,%r13d
   162f7:	89 cb                	mov    %ecx,%ebx
   162f9:	45 89 cf             	mov    %r9d,%r15d
   162fc:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16302:	77 20                	ja     16324 <lzma_decode+0x1374>
   16304:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16309:	0f 84 9c 23 00 00    	je     186ab <lzma_decode+0x36fb>
   1630f:	c1 e3 08             	shl    $0x8,%ebx
   16312:	41 c1 e7 08          	shl    $0x8,%r15d
   16316:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1631b:	49 ff c6             	inc    %r14
   1631e:	44 09 f9             	or     %r15d,%ecx
   16321:	41 89 cf             	mov    %ecx,%r15d
   16324:	89 d9                	mov    %ebx,%ecx
   16326:	c1 e9 0b             	shr    $0xb,%ecx
   16329:	41 89 c1             	mov    %eax,%r9d
   1632c:	45 89 ea             	mov    %r13d,%r10d
   1632f:	49 c1 e1 04          	shl    $0x4,%r9
   16333:	49 01 f9             	add    %rdi,%r9
   16336:	4b 8d 04 51          	lea    (%r9,%r10,2),%rax
   1633a:	48 05 68 67 00 00    	add    $0x6768,%rax
   16340:	47 0f b7 8c 51 68 67 	movzwl 0x6768(%r9,%r10,2),%r9d
   16347:	00 00 
   16349:	41 0f af c9          	imul   %r9d,%ecx
   1634d:	45 01 ed             	add    %r13d,%r13d
   16350:	45 89 fb             	mov    %r15d,%r11d
   16353:	41 29 cb             	sub    %ecx,%r11d
   16356:	0f 83 47 01 00 00    	jae    164a3 <lzma_decode+0x14f3>
   1635c:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16362:	45 29 ca             	sub    %r9d,%r10d
   16365:	41 c1 ea 05          	shr    $0x5,%r10d
   16369:	45 01 ca             	add    %r9d,%r10d
   1636c:	e9 49 01 00 00       	jmp    164ba <lzma_decode+0x150a>
   16371:	29 d9                	sub    %ebx,%ecx
   16373:	44 89 d0             	mov    %r10d,%eax
   16376:	c1 e8 05             	shr    $0x5,%eax
   16379:	41 29 c2             	sub    %eax,%r10d
   1637c:	66 44 89 97 66 66 00 	mov    %r10w,0x6666(%rdi)
   16383:	00 
   16384:	89 cb                	mov    %ecx,%ebx
   16386:	45 89 cf             	mov    %r9d,%r15d
   16389:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1638f:	77 24                	ja     163b5 <lzma_decode+0x1405>
   16391:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16396:	0f 84 b4 23 00 00    	je     18750 <lzma_decode+0x37a0>
   1639c:	89 d8                	mov    %ebx,%eax
   1639e:	c1 e0 08             	shl    $0x8,%eax
   163a1:	41 c1 e7 08          	shl    $0x8,%r15d
   163a5:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   163aa:	49 ff c6             	inc    %r14
   163ad:	44 09 f9             	or     %r15d,%ecx
   163b0:	41 89 cf             	mov    %ecx,%r15d
   163b3:	eb 02                	jmp    163b7 <lzma_decode+0x1407>
   163b5:	89 d8                	mov    %ebx,%eax
   163b7:	89 c3                	mov    %eax,%ebx
   163b9:	c1 eb 0b             	shr    $0xb,%ebx
   163bc:	45 89 e9             	mov    %r13d,%r9d
   163bf:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   163c6:	00 00 
   163c8:	41 0f af da          	imul   %r10d,%ebx
   163cc:	45 01 ed             	add    %r13d,%r13d
   163cf:	44 89 f9             	mov    %r15d,%ecx
   163d2:	29 d9                	sub    %ebx,%ecx
   163d4:	73 43                	jae    16419 <lzma_decode+0x1469>
   163d6:	b8 00 08 00 00       	mov    $0x800,%eax
   163db:	44 29 d0             	sub    %r10d,%eax
   163de:	c1 e8 05             	shr    $0x5,%eax
   163e1:	44 01 d0             	add    %r10d,%eax
   163e4:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   163eb:	00 00 
   163ed:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   163f3:	77 4a                	ja     1643f <lzma_decode+0x148f>
   163f5:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   163fa:	0f 84 95 1d 00 00    	je     18195 <lzma_decode+0x31e5>
   16400:	89 d8                	mov    %ebx,%eax
   16402:	c1 e0 08             	shl    $0x8,%eax
   16405:	41 c1 e7 08          	shl    $0x8,%r15d
   16409:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1640e:	49 ff c6             	inc    %r14
   16411:	44 09 f9             	or     %r15d,%ecx
   16414:	41 89 cf             	mov    %ecx,%r15d
   16417:	eb 28                	jmp    16441 <lzma_decode+0x1491>
   16419:	29 d8                	sub    %ebx,%eax
   1641b:	45 89 d3             	mov    %r10d,%r11d
   1641e:	41 c1 eb 05          	shr    $0x5,%r11d
   16422:	45 29 da             	sub    %r11d,%r10d
   16425:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   1642c:	00 00 
   1642e:	41 83 cd 01          	or     $0x1,%r13d
   16432:	89 c3                	mov    %eax,%ebx
   16434:	41 89 cf             	mov    %ecx,%r15d
   16437:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1643d:	76 b6                	jbe    163f5 <lzma_decode+0x1445>
   1643f:	89 d8                	mov    %ebx,%eax
   16441:	89 c3                	mov    %eax,%ebx
   16443:	c1 eb 0b             	shr    $0xb,%ebx
   16446:	45 89 e9             	mov    %r13d,%r9d
   16449:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   16450:	00 00 
   16452:	41 0f af da          	imul   %r10d,%ebx
   16456:	45 01 ed             	add    %r13d,%r13d
   16459:	44 89 f9             	mov    %r15d,%ecx
   1645c:	29 d9                	sub    %ebx,%ecx
   1645e:	73 67                	jae    164c7 <lzma_decode+0x1517>
   16460:	b8 00 08 00 00       	mov    $0x800,%eax
   16465:	44 29 d0             	sub    %r10d,%eax
   16468:	c1 e8 05             	shr    $0x5,%eax
   1646b:	44 01 d0             	add    %r10d,%eax
   1646e:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   16475:	00 00 
   16477:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1647d:	77 6e                	ja     164ed <lzma_decode+0x153d>
   1647f:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16484:	0f 84 a5 22 00 00    	je     1872f <lzma_decode+0x377f>
   1648a:	89 d8                	mov    %ebx,%eax
   1648c:	c1 e0 08             	shl    $0x8,%eax
   1648f:	41 c1 e7 08          	shl    $0x8,%r15d
   16493:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16498:	49 ff c6             	inc    %r14
   1649b:	44 09 f9             	or     %r15d,%ecx
   1649e:	41 89 cf             	mov    %ecx,%r15d
   164a1:	eb 4c                	jmp    164ef <lzma_decode+0x153f>
   164a3:	29 cb                	sub    %ecx,%ebx
   164a5:	44 89 c9             	mov    %r9d,%ecx
   164a8:	c1 e9 05             	shr    $0x5,%ecx
   164ab:	41 29 c9             	sub    %ecx,%r9d
   164ae:	41 83 cd 01          	or     $0x1,%r13d
   164b2:	45 89 ca             	mov    %r9d,%r10d
   164b5:	89 d9                	mov    %ebx,%ecx
   164b7:	45 89 df             	mov    %r11d,%r15d
   164ba:	66 44 89 10          	mov    %r10w,(%rax)
   164be:	41 83 c5 02          	add    $0x2,%r13d
   164c2:	e9 75 05 00 00       	jmp    16a3c <lzma_decode+0x1a8c>
   164c7:	29 d8                	sub    %ebx,%eax
   164c9:	45 89 d3             	mov    %r10d,%r11d
   164cc:	41 c1 eb 05          	shr    $0x5,%r11d
   164d0:	45 29 da             	sub    %r11d,%r10d
   164d3:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   164da:	00 00 
   164dc:	41 83 cd 01          	or     $0x1,%r13d
   164e0:	89 c3                	mov    %eax,%ebx
   164e2:	41 89 cf             	mov    %ecx,%r15d
   164e5:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   164eb:	76 92                	jbe    1647f <lzma_decode+0x14cf>
   164ed:	89 d8                	mov    %ebx,%eax
   164ef:	89 c3                	mov    %eax,%ebx
   164f1:	c1 eb 0b             	shr    $0xb,%ebx
   164f4:	45 89 e9             	mov    %r13d,%r9d
   164f7:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   164fe:	00 00 
   16500:	41 0f af da          	imul   %r10d,%ebx
   16504:	45 01 ed             	add    %r13d,%r13d
   16507:	44 89 f9             	mov    %r15d,%ecx
   1650a:	29 d9                	sub    %ebx,%ecx
   1650c:	73 43                	jae    16551 <lzma_decode+0x15a1>
   1650e:	b8 00 08 00 00       	mov    $0x800,%eax
   16513:	44 29 d0             	sub    %r10d,%eax
   16516:	c1 e8 05             	shr    $0x5,%eax
   16519:	44 01 d0             	add    %r10d,%eax
   1651c:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   16523:	00 00 
   16525:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1652b:	77 4a                	ja     16577 <lzma_decode+0x15c7>
   1652d:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16532:	0f 84 39 22 00 00    	je     18771 <lzma_decode+0x37c1>
   16538:	89 d8                	mov    %ebx,%eax
   1653a:	c1 e0 08             	shl    $0x8,%eax
   1653d:	41 c1 e7 08          	shl    $0x8,%r15d
   16541:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16546:	49 ff c6             	inc    %r14
   16549:	44 09 f9             	or     %r15d,%ecx
   1654c:	41 89 cf             	mov    %ecx,%r15d
   1654f:	eb 28                	jmp    16579 <lzma_decode+0x15c9>
   16551:	29 d8                	sub    %ebx,%eax
   16553:	45 89 d3             	mov    %r10d,%r11d
   16556:	41 c1 eb 05          	shr    $0x5,%r11d
   1655a:	45 29 da             	sub    %r11d,%r10d
   1655d:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   16564:	00 00 
   16566:	41 83 cd 01          	or     $0x1,%r13d
   1656a:	89 c3                	mov    %eax,%ebx
   1656c:	41 89 cf             	mov    %ecx,%r15d
   1656f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16575:	76 b6                	jbe    1652d <lzma_decode+0x157d>
   16577:	89 d8                	mov    %ebx,%eax
   16579:	89 c3                	mov    %eax,%ebx
   1657b:	c1 eb 0b             	shr    $0xb,%ebx
   1657e:	45 89 e9             	mov    %r13d,%r9d
   16581:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   16588:	00 00 
   1658a:	41 0f af da          	imul   %r10d,%ebx
   1658e:	45 01 ed             	add    %r13d,%r13d
   16591:	44 89 f9             	mov    %r15d,%ecx
   16594:	29 d9                	sub    %ebx,%ecx
   16596:	73 43                	jae    165db <lzma_decode+0x162b>
   16598:	b8 00 08 00 00       	mov    $0x800,%eax
   1659d:	44 29 d0             	sub    %r10d,%eax
   165a0:	c1 e8 05             	shr    $0x5,%eax
   165a3:	44 01 d0             	add    %r10d,%eax
   165a6:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   165ad:	00 00 
   165af:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   165b5:	77 4a                	ja     16601 <lzma_decode+0x1651>
   165b7:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   165bc:	0f 84 15 1c 00 00    	je     181d7 <lzma_decode+0x3227>
   165c2:	89 d8                	mov    %ebx,%eax
   165c4:	c1 e0 08             	shl    $0x8,%eax
   165c7:	41 c1 e7 08          	shl    $0x8,%r15d
   165cb:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   165d0:	49 ff c6             	inc    %r14
   165d3:	44 09 f9             	or     %r15d,%ecx
   165d6:	41 89 cf             	mov    %ecx,%r15d
   165d9:	eb 28                	jmp    16603 <lzma_decode+0x1653>
   165db:	29 d8                	sub    %ebx,%eax
   165dd:	45 89 d3             	mov    %r10d,%r11d
   165e0:	41 c1 eb 05          	shr    $0x5,%r11d
   165e4:	45 29 da             	sub    %r11d,%r10d
   165e7:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   165ee:	00 00 
   165f0:	41 83 cd 01          	or     $0x1,%r13d
   165f4:	89 c3                	mov    %eax,%ebx
   165f6:	41 89 cf             	mov    %ecx,%r15d
   165f9:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   165ff:	76 b6                	jbe    165b7 <lzma_decode+0x1607>
   16601:	89 d8                	mov    %ebx,%eax
   16603:	89 c3                	mov    %eax,%ebx
   16605:	c1 eb 0b             	shr    $0xb,%ebx
   16608:	45 89 e9             	mov    %r13d,%r9d
   1660b:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   16612:	00 00 
   16614:	41 0f af da          	imul   %r10d,%ebx
   16618:	45 01 ed             	add    %r13d,%r13d
   1661b:	44 89 f9             	mov    %r15d,%ecx
   1661e:	29 d9                	sub    %ebx,%ecx
   16620:	73 43                	jae    16665 <lzma_decode+0x16b5>
   16622:	b8 00 08 00 00       	mov    $0x800,%eax
   16627:	44 29 d0             	sub    %r10d,%eax
   1662a:	c1 e8 05             	shr    $0x5,%eax
   1662d:	44 01 d0             	add    %r10d,%eax
   16630:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   16637:	00 00 
   16639:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1663f:	77 4a                	ja     1668b <lzma_decode+0x16db>
   16641:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16646:	0f 84 83 1a 00 00    	je     180cf <lzma_decode+0x311f>
   1664c:	89 d8                	mov    %ebx,%eax
   1664e:	c1 e0 08             	shl    $0x8,%eax
   16651:	41 c1 e7 08          	shl    $0x8,%r15d
   16655:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1665a:	49 ff c6             	inc    %r14
   1665d:	44 09 f9             	or     %r15d,%ecx
   16660:	41 89 cf             	mov    %ecx,%r15d
   16663:	eb 28                	jmp    1668d <lzma_decode+0x16dd>
   16665:	29 d8                	sub    %ebx,%eax
   16667:	45 89 d3             	mov    %r10d,%r11d
   1666a:	41 c1 eb 05          	shr    $0x5,%r11d
   1666e:	45 29 da             	sub    %r11d,%r10d
   16671:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   16678:	00 00 
   1667a:	41 83 cd 01          	or     $0x1,%r13d
   1667e:	89 c3                	mov    %eax,%ebx
   16680:	41 89 cf             	mov    %ecx,%r15d
   16683:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16689:	76 b6                	jbe    16641 <lzma_decode+0x1691>
   1668b:	89 d8                	mov    %ebx,%eax
   1668d:	89 c3                	mov    %eax,%ebx
   1668f:	c1 eb 0b             	shr    $0xb,%ebx
   16692:	45 89 e9             	mov    %r13d,%r9d
   16695:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   1669c:	00 00 
   1669e:	41 0f af da          	imul   %r10d,%ebx
   166a2:	45 01 ed             	add    %r13d,%r13d
   166a5:	44 89 f9             	mov    %r15d,%ecx
   166a8:	29 d9                	sub    %ebx,%ecx
   166aa:	0f 83 81 02 00 00    	jae    16931 <lzma_decode+0x1981>
   166b0:	b8 00 08 00 00       	mov    $0x800,%eax
   166b5:	44 29 d0             	sub    %r10d,%eax
   166b8:	c1 e8 05             	shr    $0x5,%eax
   166bb:	44 01 d0             	add    %r10d,%eax
   166be:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   166c5:	00 00 
   166c7:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   166cd:	0f 87 88 02 00 00    	ja     1695b <lzma_decode+0x19ab>
   166d3:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   166d8:	0f 84 30 20 00 00    	je     1870e <lzma_decode+0x375e>
   166de:	89 d8                	mov    %ebx,%eax
   166e0:	c1 e0 08             	shl    $0x8,%eax
   166e3:	41 c1 e7 08          	shl    $0x8,%r15d
   166e7:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   166ec:	49 ff c6             	inc    %r14
   166ef:	44 09 f9             	or     %r15d,%ecx
   166f2:	41 89 cf             	mov    %ecx,%r15d
   166f5:	e9 63 02 00 00       	jmp    1695d <lzma_decode+0x19ad>
   166fa:	29 d8                	sub    %ebx,%eax
   166fc:	45 89 d3             	mov    %r10d,%r11d
   166ff:	41 c1 eb 05          	shr    $0x5,%r11d
   16703:	45 29 da             	sub    %r11d,%r10d
   16706:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   1670d:	00 00 
   1670f:	41 83 cd 01          	or     $0x1,%r13d
   16713:	89 c3                	mov    %eax,%ebx
   16715:	41 89 cf             	mov    %ecx,%r15d
   16718:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1671e:	0f 86 ed f8 ff ff    	jbe    16011 <lzma_decode+0x1061>
   16724:	89 d8                	mov    %ebx,%eax
   16726:	89 c3                	mov    %eax,%ebx
   16728:	c1 eb 0b             	shr    $0xb,%ebx
   1672b:	45 89 e9             	mov    %r13d,%r9d
   1672e:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   16735:	00 00 
   16737:	41 0f af da          	imul   %r10d,%ebx
   1673b:	45 01 ed             	add    %r13d,%r13d
   1673e:	44 89 f9             	mov    %r15d,%ecx
   16741:	29 d9                	sub    %ebx,%ecx
   16743:	73 43                	jae    16788 <lzma_decode+0x17d8>
   16745:	b8 00 08 00 00       	mov    $0x800,%eax
   1674a:	44 29 d0             	sub    %r10d,%eax
   1674d:	c1 e8 05             	shr    $0x5,%eax
   16750:	44 01 d0             	add    %r10d,%eax
   16753:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   1675a:	00 00 
   1675c:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16762:	77 4a                	ja     167ae <lzma_decode+0x17fe>
   16764:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16769:	0f 84 81 19 00 00    	je     180f0 <lzma_decode+0x3140>
   1676f:	89 d8                	mov    %ebx,%eax
   16771:	c1 e0 08             	shl    $0x8,%eax
   16774:	41 c1 e7 08          	shl    $0x8,%r15d
   16778:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1677d:	49 ff c6             	inc    %r14
   16780:	44 09 f9             	or     %r15d,%ecx
   16783:	41 89 cf             	mov    %ecx,%r15d
   16786:	eb 28                	jmp    167b0 <lzma_decode+0x1800>
   16788:	29 d8                	sub    %ebx,%eax
   1678a:	45 89 d3             	mov    %r10d,%r11d
   1678d:	41 c1 eb 05          	shr    $0x5,%r11d
   16791:	45 29 da             	sub    %r11d,%r10d
   16794:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   1679b:	00 00 
   1679d:	41 83 cd 01          	or     $0x1,%r13d
   167a1:	89 c3                	mov    %eax,%ebx
   167a3:	41 89 cf             	mov    %ecx,%r15d
   167a6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   167ac:	76 b6                	jbe    16764 <lzma_decode+0x17b4>
   167ae:	89 d8                	mov    %ebx,%eax
   167b0:	89 c3                	mov    %eax,%ebx
   167b2:	c1 eb 0b             	shr    $0xb,%ebx
   167b5:	45 89 e9             	mov    %r13d,%r9d
   167b8:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   167bf:	00 00 
   167c1:	41 0f af da          	imul   %r10d,%ebx
   167c5:	45 01 ed             	add    %r13d,%r13d
   167c8:	44 89 f9             	mov    %r15d,%ecx
   167cb:	29 d9                	sub    %ebx,%ecx
   167cd:	73 43                	jae    16812 <lzma_decode+0x1862>
   167cf:	b8 00 08 00 00       	mov    $0x800,%eax
   167d4:	44 29 d0             	sub    %r10d,%eax
   167d7:	c1 e8 05             	shr    $0x5,%eax
   167da:	44 01 d0             	add    %r10d,%eax
   167dd:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   167e4:	00 00 
   167e6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   167ec:	77 4a                	ja     16838 <lzma_decode+0x1888>
   167ee:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   167f3:	0f 84 fc 1f 00 00    	je     187f5 <lzma_decode+0x3845>
   167f9:	89 d8                	mov    %ebx,%eax
   167fb:	c1 e0 08             	shl    $0x8,%eax
   167fe:	41 c1 e7 08          	shl    $0x8,%r15d
   16802:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16807:	49 ff c6             	inc    %r14
   1680a:	44 09 f9             	or     %r15d,%ecx
   1680d:	41 89 cf             	mov    %ecx,%r15d
   16810:	eb 28                	jmp    1683a <lzma_decode+0x188a>
   16812:	29 d8                	sub    %ebx,%eax
   16814:	45 89 d3             	mov    %r10d,%r11d
   16817:	41 c1 eb 05          	shr    $0x5,%r11d
   1681b:	45 29 da             	sub    %r11d,%r10d
   1681e:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   16825:	00 00 
   16827:	41 83 cd 01          	or     $0x1,%r13d
   1682b:	89 c3                	mov    %eax,%ebx
   1682d:	41 89 cf             	mov    %ecx,%r15d
   16830:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16836:	76 b6                	jbe    167ee <lzma_decode+0x183e>
   16838:	89 d8                	mov    %ebx,%eax
   1683a:	89 c3                	mov    %eax,%ebx
   1683c:	c1 eb 0b             	shr    $0xb,%ebx
   1683f:	45 89 e9             	mov    %r13d,%r9d
   16842:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   16849:	00 00 
   1684b:	41 0f af da          	imul   %r10d,%ebx
   1684f:	45 01 ed             	add    %r13d,%r13d
   16852:	44 89 f9             	mov    %r15d,%ecx
   16855:	29 d9                	sub    %ebx,%ecx
   16857:	73 43                	jae    1689c <lzma_decode+0x18ec>
   16859:	b8 00 08 00 00       	mov    $0x800,%eax
   1685e:	44 29 d0             	sub    %r10d,%eax
   16861:	c1 e8 05             	shr    $0x5,%eax
   16864:	44 01 d0             	add    %r10d,%eax
   16867:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   1686e:	00 00 
   16870:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16876:	77 4a                	ja     168c2 <lzma_decode+0x1912>
   16878:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1687d:	0f 84 e9 17 00 00    	je     1806c <lzma_decode+0x30bc>
   16883:	89 d8                	mov    %ebx,%eax
   16885:	c1 e0 08             	shl    $0x8,%eax
   16888:	41 c1 e7 08          	shl    $0x8,%r15d
   1688c:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16891:	49 ff c6             	inc    %r14
   16894:	44 09 f9             	or     %r15d,%ecx
   16897:	41 89 cf             	mov    %ecx,%r15d
   1689a:	eb 28                	jmp    168c4 <lzma_decode+0x1914>
   1689c:	29 d8                	sub    %ebx,%eax
   1689e:	45 89 d3             	mov    %r10d,%r11d
   168a1:	41 c1 eb 05          	shr    $0x5,%r11d
   168a5:	45 29 da             	sub    %r11d,%r10d
   168a8:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   168af:	00 00 
   168b1:	41 83 cd 01          	or     $0x1,%r13d
   168b5:	89 c3                	mov    %eax,%ebx
   168b7:	41 89 cf             	mov    %ecx,%r15d
   168ba:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   168c0:	76 b6                	jbe    16878 <lzma_decode+0x18c8>
   168c2:	89 d8                	mov    %ebx,%eax
   168c4:	89 c3                	mov    %eax,%ebx
   168c6:	c1 eb 0b             	shr    $0xb,%ebx
   168c9:	45 89 e9             	mov    %r13d,%r9d
   168cc:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   168d3:	00 00 
   168d5:	41 0f af da          	imul   %r10d,%ebx
   168d9:	45 01 ed             	add    %r13d,%r13d
   168dc:	44 89 f9             	mov    %r15d,%ecx
   168df:	29 d9                	sub    %ebx,%ecx
   168e1:	0f 83 5e 05 00 00    	jae    16e45 <lzma_decode+0x1e95>
   168e7:	b8 00 08 00 00       	mov    $0x800,%eax
   168ec:	44 29 d0             	sub    %r10d,%eax
   168ef:	c1 e8 05             	shr    $0x5,%eax
   168f2:	44 01 d0             	add    %r10d,%eax
   168f5:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   168fc:	00 00 
   168fe:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16904:	0f 87 65 05 00 00    	ja     16e6f <lzma_decode+0x1ebf>
   1690a:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1690f:	0f 84 bf 1e 00 00    	je     187d4 <lzma_decode+0x3824>
   16915:	89 d8                	mov    %ebx,%eax
   16917:	c1 e0 08             	shl    $0x8,%eax
   1691a:	41 c1 e7 08          	shl    $0x8,%r15d
   1691e:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16923:	49 ff c6             	inc    %r14
   16926:	44 09 f9             	or     %r15d,%ecx
   16929:	41 89 cf             	mov    %ecx,%r15d
   1692c:	e9 40 05 00 00       	jmp    16e71 <lzma_decode+0x1ec1>
   16931:	29 d8                	sub    %ebx,%eax
   16933:	45 89 d3             	mov    %r10d,%r11d
   16936:	41 c1 eb 05          	shr    $0x5,%r11d
   1693a:	45 29 da             	sub    %r11d,%r10d
   1693d:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   16944:	00 00 
   16946:	41 83 cd 01          	or     $0x1,%r13d
   1694a:	89 c3                	mov    %eax,%ebx
   1694c:	41 89 cf             	mov    %ecx,%r15d
   1694f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16955:	0f 86 78 fd ff ff    	jbe    166d3 <lzma_decode+0x1723>
   1695b:	89 d8                	mov    %ebx,%eax
   1695d:	89 c3                	mov    %eax,%ebx
   1695f:	c1 eb 0b             	shr    $0xb,%ebx
   16962:	45 89 e9             	mov    %r13d,%r9d
   16965:	46 0f b7 94 4f 68 68 	movzwl 0x6868(%rdi,%r9,2),%r10d
   1696c:	00 00 
   1696e:	41 0f af da          	imul   %r10d,%ebx
   16972:	45 01 ed             	add    %r13d,%r13d
   16975:	44 89 f9             	mov    %r15d,%ecx
   16978:	29 d9                	sub    %ebx,%ecx
   1697a:	73 21                	jae    1699d <lzma_decode+0x19ed>
   1697c:	b8 00 08 00 00       	mov    $0x800,%eax
   16981:	44 29 d0             	sub    %r10d,%eax
   16984:	c1 e8 05             	shr    $0x5,%eax
   16987:	44 01 d0             	add    %r10d,%eax
   1698a:	66 42 89 84 4f 68 68 	mov    %ax,0x6868(%rdi,%r9,2)
   16991:	00 00 
   16993:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16999:	76 28                	jbe    169c3 <lzma_decode+0x1a13>
   1699b:	eb 46                	jmp    169e3 <lzma_decode+0x1a33>
   1699d:	29 d8                	sub    %ebx,%eax
   1699f:	45 89 d3             	mov    %r10d,%r11d
   169a2:	41 c1 eb 05          	shr    $0x5,%r11d
   169a6:	45 29 da             	sub    %r11d,%r10d
   169a9:	66 46 89 94 4f 68 68 	mov    %r10w,0x6868(%rdi,%r9,2)
   169b0:	00 00 
   169b2:	41 83 cd 01          	or     $0x1,%r13d
   169b6:	89 c3                	mov    %eax,%ebx
   169b8:	41 89 cf             	mov    %ecx,%r15d
   169bb:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   169c1:	77 20                	ja     169e3 <lzma_decode+0x1a33>
   169c3:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   169c8:	0f 84 bc 1c 00 00    	je     1868a <lzma_decode+0x36da>
   169ce:	c1 e3 08             	shl    $0x8,%ebx
   169d1:	41 c1 e7 08          	shl    $0x8,%r15d
   169d5:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   169da:	49 ff c6             	inc    %r14
   169dd:	44 09 f8             	or     %r15d,%eax
   169e0:	41 89 c7             	mov    %eax,%r15d
   169e3:	89 d9                	mov    %ebx,%ecx
   169e5:	c1 e9 0b             	shr    $0xb,%ecx
   169e8:	44 89 e8             	mov    %r13d,%eax
   169eb:	44 0f b7 8c 47 68 68 	movzwl 0x6868(%rdi,%rax,2),%r9d
   169f2:	00 00 
   169f4:	41 0f af c9          	imul   %r9d,%ecx
   169f8:	45 01 ed             	add    %r13d,%r13d
   169fb:	45 89 fb             	mov    %r15d,%r11d
   169fe:	41 29 cb             	sub    %ecx,%r11d
   16a01:	73 12                	jae    16a15 <lzma_decode+0x1a65>
   16a03:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16a09:	45 29 ca             	sub    %r9d,%r10d
   16a0c:	41 c1 ea 05          	shr    $0x5,%r10d
   16a10:	45 01 ca             	add    %r9d,%r10d
   16a13:	eb 17                	jmp    16a2c <lzma_decode+0x1a7c>
   16a15:	29 cb                	sub    %ecx,%ebx
   16a17:	44 89 c9             	mov    %r9d,%ecx
   16a1a:	c1 e9 05             	shr    $0x5,%ecx
   16a1d:	41 29 c9             	sub    %ecx,%r9d
   16a20:	41 83 cd 01          	or     $0x1,%r13d
   16a24:	45 89 ca             	mov    %r9d,%r10d
   16a27:	89 d9                	mov    %ebx,%ecx
   16a29:	45 89 df             	mov    %r11d,%r15d
   16a2c:	66 44 89 94 47 68 68 	mov    %r10w,0x6868(%rdi,%rax,2)
   16a33:	00 00 
   16a35:	41 81 c5 12 ff ff ff 	add    $0xffffff12,%r13d
   16a3c:	45 89 ec             	mov    %r13d,%r12d
   16a3f:	41 8d 44 24 fe       	lea    -0x2(%r12),%eax
   16a44:	41 83 fd 06          	cmp    $0x6,%r13d
   16a48:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   16a4e:	44 0f 42 c8          	cmovb  %eax,%r9d
   16a52:	49 c1 e1 07          	shl    $0x7,%r9
   16a56:	4a 8d 34 0f          	lea    (%rdi,%r9,1),%rsi
   16a5a:	48 81 c6 60 63 00 00 	add    $0x6360,%rsi
   16a61:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16a67:	89 cb                	mov    %ecx,%ebx
   16a69:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16a6f:	77 24                	ja     16a95 <lzma_decode+0x1ae5>
   16a71:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16a76:	0f 84 7c 17 00 00    	je     181f8 <lzma_decode+0x3248>
   16a7c:	89 d8                	mov    %ebx,%eax
   16a7e:	c1 e0 08             	shl    $0x8,%eax
   16a81:	41 c1 e7 08          	shl    $0x8,%r15d
   16a85:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16a8a:	49 ff c6             	inc    %r14
   16a8d:	44 09 f9             	or     %r15d,%ecx
   16a90:	41 89 cf             	mov    %ecx,%r15d
   16a93:	eb 02                	jmp    16a97 <lzma_decode+0x1ae7>
   16a95:	89 d8                	mov    %ebx,%eax
   16a97:	89 c3                	mov    %eax,%ebx
   16a99:	c1 eb 0b             	shr    $0xb,%ebx
   16a9c:	45 89 e9             	mov    %r13d,%r9d
   16a9f:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   16aa4:	41 0f af da          	imul   %r10d,%ebx
   16aa8:	45 01 ed             	add    %r13d,%r13d
   16aab:	44 89 f9             	mov    %r15d,%ecx
   16aae:	29 d9                	sub    %ebx,%ecx
   16ab0:	73 3f                	jae    16af1 <lzma_decode+0x1b41>
   16ab2:	b8 00 08 00 00       	mov    $0x800,%eax
   16ab7:	44 29 d0             	sub    %r10d,%eax
   16aba:	c1 e8 05             	shr    $0x5,%eax
   16abd:	44 01 d0             	add    %r10d,%eax
   16ac0:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   16ac5:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16acb:	77 46                	ja     16b13 <lzma_decode+0x1b63>
   16acd:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16ad2:	0f 84 8a 17 00 00    	je     18262 <lzma_decode+0x32b2>
   16ad8:	89 d8                	mov    %ebx,%eax
   16ada:	c1 e0 08             	shl    $0x8,%eax
   16add:	41 c1 e7 08          	shl    $0x8,%r15d
   16ae1:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16ae6:	49 ff c6             	inc    %r14
   16ae9:	44 09 f9             	or     %r15d,%ecx
   16aec:	41 89 cf             	mov    %ecx,%r15d
   16aef:	eb 24                	jmp    16b15 <lzma_decode+0x1b65>
   16af1:	29 d8                	sub    %ebx,%eax
   16af3:	45 89 d3             	mov    %r10d,%r11d
   16af6:	41 c1 eb 05          	shr    $0x5,%r11d
   16afa:	45 29 da             	sub    %r11d,%r10d
   16afd:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   16b02:	41 83 cd 01          	or     $0x1,%r13d
   16b06:	89 c3                	mov    %eax,%ebx
   16b08:	41 89 cf             	mov    %ecx,%r15d
   16b0b:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16b11:	76 ba                	jbe    16acd <lzma_decode+0x1b1d>
   16b13:	89 d8                	mov    %ebx,%eax
   16b15:	89 c3                	mov    %eax,%ebx
   16b17:	c1 eb 0b             	shr    $0xb,%ebx
   16b1a:	45 89 e9             	mov    %r13d,%r9d
   16b1d:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   16b22:	41 0f af da          	imul   %r10d,%ebx
   16b26:	45 01 ed             	add    %r13d,%r13d
   16b29:	44 89 f9             	mov    %r15d,%ecx
   16b2c:	29 d9                	sub    %ebx,%ecx
   16b2e:	73 3f                	jae    16b6f <lzma_decode+0x1bbf>
   16b30:	b8 00 08 00 00       	mov    $0x800,%eax
   16b35:	44 29 d0             	sub    %r10d,%eax
   16b38:	c1 e8 05             	shr    $0x5,%eax
   16b3b:	44 01 d0             	add    %r10d,%eax
   16b3e:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   16b43:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16b49:	77 46                	ja     16b91 <lzma_decode+0x1be1>
   16b4b:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16b50:	0f 84 2c 1a 00 00    	je     18582 <lzma_decode+0x35d2>
   16b56:	89 d8                	mov    %ebx,%eax
   16b58:	c1 e0 08             	shl    $0x8,%eax
   16b5b:	41 c1 e7 08          	shl    $0x8,%r15d
   16b5f:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16b64:	49 ff c6             	inc    %r14
   16b67:	44 09 f9             	or     %r15d,%ecx
   16b6a:	41 89 cf             	mov    %ecx,%r15d
   16b6d:	eb 24                	jmp    16b93 <lzma_decode+0x1be3>
   16b6f:	29 d8                	sub    %ebx,%eax
   16b71:	45 89 d3             	mov    %r10d,%r11d
   16b74:	41 c1 eb 05          	shr    $0x5,%r11d
   16b78:	45 29 da             	sub    %r11d,%r10d
   16b7b:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   16b80:	41 83 cd 01          	or     $0x1,%r13d
   16b84:	89 c3                	mov    %eax,%ebx
   16b86:	41 89 cf             	mov    %ecx,%r15d
   16b89:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16b8f:	76 ba                	jbe    16b4b <lzma_decode+0x1b9b>
   16b91:	89 d8                	mov    %ebx,%eax
   16b93:	89 c3                	mov    %eax,%ebx
   16b95:	c1 eb 0b             	shr    $0xb,%ebx
   16b98:	45 89 e9             	mov    %r13d,%r9d
   16b9b:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   16ba0:	41 0f af da          	imul   %r10d,%ebx
   16ba4:	45 01 ed             	add    %r13d,%r13d
   16ba7:	44 89 f9             	mov    %r15d,%ecx
   16baa:	29 d9                	sub    %ebx,%ecx
   16bac:	73 3f                	jae    16bed <lzma_decode+0x1c3d>
   16bae:	b8 00 08 00 00       	mov    $0x800,%eax
   16bb3:	44 29 d0             	sub    %r10d,%eax
   16bb6:	c1 e8 05             	shr    $0x5,%eax
   16bb9:	44 01 d0             	add    %r10d,%eax
   16bbc:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   16bc1:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16bc7:	77 46                	ja     16c0f <lzma_decode+0x1c5f>
   16bc9:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16bce:	0f 84 46 17 00 00    	je     1831a <lzma_decode+0x336a>
   16bd4:	89 d8                	mov    %ebx,%eax
   16bd6:	c1 e0 08             	shl    $0x8,%eax
   16bd9:	41 c1 e7 08          	shl    $0x8,%r15d
   16bdd:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16be2:	49 ff c6             	inc    %r14
   16be5:	44 09 f9             	or     %r15d,%ecx
   16be8:	41 89 cf             	mov    %ecx,%r15d
   16beb:	eb 24                	jmp    16c11 <lzma_decode+0x1c61>
   16bed:	29 d8                	sub    %ebx,%eax
   16bef:	45 89 d3             	mov    %r10d,%r11d
   16bf2:	41 c1 eb 05          	shr    $0x5,%r11d
   16bf6:	45 29 da             	sub    %r11d,%r10d
   16bf9:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   16bfe:	41 83 cd 01          	or     $0x1,%r13d
   16c02:	89 c3                	mov    %eax,%ebx
   16c04:	41 89 cf             	mov    %ecx,%r15d
   16c07:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16c0d:	76 ba                	jbe    16bc9 <lzma_decode+0x1c19>
   16c0f:	89 d8                	mov    %ebx,%eax
   16c11:	89 c3                	mov    %eax,%ebx
   16c13:	c1 eb 0b             	shr    $0xb,%ebx
   16c16:	45 89 e9             	mov    %r13d,%r9d
   16c19:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   16c1e:	41 0f af da          	imul   %r10d,%ebx
   16c22:	45 01 ed             	add    %r13d,%r13d
   16c25:	44 89 f9             	mov    %r15d,%ecx
   16c28:	29 d9                	sub    %ebx,%ecx
   16c2a:	73 3f                	jae    16c6b <lzma_decode+0x1cbb>
   16c2c:	b8 00 08 00 00       	mov    $0x800,%eax
   16c31:	44 29 d0             	sub    %r10d,%eax
   16c34:	c1 e8 05             	shr    $0x5,%eax
   16c37:	44 01 d0             	add    %r10d,%eax
   16c3a:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   16c3f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16c45:	77 46                	ja     16c8d <lzma_decode+0x1cdd>
   16c47:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16c4c:	0f 84 ee 18 00 00    	je     18540 <lzma_decode+0x3590>
   16c52:	89 d8                	mov    %ebx,%eax
   16c54:	c1 e0 08             	shl    $0x8,%eax
   16c57:	41 c1 e7 08          	shl    $0x8,%r15d
   16c5b:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   16c60:	49 ff c6             	inc    %r14
   16c63:	44 09 f9             	or     %r15d,%ecx
   16c66:	41 89 cf             	mov    %ecx,%r15d
   16c69:	eb 24                	jmp    16c8f <lzma_decode+0x1cdf>
   16c6b:	29 d8                	sub    %ebx,%eax
   16c6d:	45 89 d3             	mov    %r10d,%r11d
   16c70:	41 c1 eb 05          	shr    $0x5,%r11d
   16c74:	45 29 da             	sub    %r11d,%r10d
   16c77:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   16c7c:	41 83 cd 01          	or     $0x1,%r13d
   16c80:	89 c3                	mov    %eax,%ebx
   16c82:	41 89 cf             	mov    %ecx,%r15d
   16c85:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16c8b:	76 ba                	jbe    16c47 <lzma_decode+0x1c97>
   16c8d:	89 d8                	mov    %ebx,%eax
   16c8f:	89 c3                	mov    %eax,%ebx
   16c91:	c1 eb 0b             	shr    $0xb,%ebx
   16c94:	45 89 e9             	mov    %r13d,%r9d
   16c97:	46 0f b7 14 4e       	movzwl (%rsi,%r9,2),%r10d
   16c9c:	41 0f af da          	imul   %r10d,%ebx
   16ca0:	45 01 ed             	add    %r13d,%r13d
   16ca3:	44 89 f9             	mov    %r15d,%ecx
   16ca6:	29 d9                	sub    %ebx,%ecx
   16ca8:	73 3f                	jae    16ce9 <lzma_decode+0x1d39>
   16caa:	b8 00 08 00 00       	mov    $0x800,%eax
   16caf:	44 29 d0             	sub    %r10d,%eax
   16cb2:	c1 e8 05             	shr    $0x5,%eax
   16cb5:	44 01 d0             	add    %r10d,%eax
   16cb8:	66 42 89 04 4e       	mov    %ax,(%rsi,%r9,2)
   16cbd:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16cc3:	77 46                	ja     16d0b <lzma_decode+0x1d5b>
   16cc5:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16cca:	0f 84 57 19 00 00    	je     18627 <lzma_decode+0x3677>
   16cd0:	89 d9                	mov    %ebx,%ecx
   16cd2:	c1 e1 08             	shl    $0x8,%ecx
   16cd5:	41 c1 e7 08          	shl    $0x8,%r15d
   16cd9:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   16cde:	49 ff c6             	inc    %r14
   16ce1:	44 09 f8             	or     %r15d,%eax
   16ce4:	41 89 c7             	mov    %eax,%r15d
   16ce7:	eb 24                	jmp    16d0d <lzma_decode+0x1d5d>
   16ce9:	29 d8                	sub    %ebx,%eax
   16ceb:	45 89 d3             	mov    %r10d,%r11d
   16cee:	41 c1 eb 05          	shr    $0x5,%r11d
   16cf2:	45 29 da             	sub    %r11d,%r10d
   16cf5:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   16cfa:	41 83 cd 01          	or     $0x1,%r13d
   16cfe:	89 c3                	mov    %eax,%ebx
   16d00:	41 89 cf             	mov    %ecx,%r15d
   16d03:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16d09:	76 ba                	jbe    16cc5 <lzma_decode+0x1d15>
   16d0b:	89 d9                	mov    %ebx,%ecx
   16d0d:	89 cb                	mov    %ecx,%ebx
   16d0f:	c1 eb 0b             	shr    $0xb,%ebx
   16d12:	44 89 e8             	mov    %r13d,%eax
   16d15:	44 0f b7 0c 46       	movzwl (%rsi,%rax,2),%r9d
   16d1a:	41 0f af d9          	imul   %r9d,%ebx
   16d1e:	45 01 ed             	add    %r13d,%r13d
   16d21:	45 89 fb             	mov    %r15d,%r11d
   16d24:	41 29 db             	sub    %ebx,%r11d
   16d27:	73 12                	jae    16d3b <lzma_decode+0x1d8b>
   16d29:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16d2f:	45 29 ca             	sub    %r9d,%r10d
   16d32:	41 c1 ea 05          	shr    $0x5,%r10d
   16d36:	45 01 ca             	add    %r9d,%r10d
   16d39:	eb 18                	jmp    16d53 <lzma_decode+0x1da3>
   16d3b:	29 d9                	sub    %ebx,%ecx
   16d3d:	45 89 ca             	mov    %r9d,%r10d
   16d40:	41 c1 ea 05          	shr    $0x5,%r10d
   16d44:	45 29 d1             	sub    %r10d,%r9d
   16d47:	41 83 cd 01          	or     $0x1,%r13d
   16d4b:	45 89 ca             	mov    %r9d,%r10d
   16d4e:	89 cb                	mov    %ecx,%ebx
   16d50:	45 89 df             	mov    %r11d,%r15d
   16d53:	66 44 89 14 46       	mov    %r10w,(%rsi,%rax,2)
   16d58:	41 8d 45 c0          	lea    -0x40(%r13),%eax
   16d5c:	83 f8 04             	cmp    $0x4,%eax
   16d5f:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   16d64:	73 1c                	jae    16d82 <lzma_decode+0x1dd2>
   16d66:	89 c5                	mov    %eax,%ebp
   16d68:	41 89 c5             	mov    %eax,%r13d
   16d6b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   16d70:	89 e8                	mov    %ebp,%eax
   16d72:	48 39 44 24 48       	cmp    %rax,0x48(%rsp)
   16d77:	0f 87 bc 05 00 00    	ja     17339 <lzma_decode+0x2389>
   16d7d:	e9 88 11 00 00       	jmp    17f0a <lzma_decode+0x2f5a>
   16d82:	89 c1                	mov    %eax,%ecx
   16d84:	d1 e9                	shr    %ecx
   16d86:	41 83 e5 01          	and    $0x1,%r13d
   16d8a:	44 89 ed             	mov    %r13d,%ebp
   16d8d:	83 cd 02             	or     $0x2,%ebp
   16d90:	83 f8 0d             	cmp    $0xd,%eax
   16d93:	0f 87 e1 02 00 00    	ja     1707a <lzma_decode+0x20ca>
   16d99:	ff c9                	dec    %ecx
   16d9b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   16da0:	d3 e5                	shl    %cl,%ebp
   16da2:	48 8d 34 6f          	lea    (%rdi,%rbp,2),%rsi
   16da6:	89 c0                	mov    %eax,%eax
   16da8:	48 01 c0             	add    %rax,%rax
   16dab:	48 29 c6             	sub    %rax,%rsi
   16dae:	48 81 c6 5e 65 00 00 	add    $0x655e,%rsi
   16db5:	31 c0                	xor    %eax,%eax
   16db7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16dbc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   16dc2:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   16dc7:	8d 41 ff             	lea    -0x1(%rcx),%eax
   16dca:	83 f8 04             	cmp    $0x4,%eax
   16dcd:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   16dd2:	0f 87 4f 05 00 00    	ja     17327 <lzma_decode+0x2377>
   16dd8:	48 8d 0d 3d 34 01 00 	lea    0x1343d(%rip),%rcx        # 2a21c <lzma_fastpos+0x211c>
   16ddf:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   16de3:	48 01 c8             	add    %rcx,%rax
   16de6:	ff e0                	jmp    *%rax
   16de8:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16dee:	77 20                	ja     16e10 <lzma_decode+0x1e60>
   16df0:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16df5:	0f 84 3d 1b 00 00    	je     18938 <lzma_decode+0x3988>
   16dfb:	c1 e3 08             	shl    $0x8,%ebx
   16dfe:	41 c1 e7 08          	shl    $0x8,%r15d
   16e02:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   16e07:	49 ff c6             	inc    %r14
   16e0a:	44 09 f8             	or     %r15d,%eax
   16e0d:	41 89 c7             	mov    %eax,%r15d
   16e10:	89 d9                	mov    %ebx,%ecx
   16e12:	c1 e9 0b             	shr    $0xb,%ecx
   16e15:	44 89 e8             	mov    %r13d,%eax
   16e18:	44 0f b7 0c 46       	movzwl (%rsi,%rax,2),%r9d
   16e1d:	41 0f af c9          	imul   %r9d,%ecx
   16e21:	45 01 ed             	add    %r13d,%r13d
   16e24:	45 89 fb             	mov    %r15d,%r11d
   16e27:	41 29 cb             	sub    %ecx,%r11d
   16e2a:	0f 83 3a 0e 00 00    	jae    17c6a <lzma_decode+0x2cba>
   16e30:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16e36:	45 29 ca             	sub    %r9d,%r10d
   16e39:	41 c1 ea 05          	shr    $0x5,%r10d
   16e3d:	45 01 ca             	add    %r9d,%r10d
   16e40:	e9 3e 0e 00 00       	jmp    17c83 <lzma_decode+0x2cd3>
   16e45:	29 d8                	sub    %ebx,%eax
   16e47:	45 89 d3             	mov    %r10d,%r11d
   16e4a:	41 c1 eb 05          	shr    $0x5,%r11d
   16e4e:	45 29 da             	sub    %r11d,%r10d
   16e51:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   16e58:	00 00 
   16e5a:	41 83 cd 01          	or     $0x1,%r13d
   16e5e:	89 c3                	mov    %eax,%ebx
   16e60:	41 89 cf             	mov    %ecx,%r15d
   16e63:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16e69:	0f 86 9b fa ff ff    	jbe    1690a <lzma_decode+0x195a>
   16e6f:	89 d8                	mov    %ebx,%eax
   16e71:	89 c3                	mov    %eax,%ebx
   16e73:	c1 eb 0b             	shr    $0xb,%ebx
   16e76:	45 89 e9             	mov    %r13d,%r9d
   16e79:	46 0f b7 94 4f 6c 6c 	movzwl 0x6c6c(%rdi,%r9,2),%r10d
   16e80:	00 00 
   16e82:	41 0f af da          	imul   %r10d,%ebx
   16e86:	45 01 ed             	add    %r13d,%r13d
   16e89:	44 89 f9             	mov    %r15d,%ecx
   16e8c:	29 d9                	sub    %ebx,%ecx
   16e8e:	73 21                	jae    16eb1 <lzma_decode+0x1f01>
   16e90:	b8 00 08 00 00       	mov    $0x800,%eax
   16e95:	44 29 d0             	sub    %r10d,%eax
   16e98:	c1 e8 05             	shr    $0x5,%eax
   16e9b:	44 01 d0             	add    %r10d,%eax
   16e9e:	66 42 89 84 4f 6c 6c 	mov    %ax,0x6c6c(%rdi,%r9,2)
   16ea5:	00 00 
   16ea7:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16ead:	76 28                	jbe    16ed7 <lzma_decode+0x1f27>
   16eaf:	eb 46                	jmp    16ef7 <lzma_decode+0x1f47>
   16eb1:	29 d8                	sub    %ebx,%eax
   16eb3:	45 89 d3             	mov    %r10d,%r11d
   16eb6:	41 c1 eb 05          	shr    $0x5,%r11d
   16eba:	45 29 da             	sub    %r11d,%r10d
   16ebd:	66 46 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%r9,2)
   16ec4:	00 00 
   16ec6:	41 83 cd 01          	or     $0x1,%r13d
   16eca:	89 c3                	mov    %eax,%ebx
   16ecc:	41 89 cf             	mov    %ecx,%r15d
   16ecf:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16ed5:	77 20                	ja     16ef7 <lzma_decode+0x1f47>
   16ed7:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16edc:	0f 84 ea 17 00 00    	je     186cc <lzma_decode+0x371c>
   16ee2:	c1 e3 08             	shl    $0x8,%ebx
   16ee5:	41 c1 e7 08          	shl    $0x8,%r15d
   16ee9:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   16eee:	49 ff c6             	inc    %r14
   16ef1:	44 09 f8             	or     %r15d,%eax
   16ef4:	41 89 c7             	mov    %eax,%r15d
   16ef7:	89 d8                	mov    %ebx,%eax
   16ef9:	c1 e8 0b             	shr    $0xb,%eax
   16efc:	44 89 e9             	mov    %r13d,%ecx
   16eff:	44 0f b7 8c 4f 6c 6c 	movzwl 0x6c6c(%rdi,%rcx,2),%r9d
   16f06:	00 00 
   16f08:	41 0f af c1          	imul   %r9d,%eax
   16f0c:	45 01 ed             	add    %r13d,%r13d
   16f0f:	45 89 fb             	mov    %r15d,%r11d
   16f12:	41 29 c3             	sub    %eax,%r11d
   16f15:	73 12                	jae    16f29 <lzma_decode+0x1f79>
   16f17:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   16f1d:	45 29 ca             	sub    %r9d,%r10d
   16f20:	41 c1 ea 05          	shr    $0x5,%r10d
   16f24:	45 01 ca             	add    %r9d,%r10d
   16f27:	eb 17                	jmp    16f40 <lzma_decode+0x1f90>
   16f29:	29 c3                	sub    %eax,%ebx
   16f2b:	44 89 c8             	mov    %r9d,%eax
   16f2e:	c1 e8 05             	shr    $0x5,%eax
   16f31:	41 29 c1             	sub    %eax,%r9d
   16f34:	41 83 cd 01          	or     $0x1,%r13d
   16f38:	45 89 ca             	mov    %r9d,%r10d
   16f3b:	89 d8                	mov    %ebx,%eax
   16f3d:	45 89 df             	mov    %r11d,%r15d
   16f40:	66 44 89 94 4f 6c 6c 	mov    %r10w,0x6c6c(%rdi,%rcx,2)
   16f47:	00 00 
   16f49:	45 8d a5 12 ff ff ff 	lea    -0xee(%r13),%r12d
   16f50:	89 c3                	mov    %eax,%ebx
   16f52:	e9 e2 03 00 00       	jmp    17339 <lzma_decode+0x2389>
   16f57:	29 d9                	sub    %ebx,%ecx
   16f59:	44 89 db             	mov    %r11d,%ebx
   16f5c:	c1 eb 05             	shr    $0x5,%ebx
   16f5f:	41 29 db             	sub    %ebx,%r11d
   16f62:	66 45 89 1a          	mov    %r11w,(%r10)
   16f66:	41 83 cd 01          	or     $0x1,%r13d
   16f6a:	89 cb                	mov    %ecx,%ebx
   16f6c:	45 89 cf             	mov    %r9d,%r15d
   16f6f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16f75:	0f 86 59 ef ff ff    	jbe    15ed4 <lzma_decode+0xf24>
   16f7b:	89 d9                	mov    %ebx,%ecx
   16f7d:	89 cb                	mov    %ecx,%ebx
   16f7f:	c1 eb 0b             	shr    $0xb,%ebx
   16f82:	41 89 c1             	mov    %eax,%r9d
   16f85:	45 89 eb             	mov    %r13d,%r11d
   16f88:	49 c1 e1 04          	shl    $0x4,%r9
   16f8c:	49 01 f9             	add    %rdi,%r9
   16f8f:	4f 8d 14 59          	lea    (%r9,%r11,2),%r10
   16f93:	49 81 c2 6c 6b 00 00 	add    $0x6b6c,%r10
   16f9a:	47 0f b7 9c 59 6c 6b 	movzwl 0x6b6c(%r9,%r11,2),%r11d
   16fa1:	00 00 
   16fa3:	41 0f af db          	imul   %r11d,%ebx
   16fa7:	45 01 ed             	add    %r13d,%r13d
   16faa:	45 89 f9             	mov    %r15d,%r9d
   16fad:	41 29 d9             	sub    %ebx,%r9d
   16fb0:	73 1c                	jae    16fce <lzma_decode+0x201e>
   16fb2:	b9 00 08 00 00       	mov    $0x800,%ecx
   16fb7:	44 29 d9             	sub    %r11d,%ecx
   16fba:	c1 e9 05             	shr    $0x5,%ecx
   16fbd:	44 01 d9             	add    %r11d,%ecx
   16fc0:	66 41 89 0a          	mov    %cx,(%r10)
   16fc4:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16fca:	76 22                	jbe    16fee <lzma_decode+0x203e>
   16fcc:	eb 40                	jmp    1700e <lzma_decode+0x205e>
   16fce:	29 d9                	sub    %ebx,%ecx
   16fd0:	44 89 db             	mov    %r11d,%ebx
   16fd3:	c1 eb 05             	shr    $0x5,%ebx
   16fd6:	41 29 db             	sub    %ebx,%r11d
   16fd9:	66 45 89 1a          	mov    %r11w,(%r10)
   16fdd:	41 83 cd 01          	or     $0x1,%r13d
   16fe1:	89 cb                	mov    %ecx,%ebx
   16fe3:	45 89 cf             	mov    %r9d,%r15d
   16fe6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   16fec:	77 20                	ja     1700e <lzma_decode+0x205e>
   16fee:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   16ff3:	0f 84 52 10 00 00    	je     1804b <lzma_decode+0x309b>
   16ff9:	c1 e3 08             	shl    $0x8,%ebx
   16ffc:	41 c1 e7 08          	shl    $0x8,%r15d
   17000:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17005:	49 ff c6             	inc    %r14
   17008:	44 09 f9             	or     %r15d,%ecx
   1700b:	41 89 cf             	mov    %ecx,%r15d
   1700e:	89 d9                	mov    %ebx,%ecx
   17010:	c1 e9 0b             	shr    $0xb,%ecx
   17013:	41 89 c1             	mov    %eax,%r9d
   17016:	45 89 ea             	mov    %r13d,%r10d
   17019:	49 c1 e1 04          	shl    $0x4,%r9
   1701d:	49 01 f9             	add    %rdi,%r9
   17020:	4b 8d 04 51          	lea    (%r9,%r10,2),%rax
   17024:	48 05 6c 6b 00 00    	add    $0x6b6c,%rax
   1702a:	47 0f b7 8c 51 6c 6b 	movzwl 0x6b6c(%r9,%r10,2),%r9d
   17031:	00 00 
   17033:	41 0f af c9          	imul   %r9d,%ecx
   17037:	45 01 ed             	add    %r13d,%r13d
   1703a:	45 89 fb             	mov    %r15d,%r11d
   1703d:	41 29 cb             	sub    %ecx,%r11d
   17040:	73 12                	jae    17054 <lzma_decode+0x20a4>
   17042:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   17048:	45 29 ca             	sub    %r9d,%r10d
   1704b:	41 c1 ea 05          	shr    $0x5,%r10d
   1704f:	45 01 ca             	add    %r9d,%r10d
   17052:	eb 17                	jmp    1706b <lzma_decode+0x20bb>
   17054:	29 cb                	sub    %ecx,%ebx
   17056:	44 89 c9             	mov    %r9d,%ecx
   17059:	c1 e9 05             	shr    $0x5,%ecx
   1705c:	41 29 c9             	sub    %ecx,%r9d
   1705f:	41 83 cd 01          	or     $0x1,%r13d
   17063:	45 89 ca             	mov    %r9d,%r10d
   17066:	89 d9                	mov    %ebx,%ecx
   17068:	45 89 df             	mov    %r11d,%r15d
   1706b:	66 44 89 10          	mov    %r10w,(%rax)
   1706f:	45 8d 65 02          	lea    0x2(%r13),%r12d
   17073:	89 cb                	mov    %ecx,%ebx
   17075:	e9 bf 02 00 00       	jmp    17339 <lzma_decode+0x2389>
   1707a:	83 c1 fb             	add    $0xfffffffb,%ecx
   1707d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   17082:	41 89 c5             	mov    %eax,%r13d
   17085:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1708a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1708f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17094:	eb 29                	jmp    170bf <lzma_decode+0x210f>
   17096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1709d:	00 00 00 
   170a0:	d1 eb                	shr    %ebx
   170a2:	44 89 f8             	mov    %r15d,%eax
   170a5:	29 d8                	sub    %ebx,%eax
   170a7:	89 c1                	mov    %eax,%ecx
   170a9:	c1 f9 1f             	sar    $0x1f,%ecx
   170ac:	8d 2c 69             	lea    (%rcx,%rbp,2),%ebp
   170af:	ff c5                	inc    %ebp
   170b1:	41 89 cf             	mov    %ecx,%r15d
   170b4:	41 21 df             	and    %ebx,%r15d
   170b7:	41 01 c7             	add    %eax,%r15d
   170ba:	41 ff c9             	dec    %r9d
   170bd:	74 27                	je     170e6 <lzma_decode+0x2136>
   170bf:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   170c5:	77 d9                	ja     170a0 <lzma_decode+0x20f0>
   170c7:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   170cc:	0f 84 13 03 00 00    	je     173e5 <lzma_decode+0x2435>
   170d2:	c1 e3 08             	shl    $0x8,%ebx
   170d5:	41 c1 e7 08          	shl    $0x8,%r15d
   170d9:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   170de:	49 ff c6             	inc    %r14
   170e1:	41 09 c7             	or     %eax,%r15d
   170e4:	eb ba                	jmp    170a0 <lzma_decode+0x20f0>
   170e6:	c1 e5 04             	shl    $0x4,%ebp
   170e9:	31 c0                	xor    %eax,%eax
   170eb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   170f0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   170f6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   170fc:	77 24                	ja     17122 <lzma_decode+0x2172>
   170fe:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17103:	0f 84 ad 10 00 00    	je     181b6 <lzma_decode+0x3206>
   17109:	89 d8                	mov    %ebx,%eax
   1710b:	c1 e0 08             	shl    $0x8,%eax
   1710e:	41 c1 e7 08          	shl    $0x8,%r15d
   17112:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17117:	49 ff c6             	inc    %r14
   1711a:	44 09 f9             	or     %r15d,%ecx
   1711d:	41 89 cf             	mov    %ecx,%r15d
   17120:	eb 02                	jmp    17124 <lzma_decode+0x2174>
   17122:	89 d8                	mov    %ebx,%eax
   17124:	89 c3                	mov    %eax,%ebx
   17126:	c1 eb 0b             	shr    $0xb,%ebx
   17129:	45 89 e9             	mov    %r13d,%r9d
   1712c:	46 0f b7 94 4f 44 66 	movzwl 0x6644(%rdi,%r9,2),%r10d
   17133:	00 00 
   17135:	41 0f af da          	imul   %r10d,%ebx
   17139:	45 01 ed             	add    %r13d,%r13d
   1713c:	44 89 f9             	mov    %r15d,%ecx
   1713f:	29 d9                	sub    %ebx,%ecx
   17141:	73 43                	jae    17186 <lzma_decode+0x21d6>
   17143:	b8 00 08 00 00       	mov    $0x800,%eax
   17148:	44 29 d0             	sub    %r10d,%eax
   1714b:	c1 e8 05             	shr    $0x5,%eax
   1714e:	44 01 d0             	add    %r10d,%eax
   17151:	66 42 89 84 4f 44 66 	mov    %ax,0x6644(%rdi,%r9,2)
   17158:	00 00 
   1715a:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17160:	77 4c                	ja     171ae <lzma_decode+0x21fe>
   17162:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17167:	0f 84 07 10 00 00    	je     18174 <lzma_decode+0x31c4>
   1716d:	89 d8                	mov    %ebx,%eax
   1716f:	c1 e0 08             	shl    $0x8,%eax
   17172:	41 c1 e7 08          	shl    $0x8,%r15d
   17176:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1717b:	49 ff c6             	inc    %r14
   1717e:	44 09 f9             	or     %r15d,%ecx
   17181:	41 89 cf             	mov    %ecx,%r15d
   17184:	eb 2a                	jmp    171b0 <lzma_decode+0x2200>
   17186:	29 d8                	sub    %ebx,%eax
   17188:	45 89 d3             	mov    %r10d,%r11d
   1718b:	41 c1 eb 05          	shr    $0x5,%r11d
   1718f:	45 29 da             	sub    %r11d,%r10d
   17192:	66 46 89 94 4f 44 66 	mov    %r10w,0x6644(%rdi,%r9,2)
   17199:	00 00 
   1719b:	41 83 cd 01          	or     $0x1,%r13d
   1719f:	ff c5                	inc    %ebp
   171a1:	89 c3                	mov    %eax,%ebx
   171a3:	41 89 cf             	mov    %ecx,%r15d
   171a6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   171ac:	76 b4                	jbe    17162 <lzma_decode+0x21b2>
   171ae:	89 d8                	mov    %ebx,%eax
   171b0:	89 c3                	mov    %eax,%ebx
   171b2:	c1 eb 0b             	shr    $0xb,%ebx
   171b5:	45 89 e9             	mov    %r13d,%r9d
   171b8:	46 0f b7 94 4f 44 66 	movzwl 0x6644(%rdi,%r9,2),%r10d
   171bf:	00 00 
   171c1:	41 0f af da          	imul   %r10d,%ebx
   171c5:	45 01 ed             	add    %r13d,%r13d
   171c8:	44 89 f9             	mov    %r15d,%ecx
   171cb:	29 d9                	sub    %ebx,%ecx
   171cd:	73 43                	jae    17212 <lzma_decode+0x2262>
   171cf:	b8 00 08 00 00       	mov    $0x800,%eax
   171d4:	44 29 d0             	sub    %r10d,%eax
   171d7:	c1 e8 05             	shr    $0x5,%eax
   171da:	44 01 d0             	add    %r10d,%eax
   171dd:	66 42 89 84 4f 44 66 	mov    %ax,0x6644(%rdi,%r9,2)
   171e4:	00 00 
   171e6:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   171ec:	77 4d                	ja     1723b <lzma_decode+0x228b>
   171ee:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   171f3:	0f 84 ec 13 00 00    	je     185e5 <lzma_decode+0x3635>
   171f9:	89 d8                	mov    %ebx,%eax
   171fb:	c1 e0 08             	shl    $0x8,%eax
   171fe:	41 c1 e7 08          	shl    $0x8,%r15d
   17202:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17207:	49 ff c6             	inc    %r14
   1720a:	44 09 f9             	or     %r15d,%ecx
   1720d:	41 89 cf             	mov    %ecx,%r15d
   17210:	eb 2b                	jmp    1723d <lzma_decode+0x228d>
   17212:	29 d8                	sub    %ebx,%eax
   17214:	45 89 d3             	mov    %r10d,%r11d
   17217:	41 c1 eb 05          	shr    $0x5,%r11d
   1721b:	45 29 da             	sub    %r11d,%r10d
   1721e:	66 46 89 94 4f 44 66 	mov    %r10w,0x6644(%rdi,%r9,2)
   17225:	00 00 
   17227:	41 83 cd 01          	or     $0x1,%r13d
   1722b:	83 c5 02             	add    $0x2,%ebp
   1722e:	89 c3                	mov    %eax,%ebx
   17230:	41 89 cf             	mov    %ecx,%r15d
   17233:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17239:	76 b3                	jbe    171ee <lzma_decode+0x223e>
   1723b:	89 d8                	mov    %ebx,%eax
   1723d:	89 c3                	mov    %eax,%ebx
   1723f:	c1 eb 0b             	shr    $0xb,%ebx
   17242:	45 89 e9             	mov    %r13d,%r9d
   17245:	46 0f b7 94 4f 44 66 	movzwl 0x6644(%rdi,%r9,2),%r10d
   1724c:	00 00 
   1724e:	41 0f af da          	imul   %r10d,%ebx
   17252:	45 01 ed             	add    %r13d,%r13d
   17255:	44 89 f9             	mov    %r15d,%ecx
   17258:	29 d9                	sub    %ebx,%ecx
   1725a:	73 43                	jae    1729f <lzma_decode+0x22ef>
   1725c:	b8 00 08 00 00       	mov    $0x800,%eax
   17261:	44 29 d0             	sub    %r10d,%eax
   17264:	c1 e8 05             	shr    $0x5,%eax
   17267:	44 01 d0             	add    %r10d,%eax
   1726a:	66 42 89 84 4f 44 66 	mov    %ax,0x6644(%rdi,%r9,2)
   17271:	00 00 
   17273:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17279:	77 4d                	ja     172c8 <lzma_decode+0x2318>
   1727b:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17280:	0f 84 8b 0e 00 00    	je     18111 <lzma_decode+0x3161>
   17286:	89 d9                	mov    %ebx,%ecx
   17288:	c1 e1 08             	shl    $0x8,%ecx
   1728b:	41 c1 e7 08          	shl    $0x8,%r15d
   1728f:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   17294:	49 ff c6             	inc    %r14
   17297:	44 09 f8             	or     %r15d,%eax
   1729a:	41 89 c7             	mov    %eax,%r15d
   1729d:	eb 2b                	jmp    172ca <lzma_decode+0x231a>
   1729f:	29 d8                	sub    %ebx,%eax
   172a1:	45 89 d3             	mov    %r10d,%r11d
   172a4:	41 c1 eb 05          	shr    $0x5,%r11d
   172a8:	45 29 da             	sub    %r11d,%r10d
   172ab:	66 46 89 94 4f 44 66 	mov    %r10w,0x6644(%rdi,%r9,2)
   172b2:	00 00 
   172b4:	41 83 cd 01          	or     $0x1,%r13d
   172b8:	83 c5 04             	add    $0x4,%ebp
   172bb:	89 c3                	mov    %eax,%ebx
   172bd:	41 89 cf             	mov    %ecx,%r15d
   172c0:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   172c6:	76 b3                	jbe    1727b <lzma_decode+0x22cb>
   172c8:	89 d9                	mov    %ebx,%ecx
   172ca:	89 cb                	mov    %ecx,%ebx
   172cc:	c1 eb 0b             	shr    $0xb,%ebx
   172cf:	44 89 e8             	mov    %r13d,%eax
   172d2:	44 0f b7 8c 47 44 66 	movzwl 0x6644(%rdi,%rax,2),%r9d
   172d9:	00 00 
   172db:	41 0f af d9          	imul   %r9d,%ebx
   172df:	45 89 fb             	mov    %r15d,%r11d
   172e2:	41 29 db             	sub    %ebx,%r11d
   172e5:	73 12                	jae    172f9 <lzma_decode+0x2349>
   172e7:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   172ed:	45 29 ca             	sub    %r9d,%r10d
   172f0:	41 c1 ea 05          	shr    $0x5,%r10d
   172f4:	45 01 ca             	add    %r9d,%r10d
   172f7:	eb 17                	jmp    17310 <lzma_decode+0x2360>
   172f9:	29 d9                	sub    %ebx,%ecx
   172fb:	45 89 ca             	mov    %r9d,%r10d
   172fe:	41 c1 ea 05          	shr    $0x5,%r10d
   17302:	45 29 d1             	sub    %r10d,%r9d
   17305:	83 c5 08             	add    $0x8,%ebp
   17308:	45 89 ca             	mov    %r9d,%r10d
   1730b:	89 cb                	mov    %ecx,%ebx
   1730d:	45 89 df             	mov    %r11d,%r15d
   17310:	66 44 89 94 47 44 66 	mov    %r10w,0x6644(%rdi,%rax,2)
   17317:	00 00 
   17319:	83 fd ff             	cmp    $0xffffffff,%ebp
   1731c:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   17321:	0f 84 95 0c 00 00    	je     17fbc <lzma_decode+0x300c>
   17327:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1732c:	89 e8                	mov    %ebp,%eax
   1732e:	48 39 44 24 48       	cmp    %rax,0x48(%rsp)
   17333:	0f 86 d1 0b 00 00    	jbe    17f0a <lzma_decode+0x2f5a>
   17339:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1733e:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
   17343:	4c 89 e1             	mov    %r12,%rcx
   17346:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
   1734b:	4d 29 e5             	sub    %r12,%r13
   1734e:	89 c8                	mov    %ecx,%eax
   17350:	49 39 c5             	cmp    %rax,%r13
   17353:	44 0f 43 e9          	cmovae %ecx,%r13d
   17357:	44 29 e9             	sub    %r13d,%ecx
   1735a:	48 89 e8             	mov    %rbp,%rax
   1735d:	89 c5                	mov    %eax,%ebp
   1735f:	41 39 c5             	cmp    %eax,%r13d
   17362:	76 2a                	jbe    1738e <lzma_decode+0x23de>
   17364:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
   17369:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1736e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17373:	48 89 e8             	mov    %rbp,%rax
   17376:	48 f7 d0             	not    %rax
   17379:	41 f6 c5 01          	test   $0x1,%r13b
   1737d:	0f 85 a6 01 00 00    	jne    17529 <lzma_decode+0x2579>
   17383:	48 89 f7             	mov    %rsi,%rdi
   17386:	44 89 e9             	mov    %r13d,%ecx
   17389:	e9 cf 01 00 00       	jmp    1755d <lzma_decode+0x25ad>
   1738e:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   17393:	48 89 b4 24 80 00 00 	mov    %rsi,0x80(%rsp)
   1739a:	00 
   1739b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   173a0:	49 39 ec             	cmp    %rbp,%r12
   173a3:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   173aa:	00 
   173ab:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
   173b0:	0f 86 16 02 00 00    	jbe    175cc <lzma_decode+0x261c>
   173b6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   173bb:	4c 01 e0             	add    %r12,%rax
   173be:	48 f7 d5             	not    %rbp
   173c1:	48 01 c5             	add    %rax,%rbp
   173c4:	45 89 ed             	mov    %r13d,%r13d
   173c7:	48 89 c7             	mov    %rax,%rdi
   173ca:	48 89 ee             	mov    %rbp,%rsi
   173cd:	4c 89 ea             	mov    %r13,%rdx
   173d0:	e8 7b ad fe ff       	call   2150 <memcpy@plt>
   173d5:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   173dc:	00 
   173dd:	4d 01 ec             	add    %r13,%r12
   173e0:	e9 3e 08 00 00       	jmp    17c23 <lzma_decode+0x2c73>
   173e5:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   173ea:	49 89 f4             	mov    %rsi,%r12
   173ed:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   173f2:	c7 87 a0 6e 00 00 2b 	movl   $0x2b,0x6ea0(%rdi)
   173f9:	00 00 00 
   173fc:	31 c9                	xor    %ecx,%ecx
   173fe:	b2 01                	mov    $0x1,%dl
   17400:	31 c0                	xor    %eax,%eax
   17402:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   17406:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1740b:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   17410:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   17417:	00 
   17418:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
   1741c:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   17421:	4c 89 56 10          	mov    %r10,0x10(%rsi)
   17425:	89 9f 6c 6e 00 00    	mov    %ebx,0x6e6c(%rdi)
   1742b:	44 89 bf 70 6e 00 00 	mov    %r15d,0x6e70(%rdi)
   17432:	c7 87 74 6e 00 00 00 	movl   $0x0,0x6e74(%rdi)
   17439:	00 00 00 
   1743c:	48 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%rsi
   17443:	00 
   17444:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
   17449:	4c 89 06             	mov    %r8,(%rsi)
   1744c:	8b 74 24 30          	mov    0x30(%rsp),%esi
   17450:	89 b7 78 6e 00 00    	mov    %esi,0x6e78(%rdi)
   17456:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1745b:	89 b7 7c 6e 00 00    	mov    %esi,0x6e7c(%rdi)
   17461:	8b 74 24 34          	mov    0x34(%rsp),%esi
   17465:	89 b7 80 6e 00 00    	mov    %esi,0x6e80(%rdi)
   1746b:	89 af 84 6e 00 00    	mov    %ebp,0x6e84(%rdi)
   17471:	8b 74 24 54          	mov    0x54(%rsp),%esi
   17475:	89 b7 88 6e 00 00    	mov    %esi,0x6e88(%rdi)
   1747b:	4c 89 a7 a8 6e 00 00 	mov    %r12,0x6ea8(%rdi)
   17482:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   17487:	89 b7 b0 6e 00 00    	mov    %esi,0x6eb0(%rdi)
   1748d:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   17492:	89 b7 b4 6e 00 00    	mov    %esi,0x6eb4(%rdi)
   17498:	44 89 9f b8 6e 00 00 	mov    %r11d,0x6eb8(%rdi)
   1749f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   174a4:	89 b7 bc 6e 00 00    	mov    %esi,0x6ebc(%rdi)
   174aa:	48 8b b7 98 6e 00 00 	mov    0x6e98(%rdi),%rsi
   174b1:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   174b5:	74 37                	je     174ee <lzma_decode+0x253e>
   174b7:	4c 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%r8
   174be:	00 
   174bf:	4d 29 c8             	sub    %r9,%r8
   174c2:	4c 01 c6             	add    %r8,%rsi
   174c5:	48 89 b7 98 6e 00 00 	mov    %rsi,0x6e98(%rdi)
   174cc:	40 0f 95 c6          	setne  %sil
   174d0:	80 f2 01             	xor    $0x1,%dl
   174d3:	40 08 f2             	or     %sil,%dl
   174d6:	75 16                	jne    174ee <lzma_decode+0x253e>
   174d8:	8b 87 a0 6e 00 00    	mov    0x6ea0(%rdi),%eax
   174de:	85 c0                	test   %eax,%eax
   174e0:	74 35                	je     17517 <lzma_decode+0x2567>
   174e2:	83 f8 01             	cmp    $0x1,%eax
   174e5:	74 0b                	je     174f2 <lzma_decode+0x2542>
   174e7:	b8 09 00 00 00       	mov    $0x9,%eax
   174ec:	eb 29                	jmp    17517 <lzma_decode+0x2567>
   174ee:	84 c9                	test   %cl,%cl
   174f0:	74 25                	je     17517 <lzma_decode+0x2567>
   174f2:	31 c0                	xor    %eax,%eax
   174f4:	45 85 ff             	test   %r15d,%r15d
   174f7:	0f 95 c0             	setne  %al
   174fa:	8d 04 c5 01 00 00 00 	lea    0x1(,%rax,8),%eax
   17501:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17506:	48 89 8f 6c 6e 00 00 	mov    %rcx,0x6e6c(%rdi)
   1750d:	c7 87 74 6e 00 00 05 	movl   $0x5,0x6e74(%rdi)
   17514:	00 00 00 
   17517:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1751e:	5b                   	pop    %rbx
   1751f:	41 5c                	pop    %r12
   17521:	41 5d                	pop    %r13
   17523:	41 5e                	pop    %r14
   17525:	41 5f                	pop    %r15
   17527:	5d                   	pop    %rbp
   17528:	c3                   	ret    
   17529:	31 c9                	xor    %ecx,%ecx
   1752b:	48 89 f7             	mov    %rsi,%rdi
   1752e:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   17533:	48 39 ee             	cmp    %rbp,%rsi
   17536:	48 0f 46 4c 24 70    	cmovbe 0x70(%rsp),%rcx
   1753c:	4c 8b 44 24 58       	mov    0x58(%rsp),%r8
   17541:	4d 8d 0c 30          	lea    (%r8,%rsi,1),%r9
   17545:	49 01 c1             	add    %rax,%r9
   17548:	42 0f b6 0c 09       	movzbl (%rcx,%r9,1),%ecx
   1754d:	41 88 0c 30          	mov    %cl,(%r8,%rsi,1)
   17551:	48 ff c6             	inc    %rsi
   17554:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   17559:	41 8d 4d ff          	lea    -0x1(%r13),%ecx
   1755d:	41 83 fd 01          	cmp    $0x1,%r13d
   17561:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
   17566:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   1756b:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   17570:	0f 84 b5 06 00 00    	je     17c2b <lzma_decode+0x2c7b>
   17576:	45 31 c9             	xor    %r9d,%r9d
   17579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17580:	49 39 ec             	cmp    %rbp,%r12
   17583:	4d 89 c2             	mov    %r8,%r10
   17586:	4d 0f 47 d1          	cmova  %r9,%r10
   1758a:	4e 8d 1c 26          	lea    (%rsi,%r12,1),%r11
   1758e:	49 01 c3             	add    %rax,%r11
   17591:	4d 8d 6c 24 01       	lea    0x1(%r12),%r13
   17596:	49 39 ed             	cmp    %rbp,%r13
   17599:	4d 89 c5             	mov    %r8,%r13
   1759c:	4d 0f 47 e9          	cmova  %r9,%r13
   175a0:	47 0f b6 14 1a       	movzbl (%r10,%r11,1),%r10d
   175a5:	46 88 14 26          	mov    %r10b,(%rsi,%r12,1)
   175a9:	4e 8d 14 26          	lea    (%rsi,%r12,1),%r10
   175ad:	49 ff c2             	inc    %r10
   175b0:	49 01 c2             	add    %rax,%r10
   175b3:	47 0f b6 54 15 00    	movzbl 0x0(%r13,%r10,1),%r10d
   175b9:	46 88 54 26 01       	mov    %r10b,0x1(%rsi,%r12,1)
   175be:	49 83 c4 02          	add    $0x2,%r12
   175c2:	83 c1 fe             	add    $0xfffffffe,%ecx
   175c5:	75 b9                	jne    17580 <lzma_decode+0x25d0>
   175c7:	e9 5f 06 00 00       	jmp    17c2b <lzma_decode+0x2c7b>
   175cc:	f7 d5                	not    %ebp
   175ce:	44 01 e5             	add    %r12d,%ebp
   175d1:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   175d6:	8d 34 28             	lea    (%rax,%rbp,1),%esi
   175d9:	89 e8                	mov    %ebp,%eax
   175db:	f7 d8                	neg    %eax
   175dd:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   175e2:	4a 8d 3c 21          	lea    (%rcx,%r12,1),%rdi
   175e6:	48 01 ce             	add    %rcx,%rsi
   175e9:	41 39 c5             	cmp    %eax,%r13d
   175ec:	0f 86 1b 06 00 00    	jbe    17c0d <lzma_decode+0x2c5d>
   175f2:	89 c2                	mov    %eax,%edx
   175f4:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
   175fb:	00 
   175fc:	e8 9f ab fe ff       	call   21a0 <memmove@plt>
   17601:	4c 03 a4 24 90 00 00 	add    0x90(%rsp),%r12
   17608:	00 
   17609:	41 01 ed             	add    %ebp,%r13d
   1760c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   17611:	4a 8d 3c 26          	lea    (%rsi,%r12,1),%rdi
   17615:	4c 89 ea             	mov    %r13,%rdx
   17618:	e8 33 ab fe ff       	call   2150 <memcpy@plt>
   1761d:	e9 f6 05 00 00       	jmp    17c18 <lzma_decode+0x2c68>
   17622:	89 e9                	mov    %ebp,%ecx
   17624:	45 31 c9             	xor    %r9d,%r9d
   17627:	49 39 cb             	cmp    %rcx,%r11
   1762a:	4c 0f 46 ce          	cmovbe %rsi,%r9
   1762e:	48 f7 d1             	not    %rcx
   17631:	48 01 c8             	add    %rcx,%rax
   17634:	45 0f b6 24 01       	movzbl (%r9,%rax,1),%r12d
   17639:	45 01 e4             	add    %r12d,%r12d
   1763c:	b8 00 01 00 00       	mov    $0x100,%eax
   17641:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17646:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1764c:	48 89 fe             	mov    %rdi,%rsi
   1764f:	4c 89 d7             	mov    %r10,%rdi
   17652:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   17657:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1765c:	89 c8                	mov    %ecx,%eax
   1765e:	44 21 e0             	and    %r12d,%eax
   17661:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   17665:	41 01 c1             	add    %eax,%r9d
   17668:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1766e:	77 20                	ja     17690 <lzma_decode+0x26e0>
   17670:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17675:	0f 84 88 0e 00 00    	je     18503 <lzma_decode+0x3553>
   1767b:	c1 e3 08             	shl    $0x8,%ebx
   1767e:	41 c1 e7 08          	shl    $0x8,%r15d
   17682:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17687:	49 ff c6             	inc    %r14
   1768a:	44 09 f9             	or     %r15d,%ecx
   1768d:	41 89 cf             	mov    %ecx,%r15d
   17690:	89 d9                	mov    %ebx,%ecx
   17692:	c1 e9 0b             	shr    $0xb,%ecx
   17695:	45 89 c9             	mov    %r9d,%r9d
   17698:	46 0f b7 1c 4e       	movzwl (%rsi,%r9,2),%r11d
   1769d:	41 0f af cb          	imul   %r11d,%ecx
   176a1:	45 01 ed             	add    %r13d,%r13d
   176a4:	44 89 fd             	mov    %r15d,%ebp
   176a7:	29 cd                	sub    %ecx,%ebp
   176a9:	73 16                	jae    176c1 <lzma_decode+0x2711>
   176ab:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   176b1:	45 29 da             	sub    %r11d,%r10d
   176b4:	41 c1 ea 05          	shr    $0x5,%r10d
   176b8:	45 01 da             	add    %r11d,%r10d
   176bb:	33 44 24 08          	xor    0x8(%rsp),%eax
   176bf:	eb 17                	jmp    176d8 <lzma_decode+0x2728>
   176c1:	29 cb                	sub    %ecx,%ebx
   176c3:	44 89 d9             	mov    %r11d,%ecx
   176c6:	c1 e9 05             	shr    $0x5,%ecx
   176c9:	41 29 cb             	sub    %ecx,%r11d
   176cc:	41 83 cd 01          	or     $0x1,%r13d
   176d0:	45 89 da             	mov    %r11d,%r10d
   176d3:	89 d9                	mov    %ebx,%ecx
   176d5:	41 89 ef             	mov    %ebp,%r15d
   176d8:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   176dd:	66 46 89 14 4e       	mov    %r10w,(%rsi,%r9,2)
   176e2:	45 01 e4             	add    %r12d,%r12d
   176e5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   176ea:	89 cb                	mov    %ecx,%ebx
   176ec:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   176f1:	89 c8                	mov    %ecx,%eax
   176f3:	44 21 e0             	and    %r12d,%eax
   176f6:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   176fa:	41 01 c1             	add    %eax,%r9d
   176fd:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17703:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17708:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1770d:	49 89 f4             	mov    %rsi,%r12
   17710:	77 25                	ja     17737 <lzma_decode+0x2787>
   17712:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17717:	0f 84 bc 0b 00 00    	je     182d9 <lzma_decode+0x3329>
   1771d:	48 89 ee             	mov    %rbp,%rsi
   17720:	c1 e3 08             	shl    $0x8,%ebx
   17723:	41 c1 e7 08          	shl    $0x8,%r15d
   17727:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1772c:	49 ff c6             	inc    %r14
   1772f:	44 09 f9             	or     %r15d,%ecx
   17732:	41 89 cf             	mov    %ecx,%r15d
   17735:	eb 03                	jmp    1773a <lzma_decode+0x278a>
   17737:	48 89 ee             	mov    %rbp,%rsi
   1773a:	89 d9                	mov    %ebx,%ecx
   1773c:	c1 e9 0b             	shr    $0xb,%ecx
   1773f:	45 89 c9             	mov    %r9d,%r9d
   17742:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   17747:	41 0f af cb          	imul   %r11d,%ecx
   1774b:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17750:	45 01 ed             	add    %r13d,%r13d
   17753:	44 89 fd             	mov    %r15d,%ebp
   17756:	29 cd                	sub    %ecx,%ebp
   17758:	73 16                	jae    17770 <lzma_decode+0x27c0>
   1775a:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   17760:	45 29 da             	sub    %r11d,%r10d
   17763:	41 c1 ea 05          	shr    $0x5,%r10d
   17767:	45 01 da             	add    %r11d,%r10d
   1776a:	33 44 24 08          	xor    0x8(%rsp),%eax
   1776e:	eb 17                	jmp    17787 <lzma_decode+0x27d7>
   17770:	29 cb                	sub    %ecx,%ebx
   17772:	44 89 d9             	mov    %r11d,%ecx
   17775:	c1 e9 05             	shr    $0x5,%ecx
   17778:	41 29 cb             	sub    %ecx,%r11d
   1777b:	41 83 cd 01          	or     $0x1,%r13d
   1777f:	45 89 da             	mov    %r11d,%r10d
   17782:	89 d9                	mov    %ebx,%ecx
   17784:	41 89 ef             	mov    %ebp,%r15d
   17787:	48 89 f5             	mov    %rsi,%rbp
   1778a:	4c 89 e6             	mov    %r12,%rsi
   1778d:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   17792:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   17797:	45 01 e4             	add    %r12d,%r12d
   1779a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1779f:	89 cb                	mov    %ecx,%ebx
   177a1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   177a6:	89 c8                	mov    %ecx,%eax
   177a8:	44 21 e0             	and    %r12d,%eax
   177ab:	46 8d 0c 28          	lea    (%rax,%r13,1),%r9d
   177af:	41 01 c9             	add    %ecx,%r9d
   177b2:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   177b8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   177bd:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   177c2:	49 89 f4             	mov    %rsi,%r12
   177c5:	77 25                	ja     177ec <lzma_decode+0x283c>
   177c7:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   177cc:	0f 84 7c 0a 00 00    	je     1824e <lzma_decode+0x329e>
   177d2:	48 89 ee             	mov    %rbp,%rsi
   177d5:	c1 e3 08             	shl    $0x8,%ebx
   177d8:	41 c1 e7 08          	shl    $0x8,%r15d
   177dc:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   177e1:	49 ff c6             	inc    %r14
   177e4:	44 09 f9             	or     %r15d,%ecx
   177e7:	41 89 cf             	mov    %ecx,%r15d
   177ea:	eb 03                	jmp    177ef <lzma_decode+0x283f>
   177ec:	48 89 ee             	mov    %rbp,%rsi
   177ef:	89 d9                	mov    %ebx,%ecx
   177f1:	c1 e9 0b             	shr    $0xb,%ecx
   177f4:	45 89 c9             	mov    %r9d,%r9d
   177f7:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   177fc:	41 0f af cb          	imul   %r11d,%ecx
   17800:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17805:	45 01 ed             	add    %r13d,%r13d
   17808:	44 89 fd             	mov    %r15d,%ebp
   1780b:	29 cd                	sub    %ecx,%ebp
   1780d:	73 16                	jae    17825 <lzma_decode+0x2875>
   1780f:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   17815:	45 29 da             	sub    %r11d,%r10d
   17818:	41 c1 ea 05          	shr    $0x5,%r10d
   1781c:	45 01 da             	add    %r11d,%r10d
   1781f:	33 44 24 08          	xor    0x8(%rsp),%eax
   17823:	eb 17                	jmp    1783c <lzma_decode+0x288c>
   17825:	29 cb                	sub    %ecx,%ebx
   17827:	44 89 d9             	mov    %r11d,%ecx
   1782a:	c1 e9 05             	shr    $0x5,%ecx
   1782d:	41 29 cb             	sub    %ecx,%r11d
   17830:	41 83 cd 01          	or     $0x1,%r13d
   17834:	45 89 da             	mov    %r11d,%r10d
   17837:	89 d9                	mov    %ebx,%ecx
   17839:	41 89 ef             	mov    %ebp,%r15d
   1783c:	48 89 f5             	mov    %rsi,%rbp
   1783f:	4c 89 e6             	mov    %r12,%rsi
   17842:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   17847:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   1784c:	45 01 e4             	add    %r12d,%r12d
   1784f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17854:	89 cb                	mov    %ecx,%ebx
   17856:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1785b:	89 c8                	mov    %ecx,%eax
   1785d:	44 21 e0             	and    %r12d,%eax
   17860:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   17864:	41 01 c1             	add    %eax,%r9d
   17867:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1786d:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17872:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17877:	49 89 f4             	mov    %rsi,%r12
   1787a:	77 25                	ja     178a1 <lzma_decode+0x28f1>
   1787c:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17881:	0f 84 26 0c 00 00    	je     184ad <lzma_decode+0x34fd>
   17887:	48 89 ee             	mov    %rbp,%rsi
   1788a:	c1 e3 08             	shl    $0x8,%ebx
   1788d:	41 c1 e7 08          	shl    $0x8,%r15d
   17891:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17896:	49 ff c6             	inc    %r14
   17899:	44 09 f9             	or     %r15d,%ecx
   1789c:	41 89 cf             	mov    %ecx,%r15d
   1789f:	eb 03                	jmp    178a4 <lzma_decode+0x28f4>
   178a1:	48 89 ee             	mov    %rbp,%rsi
   178a4:	89 d9                	mov    %ebx,%ecx
   178a6:	c1 e9 0b             	shr    $0xb,%ecx
   178a9:	45 89 c9             	mov    %r9d,%r9d
   178ac:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   178b1:	41 0f af cb          	imul   %r11d,%ecx
   178b5:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   178ba:	45 01 ed             	add    %r13d,%r13d
   178bd:	44 89 fd             	mov    %r15d,%ebp
   178c0:	29 cd                	sub    %ecx,%ebp
   178c2:	73 16                	jae    178da <lzma_decode+0x292a>
   178c4:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   178ca:	45 29 da             	sub    %r11d,%r10d
   178cd:	41 c1 ea 05          	shr    $0x5,%r10d
   178d1:	45 01 da             	add    %r11d,%r10d
   178d4:	33 44 24 08          	xor    0x8(%rsp),%eax
   178d8:	eb 17                	jmp    178f1 <lzma_decode+0x2941>
   178da:	29 cb                	sub    %ecx,%ebx
   178dc:	44 89 d9             	mov    %r11d,%ecx
   178df:	c1 e9 05             	shr    $0x5,%ecx
   178e2:	41 29 cb             	sub    %ecx,%r11d
   178e5:	41 83 cd 01          	or     $0x1,%r13d
   178e9:	45 89 da             	mov    %r11d,%r10d
   178ec:	89 d9                	mov    %ebx,%ecx
   178ee:	41 89 ef             	mov    %ebp,%r15d
   178f1:	48 89 f5             	mov    %rsi,%rbp
   178f4:	4c 89 e6             	mov    %r12,%rsi
   178f7:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   178fc:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   17901:	45 01 e4             	add    %r12d,%r12d
   17904:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17909:	89 cb                	mov    %ecx,%ebx
   1790b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17910:	89 c8                	mov    %ecx,%eax
   17912:	44 21 e0             	and    %r12d,%eax
   17915:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   17919:	41 01 c1             	add    %eax,%r9d
   1791c:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17922:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17927:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1792c:	49 89 f4             	mov    %rsi,%r12
   1792f:	77 25                	ja     17956 <lzma_decode+0x29a6>
   17931:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17936:	0f 84 68 09 00 00    	je     182a4 <lzma_decode+0x32f4>
   1793c:	48 89 ee             	mov    %rbp,%rsi
   1793f:	c1 e3 08             	shl    $0x8,%ebx
   17942:	41 c1 e7 08          	shl    $0x8,%r15d
   17946:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   1794b:	49 ff c6             	inc    %r14
   1794e:	44 09 f9             	or     %r15d,%ecx
   17951:	41 89 cf             	mov    %ecx,%r15d
   17954:	eb 03                	jmp    17959 <lzma_decode+0x29a9>
   17956:	48 89 ee             	mov    %rbp,%rsi
   17959:	89 d9                	mov    %ebx,%ecx
   1795b:	c1 e9 0b             	shr    $0xb,%ecx
   1795e:	45 89 c9             	mov    %r9d,%r9d
   17961:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   17966:	41 0f af cb          	imul   %r11d,%ecx
   1796a:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   1796f:	45 01 ed             	add    %r13d,%r13d
   17972:	44 89 fd             	mov    %r15d,%ebp
   17975:	29 cd                	sub    %ecx,%ebp
   17977:	73 16                	jae    1798f <lzma_decode+0x29df>
   17979:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   1797f:	45 29 da             	sub    %r11d,%r10d
   17982:	41 c1 ea 05          	shr    $0x5,%r10d
   17986:	45 01 da             	add    %r11d,%r10d
   17989:	33 44 24 08          	xor    0x8(%rsp),%eax
   1798d:	eb 17                	jmp    179a6 <lzma_decode+0x29f6>
   1798f:	29 cb                	sub    %ecx,%ebx
   17991:	44 89 d9             	mov    %r11d,%ecx
   17994:	c1 e9 05             	shr    $0x5,%ecx
   17997:	41 29 cb             	sub    %ecx,%r11d
   1799a:	41 83 cd 01          	or     $0x1,%r13d
   1799e:	45 89 da             	mov    %r11d,%r10d
   179a1:	89 d9                	mov    %ebx,%ecx
   179a3:	41 89 ef             	mov    %ebp,%r15d
   179a6:	48 89 f5             	mov    %rsi,%rbp
   179a9:	4c 89 e6             	mov    %r12,%rsi
   179ac:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   179b1:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   179b6:	45 01 e4             	add    %r12d,%r12d
   179b9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   179be:	89 cb                	mov    %ecx,%ebx
   179c0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   179c5:	89 c8                	mov    %ecx,%eax
   179c7:	44 21 e0             	and    %r12d,%eax
   179ca:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   179ce:	41 01 c1             	add    %eax,%r9d
   179d1:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   179d7:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   179dc:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   179e1:	49 89 f4             	mov    %rsi,%r12
   179e4:	77 25                	ja     17a0b <lzma_decode+0x2a5b>
   179e6:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   179eb:	0f 84 49 08 00 00    	je     1823a <lzma_decode+0x328a>
   179f1:	48 89 ee             	mov    %rbp,%rsi
   179f4:	c1 e3 08             	shl    $0x8,%ebx
   179f7:	41 c1 e7 08          	shl    $0x8,%r15d
   179fb:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17a00:	49 ff c6             	inc    %r14
   17a03:	44 09 f9             	or     %r15d,%ecx
   17a06:	41 89 cf             	mov    %ecx,%r15d
   17a09:	eb 03                	jmp    17a0e <lzma_decode+0x2a5e>
   17a0b:	48 89 ee             	mov    %rbp,%rsi
   17a0e:	89 d9                	mov    %ebx,%ecx
   17a10:	c1 e9 0b             	shr    $0xb,%ecx
   17a13:	45 89 c9             	mov    %r9d,%r9d
   17a16:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   17a1b:	41 0f af cb          	imul   %r11d,%ecx
   17a1f:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17a24:	45 01 ed             	add    %r13d,%r13d
   17a27:	44 89 fd             	mov    %r15d,%ebp
   17a2a:	29 cd                	sub    %ecx,%ebp
   17a2c:	73 16                	jae    17a44 <lzma_decode+0x2a94>
   17a2e:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   17a34:	45 29 da             	sub    %r11d,%r10d
   17a37:	41 c1 ea 05          	shr    $0x5,%r10d
   17a3b:	45 01 da             	add    %r11d,%r10d
   17a3e:	33 44 24 08          	xor    0x8(%rsp),%eax
   17a42:	eb 17                	jmp    17a5b <lzma_decode+0x2aab>
   17a44:	29 cb                	sub    %ecx,%ebx
   17a46:	44 89 d9             	mov    %r11d,%ecx
   17a49:	c1 e9 05             	shr    $0x5,%ecx
   17a4c:	41 29 cb             	sub    %ecx,%r11d
   17a4f:	41 83 cd 01          	or     $0x1,%r13d
   17a53:	45 89 da             	mov    %r11d,%r10d
   17a56:	89 d9                	mov    %ebx,%ecx
   17a58:	41 89 ef             	mov    %ebp,%r15d
   17a5b:	48 89 f5             	mov    %rsi,%rbp
   17a5e:	4c 89 e6             	mov    %r12,%rsi
   17a61:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   17a66:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   17a6b:	45 01 e4             	add    %r12d,%r12d
   17a6e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17a73:	89 cb                	mov    %ecx,%ebx
   17a75:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17a7a:	89 c8                	mov    %ecx,%eax
   17a7c:	44 21 e0             	and    %r12d,%eax
   17a7f:	46 8d 0c 29          	lea    (%rcx,%r13,1),%r9d
   17a83:	41 01 c1             	add    %eax,%r9d
   17a86:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17a8c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17a91:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17a96:	49 89 f4             	mov    %rsi,%r12
   17a99:	77 25                	ja     17ac0 <lzma_decode+0x2b10>
   17a9b:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17aa0:	0f 84 90 09 00 00    	je     18436 <lzma_decode+0x3486>
   17aa6:	48 89 ee             	mov    %rbp,%rsi
   17aa9:	c1 e3 08             	shl    $0x8,%ebx
   17aac:	41 c1 e7 08          	shl    $0x8,%r15d
   17ab0:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17ab5:	49 ff c6             	inc    %r14
   17ab8:	44 09 f9             	or     %r15d,%ecx
   17abb:	41 89 cf             	mov    %ecx,%r15d
   17abe:	eb 03                	jmp    17ac3 <lzma_decode+0x2b13>
   17ac0:	48 89 ee             	mov    %rbp,%rsi
   17ac3:	89 d9                	mov    %ebx,%ecx
   17ac5:	c1 e9 0b             	shr    $0xb,%ecx
   17ac8:	45 89 c9             	mov    %r9d,%r9d
   17acb:	47 0f b7 1c 4c       	movzwl (%r12,%r9,2),%r11d
   17ad0:	41 0f af cb          	imul   %r11d,%ecx
   17ad4:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17ad9:	45 01 ed             	add    %r13d,%r13d
   17adc:	44 89 fd             	mov    %r15d,%ebp
   17adf:	29 cd                	sub    %ecx,%ebp
   17ae1:	73 16                	jae    17af9 <lzma_decode+0x2b49>
   17ae3:	41 ba 00 08 00 00    	mov    $0x800,%r10d
   17ae9:	45 29 da             	sub    %r11d,%r10d
   17aec:	41 c1 ea 05          	shr    $0x5,%r10d
   17af0:	45 01 da             	add    %r11d,%r10d
   17af3:	33 44 24 08          	xor    0x8(%rsp),%eax
   17af7:	eb 17                	jmp    17b10 <lzma_decode+0x2b60>
   17af9:	29 cb                	sub    %ecx,%ebx
   17afb:	44 89 d9             	mov    %r11d,%ecx
   17afe:	c1 e9 05             	shr    $0x5,%ecx
   17b01:	41 29 cb             	sub    %ecx,%r11d
   17b04:	41 83 cd 01          	or     $0x1,%r13d
   17b08:	45 89 da             	mov    %r11d,%r10d
   17b0b:	89 d9                	mov    %ebx,%ecx
   17b0d:	41 89 ef             	mov    %ebp,%r15d
   17b10:	48 89 f5             	mov    %rsi,%rbp
   17b13:	4c 89 e6             	mov    %r12,%rsi
   17b16:	66 47 89 14 4c       	mov    %r10w,(%r12,%r9,2)
   17b1b:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   17b20:	45 01 e4             	add    %r12d,%r12d
   17b23:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17b28:	89 cb                	mov    %ecx,%ebx
   17b2a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17b2f:	89 c1                	mov    %eax,%ecx
   17b31:	44 21 e1             	and    %r12d,%ecx
   17b34:	46 8d 0c 28          	lea    (%rax,%r13,1),%r9d
   17b38:	41 01 c9             	add    %ecx,%r9d
   17b3b:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17b41:	77 20                	ja     17b63 <lzma_decode+0x2bb3>
   17b43:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17b48:	0f 84 c7 08 00 00    	je     18415 <lzma_decode+0x3465>
   17b4e:	c1 e3 08             	shl    $0x8,%ebx
   17b51:	41 c1 e7 08          	shl    $0x8,%r15d
   17b55:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   17b5a:	49 ff c6             	inc    %r14
   17b5d:	44 09 f8             	or     %r15d,%eax
   17b60:	41 89 c7             	mov    %eax,%r15d
   17b63:	89 d8                	mov    %ebx,%eax
   17b65:	c1 e8 0b             	shr    $0xb,%eax
   17b68:	45 89 ca             	mov    %r9d,%r10d
   17b6b:	46 0f b7 1c 56       	movzwl (%rsi,%r10,2),%r11d
   17b70:	41 0f af c3          	imul   %r11d,%eax
   17b74:	45 01 ed             	add    %r13d,%r13d
   17b77:	45 89 f9             	mov    %r15d,%r9d
   17b7a:	41 29 c1             	sub    %eax,%r9d
   17b7d:	73 20                	jae    17b9f <lzma_decode+0x2bef>
   17b7f:	41 b9 00 08 00 00    	mov    $0x800,%r9d
   17b85:	45 29 d9             	sub    %r11d,%r9d
   17b88:	41 c1 e9 05          	shr    $0x5,%r9d
   17b8c:	45 01 d9             	add    %r11d,%r9d
   17b8f:	66 46 89 0c 56       	mov    %r9w,(%rsi,%r10,2)
   17b94:	33 4c 24 08          	xor    0x8(%rsp),%ecx
   17b98:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17b9d:	eb 20                	jmp    17bbf <lzma_decode+0x2c0f>
   17b9f:	29 c3                	sub    %eax,%ebx
   17ba1:	44 89 d8             	mov    %r11d,%eax
   17ba4:	c1 e8 05             	shr    $0x5,%eax
   17ba7:	41 29 c3             	sub    %eax,%r11d
   17baa:	66 46 89 1c 56       	mov    %r11w,(%rsi,%r10,2)
   17baf:	41 83 cd 01          	or     $0x1,%r13d
   17bb3:	89 c8                	mov    %ecx,%eax
   17bb5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17bba:	89 d8                	mov    %ebx,%eax
   17bbc:	45 89 cf             	mov    %r9d,%r15d
   17bbf:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   17bc3:	4c 8d 0d 66 26 01 00 	lea    0x12666(%rip),%r9        # 2a230 <lzma_decode.next_state>
   17bca:	41 8b 0c 89          	mov    (%r9,%rcx,4),%ecx
   17bce:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
   17bd2:	89 c3                	mov    %eax,%ebx
   17bd4:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   17bd9:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   17bde:	48 39 c1             	cmp    %rax,%rcx
   17be1:	0f 84 7b 03 00 00    	je     17f62 <lzma_decode+0x2fb2>
   17be7:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   17bec:	44 88 2c 08          	mov    %r13b,(%rax,%rcx,1)
   17bf0:	48 ff c1             	inc    %rcx
   17bf3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   17bf8:	48 39 c1             	cmp    %rax,%rcx
   17bfb:	48 0f 47 c1          	cmova  %rcx,%rax
   17bff:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17c04:	8b 44 24 64          	mov    0x64(%rsp),%eax
   17c08:	e9 ad d5 ff ff       	jmp    151ba <lzma_decode+0x20a>
   17c0d:	45 89 ed             	mov    %r13d,%r13d
   17c10:	4c 89 ea             	mov    %r13,%rdx
   17c13:	e8 88 a5 fe ff       	call   21a0 <memmove@plt>
   17c18:	4d 01 ec             	add    %r13,%r12
   17c1b:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   17c22:	00 
   17c23:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
   17c2a:	00 
   17c2b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   17c30:	4c 39 e0             	cmp    %r12,%rax
   17c33:	49 0f 46 c4          	cmovbe %r12,%rax
   17c37:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   17c3c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17c41:	85 c0                	test   %eax,%eax
   17c43:	4c 89 e1             	mov    %r12,%rcx
   17c46:	0f 85 d5 02 00 00    	jne    17f21 <lzma_decode+0x2f71>
   17c4c:	45 31 e4             	xor    %r12d,%r12d
   17c4f:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   17c54:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17c59:	8b 44 24 64          	mov    0x64(%rsp),%eax
   17c5d:	48 89 fe             	mov    %rdi,%rsi
   17c60:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   17c65:	e9 50 d5 ff ff       	jmp    151ba <lzma_decode+0x20a>
   17c6a:	29 cb                	sub    %ecx,%ebx
   17c6c:	44 89 c9             	mov    %r9d,%ecx
   17c6f:	c1 e9 05             	shr    $0x5,%ecx
   17c72:	41 29 c9             	sub    %ecx,%r9d
   17c75:	41 83 cd 01          	or     $0x1,%r13d
   17c79:	ff c5                	inc    %ebp
   17c7b:	45 89 ca             	mov    %r9d,%r10d
   17c7e:	89 d9                	mov    %ebx,%ecx
   17c80:	45 89 df             	mov    %r11d,%r15d
   17c83:	66 44 89 14 46       	mov    %r10w,(%rsi,%rax,2)
   17c88:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17c8d:	ff c0                	inc    %eax
   17c8f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17c94:	89 cb                	mov    %ecx,%ebx
   17c96:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17c9c:	77 20                	ja     17cbe <lzma_decode+0x2d0e>
   17c9e:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17ca3:	0f 84 65 0c 00 00    	je     1890e <lzma_decode+0x395e>
   17ca9:	c1 e3 08             	shl    $0x8,%ebx
   17cac:	41 c1 e7 08          	shl    $0x8,%r15d
   17cb0:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   17cb5:	49 ff c6             	inc    %r14
   17cb8:	44 09 f8             	or     %r15d,%eax
   17cbb:	41 89 c7             	mov    %eax,%r15d
   17cbe:	89 d9                	mov    %ebx,%ecx
   17cc0:	c1 e9 0b             	shr    $0xb,%ecx
   17cc3:	44 89 e8             	mov    %r13d,%eax
   17cc6:	44 0f b7 0c 46       	movzwl (%rsi,%rax,2),%r9d
   17ccb:	41 0f af c9          	imul   %r9d,%ecx
   17ccf:	45 01 ed             	add    %r13d,%r13d
   17cd2:	45 89 fa             	mov    %r15d,%r10d
   17cd5:	41 29 ca             	sub    %ecx,%r10d
   17cd8:	73 17                	jae    17cf1 <lzma_decode+0x2d41>
   17cda:	41 bb 00 08 00 00    	mov    $0x800,%r11d
   17ce0:	45 29 cb             	sub    %r9d,%r11d
   17ce3:	41 c1 eb 05          	shr    $0x5,%r11d
   17ce7:	45 01 cb             	add    %r9d,%r11d
   17cea:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   17cef:	eb 31                	jmp    17d22 <lzma_decode+0x2d72>
   17cf1:	29 cb                	sub    %ecx,%ebx
   17cf3:	44 89 c9             	mov    %r9d,%ecx
   17cf6:	c1 e9 05             	shr    $0x5,%ecx
   17cf9:	41 29 c9             	sub    %ecx,%r9d
   17cfc:	41 83 cd 01          	or     $0x1,%r13d
   17d00:	49 89 f3             	mov    %rsi,%r11
   17d03:	48 89 ee             	mov    %rbp,%rsi
   17d06:	bd 01 00 00 00       	mov    $0x1,%ebp
   17d0b:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   17d10:	44 89 e1             	mov    %r12d,%ecx
   17d13:	d3 e5                	shl    %cl,%ebp
   17d15:	01 f5                	add    %esi,%ebp
   17d17:	4c 89 de             	mov    %r11,%rsi
   17d1a:	45 89 cb             	mov    %r9d,%r11d
   17d1d:	89 d9                	mov    %ebx,%ecx
   17d1f:	45 89 d7             	mov    %r10d,%r15d
   17d22:	66 44 89 1c 46       	mov    %r11w,(%rsi,%rax,2)
   17d27:	41 ff c4             	inc    %r12d
   17d2a:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   17d2f:	89 cb                	mov    %ecx,%ebx
   17d31:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17d37:	77 20                	ja     17d59 <lzma_decode+0x2da9>
   17d39:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17d3e:	0f 84 a0 0b 00 00    	je     188e4 <lzma_decode+0x3934>
   17d44:	c1 e3 08             	shl    $0x8,%ebx
   17d47:	41 c1 e7 08          	shl    $0x8,%r15d
   17d4b:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   17d50:	49 ff c6             	inc    %r14
   17d53:	44 09 f8             	or     %r15d,%eax
   17d56:	41 89 c7             	mov    %eax,%r15d
   17d59:	41 89 dc             	mov    %ebx,%r12d
   17d5c:	41 c1 ec 0b          	shr    $0xb,%r12d
   17d60:	44 89 e8             	mov    %r13d,%eax
   17d63:	44 0f b7 0c 46       	movzwl (%rsi,%rax,2),%r9d
   17d68:	45 0f af e1          	imul   %r9d,%r12d
   17d6c:	45 01 ed             	add    %r13d,%r13d
   17d6f:	45 89 fa             	mov    %r15d,%r10d
   17d72:	45 29 e2             	sub    %r12d,%r10d
   17d75:	73 17                	jae    17d8e <lzma_decode+0x2dde>
   17d77:	41 bb 00 08 00 00    	mov    $0x800,%r11d
   17d7d:	45 29 cb             	sub    %r9d,%r11d
   17d80:	41 c1 eb 05          	shr    $0x5,%r11d
   17d84:	45 01 cb             	add    %r9d,%r11d
   17d87:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17d8c:	eb 30                	jmp    17dbe <lzma_decode+0x2e0e>
   17d8e:	44 29 e3             	sub    %r12d,%ebx
   17d91:	44 89 c9             	mov    %r9d,%ecx
   17d94:	c1 e9 05             	shr    $0x5,%ecx
   17d97:	41 29 c9             	sub    %ecx,%r9d
   17d9a:	41 83 cd 01          	or     $0x1,%r13d
   17d9e:	49 89 f3             	mov    %rsi,%r11
   17da1:	48 89 ee             	mov    %rbp,%rsi
   17da4:	bd 01 00 00 00       	mov    $0x1,%ebp
   17da9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17dae:	d3 e5                	shl    %cl,%ebp
   17db0:	01 f5                	add    %esi,%ebp
   17db2:	4c 89 de             	mov    %r11,%rsi
   17db5:	45 89 cb             	mov    %r9d,%r11d
   17db8:	41 89 dc             	mov    %ebx,%r12d
   17dbb:	45 89 d7             	mov    %r10d,%r15d
   17dbe:	66 44 89 1c 46       	mov    %r11w,(%rsi,%rax,2)
   17dc3:	ff c1                	inc    %ecx
   17dc5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17dca:	44 89 e3             	mov    %r12d,%ebx
   17dcd:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17dd3:	77 20                	ja     17df5 <lzma_decode+0x2e45>
   17dd5:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17dda:	0f 84 b9 0a 00 00    	je     18899 <lzma_decode+0x38e9>
   17de0:	c1 e3 08             	shl    $0x8,%ebx
   17de3:	41 c1 e7 08          	shl    $0x8,%r15d
   17de7:	42 0f b6 04 32       	movzbl (%rdx,%r14,1),%eax
   17dec:	49 ff c6             	inc    %r14
   17def:	44 09 f8             	or     %r15d,%eax
   17df2:	41 89 c7             	mov    %eax,%r15d
   17df5:	41 89 dc             	mov    %ebx,%r12d
   17df8:	41 c1 ec 0b          	shr    $0xb,%r12d
   17dfc:	44 89 e8             	mov    %r13d,%eax
   17dff:	44 0f b7 0c 46       	movzwl (%rsi,%rax,2),%r9d
   17e04:	45 0f af e1          	imul   %r9d,%r12d
   17e08:	45 01 ed             	add    %r13d,%r13d
   17e0b:	45 89 fa             	mov    %r15d,%r10d
   17e0e:	45 29 e2             	sub    %r12d,%r10d
   17e11:	73 17                	jae    17e2a <lzma_decode+0x2e7a>
   17e13:	41 bb 00 08 00 00    	mov    $0x800,%r11d
   17e19:	45 29 cb             	sub    %r9d,%r11d
   17e1c:	41 c1 eb 05          	shr    $0x5,%r11d
   17e20:	45 01 cb             	add    %r9d,%r11d
   17e23:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17e28:	eb 30                	jmp    17e5a <lzma_decode+0x2eaa>
   17e2a:	44 29 e3             	sub    %r12d,%ebx
   17e2d:	44 89 c9             	mov    %r9d,%ecx
   17e30:	c1 e9 05             	shr    $0x5,%ecx
   17e33:	41 29 c9             	sub    %ecx,%r9d
   17e36:	41 83 cd 01          	or     $0x1,%r13d
   17e3a:	49 89 f3             	mov    %rsi,%r11
   17e3d:	48 89 ee             	mov    %rbp,%rsi
   17e40:	bd 01 00 00 00       	mov    $0x1,%ebp
   17e45:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17e4a:	d3 e5                	shl    %cl,%ebp
   17e4c:	01 f5                	add    %esi,%ebp
   17e4e:	4c 89 de             	mov    %r11,%rsi
   17e51:	45 89 cb             	mov    %r9d,%r11d
   17e54:	41 89 dc             	mov    %ebx,%r12d
   17e57:	45 89 d7             	mov    %r10d,%r15d
   17e5a:	66 44 89 1c 46       	mov    %r11w,(%rsi,%rax,2)
   17e5f:	ff c1                	inc    %ecx
   17e61:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17e66:	44 89 e3             	mov    %r12d,%ebx
   17e69:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   17e6e:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   17e74:	77 24                	ja     17e9a <lzma_decode+0x2eea>
   17e76:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   17e7b:	0f 84 ee 09 00 00    	je     1886f <lzma_decode+0x38bf>
   17e81:	89 d8                	mov    %ebx,%eax
   17e83:	c1 e0 08             	shl    $0x8,%eax
   17e86:	41 c1 e7 08          	shl    $0x8,%r15d
   17e8a:	42 0f b6 0c 32       	movzbl (%rdx,%r14,1),%ecx
   17e8f:	49 ff c6             	inc    %r14
   17e92:	44 09 f9             	or     %r15d,%ecx
   17e95:	41 89 cf             	mov    %ecx,%r15d
   17e98:	eb 02                	jmp    17e9c <lzma_decode+0x2eec>
   17e9a:	89 d8                	mov    %ebx,%eax
   17e9c:	89 c3                	mov    %eax,%ebx
   17e9e:	c1 eb 0b             	shr    $0xb,%ebx
   17ea1:	44 89 e9             	mov    %r13d,%ecx
   17ea4:	44 0f b7 14 4e       	movzwl (%rsi,%rcx,2),%r10d
   17ea9:	41 0f af da          	imul   %r10d,%ebx
   17ead:	45 89 f9             	mov    %r15d,%r9d
   17eb0:	41 29 d9             	sub    %ebx,%r9d
   17eb3:	73 14                	jae    17ec9 <lzma_decode+0x2f19>
   17eb5:	b8 00 08 00 00       	mov    $0x800,%eax
   17eba:	44 29 d0             	sub    %r10d,%eax
   17ebd:	c1 e8 05             	shr    $0x5,%eax
   17ec0:	44 01 d0             	add    %r10d,%eax
   17ec3:	66 89 04 4e          	mov    %ax,(%rsi,%rcx,2)
   17ec7:	eb 2a                	jmp    17ef3 <lzma_decode+0x2f43>
   17ec9:	29 d8                	sub    %ebx,%eax
   17ecb:	45 89 d3             	mov    %r10d,%r11d
   17ece:	41 c1 eb 05          	shr    $0x5,%r11d
   17ed2:	45 29 da             	sub    %r11d,%r10d
   17ed5:	66 44 89 14 4e       	mov    %r10w,(%rsi,%rcx,2)
   17eda:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   17ee0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17ee5:	41 d3 e2             	shl    %cl,%r10d
   17ee8:	41 01 ea             	add    %ebp,%r10d
   17eeb:	44 89 d5             	mov    %r10d,%ebp
   17eee:	89 c3                	mov    %eax,%ebx
   17ef0:	45 89 cf             	mov    %r9d,%r15d
   17ef3:	b9 01 00 00 00       	mov    $0x1,%ecx
   17ef8:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   17efd:	89 e8                	mov    %ebp,%eax
   17eff:	48 39 44 24 48       	cmp    %rax,0x48(%rsp)
   17f04:	0f 87 2f f4 ff ff    	ja     17339 <lzma_decode+0x2389>
   17f0a:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17f0f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17f14:	49 89 f4             	mov    %rsi,%r12
   17f17:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   17f1c:	e9 c1 00 00 00       	jmp    17fe2 <lzma_decode+0x3032>
   17f21:	49 89 fc             	mov    %rdi,%r12
   17f24:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   17f29:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   17f2e:	c7 87 a0 6e 00 00 46 	movl   $0x46,0x6ea0(%rdi)
   17f35:	00 00 00 
   17f38:	31 c9                	xor    %ecx,%ecx
   17f3a:	b2 01                	mov    $0x1,%dl
   17f3c:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17f41:	e9 ba f4 ff ff       	jmp    17400 <lzma_decode+0x2450>
   17f46:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17f4b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17f50:	49 89 f4             	mov    %rsi,%r12
   17f53:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   17f58:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   17f5d:	e9 f2 d1 ff ff       	jmp    15154 <lzma_decode+0x1a4>
   17f62:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17f67:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17f6c:	49 89 f4             	mov    %rsi,%r12
   17f6f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   17f74:	c7 87 a0 6e 00 00 12 	movl   $0x12,0x6ea0(%rdi)
   17f7b:	00 00 00 
   17f7e:	31 c9                	xor    %ecx,%ecx
   17f80:	b2 01                	mov    $0x1,%dl
   17f82:	eb 29                	jmp    17fad <lzma_decode+0x2ffd>
   17f84:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17f89:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17f8e:	49 89 fc             	mov    %rdi,%r12
   17f91:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   17f96:	4c 89 df             	mov    %r11,%rdi
   17f99:	41 c7 83 a0 6e 00 00 	movl   $0x32,0x6ea0(%r11)
   17fa0:	32 00 00 00 
   17fa4:	31 c9                	xor    %ecx,%ecx
   17fa6:	b2 01                	mov    $0x1,%dl
   17fa8:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   17fad:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17fb2:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17fb7:	e9 44 f4 ff ff       	jmp    17400 <lzma_decode+0x2450>
   17fbc:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   17fc1:	48 83 bf 98 6e 00 00 	cmpq   $0xffffffffffffffff,0x6e98(%rdi)
   17fc8:	ff 
   17fc9:	74 2a                	je     17ff5 <lzma_decode+0x3045>
   17fcb:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17fd0:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17fd5:	49 89 f4             	mov    %rsi,%r12
   17fd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   17fdd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17fe2:	b8 09 00 00 00       	mov    $0x9,%eax
   17fe7:	31 d2                	xor    %edx,%edx
   17fe9:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   17fee:	31 c9                	xor    %ecx,%ecx
   17ff0:	e9 0d f4 ff ff       	jmp    17402 <lzma_decode+0x2452>
   17ff5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   17ffa:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   17fff:	b8 01 00 00 00       	mov    $0x1,%eax
   18004:	b1 01                	mov    $0x1,%cl
   18006:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
   1800c:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18011:	49 89 f4             	mov    %rsi,%r12
   18014:	77 29                	ja     1803f <lzma_decode+0x308f>
   18016:	4c 3b 74 24 28       	cmp    0x28(%rsp),%r14
   1801b:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   18020:	0f 85 9d 08 00 00    	jne    188c3 <lzma_decode+0x3913>
   18026:	c7 87 a0 6e 00 00 30 	movl   $0x30,0x6ea0(%rdi)
   1802d:	00 00 00 
   18030:	31 c9                	xor    %ecx,%ecx
   18032:	b2 01                	mov    $0x1,%dl
   18034:	31 c0                	xor    %eax,%eax
   18036:	8b 6c 24 04          	mov    0x4(%rsp),%ebp
   1803a:	e9 cc f3 ff ff       	jmp    1740b <lzma_decode+0x245b>
   1803f:	31 d2                	xor    %edx,%edx
   18041:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   18046:	e9 b7 f3 ff ff       	jmp    17402 <lzma_decode+0x2452>
   1804b:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18050:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18055:	49 89 f4             	mov    %rsi,%r12
   18058:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1805d:	c7 87 a0 6e 00 00 3d 	movl   $0x3d,0x6ea0(%rdi)
   18064:	00 00 00 
   18067:	e9 90 f3 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1806c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18071:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18076:	49 89 f4             	mov    %rsi,%r12
   18079:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1807e:	c7 87 a0 6e 00 00 43 	movl   $0x43,0x6ea0(%rdi)
   18085:	00 00 00 
   18088:	e9 6f f3 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1808d:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18092:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18097:	49 89 f4             	mov    %rsi,%r12
   1809a:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1809f:	c7 87 a0 6e 00 00 38 	movl   $0x38,0x6ea0(%rdi)
   180a6:	00 00 00 
   180a9:	e9 4e f3 ff ff       	jmp    173fc <lzma_decode+0x244c>
   180ae:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   180b3:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   180b8:	49 89 f4             	mov    %rsi,%r12
   180bb:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   180c0:	c7 87 a0 6e 00 00 33 	movl   $0x33,0x6ea0(%rdi)
   180c7:	00 00 00 
   180ca:	e9 2d f3 ff ff       	jmp    173fc <lzma_decode+0x244c>
   180cf:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   180d4:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   180d9:	49 89 f4             	mov    %rsi,%r12
   180dc:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   180e1:	c7 87 a0 6e 00 00 21 	movl   $0x21,0x6ea0(%rdi)
   180e8:	00 00 00 
   180eb:	e9 0c f3 ff ff       	jmp    173fc <lzma_decode+0x244c>
   180f0:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   180f5:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   180fa:	49 89 f4             	mov    %rsi,%r12
   180fd:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18102:	c7 87 a0 6e 00 00 41 	movl   $0x41,0x6ea0(%rdi)
   18109:	00 00 00 
   1810c:	e9 eb f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18111:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18116:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1811b:	49 89 f4             	mov    %rsi,%r12
   1811e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18123:	c7 87 a0 6e 00 00 2f 	movl   $0x2f,0x6ea0(%rdi)
   1812a:	00 00 00 
   1812d:	e9 ca f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18132:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18137:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1813c:	49 89 f4             	mov    %rsi,%r12
   1813f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18144:	c7 87 a0 6e 00 00 3a 	movl   $0x3a,0x6ea0(%rdi)
   1814b:	00 00 00 
   1814e:	e9 a9 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18153:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18158:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1815d:	49 89 f4             	mov    %rsi,%r12
   18160:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18165:	c7 87 a0 6e 00 00 36 	movl   $0x36,0x6ea0(%rdi)
   1816c:	00 00 00 
   1816f:	e9 88 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18174:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18179:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1817e:	49 89 f4             	mov    %rsi,%r12
   18181:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18186:	c7 87 a0 6e 00 00 2d 	movl   $0x2d,0x6ea0(%rdi)
   1818d:	00 00 00 
   18190:	e9 67 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18195:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1819a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1819f:	49 89 f4             	mov    %rsi,%r12
   181a2:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   181a7:	c7 87 a0 6e 00 00 1d 	movl   $0x1d,0x6ea0(%rdi)
   181ae:	00 00 00 
   181b1:	e9 46 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   181b6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   181bb:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   181c0:	49 89 f4             	mov    %rsi,%r12
   181c3:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   181c8:	c7 87 a0 6e 00 00 2c 	movl   $0x2c,0x6ea0(%rdi)
   181cf:	00 00 00 
   181d2:	e9 25 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   181d7:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   181dc:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   181e1:	49 89 f4             	mov    %rsi,%r12
   181e4:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   181e9:	c7 87 a0 6e 00 00 20 	movl   $0x20,0x6ea0(%rdi)
   181f0:	00 00 00 
   181f3:	e9 04 f2 ff ff       	jmp    173fc <lzma_decode+0x244c>
   181f8:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   181fd:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18202:	49 89 f4             	mov    %rsi,%r12
   18205:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1820a:	c7 87 a0 6e 00 00 24 	movl   $0x24,0x6ea0(%rdi)
   18211:	00 00 00 
   18214:	e9 e3 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18219:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1821e:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18223:	49 89 f4             	mov    %rsi,%r12
   18226:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1822b:	c7 87 a0 6e 00 00 18 	movl   $0x18,0x6ea0(%rdi)
   18232:	00 00 00 
   18235:	e9 c2 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1823a:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1823f:	c7 87 a0 6e 00 00 0f 	movl   $0xf,0x6ea0(%rdi)
   18246:	00 00 00 
   18249:	e9 ae f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1824e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18253:	c7 87 a0 6e 00 00 0c 	movl   $0xc,0x6ea0(%rdi)
   1825a:	00 00 00 
   1825d:	e9 9a f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18262:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18267:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1826c:	49 89 f4             	mov    %rsi,%r12
   1826f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18274:	c7 87 a0 6e 00 00 25 	movl   $0x25,0x6ea0(%rdi)
   1827b:	00 00 00 
   1827e:	e9 79 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18283:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18288:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1828d:	49 89 f4             	mov    %rsi,%r12
   18290:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18295:	c7 87 a0 6e 00 00 3c 	movl   $0x3c,0x6ea0(%rdi)
   1829c:	00 00 00 
   1829f:	e9 58 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   182a4:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   182a9:	c7 87 a0 6e 00 00 0e 	movl   $0xe,0x6ea0(%rdi)
   182b0:	00 00 00 
   182b3:	e9 44 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   182b8:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   182bd:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   182c2:	49 89 f4             	mov    %rsi,%r12
   182c5:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   182ca:	c7 87 a0 6e 00 00 40 	movl   $0x40,0x6ea0(%rdi)
   182d1:	00 00 00 
   182d4:	e9 23 f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   182d9:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   182de:	c7 87 a0 6e 00 00 0b 	movl   $0xb,0x6ea0(%rdi)
   182e5:	00 00 00 
   182e8:	e9 0f f1 ff ff       	jmp    173fc <lzma_decode+0x244c>
   182ed:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   182f2:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   182f7:	49 89 f4             	mov    %rsi,%r12
   182fa:	c7 87 a0 6e 00 00 13 	movl   $0x13,0x6ea0(%rdi)
   18301:	00 00 00 
   18304:	31 c9                	xor    %ecx,%ecx
   18306:	b2 01                	mov    $0x1,%dl
   18308:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1830c:	89 44 24 34          	mov    %eax,0x34(%rsp)
   18310:	44 89 cd             	mov    %r9d,%ebp
   18313:	31 c0                	xor    %eax,%eax
   18315:	e9 ec f0 ff ff       	jmp    17406 <lzma_decode+0x2456>
   1831a:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1831f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18324:	49 89 f4             	mov    %rsi,%r12
   18327:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1832c:	c7 87 a0 6e 00 00 27 	movl   $0x27,0x6ea0(%rdi)
   18333:	00 00 00 
   18336:	e9 c1 f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1833b:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18340:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18345:	49 89 f4             	mov    %rsi,%r12
   18348:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1834d:	c7 87 a0 6e 00 00 1a 	movl   $0x1a,0x6ea0(%rdi)
   18354:	00 00 00 
   18357:	e9 a0 f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   1835c:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18361:	c7 87 a0 6e 00 00 35 	movl   $0x35,0x6ea0(%rdi)
   18368:	00 00 00 
   1836b:	e9 8c f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18370:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18375:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1837a:	49 89 f4             	mov    %rsi,%r12
   1837d:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18382:	c7 87 a0 6e 00 00 07 	movl   $0x7,0x6ea0(%rdi)
   18389:	00 00 00 
   1838c:	e9 6b f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   18391:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18396:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1839b:	49 89 f4             	mov    %rsi,%r12
   1839e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   183a3:	c7 87 a0 6e 00 00 08 	movl   $0x8,0x6ea0(%rdi)
   183aa:	00 00 00 
   183ad:	e9 4a f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   183b2:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   183b7:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   183bc:	49 89 f4             	mov    %rsi,%r12
   183bf:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   183c4:	c7 87 a0 6e 00 00 04 	movl   $0x4,0x6ea0(%rdi)
   183cb:	00 00 00 
   183ce:	e9 29 f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   183d3:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   183d8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   183dd:	49 89 f4             	mov    %rsi,%r12
   183e0:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   183e5:	c7 87 a0 6e 00 00 3b 	movl   $0x3b,0x6ea0(%rdi)
   183ec:	00 00 00 
   183ef:	e9 08 f0 ff ff       	jmp    173fc <lzma_decode+0x244c>
   183f4:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   183f9:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   183fe:	49 89 f4             	mov    %rsi,%r12
   18401:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18406:	c7 87 a0 6e 00 00 05 	movl   $0x5,0x6ea0(%rdi)
   1840d:	00 00 00 
   18410:	e9 e7 ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   18415:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1841a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1841f:	49 89 f4             	mov    %rsi,%r12
   18422:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18427:	c7 87 a0 6e 00 00 11 	movl   $0x11,0x6ea0(%rdi)
   1842e:	00 00 00 
   18431:	e9 c6 ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   18436:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1843b:	c7 87 a0 6e 00 00 10 	movl   $0x10,0x6ea0(%rdi)
   18442:	00 00 00 
   18445:	e9 b2 ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   1844a:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1844f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18454:	49 89 f4             	mov    %rsi,%r12
   18457:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1845c:	c7 87 a0 6e 00 00 06 	movl   $0x6,0x6ea0(%rdi)
   18463:	00 00 00 
   18466:	e9 91 ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   1846b:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18470:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18475:	49 89 f4             	mov    %rsi,%r12
   18478:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1847d:	c7 87 a0 6e 00 00 09 	movl   $0x9,0x6ea0(%rdi)
   18484:	00 00 00 
   18487:	e9 70 ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   1848c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18491:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18496:	49 89 f4             	mov    %rsi,%r12
   18499:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1849e:	c7 87 a0 6e 00 00 02 	movl   $0x2,0x6ea0(%rdi)
   184a5:	00 00 00 
   184a8:	e9 4f ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   184ad:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   184b2:	c7 87 a0 6e 00 00 0d 	movl   $0xd,0x6ea0(%rdi)
   184b9:	00 00 00 
   184bc:	e9 3b ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   184c1:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   184c6:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   184cb:	49 89 f4             	mov    %rsi,%r12
   184ce:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   184d3:	c7 87 a0 6e 00 00 03 	movl   $0x3,0x6ea0(%rdi)
   184da:	00 00 00 
   184dd:	e9 1a ef ff ff       	jmp    173fc <lzma_decode+0x244c>
   184e2:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   184e7:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   184ec:	49 89 f4             	mov    %rsi,%r12
   184ef:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   184f4:	c7 87 a0 6e 00 00 16 	movl   $0x16,0x6ea0(%rdi)
   184fb:	00 00 00 
   184fe:	e9 f9 ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   18503:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18508:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1850d:	49 89 f4             	mov    %rsi,%r12
   18510:	c7 87 a0 6e 00 00 0a 	movl   $0xa,0x6ea0(%rdi)
   18517:	00 00 00 
   1851a:	e9 dd ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   1851f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18524:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18529:	49 89 f4             	mov    %rsi,%r12
   1852c:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18531:	c7 87 a0 6e 00 00 3f 	movl   $0x3f,0x6ea0(%rdi)
   18538:	00 00 00 
   1853b:	e9 bc ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   18540:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18545:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1854a:	49 89 f4             	mov    %rsi,%r12
   1854d:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18552:	c7 87 a0 6e 00 00 28 	movl   $0x28,0x6ea0(%rdi)
   18559:	00 00 00 
   1855c:	e9 9b ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   18561:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18566:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1856b:	49 89 f4             	mov    %rsi,%r12
   1856e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18573:	c7 87 a0 6e 00 00 15 	movl   $0x15,0x6ea0(%rdi)
   1857a:	00 00 00 
   1857d:	e9 7a ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   18582:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18587:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1858c:	49 89 f4             	mov    %rsi,%r12
   1858f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18594:	c7 87 a0 6e 00 00 26 	movl   $0x26,0x6ea0(%rdi)
   1859b:	00 00 00 
   1859e:	e9 59 ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   185a3:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   185a8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   185ad:	49 89 f4             	mov    %rsi,%r12
   185b0:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   185b5:	c7 87 a0 6e 00 00 19 	movl   $0x19,0x6ea0(%rdi)
   185bc:	00 00 00 
   185bf:	e9 38 ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   185c4:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   185c9:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   185ce:	49 89 f4             	mov    %rsi,%r12
   185d1:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   185d6:	c7 87 a0 6e 00 00 14 	movl   $0x14,0x6ea0(%rdi)
   185dd:	00 00 00 
   185e0:	e9 17 ee ff ff       	jmp    173fc <lzma_decode+0x244c>
   185e5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   185ea:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   185ef:	49 89 f4             	mov    %rsi,%r12
   185f2:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   185f7:	c7 87 a0 6e 00 00 2e 	movl   $0x2e,0x6ea0(%rdi)
   185fe:	00 00 00 
   18601:	e9 f6 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   18606:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1860b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18610:	49 89 f4             	mov    %rsi,%r12
   18613:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18618:	c7 87 a0 6e 00 00 17 	movl   $0x17,0x6ea0(%rdi)
   1861f:	00 00 00 
   18622:	e9 d5 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   18627:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1862c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18631:	49 89 f4             	mov    %rsi,%r12
   18634:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18639:	c7 87 a0 6e 00 00 29 	movl   $0x29,0x6ea0(%rdi)
   18640:	00 00 00 
   18643:	e9 b4 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   18648:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1864d:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18652:	49 89 f4             	mov    %rsi,%r12
   18655:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1865a:	c7 87 a0 6e 00 00 31 	movl   $0x31,0x6ea0(%rdi)
   18661:	00 00 00 
   18664:	e9 93 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   18669:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1866e:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18673:	49 89 f4             	mov    %rsi,%r12
   18676:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1867b:	c7 87 a0 6e 00 00 39 	movl   $0x39,0x6ea0(%rdi)
   18682:	00 00 00 
   18685:	e9 72 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   1868a:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1868f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18694:	49 89 f4             	mov    %rsi,%r12
   18697:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1869c:	c7 87 a0 6e 00 00 23 	movl   $0x23,0x6ea0(%rdi)
   186a3:	00 00 00 
   186a6:	e9 51 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   186ab:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   186b0:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   186b5:	49 89 f4             	mov    %rsi,%r12
   186b8:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   186bd:	c7 87 a0 6e 00 00 1b 	movl   $0x1b,0x6ea0(%rdi)
   186c4:	00 00 00 
   186c7:	e9 30 ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   186cc:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   186d1:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   186d6:	49 89 f4             	mov    %rsi,%r12
   186d9:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   186de:	c7 87 a0 6e 00 00 45 	movl   $0x45,0x6ea0(%rdi)
   186e5:	00 00 00 
   186e8:	e9 0f ed ff ff       	jmp    173fc <lzma_decode+0x244c>
   186ed:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   186f2:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   186f7:	49 89 f4             	mov    %rsi,%r12
   186fa:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   186ff:	c7 87 a0 6e 00 00 37 	movl   $0x37,0x6ea0(%rdi)
   18706:	00 00 00 
   18709:	e9 ee ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   1870e:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18713:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18718:	49 89 f4             	mov    %rsi,%r12
   1871b:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18720:	c7 87 a0 6e 00 00 22 	movl   $0x22,0x6ea0(%rdi)
   18727:	00 00 00 
   1872a:	e9 cd ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   1872f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18734:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18739:	49 89 f4             	mov    %rsi,%r12
   1873c:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18741:	c7 87 a0 6e 00 00 1e 	movl   $0x1e,0x6ea0(%rdi)
   18748:	00 00 00 
   1874b:	e9 ac ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   18750:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18755:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1875a:	49 89 f4             	mov    %rsi,%r12
   1875d:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18762:	c7 87 a0 6e 00 00 1c 	movl   $0x1c,0x6ea0(%rdi)
   18769:	00 00 00 
   1876c:	e9 8b ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   18771:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18776:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1877b:	49 89 f4             	mov    %rsi,%r12
   1877e:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18783:	c7 87 a0 6e 00 00 1f 	movl   $0x1f,0x6ea0(%rdi)
   1878a:	00 00 00 
   1878d:	e9 6a ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   18792:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18797:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1879c:	49 89 f4             	mov    %rsi,%r12
   1879f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   187a4:	c7 87 a0 6e 00 00 3e 	movl   $0x3e,0x6ea0(%rdi)
   187ab:	00 00 00 
   187ae:	e9 49 ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   187b3:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   187b8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   187bd:	49 89 f4             	mov    %rsi,%r12
   187c0:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   187c5:	c7 87 a0 6e 00 00 34 	movl   $0x34,0x6ea0(%rdi)
   187cc:	00 00 00 
   187cf:	e9 28 ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   187d4:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   187d9:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   187de:	49 89 f4             	mov    %rsi,%r12
   187e1:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   187e6:	c7 87 a0 6e 00 00 44 	movl   $0x44,0x6ea0(%rdi)
   187ed:	00 00 00 
   187f0:	e9 07 ec ff ff       	jmp    173fc <lzma_decode+0x244c>
   187f5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   187fa:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   187ff:	49 89 f4             	mov    %rsi,%r12
   18802:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18807:	c7 87 a0 6e 00 00 42 	movl   $0x42,0x6ea0(%rdi)
   1880e:	00 00 00 
   18811:	e9 e6 eb ff ff       	jmp    173fc <lzma_decode+0x244c>
   18816:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1881b:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18820:	49 89 f4             	mov    %rsi,%r12
   18823:	b8 09 00 00 00       	mov    $0x9,%eax
   18828:	31 c9                	xor    %ecx,%ecx
   1882a:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1882f:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   18833:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
   18837:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1883c:	44 89 cd             	mov    %r9d,%ebp
   1883f:	31 d2                	xor    %edx,%edx
   18841:	31 c9                	xor    %ecx,%ecx
   18843:	44 89 d3             	mov    %r10d,%ebx
   18846:	45 89 df             	mov    %r11d,%r15d
   18849:	e9 b8 eb ff ff       	jmp    17406 <lzma_decode+0x2456>
   1884e:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   18853:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18858:	49 89 f4             	mov    %rsi,%r12
   1885b:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18860:	c7 87 a0 6e 00 00 01 	movl   $0x1,0x6ea0(%rdi)
   18867:	00 00 00 
   1886a:	e9 8d eb ff ff       	jmp    173fc <lzma_decode+0x244c>
   1886f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18874:	49 89 f4             	mov    %rsi,%r12
   18877:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1887c:	c7 87 a0 6e 00 00 2a 	movl   $0x2a,0x6ea0(%rdi)
   18883:	00 00 00 
   18886:	31 c9                	xor    %ecx,%ecx
   18888:	b2 01                	mov    $0x1,%dl
   1888a:	b8 01 00 00 00       	mov    $0x1,%eax
   1888f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18894:	e9 67 eb ff ff       	jmp    17400 <lzma_decode+0x2450>
   18899:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1889e:	49 89 f4             	mov    %rsi,%r12
   188a1:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   188a6:	c7 87 a0 6e 00 00 2a 	movl   $0x2a,0x6ea0(%rdi)
   188ad:	00 00 00 
   188b0:	31 c9                	xor    %ecx,%ecx
   188b2:	b2 01                	mov    $0x1,%dl
   188b4:	b8 02 00 00 00       	mov    $0x2,%eax
   188b9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   188be:	e9 3d eb ff ff       	jmp    17400 <lzma_decode+0x2450>
   188c3:	c1 e3 08             	shl    $0x8,%ebx
   188c6:	41 c1 e7 08          	shl    $0x8,%r15d
   188ca:	46 0f b6 0c 32       	movzbl (%rdx,%r14,1),%r9d
   188cf:	49 ff c6             	inc    %r14
   188d2:	45 09 f9             	or     %r15d,%r9d
   188d5:	31 d2                	xor    %edx,%edx
   188d7:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   188dc:	45 89 cf             	mov    %r9d,%r15d
   188df:	e9 52 f7 ff ff       	jmp    18036 <lzma_decode+0x3086>
   188e4:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   188e9:	49 89 f4             	mov    %rsi,%r12
   188ec:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   188f1:	c7 87 a0 6e 00 00 2a 	movl   $0x2a,0x6ea0(%rdi)
   188f8:	00 00 00 
   188fb:	31 c9                	xor    %ecx,%ecx
   188fd:	b2 01                	mov    $0x1,%dl
   188ff:	b8 03 00 00 00       	mov    $0x3,%eax
   18904:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18909:	e9 f2 ea ff ff       	jmp    17400 <lzma_decode+0x2450>
   1890e:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   18913:	49 89 f4             	mov    %rsi,%r12
   18916:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1891b:	c7 87 a0 6e 00 00 2a 	movl   $0x2a,0x6ea0(%rdi)
   18922:	00 00 00 
   18925:	31 c9                	xor    %ecx,%ecx
   18927:	b2 01                	mov    $0x1,%dl
   18929:	b8 04 00 00 00       	mov    $0x4,%eax
   1892e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18933:	e9 c8 ea ff ff       	jmp    17400 <lzma_decode+0x2450>
   18938:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1893d:	49 89 f4             	mov    %rsi,%r12
   18940:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   18945:	c7 87 a0 6e 00 00 2a 	movl   $0x2a,0x6ea0(%rdi)
   1894c:	00 00 00 
   1894f:	31 c9                	xor    %ecx,%ecx
   18951:	b2 01                	mov    $0x1,%dl
   18953:	b8 05 00 00 00       	mov    $0x5,%eax
   18958:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1895d:	e9 9e ea ff ff       	jmp    17400 <lzma_decode+0x2450>
   18962:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   18969:	1f 84 00 00 00 00 00 

0000000000018970 <lzma_decoder_reset>:
   18970:	0f b6 4e 1c          	movzbl 0x1c(%rsi),%ecx
   18974:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18979:	d3 e0                	shl    %cl,%eax
   1897b:	f7 d0                	not    %eax
   1897d:	89 87 8c 6e 00 00    	mov    %eax,0x6e8c(%rdi)
   18983:	8b 4e 18             	mov    0x18(%rsi),%ecx
   18986:	03 4e 14             	add    0x14(%rsi),%ecx
   18989:	b8 01 00 00 00       	mov    $0x1,%eax
   1898e:	0f 28 05 4b f7 00 00 	movaps 0xf74b(%rip),%xmm0        # 280e0 <SHA256_K+0x180>
   18995:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1899c:	00 00 00 00 
   189a0:	8d 50 ff             	lea    -0x1(%rax),%edx
   189a3:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
   189a7:	48 c1 e2 09          	shl    $0x9,%rdx
   189ab:	0f 11 04 17          	movups %xmm0,(%rdi,%rdx,1)
   189af:	0f 11 44 17 10       	movups %xmm0,0x10(%rdi,%rdx,1)
   189b4:	0f 11 44 17 20       	movups %xmm0,0x20(%rdi,%rdx,1)
   189b9:	0f 11 44 17 30       	movups %xmm0,0x30(%rdi,%rdx,1)
   189be:	0f 11 44 17 40       	movups %xmm0,0x40(%rdi,%rdx,1)
   189c3:	0f 11 44 17 50       	movups %xmm0,0x50(%rdi,%rdx,1)
   189c8:	0f 11 44 17 60       	movups %xmm0,0x60(%rdi,%rdx,1)
   189cd:	0f 11 44 17 70       	movups %xmm0,0x70(%rdi,%rdx,1)
   189d2:	0f 11 84 17 80 00 00 	movups %xmm0,0x80(%rdi,%rdx,1)
   189d9:	00 
   189da:	0f 11 84 17 90 00 00 	movups %xmm0,0x90(%rdi,%rdx,1)
   189e1:	00 
   189e2:	0f 11 84 17 a0 00 00 	movups %xmm0,0xa0(%rdi,%rdx,1)
   189e9:	00 
   189ea:	0f 11 84 17 b0 00 00 	movups %xmm0,0xb0(%rdi,%rdx,1)
   189f1:	00 
   189f2:	0f 11 84 17 c0 00 00 	movups %xmm0,0xc0(%rdi,%rdx,1)
   189f9:	00 
   189fa:	0f 11 84 17 d0 00 00 	movups %xmm0,0xd0(%rdi,%rdx,1)
   18a01:	00 
   18a02:	0f 11 84 17 e0 00 00 	movups %xmm0,0xe0(%rdi,%rdx,1)
   18a09:	00 
   18a0a:	0f 11 84 17 f0 00 00 	movups %xmm0,0xf0(%rdi,%rdx,1)
   18a11:	00 
   18a12:	0f 11 84 17 00 01 00 	movups %xmm0,0x100(%rdi,%rdx,1)
   18a19:	00 
   18a1a:	0f 11 84 17 10 01 00 	movups %xmm0,0x110(%rdi,%rdx,1)
   18a21:	00 
   18a22:	0f 11 84 17 20 01 00 	movups %xmm0,0x120(%rdi,%rdx,1)
   18a29:	00 
   18a2a:	0f 11 84 17 30 01 00 	movups %xmm0,0x130(%rdi,%rdx,1)
   18a31:	00 
   18a32:	0f 11 84 17 40 01 00 	movups %xmm0,0x140(%rdi,%rdx,1)
   18a39:	00 
   18a3a:	0f 11 84 17 50 01 00 	movups %xmm0,0x150(%rdi,%rdx,1)
   18a41:	00 
   18a42:	0f 11 84 17 60 01 00 	movups %xmm0,0x160(%rdi,%rdx,1)
   18a49:	00 
   18a4a:	0f 11 84 17 70 01 00 	movups %xmm0,0x170(%rdi,%rdx,1)
   18a51:	00 
   18a52:	0f 11 84 17 80 01 00 	movups %xmm0,0x180(%rdi,%rdx,1)
   18a59:	00 
   18a5a:	0f 11 84 17 90 01 00 	movups %xmm0,0x190(%rdi,%rdx,1)
   18a61:	00 
   18a62:	0f 11 84 17 a0 01 00 	movups %xmm0,0x1a0(%rdi,%rdx,1)
   18a69:	00 
   18a6a:	0f 11 84 17 b0 01 00 	movups %xmm0,0x1b0(%rdi,%rdx,1)
   18a71:	00 
   18a72:	0f 11 84 17 c0 01 00 	movups %xmm0,0x1c0(%rdi,%rdx,1)
   18a79:	00 
   18a7a:	0f 11 84 17 d0 01 00 	movups %xmm0,0x1d0(%rdi,%rdx,1)
   18a81:	00 
   18a82:	0f 11 84 17 e0 01 00 	movups %xmm0,0x1e0(%rdi,%rdx,1)
   18a89:	00 
   18a8a:	0f 11 84 17 f0 01 00 	movups %xmm0,0x1f0(%rdi,%rdx,1)
   18a91:	00 
   18a92:	0f 11 84 17 00 02 00 	movups %xmm0,0x200(%rdi,%rdx,1)
   18a99:	00 
   18a9a:	0f 11 84 17 10 02 00 	movups %xmm0,0x210(%rdi,%rdx,1)
   18aa1:	00 
   18aa2:	0f 11 84 17 20 02 00 	movups %xmm0,0x220(%rdi,%rdx,1)
   18aa9:	00 
   18aaa:	0f 11 84 17 30 02 00 	movups %xmm0,0x230(%rdi,%rdx,1)
   18ab1:	00 
   18ab2:	0f 11 84 17 40 02 00 	movups %xmm0,0x240(%rdi,%rdx,1)
   18ab9:	00 
   18aba:	0f 11 84 17 50 02 00 	movups %xmm0,0x250(%rdi,%rdx,1)
   18ac1:	00 
   18ac2:	0f 11 84 17 60 02 00 	movups %xmm0,0x260(%rdi,%rdx,1)
   18ac9:	00 
   18aca:	0f 11 84 17 70 02 00 	movups %xmm0,0x270(%rdi,%rdx,1)
   18ad1:	00 
   18ad2:	0f 11 84 17 80 02 00 	movups %xmm0,0x280(%rdi,%rdx,1)
   18ad9:	00 
   18ada:	0f 11 84 17 90 02 00 	movups %xmm0,0x290(%rdi,%rdx,1)
   18ae1:	00 
   18ae2:	0f 11 84 17 a0 02 00 	movups %xmm0,0x2a0(%rdi,%rdx,1)
   18ae9:	00 
   18aea:	0f 11 84 17 b0 02 00 	movups %xmm0,0x2b0(%rdi,%rdx,1)
   18af1:	00 
   18af2:	0f 11 84 17 c0 02 00 	movups %xmm0,0x2c0(%rdi,%rdx,1)
   18af9:	00 
   18afa:	0f 11 84 17 d0 02 00 	movups %xmm0,0x2d0(%rdi,%rdx,1)
   18b01:	00 
   18b02:	0f 11 84 17 e0 02 00 	movups %xmm0,0x2e0(%rdi,%rdx,1)
   18b09:	00 
   18b0a:	0f 11 84 17 f0 02 00 	movups %xmm0,0x2f0(%rdi,%rdx,1)
   18b11:	00 
   18b12:	0f 11 84 17 00 03 00 	movups %xmm0,0x300(%rdi,%rdx,1)
   18b19:	00 
   18b1a:	0f 11 84 17 10 03 00 	movups %xmm0,0x310(%rdi,%rdx,1)
   18b21:	00 
   18b22:	0f 11 84 17 20 03 00 	movups %xmm0,0x320(%rdi,%rdx,1)
   18b29:	00 
   18b2a:	0f 11 84 17 30 03 00 	movups %xmm0,0x330(%rdi,%rdx,1)
   18b31:	00 
   18b32:	0f 11 84 17 40 03 00 	movups %xmm0,0x340(%rdi,%rdx,1)
   18b39:	00 
   18b3a:	0f 11 84 17 50 03 00 	movups %xmm0,0x350(%rdi,%rdx,1)
   18b41:	00 
   18b42:	0f 11 84 17 60 03 00 	movups %xmm0,0x360(%rdi,%rdx,1)
   18b49:	00 
   18b4a:	0f 11 84 17 70 03 00 	movups %xmm0,0x370(%rdi,%rdx,1)
   18b51:	00 
   18b52:	0f 11 84 17 80 03 00 	movups %xmm0,0x380(%rdi,%rdx,1)
   18b59:	00 
   18b5a:	0f 11 84 17 90 03 00 	movups %xmm0,0x390(%rdi,%rdx,1)
   18b61:	00 
   18b62:	0f 11 84 17 a0 03 00 	movups %xmm0,0x3a0(%rdi,%rdx,1)
   18b69:	00 
   18b6a:	0f 11 84 17 b0 03 00 	movups %xmm0,0x3b0(%rdi,%rdx,1)
   18b71:	00 
   18b72:	0f 11 84 17 c0 03 00 	movups %xmm0,0x3c0(%rdi,%rdx,1)
   18b79:	00 
   18b7a:	0f 11 84 17 d0 03 00 	movups %xmm0,0x3d0(%rdi,%rdx,1)
   18b81:	00 
   18b82:	0f 11 84 17 e0 03 00 	movups %xmm0,0x3e0(%rdi,%rdx,1)
   18b89:	00 
   18b8a:	0f 11 84 17 f0 03 00 	movups %xmm0,0x3f0(%rdi,%rdx,1)
   18b91:	00 
   18b92:	0f 11 84 17 00 04 00 	movups %xmm0,0x400(%rdi,%rdx,1)
   18b99:	00 
   18b9a:	0f 11 84 17 10 04 00 	movups %xmm0,0x410(%rdi,%rdx,1)
   18ba1:	00 
   18ba2:	0f 11 84 17 20 04 00 	movups %xmm0,0x420(%rdi,%rdx,1)
   18ba9:	00 
   18baa:	0f 11 84 17 30 04 00 	movups %xmm0,0x430(%rdi,%rdx,1)
   18bb1:	00 
   18bb2:	0f 11 84 17 40 04 00 	movups %xmm0,0x440(%rdi,%rdx,1)
   18bb9:	00 
   18bba:	0f 11 84 17 50 04 00 	movups %xmm0,0x450(%rdi,%rdx,1)
   18bc1:	00 
   18bc2:	0f 11 84 17 60 04 00 	movups %xmm0,0x460(%rdi,%rdx,1)
   18bc9:	00 
   18bca:	0f 11 84 17 70 04 00 	movups %xmm0,0x470(%rdi,%rdx,1)
   18bd1:	00 
   18bd2:	0f 11 84 17 80 04 00 	movups %xmm0,0x480(%rdi,%rdx,1)
   18bd9:	00 
   18bda:	0f 11 84 17 90 04 00 	movups %xmm0,0x490(%rdi,%rdx,1)
   18be1:	00 
   18be2:	0f 11 84 17 a0 04 00 	movups %xmm0,0x4a0(%rdi,%rdx,1)
   18be9:	00 
   18bea:	0f 11 84 17 b0 04 00 	movups %xmm0,0x4b0(%rdi,%rdx,1)
   18bf1:	00 
   18bf2:	0f 11 84 17 c0 04 00 	movups %xmm0,0x4c0(%rdi,%rdx,1)
   18bf9:	00 
   18bfa:	0f 11 84 17 d0 04 00 	movups %xmm0,0x4d0(%rdi,%rdx,1)
   18c01:	00 
   18c02:	0f 11 84 17 e0 04 00 	movups %xmm0,0x4e0(%rdi,%rdx,1)
   18c09:	00 
   18c0a:	0f 11 84 17 f0 04 00 	movups %xmm0,0x4f0(%rdi,%rdx,1)
   18c11:	00 
   18c12:	0f 11 84 17 00 05 00 	movups %xmm0,0x500(%rdi,%rdx,1)
   18c19:	00 
   18c1a:	0f 11 84 17 10 05 00 	movups %xmm0,0x510(%rdi,%rdx,1)
   18c21:	00 
   18c22:	0f 11 84 17 20 05 00 	movups %xmm0,0x520(%rdi,%rdx,1)
   18c29:	00 
   18c2a:	0f 11 84 17 30 05 00 	movups %xmm0,0x530(%rdi,%rdx,1)
   18c31:	00 
   18c32:	0f 11 84 17 40 05 00 	movups %xmm0,0x540(%rdi,%rdx,1)
   18c39:	00 
   18c3a:	0f 11 84 17 50 05 00 	movups %xmm0,0x550(%rdi,%rdx,1)
   18c41:	00 
   18c42:	0f 11 84 17 60 05 00 	movups %xmm0,0x560(%rdi,%rdx,1)
   18c49:	00 
   18c4a:	0f 11 84 17 70 05 00 	movups %xmm0,0x570(%rdi,%rdx,1)
   18c51:	00 
   18c52:	0f 11 84 17 80 05 00 	movups %xmm0,0x580(%rdi,%rdx,1)
   18c59:	00 
   18c5a:	0f 11 84 17 90 05 00 	movups %xmm0,0x590(%rdi,%rdx,1)
   18c61:	00 
   18c62:	0f 11 84 17 a0 05 00 	movups %xmm0,0x5a0(%rdi,%rdx,1)
   18c69:	00 
   18c6a:	0f 11 84 17 b0 05 00 	movups %xmm0,0x5b0(%rdi,%rdx,1)
   18c71:	00 
   18c72:	0f 11 84 17 c0 05 00 	movups %xmm0,0x5c0(%rdi,%rdx,1)
   18c79:	00 
   18c7a:	0f 11 84 17 d0 05 00 	movups %xmm0,0x5d0(%rdi,%rdx,1)
   18c81:	00 
   18c82:	41 89 c0             	mov    %eax,%r8d
   18c85:	41 d3 e8             	shr    %cl,%r8d
   18c88:	0f 11 84 17 e0 05 00 	movups %xmm0,0x5e0(%rdi,%rdx,1)
   18c8f:	00 
   18c90:	0f 11 84 17 f0 05 00 	movups %xmm0,0x5f0(%rdi,%rdx,1)
   18c97:	00 
   18c98:	ff c0                	inc    %eax
   18c9a:	45 85 c0             	test   %r8d,%r8d
   18c9d:	0f 84 fd fc ff ff    	je     189a0 <lzma_decoder_reset+0x30>
   18ca3:	8b 46 14             	mov    0x14(%rsi),%eax
   18ca6:	89 87 90 6e 00 00    	mov    %eax,0x6e90(%rdi)
   18cac:	0f b6 4e 18          	movzbl 0x18(%rsi),%ecx
   18cb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18cb5:	d3 e0                	shl    %cl,%eax
   18cb7:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   18cbc:	f7 d0                	not    %eax
   18cbe:	89 87 94 6e 00 00    	mov    %eax,0x6e94(%rdi)
   18cc4:	0f 57 c9             	xorps  %xmm1,%xmm1
   18cc7:	0f 11 8f 78 6e 00 00 	movups %xmm1,0x6e78(%rdi)
   18cce:	c7 87 88 6e 00 00 00 	movl   $0x0,0x6e88(%rdi)
   18cd5:	00 00 00 
   18cd8:	0f b6 4e 1c          	movzbl 0x1c(%rsi),%ecx
   18cdc:	d3 e2                	shl    %cl,%edx
   18cde:	f7 d2                	not    %edx
   18ce0:	89 97 8c 6e 00 00    	mov    %edx,0x6e8c(%rdi)
   18ce6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18ceb:	48 89 87 6c 6e 00 00 	mov    %rax,0x6e6c(%rdi)
   18cf2:	c7 87 74 6e 00 00 05 	movl   $0x5,0x6e74(%rdi)
   18cf9:	00 00 00 
   18cfc:	31 c0                	xor    %eax,%eax
   18cfe:	66 90                	xchg   %ax,%ax
   18d00:	89 c1                	mov    %eax,%ecx
   18d02:	66 c7 84 4f 00 60 00 	movw   $0x400,0x6000(%rdi,%rcx,2)
   18d09:	00 00 04 
   18d0c:	66 c7 84 4f e0 61 00 	movw   $0x400,0x61e0(%rdi,%rcx,2)
   18d13:	00 00 04 
   18d16:	ff c0                	inc    %eax
   18d18:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18d1e:	76 e0                	jbe    18d00 <lzma_decoder_reset+0x390>
   18d20:	66 c7 87 80 61 00 00 	movw   $0x400,0x6180(%rdi)
   18d27:	00 04 
   18d29:	66 c7 87 98 61 00 00 	movw   $0x400,0x6198(%rdi)
   18d30:	00 04 
   18d32:	66 c7 87 b0 61 00 00 	movw   $0x400,0x61b0(%rdi)
   18d39:	00 04 
   18d3b:	66 c7 87 c8 61 00 00 	movw   $0x400,0x61c8(%rdi)
   18d42:	00 04 
   18d44:	31 c0                	xor    %eax,%eax
   18d46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18d4d:	00 00 00 
   18d50:	89 c1                	mov    %eax,%ecx
   18d52:	66 c7 84 4f 20 60 00 	movw   $0x400,0x6020(%rdi,%rcx,2)
   18d59:	00 00 04 
   18d5c:	66 c7 84 4f 00 62 00 	movw   $0x400,0x6200(%rdi,%rcx,2)
   18d63:	00 00 04 
   18d66:	ff c0                	inc    %eax
   18d68:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18d6e:	76 e0                	jbe    18d50 <lzma_decoder_reset+0x3e0>
   18d70:	66 c7 87 82 61 00 00 	movw   $0x400,0x6182(%rdi)
   18d77:	00 04 
   18d79:	66 c7 87 9a 61 00 00 	movw   $0x400,0x619a(%rdi)
   18d80:	00 04 
   18d82:	66 c7 87 b2 61 00 00 	movw   $0x400,0x61b2(%rdi)
   18d89:	00 04 
   18d8b:	66 c7 87 ca 61 00 00 	movw   $0x400,0x61ca(%rdi)
   18d92:	00 04 
   18d94:	31 c0                	xor    %eax,%eax
   18d96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18d9d:	00 00 00 
   18da0:	89 c1                	mov    %eax,%ecx
   18da2:	66 c7 84 4f 40 60 00 	movw   $0x400,0x6040(%rdi,%rcx,2)
   18da9:	00 00 04 
   18dac:	66 c7 84 4f 20 62 00 	movw   $0x400,0x6220(%rdi,%rcx,2)
   18db3:	00 00 04 
   18db6:	ff c0                	inc    %eax
   18db8:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18dbe:	76 e0                	jbe    18da0 <lzma_decoder_reset+0x430>
   18dc0:	66 c7 87 84 61 00 00 	movw   $0x400,0x6184(%rdi)
   18dc7:	00 04 
   18dc9:	66 c7 87 9c 61 00 00 	movw   $0x400,0x619c(%rdi)
   18dd0:	00 04 
   18dd2:	66 c7 87 b4 61 00 00 	movw   $0x400,0x61b4(%rdi)
   18dd9:	00 04 
   18ddb:	66 c7 87 cc 61 00 00 	movw   $0x400,0x61cc(%rdi)
   18de2:	00 04 
   18de4:	31 c0                	xor    %eax,%eax
   18de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18ded:	00 00 00 
   18df0:	89 c1                	mov    %eax,%ecx
   18df2:	66 c7 84 4f 60 60 00 	movw   $0x400,0x6060(%rdi,%rcx,2)
   18df9:	00 00 04 
   18dfc:	66 c7 84 4f 40 62 00 	movw   $0x400,0x6240(%rdi,%rcx,2)
   18e03:	00 00 04 
   18e06:	ff c0                	inc    %eax
   18e08:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18e0e:	76 e0                	jbe    18df0 <lzma_decoder_reset+0x480>
   18e10:	66 c7 87 86 61 00 00 	movw   $0x400,0x6186(%rdi)
   18e17:	00 04 
   18e19:	66 c7 87 9e 61 00 00 	movw   $0x400,0x619e(%rdi)
   18e20:	00 04 
   18e22:	66 c7 87 b6 61 00 00 	movw   $0x400,0x61b6(%rdi)
   18e29:	00 04 
   18e2b:	66 c7 87 ce 61 00 00 	movw   $0x400,0x61ce(%rdi)
   18e32:	00 04 
   18e34:	31 c0                	xor    %eax,%eax
   18e36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18e3d:	00 00 00 
   18e40:	89 c1                	mov    %eax,%ecx
   18e42:	66 c7 84 4f 80 60 00 	movw   $0x400,0x6080(%rdi,%rcx,2)
   18e49:	00 00 04 
   18e4c:	66 c7 84 4f 60 62 00 	movw   $0x400,0x6260(%rdi,%rcx,2)
   18e53:	00 00 04 
   18e56:	ff c0                	inc    %eax
   18e58:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18e5e:	76 e0                	jbe    18e40 <lzma_decoder_reset+0x4d0>
   18e60:	66 c7 87 88 61 00 00 	movw   $0x400,0x6188(%rdi)
   18e67:	00 04 
   18e69:	66 c7 87 a0 61 00 00 	movw   $0x400,0x61a0(%rdi)
   18e70:	00 04 
   18e72:	66 c7 87 b8 61 00 00 	movw   $0x400,0x61b8(%rdi)
   18e79:	00 04 
   18e7b:	66 c7 87 d0 61 00 00 	movw   $0x400,0x61d0(%rdi)
   18e82:	00 04 
   18e84:	31 c0                	xor    %eax,%eax
   18e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18e8d:	00 00 00 
   18e90:	89 c1                	mov    %eax,%ecx
   18e92:	66 c7 84 4f a0 60 00 	movw   $0x400,0x60a0(%rdi,%rcx,2)
   18e99:	00 00 04 
   18e9c:	66 c7 84 4f 80 62 00 	movw   $0x400,0x6280(%rdi,%rcx,2)
   18ea3:	00 00 04 
   18ea6:	ff c0                	inc    %eax
   18ea8:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18eae:	76 e0                	jbe    18e90 <lzma_decoder_reset+0x520>
   18eb0:	66 c7 87 8a 61 00 00 	movw   $0x400,0x618a(%rdi)
   18eb7:	00 04 
   18eb9:	66 c7 87 a2 61 00 00 	movw   $0x400,0x61a2(%rdi)
   18ec0:	00 04 
   18ec2:	66 c7 87 ba 61 00 00 	movw   $0x400,0x61ba(%rdi)
   18ec9:	00 04 
   18ecb:	66 c7 87 d2 61 00 00 	movw   $0x400,0x61d2(%rdi)
   18ed2:	00 04 
   18ed4:	31 c0                	xor    %eax,%eax
   18ed6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18edd:	00 00 00 
   18ee0:	89 c1                	mov    %eax,%ecx
   18ee2:	66 c7 84 4f c0 60 00 	movw   $0x400,0x60c0(%rdi,%rcx,2)
   18ee9:	00 00 04 
   18eec:	66 c7 84 4f a0 62 00 	movw   $0x400,0x62a0(%rdi,%rcx,2)
   18ef3:	00 00 04 
   18ef6:	ff c0                	inc    %eax
   18ef8:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18efe:	76 e0                	jbe    18ee0 <lzma_decoder_reset+0x570>
   18f00:	66 c7 87 8c 61 00 00 	movw   $0x400,0x618c(%rdi)
   18f07:	00 04 
   18f09:	66 c7 87 a4 61 00 00 	movw   $0x400,0x61a4(%rdi)
   18f10:	00 04 
   18f12:	66 c7 87 bc 61 00 00 	movw   $0x400,0x61bc(%rdi)
   18f19:	00 04 
   18f1b:	66 c7 87 d4 61 00 00 	movw   $0x400,0x61d4(%rdi)
   18f22:	00 04 
   18f24:	31 c0                	xor    %eax,%eax
   18f26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18f2d:	00 00 00 
   18f30:	89 c1                	mov    %eax,%ecx
   18f32:	66 c7 84 4f e0 60 00 	movw   $0x400,0x60e0(%rdi,%rcx,2)
   18f39:	00 00 04 
   18f3c:	66 c7 84 4f c0 62 00 	movw   $0x400,0x62c0(%rdi,%rcx,2)
   18f43:	00 00 04 
   18f46:	ff c0                	inc    %eax
   18f48:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18f4e:	76 e0                	jbe    18f30 <lzma_decoder_reset+0x5c0>
   18f50:	66 c7 87 8e 61 00 00 	movw   $0x400,0x618e(%rdi)
   18f57:	00 04 
   18f59:	66 c7 87 a6 61 00 00 	movw   $0x400,0x61a6(%rdi)
   18f60:	00 04 
   18f62:	66 c7 87 be 61 00 00 	movw   $0x400,0x61be(%rdi)
   18f69:	00 04 
   18f6b:	66 c7 87 d6 61 00 00 	movw   $0x400,0x61d6(%rdi)
   18f72:	00 04 
   18f74:	31 c0                	xor    %eax,%eax
   18f76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18f7d:	00 00 00 
   18f80:	89 c1                	mov    %eax,%ecx
   18f82:	66 c7 84 4f 00 61 00 	movw   $0x400,0x6100(%rdi,%rcx,2)
   18f89:	00 00 04 
   18f8c:	66 c7 84 4f e0 62 00 	movw   $0x400,0x62e0(%rdi,%rcx,2)
   18f93:	00 00 04 
   18f96:	ff c0                	inc    %eax
   18f98:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18f9e:	76 e0                	jbe    18f80 <lzma_decoder_reset+0x610>
   18fa0:	66 c7 87 90 61 00 00 	movw   $0x400,0x6190(%rdi)
   18fa7:	00 04 
   18fa9:	66 c7 87 a8 61 00 00 	movw   $0x400,0x61a8(%rdi)
   18fb0:	00 04 
   18fb2:	66 c7 87 c0 61 00 00 	movw   $0x400,0x61c0(%rdi)
   18fb9:	00 04 
   18fbb:	66 c7 87 d8 61 00 00 	movw   $0x400,0x61d8(%rdi)
   18fc2:	00 04 
   18fc4:	31 c0                	xor    %eax,%eax
   18fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18fcd:	00 00 00 
   18fd0:	89 c1                	mov    %eax,%ecx
   18fd2:	66 c7 84 4f 20 61 00 	movw   $0x400,0x6120(%rdi,%rcx,2)
   18fd9:	00 00 04 
   18fdc:	66 c7 84 4f 00 63 00 	movw   $0x400,0x6300(%rdi,%rcx,2)
   18fe3:	00 00 04 
   18fe6:	ff c0                	inc    %eax
   18fe8:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   18fee:	76 e0                	jbe    18fd0 <lzma_decoder_reset+0x660>
   18ff0:	66 c7 87 92 61 00 00 	movw   $0x400,0x6192(%rdi)
   18ff7:	00 04 
   18ff9:	66 c7 87 aa 61 00 00 	movw   $0x400,0x61aa(%rdi)
   19000:	00 04 
   19002:	66 c7 87 c2 61 00 00 	movw   $0x400,0x61c2(%rdi)
   19009:	00 04 
   1900b:	66 c7 87 da 61 00 00 	movw   $0x400,0x61da(%rdi)
   19012:	00 04 
   19014:	31 c0                	xor    %eax,%eax
   19016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1901d:	00 00 00 
   19020:	89 c1                	mov    %eax,%ecx
   19022:	66 c7 84 4f 40 61 00 	movw   $0x400,0x6140(%rdi,%rcx,2)
   19029:	00 00 04 
   1902c:	66 c7 84 4f 20 63 00 	movw   $0x400,0x6320(%rdi,%rcx,2)
   19033:	00 00 04 
   19036:	ff c0                	inc    %eax
   19038:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   1903e:	76 e0                	jbe    19020 <lzma_decoder_reset+0x6b0>
   19040:	66 c7 87 94 61 00 00 	movw   $0x400,0x6194(%rdi)
   19047:	00 04 
   19049:	66 c7 87 ac 61 00 00 	movw   $0x400,0x61ac(%rdi)
   19050:	00 04 
   19052:	66 c7 87 c4 61 00 00 	movw   $0x400,0x61c4(%rdi)
   19059:	00 04 
   1905b:	66 c7 87 dc 61 00 00 	movw   $0x400,0x61dc(%rdi)
   19062:	00 04 
   19064:	31 c0                	xor    %eax,%eax
   19066:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1906d:	00 00 00 
   19070:	89 c1                	mov    %eax,%ecx
   19072:	66 c7 84 4f 60 61 00 	movw   $0x400,0x6160(%rdi,%rcx,2)
   19079:	00 00 04 
   1907c:	66 c7 84 4f 40 63 00 	movw   $0x400,0x6340(%rdi,%rcx,2)
   19083:	00 00 04 
   19086:	ff c0                	inc    %eax
   19088:	3b 87 8c 6e 00 00    	cmp    0x6e8c(%rdi),%eax
   1908e:	76 e0                	jbe    19070 <lzma_decoder_reset+0x700>
   19090:	66 c7 87 96 61 00 00 	movw   $0x400,0x6196(%rdi)
   19097:	00 04 
   19099:	66 c7 87 ae 61 00 00 	movw   $0x400,0x61ae(%rdi)
   190a0:	00 04 
   190a2:	66 c7 87 c6 61 00 00 	movw   $0x400,0x61c6(%rdi)
   190a9:	00 04 
   190ab:	66 c7 87 de 61 00 00 	movw   $0x400,0x61de(%rdi)
   190b2:	00 04 
   190b4:	0f 11 87 60 63 00 00 	movups %xmm0,0x6360(%rdi)
   190bb:	0f 11 87 70 63 00 00 	movups %xmm0,0x6370(%rdi)
   190c2:	0f 11 87 80 63 00 00 	movups %xmm0,0x6380(%rdi)
   190c9:	0f 11 87 90 63 00 00 	movups %xmm0,0x6390(%rdi)
   190d0:	0f 11 87 a0 63 00 00 	movups %xmm0,0x63a0(%rdi)
   190d7:	0f 11 87 b0 63 00 00 	movups %xmm0,0x63b0(%rdi)
   190de:	0f 11 87 c0 63 00 00 	movups %xmm0,0x63c0(%rdi)
   190e5:	0f 11 87 d0 63 00 00 	movups %xmm0,0x63d0(%rdi)
   190ec:	0f 11 87 e0 63 00 00 	movups %xmm0,0x63e0(%rdi)
   190f3:	0f 11 87 f0 63 00 00 	movups %xmm0,0x63f0(%rdi)
   190fa:	0f 11 87 00 64 00 00 	movups %xmm0,0x6400(%rdi)
   19101:	0f 11 87 10 64 00 00 	movups %xmm0,0x6410(%rdi)
   19108:	0f 11 87 20 64 00 00 	movups %xmm0,0x6420(%rdi)
   1910f:	0f 11 87 30 64 00 00 	movups %xmm0,0x6430(%rdi)
   19116:	0f 11 87 40 64 00 00 	movups %xmm0,0x6440(%rdi)
   1911d:	0f 11 87 50 64 00 00 	movups %xmm0,0x6450(%rdi)
   19124:	0f 11 87 60 64 00 00 	movups %xmm0,0x6460(%rdi)
   1912b:	0f 11 87 70 64 00 00 	movups %xmm0,0x6470(%rdi)
   19132:	0f 11 87 80 64 00 00 	movups %xmm0,0x6480(%rdi)
   19139:	0f 11 87 90 64 00 00 	movups %xmm0,0x6490(%rdi)
   19140:	0f 11 87 a0 64 00 00 	movups %xmm0,0x64a0(%rdi)
   19147:	0f 11 87 b0 64 00 00 	movups %xmm0,0x64b0(%rdi)
   1914e:	0f 11 87 c0 64 00 00 	movups %xmm0,0x64c0(%rdi)
   19155:	0f 11 87 d0 64 00 00 	movups %xmm0,0x64d0(%rdi)
   1915c:	0f 11 87 e0 64 00 00 	movups %xmm0,0x64e0(%rdi)
   19163:	0f 11 87 f0 64 00 00 	movups %xmm0,0x64f0(%rdi)
   1916a:	0f 11 87 00 65 00 00 	movups %xmm0,0x6500(%rdi)
   19171:	0f 11 87 10 65 00 00 	movups %xmm0,0x6510(%rdi)
   19178:	0f 11 87 20 65 00 00 	movups %xmm0,0x6520(%rdi)
   1917f:	0f 11 87 30 65 00 00 	movups %xmm0,0x6530(%rdi)
   19186:	0f 11 87 40 65 00 00 	movups %xmm0,0x6540(%rdi)
   1918d:	0f 11 87 50 65 00 00 	movups %xmm0,0x6550(%rdi)
   19194:	0f 11 87 60 65 00 00 	movups %xmm0,0x6560(%rdi)
   1919b:	0f 11 87 70 65 00 00 	movups %xmm0,0x6570(%rdi)
   191a2:	0f 11 87 80 65 00 00 	movups %xmm0,0x6580(%rdi)
   191a9:	0f 11 87 90 65 00 00 	movups %xmm0,0x6590(%rdi)
   191b0:	0f 11 87 a0 65 00 00 	movups %xmm0,0x65a0(%rdi)
   191b7:	0f 11 87 b0 65 00 00 	movups %xmm0,0x65b0(%rdi)
   191be:	0f 11 87 c0 65 00 00 	movups %xmm0,0x65c0(%rdi)
   191c5:	0f 11 87 d0 65 00 00 	movups %xmm0,0x65d0(%rdi)
   191cc:	0f 11 87 e0 65 00 00 	movups %xmm0,0x65e0(%rdi)
   191d3:	0f 11 87 f0 65 00 00 	movups %xmm0,0x65f0(%rdi)
   191da:	0f 11 87 00 66 00 00 	movups %xmm0,0x6600(%rdi)
   191e1:	0f 11 87 10 66 00 00 	movups %xmm0,0x6610(%rdi)
   191e8:	0f 11 87 20 66 00 00 	movups %xmm0,0x6620(%rdi)
   191ef:	0f 11 87 30 66 00 00 	movups %xmm0,0x6630(%rdi)
   191f6:	c7 87 40 66 00 00 00 	movl   $0x4000400,0x6640(%rdi)
   191fd:	04 00 04 
   19200:	0f 11 87 44 66 00 00 	movups %xmm0,0x6644(%rdi)
   19207:	0f 11 87 54 66 00 00 	movups %xmm0,0x6654(%rdi)
   1920e:	8b 4e 1c             	mov    0x1c(%rsi),%ecx
   19211:	c7 87 64 66 00 00 00 	movl   $0x4000400,0x6664(%rdi)
   19218:	04 00 04 
   1921b:	c7 87 68 6a 00 00 00 	movl   $0x4000400,0x6a68(%rdi)
   19222:	04 00 04 
   19225:	b8 01 00 00 00       	mov    $0x1,%eax
   1922a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19230:	8d 50 ff             	lea    -0x1(%rax),%edx
   19233:	48 c1 e2 04          	shl    $0x4,%rdx
   19237:	0f 11 84 17 68 66 00 	movups %xmm0,0x6668(%rdi,%rdx,1)
   1923e:	00 
   1923f:	0f 11 84 17 68 67 00 	movups %xmm0,0x6768(%rdi,%rdx,1)
   19246:	00 
   19247:	89 c6                	mov    %eax,%esi
   19249:	d3 ee                	shr    %cl,%esi
   1924b:	0f 11 84 17 6c 6a 00 	movups %xmm0,0x6a6c(%rdi,%rdx,1)
   19252:	00 
   19253:	0f 11 84 17 6c 6b 00 	movups %xmm0,0x6b6c(%rdi,%rdx,1)
   1925a:	00 
   1925b:	ff c0                	inc    %eax
   1925d:	85 f6                	test   %esi,%esi
   1925f:	74 cf                	je     19230 <lzma_decoder_reset+0x8c0>
   19261:	0f 11 87 68 68 00 00 	movups %xmm0,0x6868(%rdi)
   19268:	0f 11 87 78 68 00 00 	movups %xmm0,0x6878(%rdi)
   1926f:	0f 11 87 88 68 00 00 	movups %xmm0,0x6888(%rdi)
   19276:	0f 11 87 98 68 00 00 	movups %xmm0,0x6898(%rdi)
   1927d:	0f 11 87 a8 68 00 00 	movups %xmm0,0x68a8(%rdi)
   19284:	0f 11 87 b8 68 00 00 	movups %xmm0,0x68b8(%rdi)
   1928b:	0f 11 87 c8 68 00 00 	movups %xmm0,0x68c8(%rdi)
   19292:	0f 11 87 d8 68 00 00 	movups %xmm0,0x68d8(%rdi)
   19299:	0f 11 87 e8 68 00 00 	movups %xmm0,0x68e8(%rdi)
   192a0:	0f 11 87 f8 68 00 00 	movups %xmm0,0x68f8(%rdi)
   192a7:	0f 11 87 08 69 00 00 	movups %xmm0,0x6908(%rdi)
   192ae:	0f 11 87 18 69 00 00 	movups %xmm0,0x6918(%rdi)
   192b5:	0f 11 87 28 69 00 00 	movups %xmm0,0x6928(%rdi)
   192bc:	0f 11 87 38 69 00 00 	movups %xmm0,0x6938(%rdi)
   192c3:	0f 11 87 48 69 00 00 	movups %xmm0,0x6948(%rdi)
   192ca:	0f 11 87 58 69 00 00 	movups %xmm0,0x6958(%rdi)
   192d1:	0f 11 87 68 69 00 00 	movups %xmm0,0x6968(%rdi)
   192d8:	0f 11 87 78 69 00 00 	movups %xmm0,0x6978(%rdi)
   192df:	0f 11 87 88 69 00 00 	movups %xmm0,0x6988(%rdi)
   192e6:	0f 11 87 98 69 00 00 	movups %xmm0,0x6998(%rdi)
   192ed:	0f 11 87 a8 69 00 00 	movups %xmm0,0x69a8(%rdi)
   192f4:	0f 11 87 b8 69 00 00 	movups %xmm0,0x69b8(%rdi)
   192fb:	0f 11 87 c8 69 00 00 	movups %xmm0,0x69c8(%rdi)
   19302:	0f 11 87 d8 69 00 00 	movups %xmm0,0x69d8(%rdi)
   19309:	0f 11 87 e8 69 00 00 	movups %xmm0,0x69e8(%rdi)
   19310:	0f 11 87 f8 69 00 00 	movups %xmm0,0x69f8(%rdi)
   19317:	0f 11 87 08 6a 00 00 	movups %xmm0,0x6a08(%rdi)
   1931e:	0f 11 87 18 6a 00 00 	movups %xmm0,0x6a18(%rdi)
   19325:	0f 11 87 28 6a 00 00 	movups %xmm0,0x6a28(%rdi)
   1932c:	0f 11 87 38 6a 00 00 	movups %xmm0,0x6a38(%rdi)
   19333:	0f 11 87 48 6a 00 00 	movups %xmm0,0x6a48(%rdi)
   1933a:	0f 11 87 58 6a 00 00 	movups %xmm0,0x6a58(%rdi)
   19341:	0f 11 87 6c 6c 00 00 	movups %xmm0,0x6c6c(%rdi)
   19348:	0f 11 87 7c 6c 00 00 	movups %xmm0,0x6c7c(%rdi)
   1934f:	0f 11 87 8c 6c 00 00 	movups %xmm0,0x6c8c(%rdi)
   19356:	0f 11 87 9c 6c 00 00 	movups %xmm0,0x6c9c(%rdi)
   1935d:	0f 11 87 ac 6c 00 00 	movups %xmm0,0x6cac(%rdi)
   19364:	0f 11 87 bc 6c 00 00 	movups %xmm0,0x6cbc(%rdi)
   1936b:	0f 11 87 cc 6c 00 00 	movups %xmm0,0x6ccc(%rdi)
   19372:	0f 11 87 dc 6c 00 00 	movups %xmm0,0x6cdc(%rdi)
   19379:	0f 11 87 ec 6c 00 00 	movups %xmm0,0x6cec(%rdi)
   19380:	0f 11 87 fc 6c 00 00 	movups %xmm0,0x6cfc(%rdi)
   19387:	0f 11 87 0c 6d 00 00 	movups %xmm0,0x6d0c(%rdi)
   1938e:	0f 11 87 1c 6d 00 00 	movups %xmm0,0x6d1c(%rdi)
   19395:	0f 11 87 2c 6d 00 00 	movups %xmm0,0x6d2c(%rdi)
   1939c:	0f 11 87 3c 6d 00 00 	movups %xmm0,0x6d3c(%rdi)
   193a3:	0f 11 87 4c 6d 00 00 	movups %xmm0,0x6d4c(%rdi)
   193aa:	0f 11 87 5c 6d 00 00 	movups %xmm0,0x6d5c(%rdi)
   193b1:	0f 11 87 6c 6d 00 00 	movups %xmm0,0x6d6c(%rdi)
   193b8:	0f 11 87 7c 6d 00 00 	movups %xmm0,0x6d7c(%rdi)
   193bf:	0f 11 87 8c 6d 00 00 	movups %xmm0,0x6d8c(%rdi)
   193c6:	0f 11 87 9c 6d 00 00 	movups %xmm0,0x6d9c(%rdi)
   193cd:	0f 11 87 ac 6d 00 00 	movups %xmm0,0x6dac(%rdi)
   193d4:	0f 11 87 bc 6d 00 00 	movups %xmm0,0x6dbc(%rdi)
   193db:	0f 11 87 cc 6d 00 00 	movups %xmm0,0x6dcc(%rdi)
   193e2:	0f 11 87 dc 6d 00 00 	movups %xmm0,0x6ddc(%rdi)
   193e9:	0f 11 87 ec 6d 00 00 	movups %xmm0,0x6dec(%rdi)
   193f0:	0f 11 87 fc 6d 00 00 	movups %xmm0,0x6dfc(%rdi)
   193f7:	0f 11 87 0c 6e 00 00 	movups %xmm0,0x6e0c(%rdi)
   193fe:	0f 11 87 1c 6e 00 00 	movups %xmm0,0x6e1c(%rdi)
   19405:	0f 11 87 2c 6e 00 00 	movups %xmm0,0x6e2c(%rdi)
   1940c:	0f 11 87 3c 6e 00 00 	movups %xmm0,0x6e3c(%rdi)
   19413:	0f 11 87 4c 6e 00 00 	movups %xmm0,0x6e4c(%rdi)
   1941a:	0f 11 87 5c 6e 00 00 	movups %xmm0,0x6e5c(%rdi)
   19421:	c7 87 a0 6e 00 00 01 	movl   $0x1,0x6ea0(%rdi)
   19428:	00 00 00 
   1942b:	0f 57 c0             	xorps  %xmm0,%xmm0
   1942e:	0f 11 87 a8 6e 00 00 	movups %xmm0,0x6ea8(%rdi)
   19435:	48 c7 87 b8 6e 00 00 	movq   $0x0,0x6eb8(%rdi)
   1943c:	00 00 00 00 
   19440:	c3                   	ret    
   19441:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   19448:	0f 1f 84 00 00 00 00 
   1944f:	00 

0000000000019450 <lzma_decoder_uncompressed>:
   19450:	48 89 b7 98 6e 00 00 	mov    %rsi,0x6e98(%rdi)
   19457:	c3                   	ret    
   19458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1945f:	00 

0000000000019460 <lzma_lzma_decoder_init>:
   19460:	48 8d 0d 09 00 00 00 	lea    0x9(%rip),%rcx        # 19470 <lzma_decoder_init>
   19467:	e9 a4 56 ff ff       	jmp    eb10 <lzma_lz_decoder_init>
   1946c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019470 <lzma_decoder_init>:
   19470:	44 8b 42 14          	mov    0x14(%rdx),%r8d
   19474:	b8 0b 00 00 00       	mov    $0xb,%eax
   19479:	41 83 f8 04          	cmp    $0x4,%r8d
   1947d:	0f 87 af 00 00 00    	ja     19532 <lzma_decoder_init+0xc2>
   19483:	44 8b 4a 18          	mov    0x18(%rdx),%r9d
   19487:	41 83 f9 04          	cmp    $0x4,%r9d
   1948b:	0f 87 a1 00 00 00    	ja     19532 <lzma_decoder_init+0xc2>
   19491:	45 01 c1             	add    %r8d,%r9d
   19494:	41 83 f9 04          	cmp    $0x4,%r9d
   19498:	0f 87 94 00 00 00    	ja     19532 <lzma_decoder_init+0xc2>
   1949e:	83 7a 1c 04          	cmpl   $0x4,0x1c(%rdx)
   194a2:	0f 87 8a 00 00 00    	ja     19532 <lzma_decoder_init+0xc2>
   194a8:	41 57                	push   %r15
   194aa:	41 56                	push   %r14
   194ac:	53                   	push   %rbx
   194ad:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   194b1:	75 45                	jne    194f8 <lzma_decoder_init+0x88>
   194b3:	48 89 cb             	mov    %rcx,%rbx
   194b6:	49 89 d6             	mov    %rdx,%r14
   194b9:	49 89 ff             	mov    %rdi,%r15
   194bc:	bf c0 6e 00 00       	mov    $0x6ec0,%edi
   194c1:	e8 fa 99 fe ff       	call   2ec0 <lzma_alloc>
   194c6:	49 89 07             	mov    %rax,(%r15)
   194c9:	48 85 c0             	test   %rax,%rax
   194cc:	74 65                	je     19533 <lzma_decoder_init+0xc3>
   194ce:	4c 89 ff             	mov    %r15,%rdi
   194d1:	48 8d 05 d8 ba ff ff 	lea    -0x4528(%rip),%rax        # 14fb0 <lzma_decode>
   194d8:	49 89 47 08          	mov    %rax,0x8(%r15)
   194dc:	48 8d 05 8d f4 ff ff 	lea    -0xb73(%rip),%rax        # 18970 <lzma_decoder_reset>
   194e3:	49 89 47 10          	mov    %rax,0x10(%r15)
   194e7:	48 8d 05 62 ff ff ff 	lea    -0x9e(%rip),%rax        # 19450 <lzma_decoder_uncompressed>
   194ee:	49 89 47 18          	mov    %rax,0x18(%r15)
   194f2:	4c 89 f2             	mov    %r14,%rdx
   194f5:	48 89 d9             	mov    %rbx,%rcx
   194f8:	8b 02                	mov    (%rdx),%eax
   194fa:	48 89 01             	mov    %rax,(%rcx)
   194fd:	48 8b 42 08          	mov    0x8(%rdx),%rax
   19501:	48 89 41 08          	mov    %rax,0x8(%rcx)
   19505:	8b 42 10             	mov    0x10(%rdx),%eax
   19508:	48 89 41 10          	mov    %rax,0x10(%rcx)
   1950c:	48 8b 07             	mov    (%rdi),%rax
   1950f:	48 89 fb             	mov    %rdi,%rbx
   19512:	48 89 c7             	mov    %rax,%rdi
   19515:	48 89 d6             	mov    %rdx,%rsi
   19518:	e8 53 f4 ff ff       	call   18970 <lzma_decoder_reset>
   1951d:	48 8b 03             	mov    (%rbx),%rax
   19520:	48 c7 80 98 6e 00 00 	movq   $0xffffffffffffffff,0x6e98(%rax)
   19527:	ff ff ff ff 
   1952b:	31 c0                	xor    %eax,%eax
   1952d:	5b                   	pop    %rbx
   1952e:	41 5e                	pop    %r14
   19530:	41 5f                	pop    %r15
   19532:	c3                   	ret    
   19533:	b8 05 00 00 00       	mov    $0x5,%eax
   19538:	eb f3                	jmp    1952d <lzma_decoder_init+0xbd>
   1953a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000019540 <lzma_lzma_lclppb_decode>:
   19540:	b0 01                	mov    $0x1,%al
   19542:	40 80 fe e0          	cmp    $0xe0,%sil
   19546:	77 3d                	ja     19585 <lzma_lzma_lclppb_decode+0x45>
   19548:	40 0f b6 c6          	movzbl %sil,%eax
   1954c:	6b c0 6d             	imul   $0x6d,%eax,%eax
   1954f:	c1 e8 08             	shr    $0x8,%eax
   19552:	89 f1                	mov    %esi,%ecx
   19554:	28 c1                	sub    %al,%cl
   19556:	d0 e9                	shr    %cl
   19558:	00 c1                	add    %al,%cl
   1955a:	c0 e9 05             	shr    $0x5,%cl
   1955d:	0f b6 c1             	movzbl %cl,%eax
   19560:	89 47 1c             	mov    %eax,0x1c(%rdi)
   19563:	6b c0 d3             	imul   $0xffffffd3,%eax,%eax
   19566:	40 00 f0             	add    %sil,%al
   19569:	0f b6 c0             	movzbl %al,%eax
   1956c:	6b c8 39             	imul   $0x39,%eax,%ecx
   1956f:	c1 e9 09             	shr    $0x9,%ecx
   19572:	89 4f 18             	mov    %ecx,0x18(%rdi)
   19575:	8d 14 c9             	lea    (%rcx,%rcx,8),%edx
   19578:	29 d0                	sub    %edx,%eax
   1957a:	89 47 14             	mov    %eax,0x14(%rdi)
   1957d:	01 c8                	add    %ecx,%eax
   1957f:	83 f8 05             	cmp    $0x5,%eax
   19582:	0f 93 c0             	setae  %al
   19585:	c3                   	ret    
   19586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1958d:	00 00 00 

0000000000019590 <lzma_lzma_decoder_memusage_nocheck>:
   19590:	50                   	push   %rax
   19591:	8b 3f                	mov    (%rdi),%edi
   19593:	e8 78 5b ff ff       	call   f110 <lzma_lz_decoder_memusage>
   19598:	48 05 c0 6e 00 00    	add    $0x6ec0,%rax
   1959e:	59                   	pop    %rcx
   1959f:	c3                   	ret    

00000000000195a0 <lzma_lzma_decoder_memusage>:
   195a0:	8b 4f 14             	mov    0x14(%rdi),%ecx
   195a3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   195aa:	83 f9 04             	cmp    $0x4,%ecx
   195ad:	77 27                	ja     195d6 <lzma_lzma_decoder_memusage+0x36>
   195af:	8b 57 18             	mov    0x18(%rdi),%edx
   195b2:	83 fa 04             	cmp    $0x4,%edx
   195b5:	77 1f                	ja     195d6 <lzma_lzma_decoder_memusage+0x36>
   195b7:	01 ca                	add    %ecx,%edx
   195b9:	83 fa 04             	cmp    $0x4,%edx
   195bc:	77 18                	ja     195d6 <lzma_lzma_decoder_memusage+0x36>
   195be:	83 7f 1c 04          	cmpl   $0x4,0x1c(%rdi)
   195c2:	77 12                	ja     195d6 <lzma_lzma_decoder_memusage+0x36>
   195c4:	50                   	push   %rax
   195c5:	8b 3f                	mov    (%rdi),%edi
   195c7:	e8 44 5b ff ff       	call   f110 <lzma_lz_decoder_memusage>
   195cc:	48 05 c0 6e 00 00    	add    $0x6ec0,%rax
   195d2:	48 83 c4 08          	add    $0x8,%rsp
   195d6:	c3                   	ret    
   195d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   195de:	00 00 

00000000000195e0 <lzma_lzma_props_decode>:
   195e0:	b8 08 00 00 00       	mov    $0x8,%eax
   195e5:	48 83 f9 05          	cmp    $0x5,%rcx
   195e9:	0f 85 9b 00 00 00    	jne    1968a <lzma_lzma_props_decode+0xaa>
   195ef:	41 57                	push   %r15
   195f1:	41 56                	push   %r14
   195f3:	53                   	push   %rbx
   195f4:	48 89 d3             	mov    %rdx,%rbx
   195f7:	49 89 ff             	mov    %rdi,%r15
   195fa:	bf 70 00 00 00       	mov    $0x70,%edi
   195ff:	49 89 f6             	mov    %rsi,%r14
   19602:	e8 b9 98 fe ff       	call   2ec0 <lzma_alloc>
   19607:	48 85 c0             	test   %rax,%rax
   1960a:	74 59                	je     19665 <lzma_lzma_props_decode+0x85>
   1960c:	0f b6 0b             	movzbl (%rbx),%ecx
   1960f:	80 f9 e0             	cmp    $0xe0,%cl
   19612:	77 3f                	ja     19653 <lzma_lzma_props_decode+0x73>
   19614:	0f b6 d1             	movzbl %cl,%edx
   19617:	6b d2 6d             	imul   $0x6d,%edx,%edx
   1961a:	c1 ea 08             	shr    $0x8,%edx
   1961d:	89 ce                	mov    %ecx,%esi
   1961f:	40 28 d6             	sub    %dl,%sil
   19622:	40 d0 ee             	shr    %sil
   19625:	40 00 d6             	add    %dl,%sil
   19628:	40 c0 ee 05          	shr    $0x5,%sil
   1962c:	40 0f b6 d6          	movzbl %sil,%edx
   19630:	89 50 1c             	mov    %edx,0x1c(%rax)
   19633:	6b d2 d3             	imul   $0xffffffd3,%edx,%edx
   19636:	00 ca                	add    %cl,%dl
   19638:	0f b6 ca             	movzbl %dl,%ecx
   1963b:	6b d1 39             	imul   $0x39,%ecx,%edx
   1963e:	c1 ea 09             	shr    $0x9,%edx
   19641:	89 50 18             	mov    %edx,0x18(%rax)
   19644:	8d 34 d2             	lea    (%rdx,%rdx,8),%esi
   19647:	29 f1                	sub    %esi,%ecx
   19649:	89 48 14             	mov    %ecx,0x14(%rax)
   1964c:	01 d1                	add    %edx,%ecx
   1964e:	83 f9 04             	cmp    $0x4,%ecx
   19651:	76 19                	jbe    1966c <lzma_lzma_props_decode+0x8c>
   19653:	48 89 c7             	mov    %rax,%rdi
   19656:	4c 89 f6             	mov    %r14,%rsi
   19659:	e8 92 98 fe ff       	call   2ef0 <lzma_free>
   1965e:	b8 08 00 00 00       	mov    $0x8,%eax
   19663:	eb 20                	jmp    19685 <lzma_lzma_props_decode+0xa5>
   19665:	b8 05 00 00 00       	mov    $0x5,%eax
   1966a:	eb 19                	jmp    19685 <lzma_lzma_props_decode+0xa5>
   1966c:	8b 4b 01             	mov    0x1(%rbx),%ecx
   1966f:	89 08                	mov    %ecx,(%rax)
   19671:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19678:	00 
   19679:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   19680:	49 89 07             	mov    %rax,(%r15)
   19683:	31 c0                	xor    %eax,%eax
   19685:	5b                   	pop    %rbx
   19686:	41 5e                	pop    %r14
   19688:	41 5f                	pop    %r15
   1968a:	c3                   	ret    
   1968b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019690 <lzma_lzma2_encoder_init>:
   19690:	48 8d 0d 09 00 00 00 	lea    0x9(%rip),%rcx        # 196a0 <lzma2_encoder_init>
   19697:	e9 b4 2a ff ff       	jmp    c150 <lzma_lz_encoder_init>
   1969c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000196a0 <lzma2_encoder_init>:
   196a0:	48 85 d2             	test   %rdx,%rdx
   196a3:	0f 84 d3 00 00 00    	je     1977c <lzma2_encoder_init+0xdc>
   196a9:	41 57                	push   %r15
   196ab:	41 56                	push   %r14
   196ad:	41 54                	push   %r12
   196af:	53                   	push   %rbx
   196b0:	50                   	push   %rax
   196b1:	48 89 cb             	mov    %rcx,%rbx
   196b4:	48 8b 07             	mov    (%rdi),%rax
   196b7:	48 85 c0             	test   %rax,%rax
   196ba:	75 59                	jne    19715 <lzma2_encoder_init+0x75>
   196bc:	49 89 d6             	mov    %rdx,%r14
   196bf:	49 89 fc             	mov    %rdi,%r12
   196c2:	bf a8 00 01 00       	mov    $0x100a8,%edi
   196c7:	49 89 f7             	mov    %rsi,%r15
   196ca:	e8 f1 97 fe ff       	call   2ec0 <lzma_alloc>
   196cf:	49 89 04 24          	mov    %rax,(%r12)
   196d3:	48 85 c0             	test   %rax,%rax
   196d6:	0f 84 e7 00 00 00    	je     197c3 <lzma2_encoder_init+0x123>
   196dc:	4c 89 e7             	mov    %r12,%rdi
   196df:	48 8d 0d ba 01 00 00 	lea    0x1ba(%rip),%rcx        # 198a0 <lzma2_encode>
   196e6:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
   196eb:	48 8d 0d 7e 05 00 00 	lea    0x57e(%rip),%rcx        # 19c70 <lzma2_encoder_end>
   196f2:	49 89 4c 24 10       	mov    %rcx,0x10(%r12)
   196f7:	48 8d 0d a2 05 00 00 	lea    0x5a2(%rip),%rcx        # 19ca0 <lzma2_encoder_options_update>
   196fe:	49 89 4c 24 18       	mov    %rcx,0x18(%r12)
   19703:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1970a:	00 
   1970b:	49 8b 04 24          	mov    (%r12),%rax
   1970f:	4c 89 fe             	mov    %r15,%rsi
   19712:	4c 89 f2             	mov    %r14,%rdx
   19715:	0f 10 42 60          	movups 0x60(%rdx),%xmm0
   19719:	0f 11 40 70          	movups %xmm0,0x70(%rax)
   1971d:	0f 10 42 50          	movups 0x50(%rdx),%xmm0
   19721:	0f 11 40 60          	movups %xmm0,0x60(%rax)
   19725:	0f 10 42 40          	movups 0x40(%rdx),%xmm0
   19729:	0f 11 40 50          	movups %xmm0,0x50(%rax)
   1972d:	0f 10 02             	movups (%rdx),%xmm0
   19730:	0f 10 4a 10          	movups 0x10(%rdx),%xmm1
   19734:	0f 10 52 20          	movups 0x20(%rdx),%xmm2
   19738:	0f 10 5a 30          	movups 0x30(%rdx),%xmm3
   1973c:	0f 11 58 40          	movups %xmm3,0x40(%rax)
   19740:	0f 11 50 30          	movups %xmm2,0x30(%rax)
   19744:	0f 11 48 20          	movups %xmm1,0x20(%rax)
   19748:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   1974c:	48 8b 07             	mov    (%rdi),%rax
   1974f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   19755:	48 8b 07             	mov    (%rdi),%rax
   19758:	c6 80 80 00 00 00 01 	movb   $0x1,0x80(%rax)
   1975f:	48 8b 07             	mov    (%rdi),%rax
   19762:	c6 80 81 00 00 00 00 	movb   $0x0,0x81(%rax)
   19769:	48 8b 07             	mov    (%rdi),%rax
   1976c:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
   19771:	74 0f                	je     19782 <lzma2_encoder_init+0xe2>
   19773:	83 78 20 00          	cmpl   $0x0,0x20(%rax)
   19777:	0f 94 c1             	sete   %cl
   1977a:	eb 08                	jmp    19784 <lzma2_encoder_init+0xe4>
   1977c:	b8 0b 00 00 00       	mov    $0xb,%eax
   19781:	c3                   	ret    
   19782:	b1 01                	mov    $0x1,%cl
   19784:	88 88 82 00 00 00    	mov    %cl,0x82(%rax)
   1978a:	48 8b 17             	mov    (%rdi),%rdx
   1978d:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
   19791:	48 83 c2 10          	add    $0x10,%rdx
   19795:	48 89 d9             	mov    %rbx,%rcx
   19798:	e8 a3 74 ff ff       	call   10c40 <lzma_lzma_encoder_create>
   1979d:	85 c0                	test   %eax,%eax
   1979f:	75 27                	jne    197c8 <lzma2_encoder_init+0x128>
   197a1:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   197a5:	48 8b 13             	mov    (%rbx),%rdx
   197a8:	48 01 ca             	add    %rcx,%rdx
   197ab:	31 c0                	xor    %eax,%eax
   197ad:	48 81 fa ff ff 00 00 	cmp    $0xffff,%rdx
   197b4:	77 12                	ja     197c8 <lzma2_encoder_init+0x128>
   197b6:	ba 00 00 01 00       	mov    $0x10000,%edx
   197bb:	48 29 ca             	sub    %rcx,%rdx
   197be:	48 89 13             	mov    %rdx,(%rbx)
   197c1:	eb 05                	jmp    197c8 <lzma2_encoder_init+0x128>
   197c3:	b8 05 00 00 00       	mov    $0x5,%eax
   197c8:	48 83 c4 08          	add    $0x8,%rsp
   197cc:	5b                   	pop    %rbx
   197cd:	41 5c                	pop    %r12
   197cf:	41 5e                	pop    %r14
   197d1:	41 5f                	pop    %r15
   197d3:	c3                   	ret    
   197d4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   197db:	00 00 00 00 00 

00000000000197e0 <lzma_lzma2_encoder_memusage>:
   197e0:	50                   	push   %rax
   197e1:	e8 8a 75 ff ff       	call   10d70 <lzma_lzma_encoder_memusage>
   197e6:	48 8d 88 a8 00 01 00 	lea    0x100a8(%rax),%rcx
   197ed:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   197f1:	48 0f 45 c1          	cmovne %rcx,%rax
   197f5:	59                   	pop    %rcx
   197f6:	c3                   	ret    
   197f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   197fe:	00 00 

0000000000019800 <lzma_lzma2_props_encode>:
   19800:	8b 07                	mov    (%rdi),%eax
   19802:	8d 48 ff             	lea    -0x1(%rax),%ecx
   19805:	3d 01 10 00 00       	cmp    $0x1001,%eax
   1980a:	b8 ff 0f 00 00       	mov    $0xfff,%eax
   1980f:	0f 43 c1             	cmovae %ecx,%eax
   19812:	89 c1                	mov    %eax,%ecx
   19814:	c1 e9 02             	shr    $0x2,%ecx
   19817:	09 c1                	or     %eax,%ecx
   19819:	89 c8                	mov    %ecx,%eax
   1981b:	c1 e8 03             	shr    $0x3,%eax
   1981e:	09 c8                	or     %ecx,%eax
   19820:	89 c1                	mov    %eax,%ecx
   19822:	c1 e9 04             	shr    $0x4,%ecx
   19825:	09 c1                	or     %eax,%ecx
   19827:	89 c8                	mov    %ecx,%eax
   19829:	c1 e8 08             	shr    $0x8,%eax
   1982c:	09 c8                	or     %ecx,%eax
   1982e:	89 c1                	mov    %eax,%ecx
   19830:	c1 e9 10             	shr    $0x10,%ecx
   19833:	09 c1                	or     %eax,%ecx
   19835:	83 f9 ff             	cmp    $0xffffffff,%ecx
   19838:	74 1f                	je     19859 <lzma_lzma2_props_encode+0x59>
   1983a:	89 c8                	mov    %ecx,%eax
   1983c:	48 ff c0             	inc    %rax
   1983f:	81 f9 fe 1f 00 00    	cmp    $0x1ffe,%ecx
   19845:	77 19                	ja     19860 <lzma_lzma2_props_encode+0x60>
   19847:	48 8d 0d b2 e8 00 00 	lea    0xe8b2(%rip),%rcx        # 28100 <lzma_fastpos>
   1984e:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
   19852:	04 e8                	add    $0xe8,%al
   19854:	88 06                	mov    %al,(%rsi)
   19856:	31 c0                	xor    %eax,%eax
   19858:	c3                   	ret    
   19859:	b0 28                	mov    $0x28,%al
   1985b:	88 06                	mov    %al,(%rsi)
   1985d:	31 c0                	xor    %eax,%eax
   1985f:	c3                   	ret    
   19860:	81 f9 fe ff ff 01    	cmp    $0x1fffffe,%ecx
   19866:	77 17                	ja     1987f <lzma_lzma2_props_encode+0x7f>
   19868:	c1 e8 0c             	shr    $0xc,%eax
   1986b:	48 8d 0d 8e e8 00 00 	lea    0xe88e(%rip),%rcx        # 28100 <lzma_fastpos>
   19872:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
   19876:	04 18                	add    $0x18,%al
   19878:	04 e8                	add    $0xe8,%al
   1987a:	88 06                	mov    %al,(%rsi)
   1987c:	31 c0                	xor    %eax,%eax
   1987e:	c3                   	ret    
   1987f:	c1 e8 18             	shr    $0x18,%eax
   19882:	48 8d 0d 77 e8 00 00 	lea    0xe877(%rip),%rcx        # 28100 <lzma_fastpos>
   19889:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
   1988d:	04 30                	add    $0x30,%al
   1988f:	04 e8                	add    $0xe8,%al
   19891:	88 06                	mov    %al,(%rsi)
   19893:	31 c0                	xor    %eax,%eax
   19895:	c3                   	ret    
   19896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1989d:	00 00 00 

00000000000198a0 <lzma2_encode>:
   198a0:	55                   	push   %rbp
   198a1:	41 57                	push   %r15
   198a3:	41 56                	push   %r14
   198a5:	41 55                	push   %r13
   198a7:	41 54                	push   %r12
   198a9:	53                   	push   %rbx
   198aa:	48 83 ec 58          	sub    $0x58,%rsp
   198ae:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   198b3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   198b8:	48 89 0c 24          	mov    %rcx,(%rsp)
   198bc:	48 8b 19             	mov    (%rcx),%rbx
   198bf:	45 31 ed             	xor    %r13d,%r13d
   198c2:	4c 39 c3             	cmp    %r8,%rbx
   198c5:	0f 83 56 03 00 00    	jae    19c21 <lzma2_encode+0x381>
   198cb:	4d 89 c7             	mov    %r8,%r15
   198ce:	48 89 fd             	mov    %rdi,%rbp
   198d1:	48 8d 87 a0 00 00 00 	lea    0xa0(%rdi),%rax
   198d8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   198dd:	48 8d 87 98 00 00 00 	lea    0x98(%rdi),%rax
   198e4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   198e9:	48 8d 87 88 00 00 00 	lea    0x88(%rdi),%rax
   198f0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   198f5:	48 8d 47 10          	lea    0x10(%rdi),%rax
   198f9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   198fe:	4c 8d b7 90 00 00 00 	lea    0x90(%rdi),%r14
   19905:	48 8d 87 a6 00 00 00 	lea    0xa6(%rdi),%rax
   1990c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19911:	48 8d 87 a5 00 00 00 	lea    0xa5(%rdi),%rax
   19918:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1991d:	44 8b 2f             	mov    (%rdi),%r13d
   19920:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   19925:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   1992a:	eb 7c                	jmp    199a8 <lzma2_encode+0x108>
   1992c:	0f 1f 40 00          	nopl   0x0(%rax)
   19930:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19935:	8b 71 18             	mov    0x18(%rcx),%esi
   19938:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   1993d:	49 29 df             	sub    %rbx,%r15
   19940:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   19945:	4d 8b 34 24          	mov    (%r12),%r14
   19949:	4d 39 f7             	cmp    %r14,%r15
   1994c:	4d 89 f5             	mov    %r14,%r13
   1994f:	4d 0f 42 ef          	cmovb  %r15,%r13
   19953:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19958:	48 8d 3c 18          	lea    (%rax,%rbx,1),%rdi
   1995c:	48 03 31             	add    (%rcx),%rsi
   1995f:	4c 29 f6             	sub    %r14,%rsi
   19962:	4c 89 ea             	mov    %r13,%rdx
   19965:	e8 e6 87 fe ff       	call   2150 <memcpy@plt>
   1996a:	4c 01 eb             	add    %r13,%rbx
   1996d:	48 8b 04 24          	mov    (%rsp),%rax
   19971:	48 89 18             	mov    %rbx,(%rax)
   19974:	4c 89 f0             	mov    %r14,%rax
   19977:	4c 29 e8             	sub    %r13,%rax
   1997a:	49 89 04 24          	mov    %rax,(%r12)
   1997e:	45 31 ed             	xor    %r13d,%r13d
   19981:	4d 39 fe             	cmp    %r15,%r14
   19984:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   19989:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1998e:	0f 87 8d 02 00 00    	ja     19c21 <lzma2_encode+0x381>
   19994:	44 89 6d 00          	mov    %r13d,0x0(%rbp)
   19998:	48 8b 04 24          	mov    (%rsp),%rax
   1999c:	48 8b 18             	mov    (%rax),%rbx
   1999f:	4c 39 fb             	cmp    %r15,%rbx
   199a2:	0f 83 76 02 00 00    	jae    19c1e <lzma2_encode+0x37e>
   199a8:	41 83 fd 04          	cmp    $0x4,%r13d
   199ac:	77 ea                	ja     19998 <lzma2_encode+0xf8>
   199ae:	44 89 e8             	mov    %r13d,%eax
   199b1:	48 8d 0d a8 08 01 00 	lea    0x108a8(%rip),%rcx        # 2a260 <lzma_decode.next_state+0x30>
   199b8:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   199bc:	48 01 c8             	add    %rcx,%rax
   199bf:	ff e0                	jmp    *%rax
   199c1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   199c6:	8b 41 24             	mov    0x24(%rcx),%eax
   199c9:	2b 41 18             	sub    0x18(%rcx),%eax
   199cc:	03 41 1c             	add    0x1c(%rcx),%eax
   199cf:	0f 84 5e 02 00 00    	je     19c33 <lzma2_encode+0x393>
   199d5:	80 bd 81 00 00 00 00 	cmpb   $0x0,0x81(%rbp)
   199dc:	74 16                	je     199f4 <lzma2_encode+0x154>
   199de:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   199e2:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   199e7:	e8 94 62 ff ff       	call   fc80 <lzma_lzma_encoder_reset>
   199ec:	85 c0                	test   %eax,%eax
   199ee:	0f 85 6b 02 00 00    	jne    19c5f <lzma2_encode+0x3bf>
   199f4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   199f9:	0f 57 c0             	xorps  %xmm0,%xmm0
   199fc:	0f 11 00             	movups %xmm0,(%rax)
   199ff:	c7 45 00 01 00 00 00 	movl   $0x1,0x0(%rbp)
   19a06:	31 c0                	xor    %eax,%eax
   19a08:	eb 50                	jmp    19a5a <lzma2_encode+0x1ba>
   19a0a:	ba 03 00 00 00       	mov    $0x3,%edx
   19a0f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   19a14:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   19a19:	48 89 de             	mov    %rbx,%rsi
   19a1c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19a21:	4c 8b 04 24          	mov    (%rsp),%r8
   19a25:	4d 89 f9             	mov    %r15,%r9
   19a28:	e8 f3 94 fe ff       	call   2f20 <lzma_bufcpy>
   19a2d:	48 83 3b 03          	cmpq   $0x3,(%rbx)
   19a31:	0f 85 e7 01 00 00    	jne    19c1e <lzma2_encode+0x37e>
   19a37:	c7 45 00 04 00 00 00 	movl   $0x4,0x0(%rbp)
   19a3e:	48 8b 04 24          	mov    (%rsp),%rax
   19a42:	48 8b 18             	mov    (%rax),%rbx
   19a45:	e9 e6 fe ff ff       	jmp    19930 <lzma2_encode+0x90>
   19a4a:	49 8b 16             	mov    (%r14),%rdx
   19a4d:	e9 9d 01 00 00       	jmp    19bef <lzma2_encode+0x34f>
   19a52:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   19a57:	48 8b 00             	mov    (%rax),%rax
   19a5a:	b9 00 00 20 00       	mov    $0x200000,%ecx
   19a5f:	29 c1                	sub    %eax,%ecx
   19a61:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   19a66:	41 8b 44 24 64       	mov    0x64(%r12),%eax
   19a6b:	45 8b 7c 24 18       	mov    0x18(%r12),%r15d
   19a70:	41 8b 5c 24 1c       	mov    0x1c(%r12),%ebx
   19a75:	46 8d 0c 39          	lea    (%rcx,%r15,1),%r9d
   19a79:	41 29 c1             	sub    %eax,%r9d
   19a7c:	41 29 d9             	sub    %ebx,%r9d
   19a7f:	45 31 ed             	xor    %r13d,%r13d
   19a82:	39 c1                	cmp    %eax,%ecx
   19a84:	45 0f 42 cd          	cmovb  %r13d,%r9d
   19a88:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   19a8c:	41 b8 00 00 01 00    	mov    $0x10000,%r8d
   19a92:	4c 89 e6             	mov    %r12,%rsi
   19a95:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   19a9a:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   19a9f:	4c 89 f1             	mov    %r14,%rcx
   19aa2:	e8 89 56 ff ff       	call   f130 <lzma_lzma_encode>
   19aa7:	41 8b 4c 24 1c       	mov    0x1c(%r12),%ecx
   19aac:	41 03 5c 24 18       	add    0x18(%r12),%ebx
   19ab1:	29 cb                	sub    %ecx,%ebx
   19ab3:	44 29 fb             	sub    %r15d,%ebx
   19ab6:	48 03 9d 88 00 00 00 	add    0x88(%rbp),%rbx
   19abd:	48 89 9d 88 00 00 00 	mov    %rbx,0x88(%rbp)
   19ac4:	83 f8 01             	cmp    $0x1,%eax
   19ac7:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   19acc:	0f 85 4f 01 00 00    	jne    19c21 <lzma2_encode+0x381>
   19ad2:	49 8b 16             	mov    (%r14),%rdx
   19ad5:	48 39 da             	cmp    %rbx,%rdx
   19ad8:	73 23                	jae    19afd <lzma2_encode+0x25d>
   19ada:	0f b6 85 80 00 00 00 	movzbl 0x80(%rbp),%eax
   19ae1:	84 c0                	test   %al,%al
   19ae3:	74 72                	je     19b57 <lzma2_encode+0x2b7>
   19ae5:	80 bd 82 00 00 00 00 	cmpb   $0x0,0x82(%rbp)
   19aec:	74 7b                	je     19b69 <lzma2_encode+0x2c9>
   19aee:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   19af3:	c6 01 e0             	movb   $0xe0,(%rcx)
   19af6:	31 f6                	xor    %esi,%esi
   19af8:	e9 84 00 00 00       	jmp    19b81 <lzma2_encode+0x2e1>
   19afd:	48 01 cb             	add    %rcx,%rbx
   19b00:	48 89 9d 88 00 00 00 	mov    %rbx,0x88(%rbp)
   19b07:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19b0c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
   19b13:	80 bd 82 00 00 00 01 	cmpb   $0x1,0x82(%rbp)
   19b1a:	b8 00 00 00 00       	mov    $0x0,%eax
   19b1f:	14 01                	adc    $0x1,%al
   19b21:	88 85 a0 00 00 00    	mov    %al,0xa0(%rbp)
   19b27:	8d 43 ff             	lea    -0x1(%rbx),%eax
   19b2a:	88 a5 a1 00 00 00    	mov    %ah,0xa1(%rbp)
   19b30:	fe cb                	dec    %bl
   19b32:	88 9d a2 00 00 00    	mov    %bl,0xa2(%rbp)
   19b38:	48 c7 85 98 00 00 00 	movq   $0x0,0x98(%rbp)
   19b3f:	00 00 00 00 
   19b43:	66 c7 85 81 00 00 00 	movw   $0x1,0x81(%rbp)
   19b4a:	01 00 
   19b4c:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   19b52:	e9 3d fe ff ff       	jmp    19994 <lzma2_encode+0xf4>
   19b57:	80 bd 81 00 00 00 00 	cmpb   $0x0,0x81(%rbp)
   19b5e:	74 15                	je     19b75 <lzma2_encode+0x2d5>
   19b60:	c6 85 a1 00 00 00 a0 	movb   $0xa0,0xa1(%rbp)
   19b67:	eb 13                	jmp    19b7c <lzma2_encode+0x2dc>
   19b69:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   19b6e:	c6 01 c0             	movb   $0xc0,(%rcx)
   19b71:	31 f6                	xor    %esi,%esi
   19b73:	eb 0c                	jmp    19b81 <lzma2_encode+0x2e1>
   19b75:	c6 85 a1 00 00 00 80 	movb   $0x80,0xa1(%rbp)
   19b7c:	be 01 00 00 00       	mov    $0x1,%esi
   19b81:	48 89 b5 98 00 00 00 	mov    %rsi,0x98(%rbp)
   19b88:	48 ff cb             	dec    %rbx
   19b8b:	89 d9                	mov    %ebx,%ecx
   19b8d:	c1 e9 10             	shr    $0x10,%ecx
   19b90:	00 8c 35 a0 00 00 00 	add    %cl,0xa0(%rbp,%rsi,1)
   19b97:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   19b9b:	88 bc 35 a1 00 00 00 	mov    %bh,0xa1(%rbp,%rsi,1)
   19ba2:	88 9c 35 a2 00 00 00 	mov    %bl,0xa2(%rbp,%rsi,1)
   19ba9:	88 ac 35 a3 00 00 00 	mov    %ch,0xa3(%rbp,%rsi,1)
   19bb0:	88 8c 35 a4 00 00 00 	mov    %cl,0xa4(%rbp,%rsi,1)
   19bb7:	84 c0                	test   %al,%al
   19bb9:	74 12                	je     19bcd <lzma2_encode+0x32d>
   19bbb:	48 03 74 24 48       	add    0x48(%rsp),%rsi
   19bc0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   19bc5:	e8 56 72 ff ff       	call   10e20 <lzma_lzma_lclppb_encode>
   19bca:	49 8b 16             	mov    (%r14),%rdx
   19bcd:	66 c7 85 80 00 00 00 	movw   $0x0,0x80(%rbp)
   19bd4:	00 00 
   19bd6:	c6 85 82 00 00 00 00 	movb   $0x0,0x82(%rbp)
   19bdd:	48 83 c2 06          	add    $0x6,%rdx
   19be1:	48 89 95 90 00 00 00 	mov    %rdx,0x90(%rbp)
   19be8:	c7 45 00 02 00 00 00 	movl   $0x2,0x0(%rbp)
   19bef:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   19bf4:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   19bf9:	48 89 de             	mov    %rbx,%rsi
   19bfc:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19c01:	4c 8b 04 24          	mov    (%rsp),%r8
   19c05:	4d 89 f9             	mov    %r15,%r9
   19c08:	e8 13 93 fe ff       	call   2f20 <lzma_bufcpy>
   19c0d:	48 8b 03             	mov    (%rbx),%rax
   19c10:	45 31 ed             	xor    %r13d,%r13d
   19c13:	49 3b 06             	cmp    (%r14),%rax
   19c16:	0f 84 78 fd ff ff    	je     19994 <lzma2_encode+0xf4>
   19c1c:	eb 03                	jmp    19c21 <lzma2_encode+0x381>
   19c1e:	45 31 ed             	xor    %r13d,%r13d
   19c21:	44 89 e8             	mov    %r13d,%eax
   19c24:	48 83 c4 58          	add    $0x58,%rsp
   19c28:	5b                   	pop    %rbx
   19c29:	41 5c                	pop    %r12
   19c2b:	41 5d                	pop    %r13
   19c2d:	41 5e                	pop    %r14
   19c2f:	41 5f                	pop    %r15
   19c31:	5d                   	pop    %rbp
   19c32:	c3                   	ret    
   19c33:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19c38:	8b 40 68             	mov    0x68(%rax),%eax
   19c3b:	83 f8 03             	cmp    $0x3,%eax
   19c3e:	75 14                	jne    19c54 <lzma2_encode+0x3b4>
   19c40:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   19c44:	48 8b 14 24          	mov    (%rsp),%rdx
   19c48:	48 89 0a             	mov    %rcx,(%rdx)
   19c4b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19c50:	c6 04 19 00          	movb   $0x0,(%rcx,%rbx,1)
   19c54:	45 31 ed             	xor    %r13d,%r13d
   19c57:	85 c0                	test   %eax,%eax
   19c59:	41 0f 95 c5          	setne  %r13b
   19c5d:	eb c2                	jmp    19c21 <lzma2_encode+0x381>
   19c5f:	41 89 c5             	mov    %eax,%r13d
   19c62:	eb bd                	jmp    19c21 <lzma2_encode+0x381>
   19c64:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   19c6b:	00 00 00 00 00 

0000000000019c70 <lzma2_encoder_end>:
   19c70:	41 56                	push   %r14
   19c72:	53                   	push   %rbx
   19c73:	50                   	push   %rax
   19c74:	48 89 f3             	mov    %rsi,%rbx
   19c77:	49 89 fe             	mov    %rdi,%r14
   19c7a:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19c7e:	e8 6d 92 fe ff       	call   2ef0 <lzma_free>
   19c83:	4c 89 f7             	mov    %r14,%rdi
   19c86:	48 89 de             	mov    %rbx,%rsi
   19c89:	48 83 c4 08          	add    $0x8,%rsp
   19c8d:	5b                   	pop    %rbx
   19c8e:	41 5e                	pop    %r14
   19c90:	e9 5b 92 fe ff       	jmp    2ef0 <lzma_free>
   19c95:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   19c9c:	00 00 00 00 

0000000000019ca0 <lzma2_encoder_options_update>:
   19ca0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   19ca4:	b8 0b 00 00 00       	mov    $0xb,%eax
   19ca9:	48 85 c9             	test   %rcx,%rcx
   19cac:	74 05                	je     19cb3 <lzma2_encoder_options_update+0x13>
   19cae:	83 3f 00             	cmpl   $0x0,(%rdi)
   19cb1:	74 01                	je     19cb4 <lzma2_encoder_options_update+0x14>
   19cb3:	c3                   	ret    
   19cb4:	8b 51 14             	mov    0x14(%rcx),%edx
   19cb7:	39 57 24             	cmp    %edx,0x24(%rdi)
   19cba:	75 12                	jne    19cce <lzma2_encoder_options_update+0x2e>
   19cbc:	8b 47 28             	mov    0x28(%rdi),%eax
   19cbf:	3b 41 18             	cmp    0x18(%rcx),%eax
   19cc2:	75 0a                	jne    19cce <lzma2_encoder_options_update+0x2e>
   19cc4:	8b 77 2c             	mov    0x2c(%rdi),%esi
   19cc7:	31 c0                	xor    %eax,%eax
   19cc9:	3b 71 1c             	cmp    0x1c(%rcx),%esi
   19ccc:	74 e5                	je     19cb3 <lzma2_encoder_options_update+0x13>
   19cce:	b8 08 00 00 00       	mov    $0x8,%eax
   19cd3:	83 fa 04             	cmp    $0x4,%edx
   19cd6:	77 db                	ja     19cb3 <lzma2_encoder_options_update+0x13>
   19cd8:	8b 71 18             	mov    0x18(%rcx),%esi
   19cdb:	83 fe 04             	cmp    $0x4,%esi
   19cde:	77 d3                	ja     19cb3 <lzma2_encoder_options_update+0x13>
   19ce0:	01 d6                	add    %edx,%esi
   19ce2:	83 fe 04             	cmp    $0x4,%esi
   19ce5:	77 cc                	ja     19cb3 <lzma2_encoder_options_update+0x13>
   19ce7:	83 79 1c 04          	cmpl   $0x4,0x1c(%rcx)
   19ceb:	77 c6                	ja     19cb3 <lzma2_encoder_options_update+0x13>
   19ced:	89 57 24             	mov    %edx,0x24(%rdi)
   19cf0:	8b 41 18             	mov    0x18(%rcx),%eax
   19cf3:	89 47 28             	mov    %eax,0x28(%rdi)
   19cf6:	8b 41 1c             	mov    0x1c(%rcx),%eax
   19cf9:	89 47 2c             	mov    %eax,0x2c(%rdi)
   19cfc:	66 c7 87 80 00 00 00 	movw   $0x101,0x80(%rdi)
   19d03:	01 01 
   19d05:	31 c0                	xor    %eax,%eax
   19d07:	c3                   	ret    
   19d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19d0f:	00 

0000000000019d10 <lzma_lzma2_decoder_init>:
   19d10:	48 8d 0d 09 00 00 00 	lea    0x9(%rip),%rcx        # 19d20 <lzma2_decoder_init>
   19d17:	e9 f4 4d ff ff       	jmp    eb10 <lzma_lz_decoder_init>
   19d1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019d20 <lzma2_decoder_init>:
   19d20:	41 57                	push   %r15
   19d22:	41 56                	push   %r14
   19d24:	41 54                	push   %r12
   19d26:	53                   	push   %rbx
   19d27:	50                   	push   %rax
   19d28:	48 89 fb             	mov    %rdi,%rbx
   19d2b:	48 8b 07             	mov    (%rdi),%rax
   19d2e:	48 85 c0             	test   %rax,%rax
   19d31:	75 50                	jne    19d83 <lzma2_decoder_init+0x63>
   19d33:	49 89 d6             	mov    %rdx,%r14
   19d36:	49 89 cf             	mov    %rcx,%r15
   19d39:	bf b8 00 00 00       	mov    $0xb8,%edi
   19d3e:	49 89 f4             	mov    %rsi,%r12
   19d41:	e8 7a 91 fe ff       	call   2ec0 <lzma_alloc>
   19d46:	48 89 03             	mov    %rax,(%rbx)
   19d49:	48 85 c0             	test   %rax,%rax
   19d4c:	74 71                	je     19dbf <lzma2_decoder_init+0x9f>
   19d4e:	48 8d 0d 0b 01 00 00 	lea    0x10b(%rip),%rcx        # 19e60 <lzma2_decode>
   19d55:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
   19d59:	48 8d 0d f0 03 00 00 	lea    0x3f0(%rip),%rcx        # 1a150 <lzma2_decoder_end>
   19d60:	48 89 4b 20          	mov    %rcx,0x20(%rbx)
   19d64:	0f 57 c0             	xorps  %xmm0,%xmm0
   19d67:	0f 11 40 18          	movups %xmm0,0x18(%rax)
   19d6b:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   19d6f:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   19d76:	00 
   19d77:	48 8b 03             	mov    (%rbx),%rax
   19d7a:	4c 89 f9             	mov    %r15,%rcx
   19d7d:	4c 89 f2             	mov    %r14,%rdx
   19d80:	4c 89 e6             	mov    %r12,%rsi
   19d83:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   19d89:	48 8b 03             	mov    (%rbx),%rax
   19d8c:	c6 40 40 01          	movb   $0x1,0x40(%rax)
   19d90:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
   19d95:	74 09                	je     19da0 <lzma2_decoder_init+0x80>
   19d97:	83 7a 10 00          	cmpl   $0x0,0x10(%rdx)
   19d9b:	0f 94 c0             	sete   %al
   19d9e:	eb 02                	jmp    19da2 <lzma2_decoder_init+0x82>
   19da0:	b0 01                	mov    $0x1,%al
   19da2:	48 8b 3b             	mov    (%rbx),%rdi
   19da5:	88 47 41             	mov    %al,0x41(%rdi)
   19da8:	48 8b 3b             	mov    (%rbx),%rdi
   19dab:	48 83 c7 08          	add    $0x8,%rdi
   19daf:	48 83 c4 08          	add    $0x8,%rsp
   19db3:	5b                   	pop    %rbx
   19db4:	41 5c                	pop    %r12
   19db6:	41 5e                	pop    %r14
   19db8:	41 5f                	pop    %r15
   19dba:	e9 71 b1 ff ff       	jmp    14f30 <lzma_lzma_decoder_create>
   19dbf:	b8 05 00 00 00       	mov    $0x5,%eax
   19dc4:	48 83 c4 08          	add    $0x8,%rsp
   19dc8:	5b                   	pop    %rbx
   19dc9:	41 5c                	pop    %r12
   19dcb:	41 5e                	pop    %r14
   19dcd:	41 5f                	pop    %r15
   19dcf:	c3                   	ret    

0000000000019dd0 <lzma_lzma2_decoder_memusage>:
   19dd0:	50                   	push   %rax
   19dd1:	e8 ba f7 ff ff       	call   19590 <lzma_lzma_decoder_memusage_nocheck>
   19dd6:	48 05 b8 00 00 00    	add    $0xb8,%rax
   19ddc:	59                   	pop    %rcx
   19ddd:	c3                   	ret    
   19dde:	66 90                	xchg   %ax,%ax

0000000000019de0 <lzma_lzma2_props_decode>:
   19de0:	b8 08 00 00 00       	mov    $0x8,%eax
   19de5:	48 83 f9 01          	cmp    $0x1,%rcx
   19de9:	75 68                	jne    19e53 <lzma_lzma2_props_decode+0x73>
   19deb:	80 3a 28             	cmpb   $0x28,(%rdx)
   19dee:	77 63                	ja     19e53 <lzma_lzma2_props_decode+0x73>
   19df0:	41 56                	push   %r14
   19df2:	53                   	push   %rbx
   19df3:	50                   	push   %rax
   19df4:	49 89 d6             	mov    %rdx,%r14
   19df7:	48 89 fb             	mov    %rdi,%rbx
   19dfa:	bf 70 00 00 00       	mov    $0x70,%edi
   19dff:	e8 bc 90 fe ff       	call   2ec0 <lzma_alloc>
   19e04:	48 85 c0             	test   %rax,%rax
   19e07:	74 3e                	je     19e47 <lzma_lzma2_props_decode+0x67>
   19e09:	41 0f b6 16          	movzbl (%r14),%edx
   19e0d:	be ff ff ff ff       	mov    $0xffffffff,%esi
   19e12:	83 fa 28             	cmp    $0x28,%edx
   19e15:	74 18                	je     19e2f <lzma_lzma2_props_decode+0x4f>
   19e17:	4c 89 f1             	mov    %r14,%rcx
   19e1a:	83 e2 01             	and    $0x1,%edx
   19e1d:	83 ca 02             	or     $0x2,%edx
   19e20:	89 10                	mov    %edx,(%rax)
   19e22:	41 0f b6 0e          	movzbl (%r14),%ecx
   19e26:	d1 e9                	shr    %ecx
   19e28:	80 c1 0b             	add    $0xb,%cl
   19e2b:	d3 e2                	shl    %cl,%edx
   19e2d:	89 d6                	mov    %edx,%esi
   19e2f:	89 30                	mov    %esi,(%rax)
   19e31:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19e38:	00 
   19e39:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   19e40:	48 89 03             	mov    %rax,(%rbx)
   19e43:	31 c0                	xor    %eax,%eax
   19e45:	eb 05                	jmp    19e4c <lzma_lzma2_props_decode+0x6c>
   19e47:	b8 05 00 00 00       	mov    $0x5,%eax
   19e4c:	48 83 c4 08          	add    $0x8,%rsp
   19e50:	5b                   	pop    %rbx
   19e51:	41 5e                	pop    %r14
   19e53:	c3                   	ret    
   19e54:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   19e5b:	00 00 00 00 00 

0000000000019e60 <lzma2_decode>:
   19e60:	55                   	push   %rbp
   19e61:	41 57                	push   %r15
   19e63:	41 56                	push   %r14
   19e65:	41 55                	push   %r13
   19e67:	41 54                	push   %r12
   19e69:	53                   	push   %rbx
   19e6a:	48 83 ec 18          	sub    $0x18,%rsp
   19e6e:	4c 89 c3             	mov    %r8,%rbx
   19e71:	49 89 cf             	mov    %rcx,%r15
   19e74:	49 89 d4             	mov    %rdx,%r12
   19e77:	49 89 f6             	mov    %rsi,%r14
   19e7a:	49 89 fd             	mov    %rdi,%r13
   19e7d:	48 8d 46 08          	lea    0x8(%rsi),%rax
   19e81:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19e86:	48 8d 47 48          	lea    0x48(%rdi),%rax
   19e8a:	48 89 04 24          	mov    %rax,(%rsp)
   19e8e:	66 90                	xchg   %ax,%ax
   19e90:	49 8b 2f             	mov    (%r15),%rbp
   19e93:	48 89 d8             	mov    %rbx,%rax
   19e96:	41 8b 4d 00          	mov    0x0(%r13),%ecx
   19e9a:	48 29 e8             	sub    %rbp,%rax
   19e9d:	0f 86 8d 00 00 00    	jbe    19f30 <lzma2_decode+0xd0>
   19ea3:	83 f9 07             	cmp    $0x7,%ecx
   19ea6:	0f 87 70 02 00 00    	ja     1a11c <lzma2_decode+0x2bc>
   19eac:	89 c9                	mov    %ecx,%ecx
   19eae:	48 8d 15 bf 03 01 00 	lea    0x103bf(%rip),%rdx        # 2a274 <lzma_decode.next_state+0x44>
   19eb5:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   19eb9:	48 01 d1             	add    %rdx,%rcx
   19ebc:	ff e1                	jmp    *%rcx
   19ebe:	41 0f b6 04 2c       	movzbl (%r12,%rbp,1),%eax
   19ec3:	48 ff c5             	inc    %rbp
   19ec6:	49 89 2f             	mov    %rbp,(%r15)
   19ec9:	48 85 c0             	test   %rax,%rax
   19ecc:	0f 84 51 02 00 00    	je     1a123 <lzma2_decode+0x2c3>
   19ed2:	3c df                	cmp    $0xdf,%al
   19ed4:	0f 87 e4 01 00 00    	ja     1a0be <lzma2_decode+0x25e>
   19eda:	3c 01                	cmp    $0x1,%al
   19edc:	0f 84 dc 01 00 00    	je     1a0be <lzma2_decode+0x25e>
   19ee2:	41 80 7d 41 00       	cmpb   $0x0,0x41(%r13)
   19ee7:	48 8b 34 24          	mov    (%rsp),%rsi
   19eeb:	0f 85 24 02 00 00    	jne    1a115 <lzma2_decode+0x2b5>
   19ef1:	31 c9                	xor    %ecx,%ecx
   19ef3:	84 c0                	test   %al,%al
   19ef5:	0f 89 d8 01 00 00    	jns    1a0d3 <lzma2_decode+0x273>
   19efb:	89 c2                	mov    %eax,%edx
   19efd:	83 e2 1f             	and    $0x1f,%edx
   19f00:	c1 e2 10             	shl    $0x10,%edx
   19f03:	49 89 55 30          	mov    %rdx,0x30(%r13)
   19f07:	41 c7 45 00 01 00 00 	movl   $0x1,0x0(%r13)
   19f0e:	00 
   19f0f:	3c c0                	cmp    $0xc0,%al
   19f11:	0f 82 d8 01 00 00    	jb     1a0ef <lzma2_decode+0x28f>
   19f17:	41 c6 45 40 00       	movb   $0x0,0x40(%r13)
   19f1c:	41 c7 45 04 05 00 00 	movl   $0x5,0x4(%r13)
   19f23:	00 
   19f24:	e9 bc 01 00 00       	jmp    1a0e5 <lzma2_decode+0x285>
   19f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19f30:	83 f9 06             	cmp    $0x6,%ecx
   19f33:	0f 85 fb 01 00 00    	jne    1a134 <lzma2_decode+0x2d4>
   19f39:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   19f3d:	4c 89 f6             	mov    %r14,%rsi
   19f40:	4c 89 e2             	mov    %r12,%rdx
   19f43:	4c 89 f9             	mov    %r15,%rcx
   19f46:	49 89 d8             	mov    %rbx,%r8
   19f49:	41 ff 55 10          	call   *0x10(%r13)
   19f4d:	89 c1                	mov    %eax,%ecx
   19f4f:	49 8b 17             	mov    (%r15),%rdx
   19f52:	48 29 ea             	sub    %rbp,%rdx
   19f55:	49 8b 75 38          	mov    0x38(%r13),%rsi
   19f59:	b8 09 00 00 00       	mov    $0x9,%eax
   19f5e:	48 89 f7             	mov    %rsi,%rdi
   19f61:	48 29 d7             	sub    %rdx,%rdi
   19f64:	0f 82 cc 01 00 00    	jb     1a136 <lzma2_decode+0x2d6>
   19f6a:	49 89 7d 38          	mov    %rdi,0x38(%r13)
   19f6e:	83 f9 01             	cmp    $0x1,%ecx
   19f71:	0f 85 9a 01 00 00    	jne    1a111 <lzma2_decode+0x2b1>
   19f77:	48 39 d6             	cmp    %rdx,%rsi
   19f7a:	0f 85 b6 01 00 00    	jne    1a136 <lzma2_decode+0x2d6>
   19f80:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
   19f87:	00 
   19f88:	e9 03 ff ff ff       	jmp    19e90 <lzma2_decode+0x30>
   19f8d:	48 8d 45 01          	lea    0x1(%rbp),%rax
   19f91:	49 89 07             	mov    %rax,(%r15)
   19f94:	41 0f b6 04 2c       	movzbl (%r12,%rbp,1),%eax
   19f99:	49 8b 4d 38          	mov    0x38(%r13),%rcx
   19f9d:	48 01 c8             	add    %rcx,%rax
   19fa0:	48 ff c0             	inc    %rax
   19fa3:	49 89 45 38          	mov    %rax,0x38(%r13)
   19fa7:	41 8b 45 04          	mov    0x4(%r13),%eax
   19fab:	41 89 45 00          	mov    %eax,0x0(%r13)
   19faf:	e9 dc fe ff ff       	jmp    19e90 <lzma2_decode+0x30>
   19fb4:	48 8d 45 01          	lea    0x1(%rbp),%rax
   19fb8:	49 89 07             	mov    %rax,(%r15)
   19fbb:	41 0f b6 04 2c       	movzbl (%r12,%rbp,1),%eax
   19fc0:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   19fc4:	49 8b 4d 30          	mov    0x30(%r13),%rcx
   19fc8:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
   19fcc:	48 ff c6             	inc    %rsi
   19fcf:	49 89 75 30          	mov    %rsi,0x30(%r13)
   19fd3:	41 c7 45 00 03 00 00 	movl   $0x3,0x0(%r13)
   19fda:	00 
   19fdb:	41 ff 55 20          	call   *0x20(%r13)
   19fdf:	e9 ac fe ff ff       	jmp    19e90 <lzma2_decode+0x30>
   19fe4:	48 8d 45 01          	lea    0x1(%rbp),%rax
   19fe8:	49 89 07             	mov    %rax,(%r15)
   19feb:	41 0f b6 04 2c       	movzbl (%r12,%rbp,1),%eax
   19ff0:	c1 e0 08             	shl    $0x8,%eax
   19ff3:	49 89 45 38          	mov    %rax,0x38(%r13)
   19ff7:	41 c7 45 00 04 00 00 	movl   $0x4,0x0(%r13)
   19ffe:	00 
   19fff:	e9 8c fe ff ff       	jmp    19e90 <lzma2_decode+0x30>
   1a004:	4c 89 e7             	mov    %r12,%rdi
   1a007:	4d 8b 65 38          	mov    0x38(%r13),%r12
   1a00b:	4c 01 e5             	add    %r12,%rbp
   1a00e:	4c 39 e0             	cmp    %r12,%rax
   1a011:	48 0f 46 eb          	cmovbe %rbx,%rbp
   1a015:	49 8b 0e             	mov    (%r14),%rcx
   1a018:	4d 8b 4e 18          	mov    0x18(%r14),%r9
   1a01c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a021:	4c 89 fe             	mov    %r15,%rsi
   1a024:	48 89 ea             	mov    %rbp,%rdx
   1a027:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1a02c:	e8 ef 8e fe ff       	call   2f20 <lzma_bufcpy>
   1a031:	4c 89 e1             	mov    %r12,%rcx
   1a034:	48 29 c1             	sub    %rax,%rcx
   1a037:	49 89 4d 38          	mov    %rcx,0x38(%r13)
   1a03b:	49 8b 4e 08          	mov    0x8(%r14),%rcx
   1a03f:	4c 89 f2             	mov    %r14,%rdx
   1a042:	49 3b 4e 10          	cmp    0x10(%r14),%rcx
   1a046:	76 04                	jbe    1a04c <lzma2_decode+0x1ec>
   1a048:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
   1a04c:	49 39 c4             	cmp    %rax,%r12
   1a04f:	0f 85 df 00 00 00    	jne    1a134 <lzma2_decode+0x2d4>
   1a055:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
   1a05c:	00 
   1a05d:	49 89 d6             	mov    %rdx,%r14
   1a060:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   1a065:	e9 26 fe ff ff       	jmp    19e90 <lzma2_decode+0x30>
   1a06a:	48 8d 45 01          	lea    0x1(%rbp),%rax
   1a06e:	49 89 07             	mov    %rax,(%r15)
   1a071:	41 0f b6 04 2c       	movzbl (%r12,%rbp,1),%eax
   1a076:	c1 e0 08             	shl    $0x8,%eax
   1a079:	49 01 45 30          	add    %rax,0x30(%r13)
   1a07d:	41 c7 45 00 02 00 00 	movl   $0x2,0x0(%r13)
   1a084:	00 
   1a085:	e9 06 fe ff ff       	jmp    19e90 <lzma2_decode+0x30>
   1a08a:	48 8d 45 01          	lea    0x1(%rbp),%rax
   1a08e:	49 89 07             	mov    %rax,(%r15)
   1a091:	41 0f b6 34 2c       	movzbl (%r12,%rbp,1),%esi
   1a096:	48 8b 2c 24          	mov    (%rsp),%rbp
   1a09a:	48 89 ef             	mov    %rbp,%rdi
   1a09d:	e8 9e f4 ff ff       	call   19540 <lzma_lzma_lclppb_decode>
   1a0a2:	84 c0                	test   %al,%al
   1a0a4:	75 6f                	jne    1a115 <lzma2_decode+0x2b5>
   1a0a6:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   1a0aa:	48 89 ee             	mov    %rbp,%rsi
   1a0ad:	41 ff 55 18          	call   *0x18(%r13)
   1a0b1:	41 c7 45 00 06 00 00 	movl   $0x6,0x0(%r13)
   1a0b8:	00 
   1a0b9:	e9 d2 fd ff ff       	jmp    19e90 <lzma2_decode+0x30>
   1a0be:	66 41 c7 45 40 01 01 	movw   $0x101,0x40(%r13)
   1a0c5:	b1 01                	mov    $0x1,%cl
   1a0c7:	48 8b 34 24          	mov    (%rsp),%rsi
   1a0cb:	84 c0                	test   %al,%al
   1a0cd:	0f 88 28 fe ff ff    	js     19efb <lzma2_decode+0x9b>
   1a0d3:	3c 02                	cmp    $0x2,%al
   1a0d5:	77 3e                	ja     1a115 <lzma2_decode+0x2b5>
   1a0d7:	48 b8 03 00 00 00 07 	movabs $0x700000003,%rax
   1a0de:	00 00 00 
   1a0e1:	49 89 45 00          	mov    %rax,0x0(%r13)
   1a0e5:	84 c9                	test   %cl,%cl
   1a0e7:	0f 84 a3 fd ff ff    	je     19e90 <lzma2_decode+0x30>
   1a0ed:	eb 3b                	jmp    1a12a <lzma2_decode+0x2ca>
   1a0ef:	41 80 7d 40 00       	cmpb   $0x0,0x40(%r13)
   1a0f4:	75 1f                	jne    1a115 <lzma2_decode+0x2b5>
   1a0f6:	41 c7 45 04 06 00 00 	movl   $0x6,0x4(%r13)
   1a0fd:	00 
   1a0fe:	3c a0                	cmp    $0xa0,%al
   1a100:	72 e3                	jb     1a0e5 <lzma2_decode+0x285>
   1a102:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   1a106:	41 ff 55 18          	call   *0x18(%r13)
   1a10a:	41 0f b6 4d 41       	movzbl 0x41(%r13),%ecx
   1a10f:	eb d4                	jmp    1a0e5 <lzma2_decode+0x285>
   1a111:	89 c8                	mov    %ecx,%eax
   1a113:	eb 21                	jmp    1a136 <lzma2_decode+0x2d6>
   1a115:	b8 09 00 00 00       	mov    $0x9,%eax
   1a11a:	eb 1a                	jmp    1a136 <lzma2_decode+0x2d6>
   1a11c:	b8 0b 00 00 00       	mov    $0xb,%eax
   1a121:	eb 13                	jmp    1a136 <lzma2_decode+0x2d6>
   1a123:	b8 01 00 00 00       	mov    $0x1,%eax
   1a128:	eb 0c                	jmp    1a136 <lzma2_decode+0x2d6>
   1a12a:	41 c6 45 41 00       	movb   $0x0,0x41(%r13)
   1a12f:	41 c6 46 28 01       	movb   $0x1,0x28(%r14)
   1a134:	31 c0                	xor    %eax,%eax
   1a136:	48 83 c4 18          	add    $0x18,%rsp
   1a13a:	5b                   	pop    %rbx
   1a13b:	41 5c                	pop    %r12
   1a13d:	41 5d                	pop    %r13
   1a13f:	41 5e                	pop    %r14
   1a141:	41 5f                	pop    %r15
   1a143:	5d                   	pop    %rbp
   1a144:	c3                   	ret    
   1a145:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1a14c:	00 00 00 00 

000000000001a150 <lzma2_decoder_end>:
   1a150:	41 56                	push   %r14
   1a152:	53                   	push   %rbx
   1a153:	50                   	push   %rax
   1a154:	48 89 f3             	mov    %rsi,%rbx
   1a157:	49 89 fe             	mov    %rdi,%r14
   1a15a:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a15e:	e8 8d 8d fe ff       	call   2ef0 <lzma_free>
   1a163:	4c 89 f7             	mov    %r14,%rdi
   1a166:	48 89 de             	mov    %rbx,%rsi
   1a169:	48 83 c4 08          	add    $0x8,%rsp
   1a16d:	5b                   	pop    %rbx
   1a16e:	41 5e                	pop    %r14
   1a170:	e9 7b 8d fe ff       	jmp    2ef0 <lzma_free>
   1a175:	0f 1f 00             	nopl   (%rax)
   1a178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a17f:	00 

000000000001a180 <lzma_delta_coder_init>:
   1a180:	41 57                	push   %r15
   1a182:	41 56                	push   %r14
   1a184:	53                   	push   %rbx
   1a185:	48 89 fb             	mov    %rdi,%rbx
   1a188:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1a18c:	74 14                	je     1a1a2 <lzma_delta_coder_init+0x22>
   1a18e:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1a192:	b8 08 00 00 00       	mov    $0x8,%eax
   1a197:	48 85 c9             	test   %rcx,%rcx
   1a19a:	75 5f                	jne    1a1fb <lzma_delta_coder_init+0x7b>
   1a19c:	5b                   	pop    %rbx
   1a19d:	41 5e                	pop    %r14
   1a19f:	41 5f                	pop    %r15
   1a1a1:	c3                   	ret    
   1a1a2:	49 89 d6             	mov    %rdx,%r14
   1a1a5:	bf 50 01 00 00       	mov    $0x150,%edi
   1a1aa:	49 89 f7             	mov    %rsi,%r15
   1a1ad:	e8 0e 8d fe ff       	call   2ec0 <lzma_alloc>
   1a1b2:	48 89 03             	mov    %rax,(%rbx)
   1a1b5:	48 85 c0             	test   %rax,%rax
   1a1b8:	0f 84 dc 00 00 00    	je     1a29a <lzma_delta_coder_init+0x11a>
   1a1be:	48 8d 0d eb 00 00 00 	lea    0xeb(%rip),%rcx        # 1a2b0 <delta_coder_end>
   1a1c5:	48 89 4b 20          	mov    %rcx,0x20(%rbx)
   1a1c9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a1d0:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
   1a1d7:	ff 
   1a1d8:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a1db:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   1a1df:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   1a1e3:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   1a1e7:	4c 89 f2             	mov    %r14,%rdx
   1a1ea:	4c 89 fe             	mov    %r15,%rsi
   1a1ed:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1a1f1:	b8 08 00 00 00       	mov    $0x8,%eax
   1a1f6:	48 85 c9             	test   %rcx,%rcx
   1a1f9:	74 a1                	je     1a19c <lzma_delta_coder_init+0x1c>
   1a1fb:	83 39 00             	cmpl   $0x0,(%rcx)
   1a1fe:	75 9c                	jne    1a19c <lzma_delta_coder_init+0x1c>
   1a200:	8b 49 04             	mov    0x4(%rcx),%ecx
   1a203:	8d b9 ff fe ff ff    	lea    -0x101(%rcx),%edi
   1a209:	81 ff 00 ff ff ff    	cmp    $0xffffff00,%edi
   1a20f:	72 8b                	jb     1a19c <lzma_delta_coder_init+0x1c>
   1a211:	48 8b 03             	mov    (%rbx),%rax
   1a214:	48 89 48 40          	mov    %rcx,0x40(%rax)
   1a218:	48 8b 03             	mov    (%rbx),%rax
   1a21b:	c6 40 48 00          	movb   $0x0,0x48(%rax)
   1a21f:	48 8b 03             	mov    (%rbx),%rax
   1a222:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a225:	0f 11 80 39 01 00 00 	movups %xmm0,0x139(%rax)
   1a22c:	0f 11 80 29 01 00 00 	movups %xmm0,0x129(%rax)
   1a233:	0f 11 80 19 01 00 00 	movups %xmm0,0x119(%rax)
   1a23a:	0f 11 80 09 01 00 00 	movups %xmm0,0x109(%rax)
   1a241:	0f 11 80 f9 00 00 00 	movups %xmm0,0xf9(%rax)
   1a248:	0f 11 80 e9 00 00 00 	movups %xmm0,0xe9(%rax)
   1a24f:	0f 11 80 d9 00 00 00 	movups %xmm0,0xd9(%rax)
   1a256:	0f 11 80 c9 00 00 00 	movups %xmm0,0xc9(%rax)
   1a25d:	0f 11 80 b9 00 00 00 	movups %xmm0,0xb9(%rax)
   1a264:	0f 11 80 a9 00 00 00 	movups %xmm0,0xa9(%rax)
   1a26b:	0f 11 80 99 00 00 00 	movups %xmm0,0x99(%rax)
   1a272:	0f 11 80 89 00 00 00 	movups %xmm0,0x89(%rax)
   1a279:	0f 11 40 79          	movups %xmm0,0x79(%rax)
   1a27d:	0f 11 40 69          	movups %xmm0,0x69(%rax)
   1a281:	0f 11 40 59          	movups %xmm0,0x59(%rax)
   1a285:	0f 11 40 49          	movups %xmm0,0x49(%rax)
   1a289:	48 8b 3b             	mov    (%rbx),%rdi
   1a28c:	48 83 c2 18          	add    $0x18,%rdx
   1a290:	5b                   	pop    %rbx
   1a291:	41 5e                	pop    %r14
   1a293:	41 5f                	pop    %r15
   1a295:	e9 e6 8c fe ff       	jmp    2f80 <lzma_next_filter_init>
   1a29a:	b8 05 00 00 00       	mov    $0x5,%eax
   1a29f:	5b                   	pop    %rbx
   1a2a0:	41 5e                	pop    %r14
   1a2a2:	41 5f                	pop    %r15
   1a2a4:	c3                   	ret    
   1a2a5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1a2ac:	00 00 00 00 

000000000001a2b0 <delta_coder_end>:
   1a2b0:	41 56                	push   %r14
   1a2b2:	53                   	push   %rbx
   1a2b3:	50                   	push   %rax
   1a2b4:	48 89 f3             	mov    %rsi,%rbx
   1a2b7:	49 89 fe             	mov    %rdi,%r14
   1a2ba:	e8 81 8d fe ff       	call   3040 <lzma_next_end>
   1a2bf:	4c 89 f7             	mov    %r14,%rdi
   1a2c2:	48 89 de             	mov    %rbx,%rsi
   1a2c5:	48 83 c4 08          	add    $0x8,%rsp
   1a2c9:	5b                   	pop    %rbx
   1a2ca:	41 5e                	pop    %r14
   1a2cc:	e9 1f 8c fe ff       	jmp    2ef0 <lzma_free>
   1a2d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1a2d8:	0f 1f 84 00 00 00 00 
   1a2df:	00 

000000000001a2e0 <lzma_delta_coder_memusage>:
   1a2e0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a2e7:	48 85 ff             	test   %rdi,%rdi
   1a2ea:	74 05                	je     1a2f1 <lzma_delta_coder_memusage+0x11>
   1a2ec:	83 3f 00             	cmpl   $0x0,(%rdi)
   1a2ef:	74 01                	je     1a2f2 <lzma_delta_coder_memusage+0x12>
   1a2f1:	c3                   	ret    
   1a2f2:	b9 ff fe ff ff       	mov    $0xfffffeff,%ecx
   1a2f7:	03 4f 04             	add    0x4(%rdi),%ecx
   1a2fa:	31 c0                	xor    %eax,%eax
   1a2fc:	81 f9 00 ff ff ff    	cmp    $0xffffff00,%ecx
   1a302:	48 19 c0             	sbb    %rax,%rax
   1a305:	48 0d 50 01 00 00    	or     $0x150,%rax
   1a30b:	c3                   	ret    
   1a30c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a310 <lzma_delta_encoder_init>:
   1a310:	48 8d 05 19 00 00 00 	lea    0x19(%rip),%rax        # 1a330 <delta_encode>
   1a317:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1a31b:	48 8d 05 7e 04 00 00 	lea    0x47e(%rip),%rax        # 1a7a0 <delta_encoder_update>
   1a322:	48 89 47 38          	mov    %rax,0x38(%rdi)
   1a326:	e9 55 fe ff ff       	jmp    1a180 <lzma_delta_coder_init>
   1a32b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a330 <delta_encode>:
   1a330:	55                   	push   %rbp
   1a331:	41 57                	push   %r15
   1a333:	41 56                	push   %r14
   1a335:	41 55                	push   %r13
   1a337:	41 54                	push   %r12
   1a339:	53                   	push   %rbx
   1a33a:	48 83 ec 28          	sub    $0x28,%rsp
   1a33e:	4d 89 ce             	mov    %r9,%r14
   1a341:	48 89 fb             	mov    %rdi,%rbx
   1a344:	44 8b 6c 24 70       	mov    0x70(%rsp),%r13d
   1a349:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1a34e:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   1a353:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
   1a357:	4d 85 db             	test   %r11,%r11
   1a35a:	74 7a                	je     1a3d6 <delta_encode+0xa6>
   1a35c:	4d 8b 27             	mov    (%r15),%r12
   1a35f:	48 8b 3b             	mov    (%rbx),%rdi
   1a362:	48 83 ec 08          	sub    $0x8,%rsp
   1a366:	4d 89 f1             	mov    %r14,%r9
   1a369:	41 55                	push   %r13
   1a36b:	41 52                	push   %r10
   1a36d:	41 57                	push   %r15
   1a36f:	41 ff d3             	call   *%r11
   1a372:	48 83 c4 20          	add    $0x20,%rsp
   1a376:	49 8b 0f             	mov    (%r15),%rcx
   1a379:	49 89 c9             	mov    %rcx,%r9
   1a37c:	4d 29 e1             	sub    %r12,%r9
   1a37f:	0f 84 8d 01 00 00    	je     1a512 <delta_encode+0x1e2>
   1a385:	0f b6 53 40          	movzbl 0x40(%rbx),%edx
   1a389:	44 0f b6 43 48       	movzbl 0x48(%rbx),%r8d
   1a38e:	49 83 f9 30          	cmp    $0x30,%r9
   1a392:	0f 83 89 01 00 00    	jae    1a521 <delta_encode+0x1f1>
   1a398:	31 f6                	xor    %esi,%esi
   1a39a:	44 89 c7             	mov    %r8d,%edi
   1a39d:	4c 01 e6             	add    %r12,%rsi
   1a3a0:	44 8d 04 3a          	lea    (%rdx,%rdi,1),%r8d
   1a3a4:	45 0f b6 c0          	movzbl %r8b,%r8d
   1a3a8:	45 0f b6 0c 36       	movzbl (%r14,%rsi,1),%r9d
   1a3ad:	44 0f b6 d7          	movzbl %dil,%r10d
   1a3b1:	40 fe cf             	dec    %dil
   1a3b4:	45 89 cb             	mov    %r9d,%r11d
   1a3b7:	46 2a 5c 03 49       	sub    0x49(%rbx,%r8,1),%r11b
   1a3bc:	46 88 4c 13 49       	mov    %r9b,0x49(%rbx,%r10,1)
   1a3c1:	45 88 1c 36          	mov    %r11b,(%r14,%rsi,1)
   1a3c5:	48 ff c6             	inc    %rsi
   1a3c8:	48 39 f1             	cmp    %rsi,%rcx
   1a3cb:	75 d3                	jne    1a3a0 <delta_encode+0x70>
   1a3cd:	40 88 7b 48          	mov    %dil,0x48(%rbx)
   1a3d1:	e9 3c 01 00 00       	jmp    1a512 <delta_encode+0x1e2>
   1a3d6:	48 8b 31             	mov    (%rcx),%rsi
   1a3d9:	4c 89 c0             	mov    %r8,%rax
   1a3dc:	48 29 f0             	sub    %rsi,%rax
   1a3df:	49 8b 3f             	mov    (%r15),%rdi
   1a3e2:	49 29 fa             	sub    %rdi,%r10
   1a3e5:	4c 39 d0             	cmp    %r10,%rax
   1a3e8:	4c 0f 42 d0          	cmovb  %rax,%r10
   1a3ec:	4d 85 d2             	test   %r10,%r10
   1a3ef:	0f 84 04 01 00 00    	je     1a4f9 <delta_encode+0x1c9>
   1a3f5:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
   1a3fa:	48 01 f2             	add    %rsi,%rdx
   1a3fd:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   1a402:	49 01 fe             	add    %rdi,%r14
   1a405:	44 0f b6 5b 40       	movzbl 0x40(%rbx),%r11d
   1a40a:	44 0f b6 6b 48       	movzbl 0x48(%rbx),%r13d
   1a40f:	49 83 fa 30          	cmp    $0x30,%r10
   1a413:	0f 83 40 02 00 00    	jae    1a659 <delta_encode+0x329>
   1a419:	45 31 c9             	xor    %r9d,%r9d
   1a41c:	45 89 ec             	mov    %r13d,%r12d
   1a41f:	4d 89 cd             	mov    %r9,%r13
   1a422:	49 83 cd 01          	or     $0x1,%r13
   1a426:	41 f6 c2 01          	test   $0x1,%r10b
   1a42a:	74 26                	je     1a452 <delta_encode+0x122>
   1a42c:	43 8d 04 1c          	lea    (%r12,%r11,1),%eax
   1a430:	0f b6 c0             	movzbl %al,%eax
   1a433:	42 0f b6 3c 0a       	movzbl (%rdx,%r9,1),%edi
   1a438:	45 0f b6 c4          	movzbl %r12b,%r8d
   1a43c:	89 fd                	mov    %edi,%ebp
   1a43e:	40 2a 6c 03 49       	sub    0x49(%rbx,%rax,1),%bpl
   1a443:	41 fe cc             	dec    %r12b
   1a446:	42 88 7c 03 49       	mov    %dil,0x49(%rbx,%r8,1)
   1a44b:	43 88 2c 0e          	mov    %bpl,(%r14,%r9,1)
   1a44f:	4d 89 e9             	mov    %r13,%r9
   1a452:	4d 39 ea             	cmp    %r13,%r10
   1a455:	0f 84 8b 00 00 00    	je     1a4e6 <delta_encode+0x1b6>
   1a45b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1a460:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1a465:	45 0f b6 e4          	movzbl %r12b,%r12d
   1a469:	45 00 e3             	add    %r12b,%r11b
   1a46c:	45 0f b6 db          	movzbl %r11b,%r11d
   1a470:	4d 89 cd             	mov    %r9,%r13
   1a473:	4d 29 d5             	sub    %r10,%r13
   1a476:	49 ff c1             	inc    %r9
   1a479:	31 ed                	xor    %ebp,%ebp
   1a47b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a480:	49 8d 04 2c          	lea    (%r12,%rbp,1),%rax
   1a484:	49 8d 3c 2b          	lea    (%r11,%rbp,1),%rdi
   1a488:	44 0f b6 c7          	movzbl %dil,%r8d
   1a48c:	42 0f b6 4c 0a ff    	movzbl -0x1(%rdx,%r9,1),%ecx
   1a492:	8d 70 ff             	lea    -0x1(%rax),%esi
   1a495:	0f b6 c0             	movzbl %al,%eax
   1a498:	41 89 cf             	mov    %ecx,%r15d
   1a49b:	46 2a 7c 03 49       	sub    0x49(%rbx,%r8,1),%r15b
   1a4a0:	88 4c 03 49          	mov    %cl,0x49(%rbx,%rax,1)
   1a4a4:	47 88 7c 0e ff       	mov    %r15b,-0x1(%r14,%r9,1)
   1a4a9:	ff cf                	dec    %edi
   1a4ab:	40 0f b6 c7          	movzbl %dil,%eax
   1a4af:	42 0f b6 0c 0a       	movzbl (%rdx,%r9,1),%ecx
   1a4b4:	40 0f b6 f6          	movzbl %sil,%esi
   1a4b8:	89 cf                	mov    %ecx,%edi
   1a4ba:	40 2a 7c 03 49       	sub    0x49(%rbx,%rax,1),%dil
   1a4bf:	88 4c 33 49          	mov    %cl,0x49(%rbx,%rsi,1)
   1a4c3:	43 88 3c 0e          	mov    %dil,(%r14,%r9,1)
   1a4c7:	48 83 c5 fe          	add    $0xfffffffffffffffe,%rbp
   1a4cb:	49 83 c1 02          	add    $0x2,%r9
   1a4cf:	49 39 ed             	cmp    %rbp,%r13
   1a4d2:	75 ac                	jne    1a480 <delta_encode+0x150>
   1a4d4:	41 01 ec             	add    %ebp,%r12d
   1a4d7:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   1a4dc:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1a4e1:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a4e6:	44 88 63 48          	mov    %r12b,0x48(%rbx)
   1a4ea:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1a4ef:	44 8b 6c 24 70       	mov    0x70(%rsp),%r13d
   1a4f4:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a4f9:	4c 01 d6             	add    %r10,%rsi
   1a4fc:	48 89 31             	mov    %rsi,(%rcx)
   1a4ff:	4c 01 d7             	add    %r10,%rdi
   1a502:	49 89 3f             	mov    %rdi,(%r15)
   1a505:	31 c0                	xor    %eax,%eax
   1a507:	45 85 ed             	test   %r13d,%r13d
   1a50a:	74 06                	je     1a512 <delta_encode+0x1e2>
   1a50c:	4c 39 c6             	cmp    %r8,%rsi
   1a50f:	0f 94 c0             	sete   %al
   1a512:	48 83 c4 28          	add    $0x28,%rsp
   1a516:	5b                   	pop    %rbx
   1a517:	41 5c                	pop    %r12
   1a519:	41 5d                	pop    %r13
   1a51b:	41 5e                	pop    %r14
   1a51d:	41 5f                	pop    %r15
   1a51f:	5d                   	pop    %rbp
   1a520:	c3                   	ret    
   1a521:	4c 89 e7             	mov    %r12,%rdi
   1a524:	48 f7 d7             	not    %rdi
   1a527:	48 01 cf             	add    %rcx,%rdi
   1a52a:	31 f6                	xor    %esi,%esi
   1a52c:	41 38 f8             	cmp    %dil,%r8b
   1a52f:	0f 82 65 fe ff ff    	jb     1a39a <delta_encode+0x6a>
   1a535:	45 8d 1c 10          	lea    (%r8,%rdx,1),%r11d
   1a539:	41 38 fb             	cmp    %dil,%r11b
   1a53c:	0f 82 58 fe ff ff    	jb     1a39a <delta_encode+0x6a>
   1a542:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
   1a549:	0f 87 4b fe ff ff    	ja     1a39a <delta_encode+0x6a>
   1a54f:	45 0f b6 d0          	movzbl %r8b,%r10d
   1a553:	4e 8d 3c 13          	lea    (%rbx,%r10,1),%r15
   1a557:	49 83 c7 49          	add    $0x49,%r15
   1a55b:	4d 89 fd             	mov    %r15,%r13
   1a55e:	49 29 fd             	sub    %rdi,%r13
   1a561:	4d 39 fd             	cmp    %r15,%r13
   1a564:	0f 87 30 fe ff ff    	ja     1a39a <delta_encode+0x6a>
   1a56a:	45 0f b6 db          	movzbl %r11b,%r11d
   1a56e:	4e 8d 3c 1b          	lea    (%rbx,%r11,1),%r15
   1a572:	49 83 c7 49          	add    $0x49,%r15
   1a576:	4d 89 fd             	mov    %r15,%r13
   1a579:	49 29 fd             	sub    %rdi,%r13
   1a57c:	4d 39 fd             	cmp    %r15,%r13
   1a57f:	0f 87 15 fe ff ff    	ja     1a39a <delta_encode+0x6a>
   1a585:	4d 29 d3             	sub    %r10,%r11
   1a588:	49 83 fb 10          	cmp    $0x10,%r11
   1a58c:	0f 82 06 fe ff ff    	jb     1a398 <delta_encode+0x68>
   1a592:	4f 8d 14 26          	lea    (%r14,%r12,1),%r10
   1a596:	4c 89 ce             	mov    %r9,%rsi
   1a599:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
   1a59d:	44 89 c7             	mov    %r8d,%edi
   1a5a0:	40 28 f7             	sub    %sil,%dil
   1a5a3:	45 31 db             	xor    %r11d,%r11d
   1a5a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a5b0:	42 8d 2c 02          	lea    (%rdx,%r8,1),%ebp
   1a5b4:	44 0f b6 fd          	movzbl %bpl,%r15d
   1a5b8:	f3 42 0f 6f 4c 3b 3a 	movdqu 0x3a(%rbx,%r15,1),%xmm1
   1a5bf:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   1a5c3:	66 0f 60 d0          	punpcklbw %xmm0,%xmm2
   1a5c7:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   1a5cc:	f2 0f 70 d2 1b       	pshuflw $0x1b,%xmm2,%xmm2
   1a5d1:	f3 0f 70 d2 1b       	pshufhw $0x1b,%xmm2,%xmm2
   1a5d6:	66 0f 68 c8          	punpckhbw %xmm0,%xmm1
   1a5da:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
   1a5df:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
   1a5e4:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
   1a5e9:	66 0f 67 ca          	packuswb %xmm2,%xmm1
   1a5ed:	f3 43 0f 6f 14 1a    	movdqu (%r10,%r11,1),%xmm2
   1a5f3:	45 0f b6 c0          	movzbl %r8b,%r8d
   1a5f7:	66 0f 6f da          	movdqa %xmm2,%xmm3
   1a5fb:	66 0f 60 d8          	punpcklbw %xmm0,%xmm3
   1a5ff:	66 0f 70 db 4e       	pshufd $0x4e,%xmm3,%xmm3
   1a604:	f2 0f 70 db 1b       	pshuflw $0x1b,%xmm3,%xmm3
   1a609:	f3 0f 70 db 1b       	pshufhw $0x1b,%xmm3,%xmm3
   1a60e:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   1a612:	66 0f 68 e0          	punpckhbw %xmm0,%xmm4
   1a616:	66 0f 70 e4 4e       	pshufd $0x4e,%xmm4,%xmm4
   1a61b:	f2 0f 70 e4 1b       	pshuflw $0x1b,%xmm4,%xmm4
   1a620:	f3 0f 70 e4 1b       	pshufhw $0x1b,%xmm4,%xmm4
   1a625:	66 0f 67 e3          	packuswb %xmm3,%xmm4
   1a629:	f3 42 0f 7f 64 03 3a 	movdqu %xmm4,0x3a(%rbx,%r8,1)
   1a630:	66 0f f8 d1          	psubb  %xmm1,%xmm2
   1a634:	f3 43 0f 7f 14 1a    	movdqu %xmm2,(%r10,%r11,1)
   1a63a:	49 83 c3 10          	add    $0x10,%r11
   1a63e:	41 80 c0 f0          	add    $0xf0,%r8b
   1a642:	4c 39 de             	cmp    %r11,%rsi
   1a645:	0f 85 65 ff ff ff    	jne    1a5b0 <delta_encode+0x280>
   1a64b:	49 39 f1             	cmp    %rsi,%r9
   1a64e:	0f 85 49 fd ff ff    	jne    1a39d <delta_encode+0x6d>
   1a654:	e9 74 fd ff ff       	jmp    1a3cd <delta_encode+0x9d>
   1a659:	4d 8d 62 ff          	lea    -0x1(%r10),%r12
   1a65d:	45 31 c9             	xor    %r9d,%r9d
   1a660:	45 38 e5             	cmp    %r12b,%r13b
   1a663:	0f 82 b3 fd ff ff    	jb     1a41c <delta_encode+0xec>
   1a669:	43 8d 2c 2b          	lea    (%r11,%r13,1),%ebp
   1a66d:	44 38 e5             	cmp    %r12b,%bpl
   1a670:	0f 82 a6 fd ff ff    	jb     1a41c <delta_encode+0xec>
   1a676:	49 81 fc ff 00 00 00 	cmp    $0xff,%r12
   1a67d:	0f 87 99 fd ff ff    	ja     1a41c <delta_encode+0xec>
   1a683:	45 0f b6 e5          	movzbl %r13b,%r12d
   1a687:	4e 8d 04 23          	lea    (%rbx,%r12,1),%r8
   1a68b:	b8 01 00 00 00       	mov    $0x1,%eax
   1a690:	4c 29 d0             	sub    %r10,%rax
   1a693:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   1a697:	48 83 c7 49          	add    $0x49,%rdi
   1a69b:	49 01 c0             	add    %rax,%r8
   1a69e:	49 83 c0 49          	add    $0x49,%r8
   1a6a2:	49 39 f8             	cmp    %rdi,%r8
   1a6a5:	0f 87 71 fd ff ff    	ja     1a41c <delta_encode+0xec>
   1a6ab:	40 0f b6 ed          	movzbl %bpl,%ebp
   1a6af:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
   1a6b3:	4c 8d 04 2b          	lea    (%rbx,%rbp,1),%r8
   1a6b7:	49 83 c0 49          	add    $0x49,%r8
   1a6bb:	48 01 f8             	add    %rdi,%rax
   1a6be:	48 83 c0 49          	add    $0x49,%rax
   1a6c2:	4c 39 c0             	cmp    %r8,%rax
   1a6c5:	0f 87 51 fd ff ff    	ja     1a41c <delta_encode+0xec>
   1a6cb:	4c 29 e5             	sub    %r12,%rbp
   1a6ce:	48 83 fd 10          	cmp    $0x10,%rbp
   1a6d2:	0f 82 41 fd ff ff    	jb     1a419 <delta_encode+0xe9>
   1a6d8:	4d 89 d1             	mov    %r10,%r9
   1a6db:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
   1a6df:	45 89 ec             	mov    %r13d,%r12d
   1a6e2:	45 28 cc             	sub    %r9b,%r12b
   1a6e5:	31 ed                	xor    %ebp,%ebp
   1a6e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a6f0:	43 8d 04 2b          	lea    (%r11,%r13,1),%eax
   1a6f4:	0f b6 c0             	movzbl %al,%eax
   1a6f7:	f3 0f 6f 4c 03 3a    	movdqu 0x3a(%rbx,%rax,1),%xmm1
   1a6fd:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   1a701:	66 0f 60 d0          	punpcklbw %xmm0,%xmm2
   1a705:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   1a70a:	f2 0f 70 d2 1b       	pshuflw $0x1b,%xmm2,%xmm2
   1a70f:	f3 0f 70 d2 1b       	pshufhw $0x1b,%xmm2,%xmm2
   1a714:	66 0f 68 c8          	punpckhbw %xmm0,%xmm1
   1a718:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
   1a71d:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
   1a722:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
   1a727:	66 0f 67 ca          	packuswb %xmm2,%xmm1
   1a72b:	f3 0f 6f 14 2a       	movdqu (%rdx,%rbp,1),%xmm2
   1a730:	45 0f b6 ed          	movzbl %r13b,%r13d
   1a734:	66 0f 6f da          	movdqa %xmm2,%xmm3
   1a738:	66 0f 60 d8          	punpcklbw %xmm0,%xmm3
   1a73c:	66 0f 70 db 4e       	pshufd $0x4e,%xmm3,%xmm3
   1a741:	f2 0f 70 db 1b       	pshuflw $0x1b,%xmm3,%xmm3
   1a746:	f3 0f 70 db 1b       	pshufhw $0x1b,%xmm3,%xmm3
   1a74b:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   1a74f:	66 0f 68 e0          	punpckhbw %xmm0,%xmm4
   1a753:	66 0f 70 e4 4e       	pshufd $0x4e,%xmm4,%xmm4
   1a758:	f2 0f 70 e4 1b       	pshuflw $0x1b,%xmm4,%xmm4
   1a75d:	f3 0f 70 e4 1b       	pshufhw $0x1b,%xmm4,%xmm4
   1a762:	66 0f 67 e3          	packuswb %xmm3,%xmm4
   1a766:	f3 42 0f 7f 64 2b 3a 	movdqu %xmm4,0x3a(%rbx,%r13,1)
   1a76d:	66 0f f8 d1          	psubb  %xmm1,%xmm2
   1a771:	f3 41 0f 7f 14 2e    	movdqu %xmm2,(%r14,%rbp,1)
   1a777:	48 83 c5 10          	add    $0x10,%rbp
   1a77b:	41 80 c5 f0          	add    $0xf0,%r13b
   1a77f:	49 39 e9             	cmp    %rbp,%r9
   1a782:	0f 85 68 ff ff ff    	jne    1a6f0 <delta_encode+0x3c0>
   1a788:	4d 39 ca             	cmp    %r9,%r10
   1a78b:	0f 85 8e fc ff ff    	jne    1a41f <delta_encode+0xef>
   1a791:	e9 50 fd ff ff       	jmp    1a4e6 <delta_encode+0x1b6>
   1a796:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a79d:	00 00 00 

000000000001a7a0 <delta_encoder_update>:
   1a7a0:	48 8d 51 10          	lea    0x10(%rcx),%rdx
   1a7a4:	e9 07 89 fe ff       	jmp    30b0 <lzma_next_filter_update>
   1a7a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001a7b0 <lzma_delta_props_encode>:
   1a7b0:	41 56                	push   %r14
   1a7b2:	53                   	push   %rbx
   1a7b3:	50                   	push   %rax
   1a7b4:	48 89 f3             	mov    %rsi,%rbx
   1a7b7:	49 89 fe             	mov    %rdi,%r14
   1a7ba:	e8 21 fb ff ff       	call   1a2e0 <lzma_delta_coder_memusage>
   1a7bf:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1a7c3:	74 13                	je     1a7d8 <lzma_delta_props_encode+0x28>
   1a7c5:	41 0f b6 46 04       	movzbl 0x4(%r14),%eax
   1a7ca:	fe c8                	dec    %al
   1a7cc:	88 03                	mov    %al,(%rbx)
   1a7ce:	31 c0                	xor    %eax,%eax
   1a7d0:	48 83 c4 08          	add    $0x8,%rsp
   1a7d4:	5b                   	pop    %rbx
   1a7d5:	41 5e                	pop    %r14
   1a7d7:	c3                   	ret    
   1a7d8:	b8 0b 00 00 00       	mov    $0xb,%eax
   1a7dd:	48 83 c4 08          	add    $0x8,%rsp
   1a7e1:	5b                   	pop    %rbx
   1a7e2:	41 5e                	pop    %r14
   1a7e4:	c3                   	ret    
   1a7e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a7ec:	00 00 00 
   1a7ef:	90                   	nop

000000000001a7f0 <lzma_delta_decoder_init>:
   1a7f0:	48 8d 05 09 00 00 00 	lea    0x9(%rip),%rax        # 1a800 <delta_decode>
   1a7f7:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1a7fb:	e9 80 f9 ff ff       	jmp    1a180 <lzma_delta_coder_init>

000000000001a800 <delta_decode>:
   1a800:	55                   	push   %rbp
   1a801:	41 57                	push   %r15
   1a803:	41 56                	push   %r14
   1a805:	41 55                	push   %r13
   1a807:	41 54                	push   %r12
   1a809:	53                   	push   %rbx
   1a80a:	50                   	push   %rax
   1a80b:	4c 89 cb             	mov    %r9,%rbx
   1a80e:	49 89 fe             	mov    %rdi,%r14
   1a811:	8b 44 24 50          	mov    0x50(%rsp),%eax
   1a815:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
   1a81a:	4d 8b 3c 24          	mov    (%r12),%r15
   1a81e:	48 8b 3f             	mov    (%rdi),%rdi
   1a821:	48 83 ec 08          	sub    $0x8,%rsp
   1a825:	50                   	push   %rax
   1a826:	ff 74 24 58          	push   0x58(%rsp)
   1a82a:	41 54                	push   %r12
   1a82c:	41 ff 56 18          	call   *0x18(%r14)
   1a830:	48 83 c4 20          	add    $0x20,%rsp
   1a834:	49 8b 0c 24          	mov    (%r12),%rcx
   1a838:	49 89 c9             	mov    %rcx,%r9
   1a83b:	4d 29 f9             	sub    %r15,%r9
   1a83e:	74 4e                	je     1a88e <delta_decode+0x8e>
   1a840:	41 0f b6 56 40       	movzbl 0x40(%r14),%edx
   1a845:	45 0f b6 46 48       	movzbl 0x48(%r14),%r8d
   1a84a:	49 83 f9 30          	cmp    $0x30,%r9
   1a84e:	73 4d                	jae    1a89d <delta_decode+0x9d>
   1a850:	31 f6                	xor    %esi,%esi
   1a852:	44 89 c7             	mov    %r8d,%edi
   1a855:	4c 01 fe             	add    %r15,%rsi
   1a858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a85f:	00 
   1a860:	44 8d 04 3a          	lea    (%rdx,%rdi,1),%r8d
   1a864:	45 0f b6 c0          	movzbl %r8b,%r8d
   1a868:	44 0f b6 0c 33       	movzbl (%rbx,%rsi,1),%r9d
   1a86d:	47 02 4c 06 49       	add    0x49(%r14,%r8,1),%r9b
   1a872:	44 88 0c 33          	mov    %r9b,(%rbx,%rsi,1)
   1a876:	44 0f b6 c7          	movzbl %dil,%r8d
   1a87a:	40 fe cf             	dec    %dil
   1a87d:	47 88 4c 06 49       	mov    %r9b,0x49(%r14,%r8,1)
   1a882:	48 ff c6             	inc    %rsi
   1a885:	48 39 f1             	cmp    %rsi,%rcx
   1a888:	75 d6                	jne    1a860 <delta_decode+0x60>
   1a88a:	41 88 7e 48          	mov    %dil,0x48(%r14)
   1a88e:	48 83 c4 08          	add    $0x8,%rsp
   1a892:	5b                   	pop    %rbx
   1a893:	41 5c                	pop    %r12
   1a895:	41 5d                	pop    %r13
   1a897:	41 5e                	pop    %r14
   1a899:	41 5f                	pop    %r15
   1a89b:	5d                   	pop    %rbp
   1a89c:	c3                   	ret    
   1a89d:	4c 89 ff             	mov    %r15,%rdi
   1a8a0:	48 f7 d7             	not    %rdi
   1a8a3:	48 01 cf             	add    %rcx,%rdi
   1a8a6:	31 f6                	xor    %esi,%esi
   1a8a8:	41 38 f8             	cmp    %dil,%r8b
   1a8ab:	72 a5                	jb     1a852 <delta_decode+0x52>
   1a8ad:	45 8d 1c 10          	lea    (%r8,%rdx,1),%r11d
   1a8b1:	41 38 fb             	cmp    %dil,%r11b
   1a8b4:	72 9c                	jb     1a852 <delta_decode+0x52>
   1a8b6:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
   1a8bd:	77 93                	ja     1a852 <delta_decode+0x52>
   1a8bf:	45 0f b6 d0          	movzbl %r8b,%r10d
   1a8c3:	4f 8d 24 16          	lea    (%r14,%r10,1),%r12
   1a8c7:	49 83 c4 49          	add    $0x49,%r12
   1a8cb:	4d 89 e5             	mov    %r12,%r13
   1a8ce:	49 29 fd             	sub    %rdi,%r13
   1a8d1:	4d 39 e5             	cmp    %r12,%r13
   1a8d4:	0f 87 78 ff ff ff    	ja     1a852 <delta_decode+0x52>
   1a8da:	45 0f b6 db          	movzbl %r11b,%r11d
   1a8de:	4f 8d 24 1e          	lea    (%r14,%r11,1),%r12
   1a8e2:	49 83 c4 49          	add    $0x49,%r12
   1a8e6:	4d 89 e5             	mov    %r12,%r13
   1a8e9:	49 29 fd             	sub    %rdi,%r13
   1a8ec:	4d 39 e5             	cmp    %r12,%r13
   1a8ef:	0f 87 5d ff ff ff    	ja     1a852 <delta_decode+0x52>
   1a8f5:	4d 29 d3             	sub    %r10,%r11
   1a8f8:	49 83 fb 10          	cmp    $0x10,%r11
   1a8fc:	0f 82 4e ff ff ff    	jb     1a850 <delta_decode+0x50>
   1a902:	4e 8d 14 3b          	lea    (%rbx,%r15,1),%r10
   1a906:	4c 89 ce             	mov    %r9,%rsi
   1a909:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
   1a90d:	44 89 c7             	mov    %r8d,%edi
   1a910:	40 28 f7             	sub    %sil,%dil
   1a913:	45 31 db             	xor    %r11d,%r11d
   1a916:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a91a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a920:	42 8d 2c 02          	lea    (%rdx,%r8,1),%ebp
   1a924:	44 0f b6 e5          	movzbl %bpl,%r12d
   1a928:	f3 43 0f 6f 4c 26 3a 	movdqu 0x3a(%r14,%r12,1),%xmm1
   1a92f:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   1a933:	66 0f 60 d0          	punpcklbw %xmm0,%xmm2
   1a937:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   1a93c:	f2 0f 70 d2 1b       	pshuflw $0x1b,%xmm2,%xmm2
   1a941:	f3 0f 70 d2 1b       	pshufhw $0x1b,%xmm2,%xmm2
   1a946:	66 0f 68 c8          	punpckhbw %xmm0,%xmm1
   1a94a:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
   1a94f:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
   1a954:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
   1a959:	66 0f 67 ca          	packuswb %xmm2,%xmm1
   1a95d:	f3 43 0f 6f 14 1a    	movdqu (%r10,%r11,1),%xmm2
   1a963:	66 0f fc d1          	paddb  %xmm1,%xmm2
   1a967:	f3 43 0f 7f 14 1a    	movdqu %xmm2,(%r10,%r11,1)
   1a96d:	45 0f b6 c0          	movzbl %r8b,%r8d
   1a971:	66 0f 6f ca          	movdqa %xmm2,%xmm1
   1a975:	66 0f 60 c8          	punpcklbw %xmm0,%xmm1
   1a979:	66 0f 70 c9 4e       	pshufd $0x4e,%xmm1,%xmm1
   1a97e:	f2 0f 70 c9 1b       	pshuflw $0x1b,%xmm1,%xmm1
   1a983:	f3 0f 70 c9 1b       	pshufhw $0x1b,%xmm1,%xmm1
   1a988:	66 0f 68 d0          	punpckhbw %xmm0,%xmm2
   1a98c:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   1a991:	f2 0f 70 d2 1b       	pshuflw $0x1b,%xmm2,%xmm2
   1a996:	f3 0f 70 d2 1b       	pshufhw $0x1b,%xmm2,%xmm2
   1a99b:	66 0f 67 d1          	packuswb %xmm1,%xmm2
   1a99f:	f3 43 0f 7f 54 06 3a 	movdqu %xmm2,0x3a(%r14,%r8,1)
   1a9a6:	49 83 c3 10          	add    $0x10,%r11
   1a9aa:	41 80 c0 f0          	add    $0xf0,%r8b
   1a9ae:	4c 39 de             	cmp    %r11,%rsi
   1a9b1:	0f 85 69 ff ff ff    	jne    1a920 <delta_decode+0x120>
   1a9b7:	49 39 f1             	cmp    %rsi,%r9
   1a9ba:	0f 85 95 fe ff ff    	jne    1a855 <delta_decode+0x55>
   1a9c0:	e9 c5 fe ff ff       	jmp    1a88a <delta_decode+0x8a>
   1a9c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1a9cc:	00 00 00 00 

000000000001a9d0 <lzma_delta_props_decode>:
   1a9d0:	b8 08 00 00 00       	mov    $0x8,%eax
   1a9d5:	48 83 f9 01          	cmp    $0x1,%rcx
   1a9d9:	75 3b                	jne    1aa16 <lzma_delta_props_decode+0x46>
   1a9db:	41 56                	push   %r14
   1a9dd:	53                   	push   %rbx
   1a9de:	50                   	push   %rax
   1a9df:	49 89 d6             	mov    %rdx,%r14
   1a9e2:	48 89 fb             	mov    %rdi,%rbx
   1a9e5:	bf 28 00 00 00       	mov    $0x28,%edi
   1a9ea:	e8 d1 84 fe ff       	call   2ec0 <lzma_alloc>
   1a9ef:	48 85 c0             	test   %rax,%rax
   1a9f2:	74 16                	je     1aa0a <lzma_delta_props_decode+0x3a>
   1a9f4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1a9fa:	41 0f b6 0e          	movzbl (%r14),%ecx
   1a9fe:	ff c1                	inc    %ecx
   1aa00:	89 48 04             	mov    %ecx,0x4(%rax)
   1aa03:	48 89 03             	mov    %rax,(%rbx)
   1aa06:	31 c0                	xor    %eax,%eax
   1aa08:	eb 05                	jmp    1aa0f <lzma_delta_props_decode+0x3f>
   1aa0a:	b8 05 00 00 00       	mov    $0x5,%eax
   1aa0f:	48 83 c4 08          	add    $0x8,%rsp
   1aa13:	5b                   	pop    %rbx
   1aa14:	41 5e                	pop    %r14
   1aa16:	c3                   	ret    
   1aa17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1aa1e:	00 00 

000000000001aa20 <lzma_simple_coder_init>:
   1aa20:	55                   	push   %rbp
   1aa21:	41 57                	push   %r15
   1aa23:	41 56                	push   %r14
   1aa25:	41 55                	push   %r13
   1aa27:	41 54                	push   %r12
   1aa29:	53                   	push   %rbx
   1aa2a:	48 83 ec 18          	sub    $0x18,%rsp
   1aa2e:	48 89 fb             	mov    %rdi,%rbx
   1aa31:	44 8b 7c 24 50       	mov    0x50(%rsp),%r15d
   1aa36:	0f b6 6c 24 58       	movzbl 0x58(%rsp),%ebp
   1aa3b:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1aa3f:	74 2f                	je     1aa70 <lzma_simple_coder_init+0x50>
   1aa41:	48 8b 42 10          	mov    0x10(%rdx),%rax
   1aa45:	48 85 c0             	test   %rax,%rax
   1aa48:	0f 84 f3 00 00 00    	je     1ab41 <lzma_simple_coder_init+0x121>
   1aa4e:	8b 00                	mov    (%rax),%eax
   1aa50:	48 8b 0b             	mov    (%rbx),%rcx
   1aa53:	89 41 58             	mov    %eax,0x58(%rcx)
   1aa56:	48 8b 0b             	mov    (%rbx),%rcx
   1aa59:	41 ff cf             	dec    %r15d
   1aa5c:	b8 08 00 00 00       	mov    $0x8,%eax
   1aa61:	44 85 79 58          	test   %r15d,0x58(%rcx)
   1aa65:	0f 85 c7 00 00 00    	jne    1ab32 <lzma_simple_coder_init+0x112>
   1aa6b:	e9 de 00 00 00       	jmp    1ab4e <lzma_simple_coder_init+0x12e>
   1aa70:	49 89 cc             	mov    %rcx,%r12
   1aa73:	4d 89 c5             	mov    %r8,%r13
   1aa76:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1aa7b:	4d 89 ce             	mov    %r9,%r14
   1aa7e:	4a 8d 3c 4d 80 00 00 	lea    0x80(,%r9,2),%rdi
   1aa85:	00 
   1aa86:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1aa8b:	e8 30 84 fe ff       	call   2ec0 <lzma_alloc>
   1aa90:	48 89 c1             	mov    %rax,%rcx
   1aa93:	48 89 03             	mov    %rax,(%rbx)
   1aa96:	b8 05 00 00 00       	mov    $0x5,%eax
   1aa9b:	48 85 c9             	test   %rcx,%rcx
   1aa9e:	0f 84 8e 00 00 00    	je     1ab32 <lzma_simple_coder_init+0x112>
   1aaa4:	4d 01 f6             	add    %r14,%r14
   1aaa7:	48 8d 05 02 01 00 00 	lea    0x102(%rip),%rax        # 1abb0 <simple_code>
   1aaae:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1aab2:	48 8d 05 47 04 00 00 	lea    0x447(%rip),%rax        # 1af00 <simple_coder_end>
   1aab9:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1aabd:	48 8d 05 6c 04 00 00 	lea    0x46c(%rip),%rax        # 1af30 <simple_coder_update>
   1aac4:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1aac8:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   1aacf:	48 c7 41 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rcx)
   1aad6:	ff 
   1aad7:	0f 57 c0             	xorps  %xmm0,%xmm0
   1aada:	0f 11 41 10          	movups %xmm0,0x10(%rcx)
   1aade:	0f 11 41 20          	movups %xmm0,0x20(%rcx)
   1aae2:	0f 11 41 30          	movups %xmm0,0x30(%rcx)
   1aae6:	48 8b 03             	mov    (%rbx),%rax
   1aae9:	4c 89 60 48          	mov    %r12,0x48(%rax)
   1aaed:	48 8b 03             	mov    (%rbx),%rax
   1aaf0:	4c 89 70 60          	mov    %r14,0x60(%rax)
   1aaf4:	4d 85 ed             	test   %r13,%r13
   1aaf7:	0f 84 97 00 00 00    	je     1ab94 <lzma_simple_coder_init+0x174>
   1aafd:	4c 89 ef             	mov    %r13,%rdi
   1ab00:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
   1ab05:	4c 89 f6             	mov    %r14,%rsi
   1ab08:	e8 b3 83 fe ff       	call   2ec0 <lzma_alloc>
   1ab0d:	4c 89 f6             	mov    %r14,%rsi
   1ab10:	48 89 c1             	mov    %rax,%rcx
   1ab13:	b8 05 00 00 00       	mov    $0x5,%eax
   1ab18:	48 8b 13             	mov    (%rbx),%rdx
   1ab1b:	48 89 4a 50          	mov    %rcx,0x50(%rdx)
   1ab1f:	48 8b 0b             	mov    (%rbx),%rcx
   1ab22:	48 83 79 50 00       	cmpq   $0x0,0x50(%rcx)
   1ab27:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1ab2c:	0f 85 0f ff ff ff    	jne    1aa41 <lzma_simple_coder_init+0x21>
   1ab32:	48 83 c4 18          	add    $0x18,%rsp
   1ab36:	5b                   	pop    %rbx
   1ab37:	41 5c                	pop    %r12
   1ab39:	41 5d                	pop    %r13
   1ab3b:	41 5e                	pop    %r14
   1ab3d:	41 5f                	pop    %r15
   1ab3f:	5d                   	pop    %rbp
   1ab40:	c3                   	ret    
   1ab41:	48 8b 03             	mov    (%rbx),%rax
   1ab44:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%rax)
   1ab4b:	48 8b 0b             	mov    (%rbx),%rcx
   1ab4e:	40 88 69 41          	mov    %bpl,0x41(%rcx)
   1ab52:	48 8b 03             	mov    (%rbx),%rax
   1ab55:	c6 40 40 00          	movb   $0x0,0x40(%rax)
   1ab59:	48 8b 03             	mov    (%rbx),%rax
   1ab5c:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
   1ab63:	00 
   1ab64:	48 8b 03             	mov    (%rbx),%rax
   1ab67:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   1ab6e:	00 
   1ab6f:	48 8b 03             	mov    (%rbx),%rax
   1ab72:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
   1ab79:	00 
   1ab7a:	48 8b 3b             	mov    (%rbx),%rdi
   1ab7d:	48 83 c2 18          	add    $0x18,%rdx
   1ab81:	48 83 c4 18          	add    $0x18,%rsp
   1ab85:	5b                   	pop    %rbx
   1ab86:	41 5c                	pop    %r12
   1ab88:	41 5d                	pop    %r13
   1ab8a:	41 5e                	pop    %r14
   1ab8c:	41 5f                	pop    %r15
   1ab8e:	5d                   	pop    %rbp
   1ab8f:	e9 ec 83 fe ff       	jmp    2f80 <lzma_next_filter_init>
   1ab94:	48 8b 03             	mov    (%rbx),%rax
   1ab97:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
   1ab9e:	00 
   1ab9f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1aba4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1aba9:	e9 93 fe ff ff       	jmp    1aa41 <lzma_simple_coder_init+0x21>
   1abae:	66 90                	xchg   %ax,%ax

000000000001abb0 <simple_code>:
   1abb0:	55                   	push   %rbp
   1abb1:	41 57                	push   %r15
   1abb3:	41 56                	push   %r14
   1abb5:	41 55                	push   %r13
   1abb7:	41 54                	push   %r12
   1abb9:	53                   	push   %rbx
   1abba:	48 83 ec 28          	sub    $0x28,%rsp
   1abbe:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1abc3:	48 89 0c 24          	mov    %rcx,(%rsp)
   1abc7:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
   1abcb:	b8 08 00 00 00       	mov    $0x8,%eax
   1abd0:	83 f9 01             	cmp    $0x1,%ecx
   1abd3:	0f 84 ea 02 00 00    	je     1aec3 <simple_code+0x313>
   1abd9:	4d 89 ce             	mov    %r9,%r14
   1abdc:	49 89 d5             	mov    %rdx,%r13
   1abdf:	48 89 fb             	mov    %rdi,%rbx
   1abe2:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   1abe7:	4c 8b 44 24 60       	mov    0x60(%rsp),%r8
   1abec:	4c 8d 7f 68          	lea    0x68(%rdi),%r15
   1abf0:	48 8b 4f 68          	mov    0x68(%rdi),%rcx
   1abf4:	48 8b 57 70          	mov    0x70(%rdi),%rdx
   1abf8:	48 39 d1             	cmp    %rdx,%rcx
   1abfb:	73 3c                	jae    1ac39 <simple_code+0x89>
   1abfd:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
   1ac04:	49 89 f4             	mov    %rsi,%r12
   1ac07:	4c 89 fe             	mov    %r15,%rsi
   1ac0a:	4c 89 f1             	mov    %r14,%rcx
   1ac0d:	e8 0e 83 fe ff       	call   2f20 <lzma_bufcpy>
   1ac12:	4c 8b 44 24 60       	mov    0x60(%rsp),%r8
   1ac17:	48 8b 4b 68          	mov    0x68(%rbx),%rcx
   1ac1b:	31 c0                	xor    %eax,%eax
   1ac1d:	48 3b 4b 70          	cmp    0x70(%rbx),%rcx
   1ac21:	0f 82 9c 02 00 00    	jb     1aec3 <simple_code+0x313>
   1ac27:	4c 89 e6             	mov    %r12,%rsi
   1ac2a:	b8 01 00 00 00       	mov    $0x1,%eax
   1ac2f:	80 7b 40 00          	cmpb   $0x0,0x40(%rbx)
   1ac33:	0f 85 8a 02 00 00    	jne    1aec3 <simple_code+0x313>
   1ac39:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1ac3e:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1ac43:	48 c7 43 70 00 00 00 	movq   $0x0,0x70(%rbx)
   1ac4a:	00 
   1ac4b:	49 8b 28             	mov    (%r8),%rbp
   1ac4e:	48 8d 43 78          	lea    0x78(%rbx),%rax
   1ac52:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ac57:	4c 8b 63 78          	mov    0x78(%rbx),%r12
   1ac5b:	4d 89 e7             	mov    %r12,%r15
   1ac5e:	49 29 cf             	sub    %rcx,%r15
   1ac61:	0f 84 af 00 00 00    	je     1ad16 <simple_code+0x166>
   1ac67:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1ac6c:	48 29 e8             	sub    %rbp,%rax
   1ac6f:	4c 39 f8             	cmp    %r15,%rax
   1ac72:	0f 87 9e 00 00 00    	ja     1ad16 <simple_code+0x166>
   1ac78:	48 85 c9             	test   %rcx,%rcx
   1ac7b:	74 29                	je     1aca6 <simple_code+0xf6>
   1ac7d:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
   1ac84:	48 8d 34 0b          	lea    (%rbx,%rcx,1),%rsi
   1ac88:	48 81 c6 80 00 00 00 	add    $0x80,%rsi
   1ac8f:	4c 89 fa             	mov    %r15,%rdx
   1ac92:	e8 09 75 fe ff       	call   21a0 <memmove@plt>
   1ac97:	4c 89 7b 78          	mov    %r15,0x78(%rbx)
   1ac9b:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
   1aca2:	00 
   1aca3:	4d 89 fc             	mov    %r15,%r12
   1aca6:	4d 85 e4             	test   %r12,%r12
   1aca9:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1acae:	0f 84 61 01 00 00    	je     1ae15 <simple_code+0x265>
   1acb4:	48 8d ab 80 00 00 00 	lea    0x80(%rbx),%rbp
   1acbb:	4c 8b 53 18          	mov    0x18(%rbx),%r10
   1acbf:	48 8b 43 60          	mov    0x60(%rbx),%rax
   1acc3:	4d 85 d2             	test   %r10,%r10
   1acc6:	0f 84 58 01 00 00    	je     1ae24 <simple_code+0x274>
   1accc:	48 8b 3b             	mov    (%rbx),%rdi
   1accf:	48 83 ec 08          	sub    $0x8,%rsp
   1acd3:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1acd8:	4c 89 ea             	mov    %r13,%rdx
   1acdb:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1ace0:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1ace5:	49 89 e9             	mov    %rbp,%r9
   1ace8:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
   1aced:	41 53                	push   %r11
   1acef:	50                   	push   %rax
   1acf0:	ff 74 24 28          	push   0x28(%rsp)
   1acf4:	41 ff d2             	call   *%r10
   1acf7:	48 83 c4 20          	add    $0x20,%rsp
   1acfb:	85 c0                	test   %eax,%eax
   1acfd:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
   1ad02:	0f 84 5e 01 00 00    	je     1ae66 <simple_code+0x2b6>
   1ad08:	83 f8 01             	cmp    $0x1,%eax
   1ad0b:	0f 84 51 01 00 00    	je     1ae62 <simple_code+0x2b2>
   1ad11:	e9 ad 01 00 00       	jmp    1aec3 <simple_code+0x313>
   1ad16:	4d 8d 24 2e          	lea    (%r14,%rbp,1),%r12
   1ad1a:	48 8d 34 0b          	lea    (%rbx,%rcx,1),%rsi
   1ad1e:	48 81 c6 80 00 00 00 	add    $0x80,%rsi
   1ad25:	4c 89 e7             	mov    %r12,%rdi
   1ad28:	4c 89 fa             	mov    %r15,%rdx
   1ad2b:	e8 20 74 fe ff       	call   2150 <memcpy@plt>
   1ad30:	4c 8b 54 24 60       	mov    0x60(%rsp),%r10
   1ad35:	49 01 ef             	add    %rbp,%r15
   1ad38:	4d 89 3a             	mov    %r15,(%r10)
   1ad3b:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1ad3f:	48 85 c0             	test   %rax,%rax
   1ad42:	74 45                	je     1ad89 <simple_code+0x1d9>
   1ad44:	48 8b 3b             	mov    (%rbx),%rdi
   1ad47:	48 83 ec 08          	sub    $0x8,%rsp
   1ad4b:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ad50:	4c 89 ea             	mov    %r13,%rdx
   1ad53:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1ad58:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1ad5d:	4d 89 f1             	mov    %r14,%r9
   1ad60:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
   1ad65:	41 53                	push   %r11
   1ad67:	ff 74 24 78          	push   0x78(%rsp)
   1ad6b:	41 52                	push   %r10
   1ad6d:	ff d0                	call   *%rax
   1ad6f:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1ad76:	00 
   1ad77:	48 83 c4 20          	add    $0x20,%rsp
   1ad7b:	85 c0                	test   %eax,%eax
   1ad7d:	74 4c                	je     1adcb <simple_code+0x21b>
   1ad7f:	83 f8 01             	cmp    $0x1,%eax
   1ad82:	74 43                	je     1adc7 <simple_code+0x217>
   1ad84:	e9 3a 01 00 00       	jmp    1aec3 <simple_code+0x313>
   1ad89:	4c 89 ef             	mov    %r13,%rdi
   1ad8c:	48 8b 34 24          	mov    (%rsp),%rsi
   1ad90:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1ad95:	4c 89 f1             	mov    %r14,%rcx
   1ad98:	4d 89 d0             	mov    %r10,%r8
   1ad9b:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   1ada0:	e8 7b 81 fe ff       	call   2f20 <lzma_bufcpy>
   1ada5:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   1adaa:	8b 44 24 70          	mov    0x70(%rsp),%eax
   1adae:	83 f8 03             	cmp    $0x3,%eax
   1adb1:	75 18                	jne    1adcb <simple_code+0x21b>
   1adb3:	80 7b 41 00          	cmpb   $0x0,0x41(%rbx)
   1adb7:	74 12                	je     1adcb <simple_code+0x21b>
   1adb9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1adbe:	48 8b 14 24          	mov    (%rsp),%rdx
   1adc2:	48 39 02             	cmp    %rax,(%rdx)
   1adc5:	75 04                	jne    1adcb <simple_code+0x21b>
   1adc7:	c6 43 40 01          	movb   $0x1,0x40(%rbx)
   1adcb:	4c 8b 39             	mov    (%rcx),%r15
   1adce:	49 29 ef             	sub    %rbp,%r15
   1add1:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   1add5:	8b 73 58             	mov    0x58(%rbx),%esi
   1add8:	0f b6 53 41          	movzbl 0x41(%rbx),%edx
   1addc:	4c 89 e1             	mov    %r12,%rcx
   1addf:	4d 89 f8             	mov    %r15,%r8
   1ade2:	ff 53 48             	call   *0x48(%rbx)
   1ade5:	01 43 58             	add    %eax,0x58(%rbx)
   1ade8:	4d 89 fc             	mov    %r15,%r12
   1adeb:	49 29 c4             	sub    %rax,%r12
   1adee:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
   1adf5:	00 
   1adf6:	4c 89 63 78          	mov    %r12,0x78(%rbx)
   1adfa:	80 7b 40 00          	cmpb   $0x0,0x40(%rbx)
   1adfe:	0f 84 ce 00 00 00    	je     1aed2 <simple_code+0x322>
   1ae04:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1ae09:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ae10:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1ae15:	80 7b 40 00          	cmpb   $0x0,0x40(%rbx)
   1ae19:	0f 85 90 00 00 00    	jne    1aeaf <simple_code+0x2ff>
   1ae1f:	e9 9d 00 00 00       	jmp    1aec1 <simple_code+0x311>
   1ae24:	4c 89 ef             	mov    %r13,%rdi
   1ae27:	48 8b 34 24          	mov    (%rsp),%rsi
   1ae2b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1ae30:	48 89 e9             	mov    %rbp,%rcx
   1ae33:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   1ae38:	49 89 c1             	mov    %rax,%r9
   1ae3b:	e8 e0 80 fe ff       	call   2f20 <lzma_bufcpy>
   1ae40:	8b 44 24 70          	mov    0x70(%rsp),%eax
   1ae44:	83 f8 03             	cmp    $0x3,%eax
   1ae47:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
   1ae4c:	75 18                	jne    1ae66 <simple_code+0x2b6>
   1ae4e:	80 7b 41 00          	cmpb   $0x0,0x41(%rbx)
   1ae52:	74 12                	je     1ae66 <simple_code+0x2b6>
   1ae54:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ae59:	48 8b 0c 24          	mov    (%rsp),%rcx
   1ae5d:	48 39 01             	cmp    %rax,(%rcx)
   1ae60:	75 04                	jne    1ae66 <simple_code+0x2b6>
   1ae62:	c6 43 40 01          	movb   $0x1,0x40(%rbx)
   1ae66:	4c 8b 43 78          	mov    0x78(%rbx),%r8
   1ae6a:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   1ae6e:	8b 73 58             	mov    0x58(%rbx),%esi
   1ae71:	0f b6 53 41          	movzbl 0x41(%rbx),%edx
   1ae75:	48 89 e9             	mov    %rbp,%rcx
   1ae78:	ff 53 48             	call   *0x48(%rbx)
   1ae7b:	01 43 58             	add    %eax,0x58(%rbx)
   1ae7e:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1ae82:	80 7b 40 00          	cmpb   $0x0,0x40(%rbx)
   1ae86:	74 08                	je     1ae90 <simple_code+0x2e0>
   1ae88:	48 8b 43 78          	mov    0x78(%rbx),%rax
   1ae8c:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1ae90:	4c 8b 44 24 60       	mov    0x60(%rsp),%r8
   1ae95:	48 89 ef             	mov    %rbp,%rdi
   1ae98:	4c 89 fe             	mov    %r15,%rsi
   1ae9b:	48 89 c2             	mov    %rax,%rdx
   1ae9e:	4c 89 f1             	mov    %r14,%rcx
   1aea1:	4d 89 e1             	mov    %r12,%r9
   1aea4:	e8 77 80 fe ff       	call   2f20 <lzma_bufcpy>
   1aea9:	80 7b 40 00          	cmpb   $0x0,0x40(%rbx)
   1aead:	74 12                	je     1aec1 <simple_code+0x311>
   1aeaf:	49 8b 0f             	mov    (%r15),%rcx
   1aeb2:	b8 01 00 00 00       	mov    $0x1,%eax
   1aeb7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1aebc:	48 3b 0a             	cmp    (%rdx),%rcx
   1aebf:	74 02                	je     1aec3 <simple_code+0x313>
   1aec1:	31 c0                	xor    %eax,%eax
   1aec3:	48 83 c4 28          	add    $0x28,%rsp
   1aec7:	5b                   	pop    %rbx
   1aec8:	41 5c                	pop    %r12
   1aeca:	41 5d                	pop    %r13
   1aecc:	41 5e                	pop    %r14
   1aece:	41 5f                	pop    %r15
   1aed0:	5d                   	pop    %rbp
   1aed1:	c3                   	ret    
   1aed2:	49 39 c7             	cmp    %rax,%r15
   1aed5:	0f 84 cb fd ff ff    	je     1aca6 <simple_code+0xf6>
   1aedb:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
   1aee2:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1aee7:	48 8b 30             	mov    (%rax),%rsi
   1aeea:	4c 29 e6             	sub    %r12,%rsi
   1aeed:	48 89 30             	mov    %rsi,(%rax)
   1aef0:	4c 01 f6             	add    %r14,%rsi
   1aef3:	4c 89 e2             	mov    %r12,%rdx
   1aef6:	e8 55 72 fe ff       	call   2150 <memcpy@plt>
   1aefb:	e9 a6 fd ff ff       	jmp    1aca6 <simple_code+0xf6>

000000000001af00 <simple_coder_end>:
   1af00:	41 56                	push   %r14
   1af02:	53                   	push   %rbx
   1af03:	50                   	push   %rax
   1af04:	48 89 f3             	mov    %rsi,%rbx
   1af07:	49 89 fe             	mov    %rdi,%r14
   1af0a:	e8 31 81 fe ff       	call   3040 <lzma_next_end>
   1af0f:	49 8b 7e 50          	mov    0x50(%r14),%rdi
   1af13:	48 89 de             	mov    %rbx,%rsi
   1af16:	e8 d5 7f fe ff       	call   2ef0 <lzma_free>
   1af1b:	4c 89 f7             	mov    %r14,%rdi
   1af1e:	48 89 de             	mov    %rbx,%rsi
   1af21:	48 83 c4 08          	add    $0x8,%rsp
   1af25:	5b                   	pop    %rbx
   1af26:	41 5e                	pop    %r14
   1af28:	e9 c3 7f fe ff       	jmp    2ef0 <lzma_free>
   1af2d:	0f 1f 00             	nopl   (%rax)

000000000001af30 <simple_coder_update>:
   1af30:	48 8d 51 10          	lea    0x10(%rcx),%rdx
   1af34:	e9 77 81 fe ff       	jmp    30b0 <lzma_next_filter_update>
   1af39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001af40 <lzma_simple_props_size>:
   1af40:	31 c0                	xor    %eax,%eax
   1af42:	48 85 f6             	test   %rsi,%rsi
   1af45:	74 09                	je     1af50 <lzma_simple_props_size+0x10>
   1af47:	83 3e 00             	cmpl   $0x0,(%rsi)
   1af4a:	0f 95 c0             	setne  %al
   1af4d:	c1 e0 02             	shl    $0x2,%eax
   1af50:	89 07                	mov    %eax,(%rdi)
   1af52:	31 c0                	xor    %eax,%eax
   1af54:	c3                   	ret    
   1af55:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1af5c:	00 00 00 00 

000000000001af60 <lzma_simple_props_encode>:
   1af60:	48 85 ff             	test   %rdi,%rdi
   1af63:	74 08                	je     1af6d <lzma_simple_props_encode+0xd>
   1af65:	8b 07                	mov    (%rdi),%eax
   1af67:	85 c0                	test   %eax,%eax
   1af69:	74 02                	je     1af6d <lzma_simple_props_encode+0xd>
   1af6b:	89 06                	mov    %eax,(%rsi)
   1af6d:	31 c0                	xor    %eax,%eax
   1af6f:	c3                   	ret    

000000000001af70 <lzma_simple_props_decode>:
   1af70:	31 c0                	xor    %eax,%eax
   1af72:	48 85 c9             	test   %rcx,%rcx
   1af75:	74 42                	je     1afb9 <lzma_simple_props_decode+0x49>
   1af77:	48 83 f9 04          	cmp    $0x4,%rcx
   1af7b:	75 37                	jne    1afb4 <lzma_simple_props_decode+0x44>
   1af7d:	41 57                	push   %r15
   1af7f:	41 56                	push   %r14
   1af81:	53                   	push   %rbx
   1af82:	49 89 d7             	mov    %rdx,%r15
   1af85:	49 89 fe             	mov    %rdi,%r14
   1af88:	bf 04 00 00 00       	mov    $0x4,%edi
   1af8d:	48 89 f3             	mov    %rsi,%rbx
   1af90:	e8 2b 7f fe ff       	call   2ec0 <lzma_alloc>
   1af95:	48 85 c0             	test   %rax,%rax
   1af98:	74 20                	je     1afba <lzma_simple_props_decode+0x4a>
   1af9a:	48 89 c7             	mov    %rax,%rdi
   1af9d:	41 8b 07             	mov    (%r15),%eax
   1afa0:	89 07                	mov    %eax,(%rdi)
   1afa2:	85 c0                	test   %eax,%eax
   1afa4:	b8 00 00 00 00       	mov    $0x0,%eax
   1afa9:	74 1a                	je     1afc5 <lzma_simple_props_decode+0x55>
   1afab:	49 89 3e             	mov    %rdi,(%r14)
   1afae:	5b                   	pop    %rbx
   1afaf:	41 5e                	pop    %r14
   1afb1:	41 5f                	pop    %r15
   1afb3:	c3                   	ret    
   1afb4:	b8 08 00 00 00       	mov    $0x8,%eax
   1afb9:	c3                   	ret    
   1afba:	b8 05 00 00 00       	mov    $0x5,%eax
   1afbf:	5b                   	pop    %rbx
   1afc0:	41 5e                	pop    %r14
   1afc2:	41 5f                	pop    %r15
   1afc4:	c3                   	ret    
   1afc5:	48 89 de             	mov    %rbx,%rsi
   1afc8:	e8 23 7f fe ff       	call   2ef0 <lzma_free>
   1afcd:	31 c0                	xor    %eax,%eax
   1afcf:	5b                   	pop    %rbx
   1afd0:	41 5e                	pop    %r14
   1afd2:	41 5f                	pop    %r15
   1afd4:	c3                   	ret    
   1afd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1afdc:	00 00 00 
   1afdf:	90                   	nop

000000000001afe0 <lzma_simple_x86_encoder_init>:
   1afe0:	53                   	push   %rbx
   1afe1:	48 89 fb             	mov    %rdi,%rbx
   1afe4:	48 8d 0d 95 00 00 00 	lea    0x95(%rip),%rcx        # 1b080 <x86_code>
   1afeb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1aff1:	41 b9 05 00 00 00    	mov    $0x5,%r9d
   1aff7:	6a 01                	push   $0x1
   1aff9:	6a 01                	push   $0x1
   1affb:	e8 20 fa ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b000:	48 83 c4 10          	add    $0x10,%rsp
   1b004:	85 c0                	test   %eax,%eax
   1b006:	74 02                	je     1b00a <lzma_simple_x86_encoder_init+0x2a>
   1b008:	5b                   	pop    %rbx
   1b009:	c3                   	ret    
   1b00a:	48 8b 0b             	mov    (%rbx),%rcx
   1b00d:	48 8b 49 50          	mov    0x50(%rcx),%rcx
   1b011:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   1b017:	48 8b 0b             	mov    (%rbx),%rcx
   1b01a:	48 8b 49 50          	mov    0x50(%rcx),%rcx
   1b01e:	c7 41 04 fb ff ff ff 	movl   $0xfffffffb,0x4(%rcx)
   1b025:	5b                   	pop    %rbx
   1b026:	c3                   	ret    
   1b027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b02e:	00 00 

000000000001b030 <lzma_simple_x86_decoder_init>:
   1b030:	53                   	push   %rbx
   1b031:	48 89 fb             	mov    %rdi,%rbx
   1b034:	48 8d 0d 45 00 00 00 	lea    0x45(%rip),%rcx        # 1b080 <x86_code>
   1b03b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b041:	41 b9 05 00 00 00    	mov    $0x5,%r9d
   1b047:	6a 00                	push   $0x0
   1b049:	6a 01                	push   $0x1
   1b04b:	e8 d0 f9 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b050:	48 83 c4 10          	add    $0x10,%rsp
   1b054:	85 c0                	test   %eax,%eax
   1b056:	74 02                	je     1b05a <lzma_simple_x86_decoder_init+0x2a>
   1b058:	5b                   	pop    %rbx
   1b059:	c3                   	ret    
   1b05a:	48 8b 0b             	mov    (%rbx),%rcx
   1b05d:	48 8b 49 50          	mov    0x50(%rcx),%rcx
   1b061:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   1b067:	48 8b 0b             	mov    (%rbx),%rcx
   1b06a:	48 8b 49 50          	mov    0x50(%rcx),%rcx
   1b06e:	c7 41 04 fb ff ff ff 	movl   $0xfffffffb,0x4(%rcx)
   1b075:	5b                   	pop    %rbx
   1b076:	c3                   	ret    
   1b077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b07e:	00 00 

000000000001b080 <x86_code>:
   1b080:	49 83 f8 05          	cmp    $0x5,%r8
   1b084:	73 03                	jae    1b089 <x86_code+0x9>
   1b086:	31 c0                	xor    %eax,%eax
   1b088:	c3                   	ret    
   1b089:	55                   	push   %rbp
   1b08a:	41 57                	push   %r15
   1b08c:	41 56                	push   %r14
   1b08e:	41 55                	push   %r13
   1b090:	41 54                	push   %r12
   1b092:	53                   	push   %rbx
   1b093:	48 89 cd             	mov    %rcx,%rbp
   1b096:	8b 0f                	mov    (%rdi),%ecx
   1b098:	8b 47 04             	mov    0x4(%rdi),%eax
   1b09b:	41 89 f1             	mov    %esi,%r9d
   1b09e:	41 29 c1             	sub    %eax,%r9d
   1b0a1:	8d 5e fb             	lea    -0x5(%rsi),%ebx
   1b0a4:	41 83 f9 06          	cmp    $0x6,%r9d
   1b0a8:	0f 42 d8             	cmovb  %eax,%ebx
   1b0ab:	49 83 c0 fb          	add    $0xfffffffffffffffb,%r8
   1b0af:	31 c0                	xor    %eax,%eax
   1b0b1:	41 ba e8 00 00 00    	mov    $0xe8,%r10d
   1b0b7:	4c 8d 1d 62 f2 00 00 	lea    0xf262(%rip),%r11        # 2a320 <x86_code.MASK_TO_BIT_NUMBER>
   1b0be:	eb 0c                	jmp    1b0cc <x86_code+0x4c>
   1b0c0:	48 ff c0             	inc    %rax
   1b0c3:	4c 39 c0             	cmp    %r8,%rax
   1b0c6:	0f 87 56 01 00 00    	ja     1b222 <x86_code+0x1a2>
   1b0cc:	44 0f b6 4c 05 00    	movzbl 0x0(%rbp,%rax,1),%r9d
   1b0d2:	41 80 c1 16          	add    $0x16,%r9b
   1b0d6:	41 80 f9 fd          	cmp    $0xfd,%r9b
   1b0da:	76 e4                	jbe    1b0c0 <x86_code+0x40>
   1b0dc:	44 8d 34 30          	lea    (%rax,%rsi,1),%r14d
   1b0e0:	45 89 f7             	mov    %r14d,%r15d
   1b0e3:	41 29 df             	sub    %ebx,%r15d
   1b0e6:	45 31 c9             	xor    %r9d,%r9d
   1b0e9:	41 83 ff 05          	cmp    $0x5,%r15d
   1b0ed:	77 2d                	ja     1b11c <x86_code+0x9c>
   1b0ef:	41 39 de             	cmp    %ebx,%r14d
   1b0f2:	75 05                	jne    1b0f9 <x86_code+0x79>
   1b0f4:	41 89 c9             	mov    %ecx,%r9d
   1b0f7:	eb 23                	jmp    1b11c <x86_code+0x9c>
   1b0f9:	41 83 ff 01          	cmp    $0x1,%r15d
   1b0fd:	41 83 d7 00          	adc    $0x0,%r15d
   1b101:	41 89 c9             	mov    %ecx,%r9d
   1b104:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1b10b:	00 00 00 00 00 
   1b110:	41 83 e1 77          	and    $0x77,%r9d
   1b114:	45 01 c9             	add    %r9d,%r9d
   1b117:	41 ff cf             	dec    %r15d
   1b11a:	75 f4                	jne    1b110 <x86_code+0x90>
   1b11c:	0f b6 5c 05 04       	movzbl 0x4(%rbp,%rax,1),%ebx
   1b121:	44 8d 7b 01          	lea    0x1(%rbx),%r15d
   1b125:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b12a:	41 80 ff 01          	cmp    $0x1,%r15b
   1b12e:	0f 87 dc 00 00 00    	ja     1b210 <x86_code+0x190>
   1b134:	45 89 cc             	mov    %r9d,%r12d
   1b137:	41 d1 ec             	shr    %r12d
   1b13a:	44 89 e1             	mov    %r12d,%ecx
   1b13d:	83 e1 07             	and    $0x7,%ecx
   1b140:	41 0f a3 ca          	bt     %ecx,%r10d
   1b144:	b9 11 00 00 00       	mov    $0x11,%ecx
   1b149:	0f 82 c1 00 00 00    	jb     1b210 <x86_code+0x190>
   1b14f:	41 83 f9 1f          	cmp    $0x1f,%r9d
   1b153:	0f 87 b7 00 00 00    	ja     1b210 <x86_code+0x190>
   1b159:	c1 e3 18             	shl    $0x18,%ebx
   1b15c:	0f b6 4c 05 03       	movzbl 0x3(%rbp,%rax,1),%ecx
   1b161:	c1 e1 10             	shl    $0x10,%ecx
   1b164:	09 d9                	or     %ebx,%ecx
   1b166:	44 0f b6 7c 05 02    	movzbl 0x2(%rbp,%rax,1),%r15d
   1b16c:	41 c1 e7 08          	shl    $0x8,%r15d
   1b170:	41 09 cf             	or     %ecx,%r15d
   1b173:	0f b6 5c 05 01       	movzbl 0x1(%rbp,%rax,1),%ebx
   1b178:	44 09 fb             	or     %r15d,%ebx
   1b17b:	41 8d 4e 05          	lea    0x5(%r14),%ecx
   1b17f:	41 bf fb ff ff ff    	mov    $0xfffffffb,%r15d
   1b185:	45 29 f7             	sub    %r14d,%r15d
   1b188:	84 d2                	test   %dl,%dl
   1b18a:	44 0f 45 f9          	cmovne %ecx,%r15d
   1b18e:	44 01 fb             	add    %r15d,%ebx
   1b191:	45 85 c9             	test   %r9d,%r9d
   1b194:	74 49                	je     1b1df <x86_code+0x15f>
   1b196:	44 89 e1             	mov    %r12d,%ecx
   1b199:	41 8b 0c 8b          	mov    (%r11,%rcx,4),%ecx
   1b19d:	c1 e1 03             	shl    $0x3,%ecx
   1b1a0:	41 b9 18 00 00 00    	mov    $0x18,%r9d
   1b1a6:	41 29 c9             	sub    %ecx,%r9d
   1b1a9:	f6 d9                	neg    %cl
   1b1ab:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   1b1b1:	41 d3 e4             	shl    %cl,%r12d
   1b1b4:	eb 12                	jmp    1b1c8 <x86_code+0x148>
   1b1b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b1bd:	00 00 00 
   1b1c0:	44 31 e3             	xor    %r12d,%ebx
   1b1c3:	f7 d3                	not    %ebx
   1b1c5:	44 01 fb             	add    %r15d,%ebx
   1b1c8:	41 89 dd             	mov    %ebx,%r13d
   1b1cb:	44 89 c9             	mov    %r9d,%ecx
   1b1ce:	41 d3 ed             	shr    %cl,%r13d
   1b1d1:	41 80 fd ff          	cmp    $0xff,%r13b
   1b1d5:	74 e9                	je     1b1c0 <x86_code+0x140>
   1b1d7:	41 0f b6 cd          	movzbl %r13b,%ecx
   1b1db:	85 c9                	test   %ecx,%ecx
   1b1dd:	74 e1                	je     1b1c0 <x86_code+0x140>
   1b1df:	89 d9                	mov    %ebx,%ecx
   1b1e1:	c1 e1 07             	shl    $0x7,%ecx
   1b1e4:	c1 f9 1f             	sar    $0x1f,%ecx
   1b1e7:	88 4c 05 04          	mov    %cl,0x4(%rbp,%rax,1)
   1b1eb:	89 d9                	mov    %ebx,%ecx
   1b1ed:	c1 e9 10             	shr    $0x10,%ecx
   1b1f0:	88 4c 05 03          	mov    %cl,0x3(%rbp,%rax,1)
   1b1f4:	88 7c 05 02          	mov    %bh,0x2(%rbp,%rax,1)
   1b1f8:	88 5c 05 01          	mov    %bl,0x1(%rbp,%rax,1)
   1b1fc:	48 83 c0 05          	add    $0x5,%rax
   1b200:	31 c9                	xor    %ecx,%ecx
   1b202:	44 89 f3             	mov    %r14d,%ebx
   1b205:	4c 39 c0             	cmp    %r8,%rax
   1b208:	0f 86 be fe ff ff    	jbe    1b0cc <x86_code+0x4c>
   1b20e:	eb 12                	jmp    1b222 <x86_code+0x1a2>
   1b210:	48 ff c0             	inc    %rax
   1b213:	44 09 c9             	or     %r9d,%ecx
   1b216:	44 89 f3             	mov    %r14d,%ebx
   1b219:	4c 39 c0             	cmp    %r8,%rax
   1b21c:	0f 86 aa fe ff ff    	jbe    1b0cc <x86_code+0x4c>
   1b222:	89 0f                	mov    %ecx,(%rdi)
   1b224:	89 5f 04             	mov    %ebx,0x4(%rdi)
   1b227:	5b                   	pop    %rbx
   1b228:	41 5c                	pop    %r12
   1b22a:	41 5d                	pop    %r13
   1b22c:	41 5e                	pop    %r14
   1b22e:	41 5f                	pop    %r15
   1b230:	5d                   	pop    %rbp
   1b231:	c3                   	ret    
   1b232:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b239:	00 00 00 
   1b23c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b240 <lzma_simple_powerpc_encoder_init>:
   1b240:	50                   	push   %rax
   1b241:	48 8d 0d 38 00 00 00 	lea    0x38(%rip),%rcx        # 1b280 <powerpc_code>
   1b248:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b24e:	45 31 c0             	xor    %r8d,%r8d
   1b251:	6a 01                	push   $0x1
   1b253:	6a 04                	push   $0x4
   1b255:	e8 c6 f7 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b25a:	48 83 c4 10          	add    $0x10,%rsp
   1b25e:	59                   	pop    %rcx
   1b25f:	c3                   	ret    

000000000001b260 <lzma_simple_powerpc_decoder_init>:
   1b260:	50                   	push   %rax
   1b261:	48 8d 0d 18 00 00 00 	lea    0x18(%rip),%rcx        # 1b280 <powerpc_code>
   1b268:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b26e:	45 31 c0             	xor    %r8d,%r8d
   1b271:	6a 00                	push   $0x0
   1b273:	6a 04                	push   $0x4
   1b275:	e8 a6 f7 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b27a:	48 83 c4 10          	add    $0x10,%rsp
   1b27e:	59                   	pop    %rcx
   1b27f:	c3                   	ret    

000000000001b280 <powerpc_code>:
   1b280:	49 83 f8 04          	cmp    $0x4,%r8
   1b284:	73 03                	jae    1b289 <powerpc_code+0x9>
   1b286:	31 c0                	xor    %eax,%eax
   1b288:	c3                   	ret    
   1b289:	53                   	push   %rbx
   1b28a:	84 d2                	test   %dl,%dl
   1b28c:	0f 84 9d 00 00 00    	je     1b32f <powerpc_code+0xaf>
   1b292:	89 f2                	mov    %esi,%edx
   1b294:	31 f6                	xor    %esi,%esi
   1b296:	eb 1c                	jmp    1b2b4 <powerpc_code+0x34>
   1b298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b29f:	00 
   1b2a0:	48 8d 46 04          	lea    0x4(%rsi),%rax
   1b2a4:	48 83 c6 08          	add    $0x8,%rsi
   1b2a8:	4c 39 c6             	cmp    %r8,%rsi
   1b2ab:	48 89 c6             	mov    %rax,%rsi
   1b2ae:	0f 87 1c 01 00 00    	ja     1b3d0 <powerpc_code+0x150>
   1b2b4:	0f b6 3c 31          	movzbl (%rcx,%rsi,1),%edi
   1b2b8:	89 f8                	mov    %edi,%eax
   1b2ba:	83 e0 fc             	and    $0xfffffffc,%eax
   1b2bd:	83 f8 48             	cmp    $0x48,%eax
   1b2c0:	75 de                	jne    1b2a0 <powerpc_code+0x20>
   1b2c2:	0f b6 44 31 03       	movzbl 0x3(%rcx,%rsi,1),%eax
   1b2c7:	41 89 c1             	mov    %eax,%r9d
   1b2ca:	41 83 e1 03          	and    $0x3,%r9d
   1b2ce:	41 83 f9 01          	cmp    $0x1,%r9d
   1b2d2:	75 cc                	jne    1b2a0 <powerpc_code+0x20>
   1b2d4:	83 e7 03             	and    $0x3,%edi
   1b2d7:	c1 e7 18             	shl    $0x18,%edi
   1b2da:	44 0f b6 4c 31 01    	movzbl 0x1(%rcx,%rsi,1),%r9d
   1b2e0:	41 c1 e1 10          	shl    $0x10,%r9d
   1b2e4:	41 09 f9             	or     %edi,%r9d
   1b2e7:	0f b6 5c 31 02       	movzbl 0x2(%rcx,%rsi,1),%ebx
   1b2ec:	c1 e3 08             	shl    $0x8,%ebx
   1b2ef:	44 09 cb             	or     %r9d,%ebx
   1b2f2:	89 c7                	mov    %eax,%edi
   1b2f4:	83 e7 fc             	and    $0xfffffffc,%edi
   1b2f7:	01 d7                	add    %edx,%edi
   1b2f9:	01 f7                	add    %esi,%edi
   1b2fb:	01 fb                	add    %edi,%ebx
   1b2fd:	41 89 d9             	mov    %ebx,%r9d
   1b300:	41 c1 e9 18          	shr    $0x18,%r9d
   1b304:	41 80 e1 03          	and    $0x3,%r9b
   1b308:	41 80 c9 48          	or     $0x48,%r9b
   1b30c:	44 88 0c 31          	mov    %r9b,(%rcx,%rsi,1)
   1b310:	41 89 d9             	mov    %ebx,%r9d
   1b313:	41 c1 e9 10          	shr    $0x10,%r9d
   1b317:	44 88 4c 31 01       	mov    %r9b,0x1(%rcx,%rsi,1)
   1b31c:	88 7c 31 02          	mov    %bh,0x2(%rcx,%rsi,1)
   1b320:	24 03                	and    $0x3,%al
   1b322:	40 08 c7             	or     %al,%dil
   1b325:	40 88 7c 31 03       	mov    %dil,0x3(%rcx,%rsi,1)
   1b32a:	e9 71 ff ff ff       	jmp    1b2a0 <powerpc_code+0x20>
   1b32f:	f7 de                	neg    %esi
   1b331:	31 d2                	xor    %edx,%edx
   1b333:	eb 1e                	jmp    1b353 <powerpc_code+0xd3>
   1b335:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1b33c:	00 00 00 00 
   1b340:	48 8d 42 04          	lea    0x4(%rdx),%rax
   1b344:	83 c6 fc             	add    $0xfffffffc,%esi
   1b347:	48 83 c2 08          	add    $0x8,%rdx
   1b34b:	4c 39 c2             	cmp    %r8,%rdx
   1b34e:	48 89 c2             	mov    %rax,%rdx
   1b351:	77 7d                	ja     1b3d0 <powerpc_code+0x150>
   1b353:	0f b6 3c 11          	movzbl (%rcx,%rdx,1),%edi
   1b357:	89 f8                	mov    %edi,%eax
   1b359:	83 e0 fc             	and    $0xfffffffc,%eax
   1b35c:	83 f8 48             	cmp    $0x48,%eax
   1b35f:	75 df                	jne    1b340 <powerpc_code+0xc0>
   1b361:	0f b6 44 11 03       	movzbl 0x3(%rcx,%rdx,1),%eax
   1b366:	41 89 c1             	mov    %eax,%r9d
   1b369:	41 83 e1 03          	and    $0x3,%r9d
   1b36d:	41 83 f9 01          	cmp    $0x1,%r9d
   1b371:	75 cd                	jne    1b340 <powerpc_code+0xc0>
   1b373:	83 e7 03             	and    $0x3,%edi
   1b376:	c1 e7 18             	shl    $0x18,%edi
   1b379:	44 0f b6 4c 11 01    	movzbl 0x1(%rcx,%rdx,1),%r9d
   1b37f:	41 c1 e1 10          	shl    $0x10,%r9d
   1b383:	41 09 f9             	or     %edi,%r9d
   1b386:	0f b6 7c 11 02       	movzbl 0x2(%rcx,%rdx,1),%edi
   1b38b:	c1 e7 08             	shl    $0x8,%edi
   1b38e:	44 09 cf             	or     %r9d,%edi
   1b391:	89 c3                	mov    %eax,%ebx
   1b393:	83 e3 fc             	and    $0xfffffffc,%ebx
   1b396:	09 fb                	or     %edi,%ebx
   1b398:	01 f3                	add    %esi,%ebx
   1b39a:	89 df                	mov    %ebx,%edi
   1b39c:	c1 ef 18             	shr    $0x18,%edi
   1b39f:	40 80 e7 03          	and    $0x3,%dil
   1b3a3:	40 80 cf 48          	or     $0x48,%dil
   1b3a7:	40 88 3c 11          	mov    %dil,(%rcx,%rdx,1)
   1b3ab:	89 df                	mov    %ebx,%edi
   1b3ad:	c1 ef 10             	shr    $0x10,%edi
   1b3b0:	40 88 7c 11 01       	mov    %dil,0x1(%rcx,%rdx,1)
   1b3b5:	88 7c 11 02          	mov    %bh,0x2(%rcx,%rdx,1)
   1b3b9:	89 c7                	mov    %eax,%edi
   1b3bb:	40 80 e7 03          	and    $0x3,%dil
   1b3bf:	24 fc                	and    $0xfc,%al
   1b3c1:	40 00 f0             	add    %sil,%al
   1b3c4:	40 08 f8             	or     %dil,%al
   1b3c7:	88 44 11 03          	mov    %al,0x3(%rcx,%rdx,1)
   1b3cb:	e9 70 ff ff ff       	jmp    1b340 <powerpc_code+0xc0>
   1b3d0:	5b                   	pop    %rbx
   1b3d1:	c3                   	ret    
   1b3d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b3d9:	00 00 00 
   1b3dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b3e0 <lzma_simple_ia64_encoder_init>:
   1b3e0:	50                   	push   %rax
   1b3e1:	48 8d 0d 38 00 00 00 	lea    0x38(%rip),%rcx        # 1b420 <ia64_code>
   1b3e8:	41 b9 10 00 00 00    	mov    $0x10,%r9d
   1b3ee:	45 31 c0             	xor    %r8d,%r8d
   1b3f1:	6a 01                	push   $0x1
   1b3f3:	6a 10                	push   $0x10
   1b3f5:	e8 26 f6 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b3fa:	48 83 c4 10          	add    $0x10,%rsp
   1b3fe:	59                   	pop    %rcx
   1b3ff:	c3                   	ret    

000000000001b400 <lzma_simple_ia64_decoder_init>:
   1b400:	50                   	push   %rax
   1b401:	48 8d 0d 18 00 00 00 	lea    0x18(%rip),%rcx        # 1b420 <ia64_code>
   1b408:	41 b9 10 00 00 00    	mov    $0x10,%r9d
   1b40e:	45 31 c0             	xor    %r8d,%r8d
   1b411:	6a 00                	push   $0x0
   1b413:	6a 10                	push   $0x10
   1b415:	e8 06 f6 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b41a:	48 83 c4 10          	add    $0x10,%rsp
   1b41e:	59                   	pop    %rcx
   1b41f:	c3                   	ret    

000000000001b420 <ia64_code>:
   1b420:	49 83 f8 10          	cmp    $0x10,%r8
   1b424:	73 03                	jae    1b429 <ia64_code+0x9>
   1b426:	31 c0                	xor    %eax,%eax
   1b428:	c3                   	ret    
   1b429:	55                   	push   %rbp
   1b42a:	41 57                	push   %r15
   1b42c:	41 56                	push   %r14
   1b42e:	41 55                	push   %r13
   1b430:	41 54                	push   %r12
   1b432:	53                   	push   %rbx
   1b433:	b8 ff ff 30 cc       	mov    $0xcc30ffff,%eax
   1b438:	41 89 f1             	mov    %esi,%r9d
   1b43b:	f7 de                	neg    %esi
   1b43d:	45 31 d2             	xor    %r10d,%r10d
   1b440:	44 8d 98 00 00 03 33 	lea    0x33030000(%rax),%r11d
   1b447:	eb 1e                	jmp    1b467 <ia64_code+0x47>
   1b449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b450:	49 8d 42 10          	lea    0x10(%r10),%rax
   1b454:	83 c6 f0             	add    $0xfffffff0,%esi
   1b457:	49 83 c2 20          	add    $0x20,%r10
   1b45b:	4d 39 c2             	cmp    %r8,%r10
   1b45e:	49 89 c2             	mov    %rax,%r10
   1b461:	0f 87 09 03 00 00    	ja     1b770 <ia64_code+0x350>
   1b467:	42 0f b6 1c 11       	movzbl (%rcx,%r10,1),%ebx
   1b46c:	41 89 de             	mov    %ebx,%r14d
   1b46f:	41 83 e6 1f          	and    $0x1f,%r14d
   1b473:	43 8d 04 11          	lea    (%r9,%r10,1),%eax
   1b477:	84 d2                	test   %dl,%dl
   1b479:	0f 44 c6             	cmove  %esi,%eax
   1b47c:	c1 e8 04             	shr    $0x4,%eax
   1b47f:	45 8d 7e e8          	lea    -0x18(%r14),%r15d
   1b483:	41 80 ff fe          	cmp    $0xfe,%r15b
   1b487:	0f 82 e6 00 00 00    	jb     1b573 <ia64_code+0x153>
   1b48d:	46 0f b6 64 11 01    	movzbl 0x1(%rcx,%r10,1),%r12d
   1b493:	45 89 e7             	mov    %r12d,%r15d
   1b496:	41 c1 e7 08          	shl    $0x8,%r15d
   1b49a:	46 0f b6 6c 11 02    	movzbl 0x2(%rcx,%r10,1),%r13d
   1b4a0:	41 c1 e5 10          	shl    $0x10,%r13d
   1b4a4:	45 09 fd             	or     %r15d,%r13d
   1b4a7:	49 09 dd             	or     %rbx,%r13
   1b4aa:	42 0f b6 6c 11 03    	movzbl 0x3(%rcx,%r10,1),%ebp
   1b4b0:	c1 e5 18             	shl    $0x18,%ebp
   1b4b3:	46 0f b6 7c 11 04    	movzbl 0x4(%rcx,%r10,1),%r15d
   1b4b9:	49 c1 e7 20          	shl    $0x20,%r15
   1b4bd:	49 09 ef             	or     %rbp,%r15
   1b4c0:	4d 09 ef             	or     %r13,%r15
   1b4c3:	46 0f b6 6c 11 05    	movzbl 0x5(%rcx,%r10,1),%r13d
   1b4c9:	49 c1 e5 28          	shl    $0x28,%r13
   1b4cd:	4d 09 fd             	or     %r15,%r13
   1b4d0:	4c 89 ed             	mov    %r13,%rbp
   1b4d3:	48 bf 00 c0 01 00 00 	movabs $0x3c000001c000,%rdi
   1b4da:	3c 00 00 
   1b4dd:	48 21 fd             	and    %rdi,%rbp
   1b4e0:	48 bf 00 00 00 00 00 	movabs $0x140000000000,%rdi
   1b4e7:	14 00 00 
   1b4ea:	48 39 fd             	cmp    %rdi,%rbp
   1b4ed:	0f 85 80 00 00 00    	jne    1b573 <ia64_code+0x153>
   1b4f3:	49 c1 ef 12          	shr    $0x12,%r15
   1b4f7:	41 81 e7 ff ff 0f 00 	and    $0xfffff,%r15d
   1b4fe:	4c 89 ed             	mov    %r13,%rbp
   1b501:	48 c1 ed 15          	shr    $0x15,%rbp
   1b505:	81 e5 00 00 10 00    	and    $0x100000,%ebp
   1b50b:	44 09 fd             	or     %r15d,%ebp
   1b50e:	01 c5                	add    %eax,%ebp
   1b510:	48 bf e0 3f 02 00 c0 	movabs $0xd5c000023fe0,%rdi
   1b517:	d5 00 00 
   1b51a:	49 21 fd             	and    %rdi,%r13
   1b51d:	41 89 ef             	mov    %ebp,%r15d
   1b520:	41 81 e7 ff ff 0f 00 	and    $0xfffff,%r15d
   1b527:	49 c1 e7 12          	shl    $0x12,%r15
   1b52b:	4d 09 ef             	or     %r13,%r15
   1b52e:	81 e5 00 00 10 00    	and    $0x100000,%ebp
   1b534:	48 c1 e5 15          	shl    $0x15,%rbp
   1b538:	83 e3 1f             	and    $0x1f,%ebx
   1b53b:	48 09 eb             	or     %rbp,%rbx
   1b53e:	4c 09 fb             	or     %r15,%rbx
   1b541:	42 88 1c 11          	mov    %bl,(%rcx,%r10,1)
   1b545:	46 88 64 11 01       	mov    %r12b,0x1(%rcx,%r10,1)
   1b54a:	89 dd                	mov    %ebx,%ebp
   1b54c:	c1 ed 10             	shr    $0x10,%ebp
   1b54f:	42 88 6c 11 02       	mov    %bpl,0x2(%rcx,%r10,1)
   1b554:	89 dd                	mov    %ebx,%ebp
   1b556:	c1 ed 18             	shr    $0x18,%ebp
   1b559:	42 88 6c 11 03       	mov    %bpl,0x3(%rcx,%r10,1)
   1b55e:	49 89 df             	mov    %rbx,%r15
   1b561:	49 c1 ef 20          	shr    $0x20,%r15
   1b565:	46 88 7c 11 04       	mov    %r15b,0x4(%rcx,%r10,1)
   1b56a:	48 c1 eb 28          	shr    $0x28,%rbx
   1b56e:	42 88 5c 11 05       	mov    %bl,0x5(%rcx,%r10,1)
   1b573:	45 0f a3 f3          	bt     %r14d,%r11d
   1b577:	0f 82 f8 00 00 00    	jb     1b675 <ia64_code+0x255>
   1b57d:	42 0f b6 5c 11 05    	movzbl 0x5(%rcx,%r10,1),%ebx
   1b583:	46 0f b6 64 11 06    	movzbl 0x6(%rcx,%r10,1),%r12d
   1b589:	44 89 e5             	mov    %r12d,%ebp
   1b58c:	c1 e5 08             	shl    $0x8,%ebp
   1b58f:	46 0f b6 6c 11 07    	movzbl 0x7(%rcx,%r10,1),%r13d
   1b595:	41 c1 e5 10          	shl    $0x10,%r13d
   1b599:	41 09 ed             	or     %ebp,%r13d
   1b59c:	49 09 dd             	or     %rbx,%r13
   1b59f:	42 0f b6 6c 11 08    	movzbl 0x8(%rcx,%r10,1),%ebp
   1b5a5:	c1 e5 18             	shl    $0x18,%ebp
   1b5a8:	46 0f b6 7c 11 09    	movzbl 0x9(%rcx,%r10,1),%r15d
   1b5ae:	49 c1 e7 20          	shl    $0x20,%r15
   1b5b2:	49 09 ef             	or     %rbp,%r15
   1b5b5:	4d 09 ef             	or     %r13,%r15
   1b5b8:	46 0f b6 6c 11 0a    	movzbl 0xa(%rcx,%r10,1),%r13d
   1b5be:	49 c1 e5 28          	shl    $0x28,%r13
   1b5c2:	4d 09 fd             	or     %r15,%r13
   1b5c5:	4c 89 ed             	mov    %r13,%rbp
   1b5c8:	48 bf 00 80 03 00 00 	movabs $0x780000038000,%rdi
   1b5cf:	78 00 00 
   1b5d2:	48 21 fd             	and    %rdi,%rbp
   1b5d5:	44 89 df             	mov    %r11d,%edi
   1b5d8:	4d 89 cb             	mov    %r9,%r11
   1b5db:	49 b9 00 00 00 00 00 	movabs $0x280000000000,%r9
   1b5e2:	28 00 00 
   1b5e5:	4c 39 cd             	cmp    %r9,%rbp
   1b5e8:	4d 89 d9             	mov    %r11,%r9
   1b5eb:	41 89 fb             	mov    %edi,%r11d
   1b5ee:	0f 85 81 00 00 00    	jne    1b675 <ia64_code+0x255>
   1b5f4:	49 c1 ef 13          	shr    $0x13,%r15
   1b5f8:	41 81 e7 ff ff 0f 00 	and    $0xfffff,%r15d
   1b5ff:	4c 89 ed             	mov    %r13,%rbp
   1b602:	48 c1 ed 16          	shr    $0x16,%rbp
   1b606:	81 e5 00 00 10 00    	and    $0x100000,%ebp
   1b60c:	44 09 fd             	or     %r15d,%ebp
   1b60f:	01 c5                	add    %eax,%ebp
   1b611:	48 bf c0 7f 04 00 80 	movabs $0xab8000047fc0,%rdi
   1b618:	ab 00 00 
   1b61b:	49 21 fd             	and    %rdi,%r13
   1b61e:	41 89 ef             	mov    %ebp,%r15d
   1b621:	41 81 e7 ff ff 0f 00 	and    $0xfffff,%r15d
   1b628:	49 c1 e7 13          	shl    $0x13,%r15
   1b62c:	4d 09 ef             	or     %r13,%r15
   1b62f:	81 e5 00 00 10 00    	and    $0x100000,%ebp
   1b635:	48 c1 e5 16          	shl    $0x16,%rbp
   1b639:	83 e3 3f             	and    $0x3f,%ebx
   1b63c:	48 09 eb             	or     %rbp,%rbx
   1b63f:	4c 09 fb             	or     %r15,%rbx
   1b642:	42 88 5c 11 05       	mov    %bl,0x5(%rcx,%r10,1)
   1b647:	46 88 64 11 06       	mov    %r12b,0x6(%rcx,%r10,1)
   1b64c:	89 dd                	mov    %ebx,%ebp
   1b64e:	c1 ed 10             	shr    $0x10,%ebp
   1b651:	42 88 6c 11 07       	mov    %bpl,0x7(%rcx,%r10,1)
   1b656:	89 dd                	mov    %ebx,%ebp
   1b658:	c1 ed 18             	shr    $0x18,%ebp
   1b65b:	42 88 6c 11 08       	mov    %bpl,0x8(%rcx,%r10,1)
   1b660:	49 89 df             	mov    %rbx,%r15
   1b663:	49 c1 ef 20          	shr    $0x20,%r15
   1b667:	46 88 7c 11 09       	mov    %r15b,0x9(%rcx,%r10,1)
   1b66c:	48 c1 eb 28          	shr    $0x28,%rbx
   1b670:	42 88 5c 11 0a       	mov    %bl,0xa(%rcx,%r10,1)
   1b675:	bf ff ff 30 cc       	mov    $0xcc30ffff,%edi
   1b67a:	44 0f a3 f7          	bt     %r14d,%edi
   1b67e:	0f 82 cc fd ff ff    	jb     1b450 <ia64_code+0x30>
   1b684:	42 0f b6 5c 11 0a    	movzbl 0xa(%rcx,%r10,1),%ebx
   1b68a:	46 0f b6 74 11 0b    	movzbl 0xb(%rcx,%r10,1),%r14d
   1b690:	44 89 f5             	mov    %r14d,%ebp
   1b693:	c1 e5 08             	shl    $0x8,%ebp
   1b696:	46 0f b6 64 11 0c    	movzbl 0xc(%rcx,%r10,1),%r12d
   1b69c:	41 c1 e4 10          	shl    $0x10,%r12d
   1b6a0:	41 09 ec             	or     %ebp,%r12d
   1b6a3:	49 09 dc             	or     %rbx,%r12
   1b6a6:	46 0f b6 6c 11 0d    	movzbl 0xd(%rcx,%r10,1),%r13d
   1b6ac:	41 c1 e5 18          	shl    $0x18,%r13d
   1b6b0:	46 0f b6 7c 11 0e    	movzbl 0xe(%rcx,%r10,1),%r15d
   1b6b6:	49 c1 e7 20          	shl    $0x20,%r15
   1b6ba:	4d 09 ef             	or     %r13,%r15
   1b6bd:	4d 09 e7             	or     %r12,%r15
   1b6c0:	46 0f b6 64 11 0f    	movzbl 0xf(%rcx,%r10,1),%r12d
   1b6c6:	49 c1 e4 28          	shl    $0x28,%r12
   1b6ca:	4d 09 fc             	or     %r15,%r12
   1b6cd:	4d 89 e5             	mov    %r12,%r13
   1b6d0:	48 bf 00 00 07 00 00 	movabs $0xf00000070000,%rdi
   1b6d7:	f0 00 00 
   1b6da:	49 21 fd             	and    %rdi,%r13
   1b6dd:	48 bf 00 00 00 00 00 	movabs $0x500000000000,%rdi
   1b6e4:	50 00 00 
   1b6e7:	49 39 fd             	cmp    %rdi,%r13
   1b6ea:	0f 85 60 fd ff ff    	jne    1b450 <ia64_code+0x30>
   1b6f0:	49 c1 ef 14          	shr    $0x14,%r15
   1b6f4:	4d 89 e5             	mov    %r12,%r13
   1b6f7:	49 c1 ed 17          	shr    $0x17,%r13
   1b6fb:	41 81 e5 00 00 10 00 	and    $0x100000,%r13d
   1b702:	45 09 ef             	or     %r13d,%r15d
   1b705:	44 01 f8             	add    %r15d,%eax
   1b708:	48 bf 80 ff 08 00 00 	movabs $0x57000008ff80,%rdi
   1b70f:	57 00 00 
   1b712:	49 21 fc             	and    %rdi,%r12
   1b715:	41 89 c7             	mov    %eax,%r15d
   1b718:	41 81 e7 ff ff 0f 00 	and    $0xfffff,%r15d
   1b71f:	49 c1 e7 14          	shl    $0x14,%r15
   1b723:	4d 09 e7             	or     %r12,%r15
   1b726:	25 00 00 10 00       	and    $0x100000,%eax
   1b72b:	48 c1 e0 17          	shl    $0x17,%rax
   1b72f:	83 e3 7f             	and    $0x7f,%ebx
   1b732:	48 09 c3             	or     %rax,%rbx
   1b735:	4c 09 fb             	or     %r15,%rbx
   1b738:	42 88 5c 11 0a       	mov    %bl,0xa(%rcx,%r10,1)
   1b73d:	46 88 74 11 0b       	mov    %r14b,0xb(%rcx,%r10,1)
   1b742:	89 d8                	mov    %ebx,%eax
   1b744:	c1 e8 10             	shr    $0x10,%eax
   1b747:	42 88 44 11 0c       	mov    %al,0xc(%rcx,%r10,1)
   1b74c:	89 d8                	mov    %ebx,%eax
   1b74e:	c1 e8 18             	shr    $0x18,%eax
   1b751:	42 88 44 11 0d       	mov    %al,0xd(%rcx,%r10,1)
   1b756:	48 89 d8             	mov    %rbx,%rax
   1b759:	48 c1 e8 20          	shr    $0x20,%rax
   1b75d:	42 88 44 11 0e       	mov    %al,0xe(%rcx,%r10,1)
   1b762:	48 c1 eb 28          	shr    $0x28,%rbx
   1b766:	42 88 5c 11 0f       	mov    %bl,0xf(%rcx,%r10,1)
   1b76b:	e9 e0 fc ff ff       	jmp    1b450 <ia64_code+0x30>
   1b770:	5b                   	pop    %rbx
   1b771:	41 5c                	pop    %r12
   1b773:	41 5d                	pop    %r13
   1b775:	41 5e                	pop    %r14
   1b777:	41 5f                	pop    %r15
   1b779:	5d                   	pop    %rbp
   1b77a:	c3                   	ret    
   1b77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b780 <lzma_simple_arm_encoder_init>:
   1b780:	50                   	push   %rax
   1b781:	48 8d 0d 38 00 00 00 	lea    0x38(%rip),%rcx        # 1b7c0 <arm_code>
   1b788:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b78e:	45 31 c0             	xor    %r8d,%r8d
   1b791:	6a 01                	push   $0x1
   1b793:	6a 04                	push   $0x4
   1b795:	e8 86 f2 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b79a:	48 83 c4 10          	add    $0x10,%rsp
   1b79e:	59                   	pop    %rcx
   1b79f:	c3                   	ret    

000000000001b7a0 <lzma_simple_arm_decoder_init>:
   1b7a0:	50                   	push   %rax
   1b7a1:	48 8d 0d 18 00 00 00 	lea    0x18(%rip),%rcx        # 1b7c0 <arm_code>
   1b7a8:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b7ae:	45 31 c0             	xor    %r8d,%r8d
   1b7b1:	6a 00                	push   $0x0
   1b7b3:	6a 04                	push   $0x4
   1b7b5:	e8 66 f2 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b7ba:	48 83 c4 10          	add    $0x10,%rsp
   1b7be:	59                   	pop    %rcx
   1b7bf:	c3                   	ret    

000000000001b7c0 <arm_code>:
   1b7c0:	49 83 f8 04          	cmp    $0x4,%r8
   1b7c4:	73 03                	jae    1b7c9 <arm_code+0x9>
   1b7c6:	31 c0                	xor    %eax,%eax
   1b7c8:	c3                   	ret    
   1b7c9:	84 d2                	test   %dl,%dl
   1b7cb:	74 6a                	je     1b837 <arm_code+0x77>
   1b7cd:	83 c6 08             	add    $0x8,%esi
   1b7d0:	31 d2                	xor    %edx,%edx
   1b7d2:	eb 20                	jmp    1b7f4 <arm_code+0x34>
   1b7d4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1b7db:	00 00 00 00 00 
   1b7e0:	48 8d 42 04          	lea    0x4(%rdx),%rax
   1b7e4:	48 83 c2 08          	add    $0x8,%rdx
   1b7e8:	4c 39 c2             	cmp    %r8,%rdx
   1b7eb:	48 89 c2             	mov    %rax,%rdx
   1b7ee:	0f 87 af 00 00 00    	ja     1b8a3 <arm_code+0xe3>
   1b7f4:	80 7c 11 03 eb       	cmpb   $0xeb,0x3(%rcx,%rdx,1)
   1b7f9:	75 e5                	jne    1b7e0 <arm_code+0x20>
   1b7fb:	0f b6 44 11 02       	movzbl 0x2(%rcx,%rdx,1),%eax
   1b800:	c1 e0 10             	shl    $0x10,%eax
   1b803:	0f b6 7c 11 01       	movzbl 0x1(%rcx,%rdx,1),%edi
   1b808:	c1 e7 08             	shl    $0x8,%edi
   1b80b:	09 c7                	or     %eax,%edi
   1b80d:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
   1b811:	09 f8                	or     %edi,%eax
   1b813:	8d 3c 16             	lea    (%rsi,%rdx,1),%edi
   1b816:	8d 04 87             	lea    (%rdi,%rax,4),%eax
   1b819:	89 c7                	mov    %eax,%edi
   1b81b:	c1 ef 02             	shr    $0x2,%edi
   1b81e:	41 89 c1             	mov    %eax,%r9d
   1b821:	41 c1 e9 12          	shr    $0x12,%r9d
   1b825:	44 88 4c 11 02       	mov    %r9b,0x2(%rcx,%rdx,1)
   1b82a:	c1 e8 0a             	shr    $0xa,%eax
   1b82d:	88 44 11 01          	mov    %al,0x1(%rcx,%rdx,1)
   1b831:	40 88 3c 11          	mov    %dil,(%rcx,%rdx,1)
   1b835:	eb a9                	jmp    1b7e0 <arm_code+0x20>
   1b837:	ba f8 ff ff ff       	mov    $0xfffffff8,%edx
   1b83c:	29 f2                	sub    %esi,%edx
   1b83e:	31 f6                	xor    %esi,%esi
   1b840:	eb 21                	jmp    1b863 <arm_code+0xa3>
   1b842:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1b849:	1f 84 00 00 00 00 00 
   1b850:	48 8d 46 04          	lea    0x4(%rsi),%rax
   1b854:	83 c2 fc             	add    $0xfffffffc,%edx
   1b857:	48 83 c6 08          	add    $0x8,%rsi
   1b85b:	4c 39 c6             	cmp    %r8,%rsi
   1b85e:	48 89 c6             	mov    %rax,%rsi
   1b861:	77 40                	ja     1b8a3 <arm_code+0xe3>
   1b863:	80 7c 31 03 eb       	cmpb   $0xeb,0x3(%rcx,%rsi,1)
   1b868:	75 e6                	jne    1b850 <arm_code+0x90>
   1b86a:	0f b6 44 31 02       	movzbl 0x2(%rcx,%rsi,1),%eax
   1b86f:	c1 e0 10             	shl    $0x10,%eax
   1b872:	0f b6 7c 31 01       	movzbl 0x1(%rcx,%rsi,1),%edi
   1b877:	c1 e7 08             	shl    $0x8,%edi
   1b87a:	09 c7                	or     %eax,%edi
   1b87c:	0f b6 04 31          	movzbl (%rcx,%rsi,1),%eax
   1b880:	09 f8                	or     %edi,%eax
   1b882:	8d 04 82             	lea    (%rdx,%rax,4),%eax
   1b885:	89 c7                	mov    %eax,%edi
   1b887:	c1 ef 02             	shr    $0x2,%edi
   1b88a:	41 89 c1             	mov    %eax,%r9d
   1b88d:	41 c1 e9 12          	shr    $0x12,%r9d
   1b891:	44 88 4c 31 02       	mov    %r9b,0x2(%rcx,%rsi,1)
   1b896:	c1 e8 0a             	shr    $0xa,%eax
   1b899:	88 44 31 01          	mov    %al,0x1(%rcx,%rsi,1)
   1b89d:	40 88 3c 31          	mov    %dil,(%rcx,%rsi,1)
   1b8a1:	eb ad                	jmp    1b850 <arm_code+0x90>
   1b8a3:	c3                   	ret    
   1b8a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b8ab:	00 00 00 
   1b8ae:	66 90                	xchg   %ax,%ax

000000000001b8b0 <lzma_simple_armthumb_encoder_init>:
   1b8b0:	50                   	push   %rax
   1b8b1:	48 8d 0d 38 00 00 00 	lea    0x38(%rip),%rcx        # 1b8f0 <armthumb_code>
   1b8b8:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b8be:	45 31 c0             	xor    %r8d,%r8d
   1b8c1:	6a 01                	push   $0x1
   1b8c3:	6a 02                	push   $0x2
   1b8c5:	e8 56 f1 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b8ca:	48 83 c4 10          	add    $0x10,%rsp
   1b8ce:	59                   	pop    %rcx
   1b8cf:	c3                   	ret    

000000000001b8d0 <lzma_simple_armthumb_decoder_init>:
   1b8d0:	50                   	push   %rax
   1b8d1:	48 8d 0d 18 00 00 00 	lea    0x18(%rip),%rcx        # 1b8f0 <armthumb_code>
   1b8d8:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1b8de:	45 31 c0             	xor    %r8d,%r8d
   1b8e1:	6a 00                	push   $0x0
   1b8e3:	6a 02                	push   $0x2
   1b8e5:	e8 36 f1 ff ff       	call   1aa20 <lzma_simple_coder_init>
   1b8ea:	48 83 c4 10          	add    $0x10,%rsp
   1b8ee:	59                   	pop    %rcx
   1b8ef:	c3                   	ret    

000000000001b8f0 <armthumb_code>:
   1b8f0:	49 83 f8 04          	cmp    $0x4,%r8
   1b8f4:	73 03                	jae    1b8f9 <armthumb_code+0x9>
   1b8f6:	31 c0                	xor    %eax,%eax
   1b8f8:	c3                   	ret    
   1b8f9:	84 d2                	test   %dl,%dl
   1b8fb:	0f 84 a7 00 00 00    	je     1b9a8 <armthumb_code+0xb8>
   1b901:	83 c6 04             	add    $0x4,%esi
   1b904:	31 d2                	xor    %edx,%edx
   1b906:	eb 1c                	jmp    1b924 <armthumb_code+0x34>
   1b908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b90f:	00 
   1b910:	48 8d 42 02          	lea    0x2(%rdx),%rax
   1b914:	48 83 c2 06          	add    $0x6,%rdx
   1b918:	4c 39 c2             	cmp    %r8,%rdx
   1b91b:	48 89 c2             	mov    %rax,%rdx
   1b91e:	0f 87 28 01 00 00    	ja     1ba4c <armthumb_code+0x15c>
   1b924:	0f b6 7c 11 01       	movzbl 0x1(%rcx,%rdx,1),%edi
   1b929:	89 f8                	mov    %edi,%eax
   1b92b:	83 e0 f8             	and    $0xfffffff8,%eax
   1b92e:	3d f0 00 00 00       	cmp    $0xf0,%eax
   1b933:	75 db                	jne    1b910 <armthumb_code+0x20>
   1b935:	0f b6 44 11 03       	movzbl 0x3(%rcx,%rdx,1),%eax
   1b93a:	41 89 c1             	mov    %eax,%r9d
   1b93d:	41 f7 d1             	not    %r9d
   1b940:	41 f6 c1 f8          	test   $0xf8,%r9b
   1b944:	75 ca                	jne    1b910 <armthumb_code+0x20>
   1b946:	83 e7 07             	and    $0x7,%edi
   1b949:	c1 e7 13             	shl    $0x13,%edi
   1b94c:	44 0f b6 0c 11       	movzbl (%rcx,%rdx,1),%r9d
   1b951:	41 c1 e1 0b          	shl    $0xb,%r9d
   1b955:	41 09 f9             	or     %edi,%r9d
   1b958:	83 e0 07             	and    $0x7,%eax
   1b95b:	c1 e0 08             	shl    $0x8,%eax
   1b95e:	44 09 c8             	or     %r9d,%eax
   1b961:	0f b6 7c 11 02       	movzbl 0x2(%rcx,%rdx,1),%edi
   1b966:	09 c7                	or     %eax,%edi
   1b968:	8d 04 16             	lea    (%rsi,%rdx,1),%eax
   1b96b:	8d 04 78             	lea    (%rax,%rdi,2),%eax
   1b96e:	89 c7                	mov    %eax,%edi
   1b970:	d1 ef                	shr    %edi
   1b972:	41 89 c1             	mov    %eax,%r9d
   1b975:	41 c1 e9 14          	shr    $0x14,%r9d
   1b979:	41 80 e1 07          	and    $0x7,%r9b
   1b97d:	41 80 c9 f0          	or     $0xf0,%r9b
   1b981:	44 88 4c 11 01       	mov    %r9b,0x1(%rcx,%rdx,1)
   1b986:	41 89 c1             	mov    %eax,%r9d
   1b989:	41 c1 e9 0c          	shr    $0xc,%r9d
   1b98d:	44 88 0c 11          	mov    %r9b,(%rcx,%rdx,1)
   1b991:	c1 e8 09             	shr    $0x9,%eax
   1b994:	0c f8                	or     $0xf8,%al
   1b996:	88 44 11 03          	mov    %al,0x3(%rcx,%rdx,1)
   1b99a:	40 88 7c 11 02       	mov    %dil,0x2(%rcx,%rdx,1)
   1b99f:	48 83 c2 02          	add    $0x2,%rdx
   1b9a3:	e9 68 ff ff ff       	jmp    1b910 <armthumb_code+0x20>
   1b9a8:	31 d2                	xor    %edx,%edx
   1b9aa:	eb 18                	jmp    1b9c4 <armthumb_code+0xd4>
   1b9ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1b9b0:	48 8d 42 02          	lea    0x2(%rdx),%rax
   1b9b4:	48 83 c2 06          	add    $0x6,%rdx
   1b9b8:	4c 39 c2             	cmp    %r8,%rdx
   1b9bb:	48 89 c2             	mov    %rax,%rdx
   1b9be:	0f 87 88 00 00 00    	ja     1ba4c <armthumb_code+0x15c>
   1b9c4:	0f b6 44 11 01       	movzbl 0x1(%rcx,%rdx,1),%eax
   1b9c9:	89 c7                	mov    %eax,%edi
   1b9cb:	83 e7 f8             	and    $0xfffffff8,%edi
   1b9ce:	81 ff f0 00 00 00    	cmp    $0xf0,%edi
   1b9d4:	75 da                	jne    1b9b0 <armthumb_code+0xc0>
   1b9d6:	0f b6 7c 11 03       	movzbl 0x3(%rcx,%rdx,1),%edi
   1b9db:	41 89 f9             	mov    %edi,%r9d
   1b9de:	41 f7 d1             	not    %r9d
   1b9e1:	41 f6 c1 f8          	test   $0xf8,%r9b
   1b9e5:	75 c9                	jne    1b9b0 <armthumb_code+0xc0>
   1b9e7:	83 e0 07             	and    $0x7,%eax
   1b9ea:	c1 e0 13             	shl    $0x13,%eax
   1b9ed:	44 0f b6 0c 11       	movzbl (%rcx,%rdx,1),%r9d
   1b9f2:	41 c1 e1 0b          	shl    $0xb,%r9d
   1b9f6:	41 09 c1             	or     %eax,%r9d
   1b9f9:	83 e7 07             	and    $0x7,%edi
   1b9fc:	c1 e7 08             	shl    $0x8,%edi
   1b9ff:	44 09 cf             	or     %r9d,%edi
   1ba02:	0f b6 44 11 02       	movzbl 0x2(%rcx,%rdx,1),%eax
   1ba07:	09 f8                	or     %edi,%eax
   1ba09:	01 c0                	add    %eax,%eax
   1ba0b:	29 d0                	sub    %edx,%eax
   1ba0d:	29 f0                	sub    %esi,%eax
   1ba0f:	83 c0 fc             	add    $0xfffffffc,%eax
   1ba12:	89 c7                	mov    %eax,%edi
   1ba14:	d1 ef                	shr    %edi
   1ba16:	41 89 c1             	mov    %eax,%r9d
   1ba19:	41 c1 e9 14          	shr    $0x14,%r9d
   1ba1d:	41 80 e1 07          	and    $0x7,%r9b
   1ba21:	41 80 c9 f0          	or     $0xf0,%r9b
   1ba25:	44 88 4c 11 01       	mov    %r9b,0x1(%rcx,%rdx,1)
   1ba2a:	41 89 c1             	mov    %eax,%r9d
   1ba2d:	41 c1 e9 0c          	shr    $0xc,%r9d
   1ba31:	44 88 0c 11          	mov    %r9b,(%rcx,%rdx,1)
   1ba35:	c1 e8 09             	shr    $0x9,%eax
   1ba38:	0c f8                	or     $0xf8,%al
   1ba3a:	88 44 11 03          	mov    %al,0x3(%rcx,%rdx,1)
   1ba3e:	40 88 7c 11 02       	mov    %dil,0x2(%rcx,%rdx,1)
   1ba43:	48 83 c2 02          	add    $0x2,%rdx
   1ba47:	e9 64 ff ff ff       	jmp    1b9b0 <armthumb_code+0xc0>
   1ba4c:	c3                   	ret    
   1ba4d:	0f 1f 00             	nopl   (%rax)

000000000001ba50 <lzma_simple_sparc_encoder_init>:
   1ba50:	50                   	push   %rax
   1ba51:	48 8d 0d 38 00 00 00 	lea    0x38(%rip),%rcx        # 1ba90 <sparc_code>
   1ba58:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1ba5e:	45 31 c0             	xor    %r8d,%r8d
   1ba61:	6a 01                	push   $0x1
   1ba63:	6a 04                	push   $0x4
   1ba65:	e8 b6 ef ff ff       	call   1aa20 <lzma_simple_coder_init>
   1ba6a:	48 83 c4 10          	add    $0x10,%rsp
   1ba6e:	59                   	pop    %rcx
   1ba6f:	c3                   	ret    

000000000001ba70 <lzma_simple_sparc_decoder_init>:
   1ba70:	50                   	push   %rax
   1ba71:	48 8d 0d 18 00 00 00 	lea    0x18(%rip),%rcx        # 1ba90 <sparc_code>
   1ba78:	41 b9 04 00 00 00    	mov    $0x4,%r9d
   1ba7e:	45 31 c0             	xor    %r8d,%r8d
   1ba81:	6a 00                	push   $0x0
   1ba83:	6a 04                	push   $0x4
   1ba85:	e8 96 ef ff ff       	call   1aa20 <lzma_simple_coder_init>
   1ba8a:	48 83 c4 10          	add    $0x10,%rsp
   1ba8e:	59                   	pop    %rcx
   1ba8f:	c3                   	ret    

000000000001ba90 <sparc_code>:
   1ba90:	49 83 f8 04          	cmp    $0x4,%r8
   1ba94:	73 03                	jae    1ba99 <sparc_code+0x9>
   1ba96:	31 c0                	xor    %eax,%eax
   1ba98:	c3                   	ret    
   1ba99:	53                   	push   %rbx
   1ba9a:	84 d2                	test   %dl,%dl
   1ba9c:	0f 84 e3 00 00 00    	je     1bb85 <sparc_code+0xf5>
   1baa2:	89 f2                	mov    %esi,%edx
   1baa4:	c1 e6 07             	shl    $0x7,%esi
   1baa7:	31 ff                	xor    %edi,%edi
   1baa9:	e9 8e 00 00 00       	jmp    1bb3c <sparc_code+0xac>
   1baae:	66 90                	xchg   %ax,%ax
   1bab0:	41 c1 e1 18          	shl    $0x18,%r9d
   1bab4:	45 0f b6 d2          	movzbl %r10b,%r10d
   1bab8:	41 c1 e2 10          	shl    $0x10,%r10d
   1babc:	45 09 ca             	or     %r9d,%r10d
   1babf:	44 0f b6 4c 39 02    	movzbl 0x2(%rcx,%rdi,1),%r9d
   1bac5:	41 c1 e1 08          	shl    $0x8,%r9d
   1bac9:	45 09 d1             	or     %r10d,%r9d
   1bacc:	44 0f b6 54 39 03    	movzbl 0x3(%rcx,%rdi,1),%r10d
   1bad2:	45 09 ca             	or     %r9d,%r10d
   1bad5:	44 8d 0c 3a          	lea    (%rdx,%rdi,1),%r9d
   1bad9:	47 8d 0c 91          	lea    (%r9,%r10,4),%r9d
   1badd:	45 89 cb             	mov    %r9d,%r11d
   1bae0:	41 c1 eb 02          	shr    $0x2,%r11d
   1bae4:	41 c1 e2 09          	shl    $0x9,%r10d
   1bae8:	41 01 f2             	add    %esi,%r10d
   1baeb:	41 c1 fa 09          	sar    $0x9,%r10d
   1baef:	41 81 e2 00 00 c0 3f 	and    $0x3fc00000,%r10d
   1baf6:	44 89 db             	mov    %r11d,%ebx
   1baf9:	81 e3 00 00 3f 00    	and    $0x3f0000,%ebx
   1baff:	44 09 d3             	or     %r10d,%ebx
   1bb02:	41 c1 ea 18          	shr    $0x18,%r10d
   1bb06:	41 80 ca 40          	or     $0x40,%r10b
   1bb0a:	44 88 14 39          	mov    %r10b,(%rcx,%rdi,1)
   1bb0e:	c1 eb 10             	shr    $0x10,%ebx
   1bb11:	88 1c 01             	mov    %bl,(%rcx,%rax,1)
   1bb14:	41 c1 e9 0a          	shr    $0xa,%r9d
   1bb18:	44 88 4c 39 02       	mov    %r9b,0x2(%rcx,%rdi,1)
   1bb1d:	44 88 5c 39 03       	mov    %r11b,0x3(%rcx,%rdi,1)
   1bb22:	48 8d 47 04          	lea    0x4(%rdi),%rax
   1bb26:	81 c6 00 02 00 00    	add    $0x200,%esi
   1bb2c:	48 83 c7 08          	add    $0x8,%rdi
   1bb30:	4c 39 c7             	cmp    %r8,%rdi
   1bb33:	48 89 c7             	mov    %rax,%rdi
   1bb36:	0f 87 2c 01 00 00    	ja     1bc68 <sparc_code+0x1d8>
   1bb3c:	44 0f b6 0c 39       	movzbl (%rcx,%rdi,1),%r9d
   1bb41:	41 83 f9 40          	cmp    $0x40,%r9d
   1bb45:	74 29                	je     1bb70 <sparc_code+0xe0>
   1bb47:	41 83 f9 7f          	cmp    $0x7f,%r9d
   1bb4b:	75 d5                	jne    1bb22 <sparc_code+0x92>
   1bb4d:	44 0f b6 54 39 01    	movzbl 0x1(%rcx,%rdi,1),%r10d
   1bb53:	41 80 fa bf          	cmp    $0xbf,%r10b
   1bb57:	76 c9                	jbe    1bb22 <sparc_code+0x92>
   1bb59:	48 89 f8             	mov    %rdi,%rax
   1bb5c:	48 83 c8 01          	or     $0x1,%rax
   1bb60:	e9 4b ff ff ff       	jmp    1bab0 <sparc_code+0x20>
   1bb65:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1bb6c:	00 00 00 00 
   1bb70:	44 0f b6 54 39 01    	movzbl 0x1(%rcx,%rdi,1),%r10d
   1bb76:	41 80 fa 3f          	cmp    $0x3f,%r10b
   1bb7a:	77 a6                	ja     1bb22 <sparc_code+0x92>
   1bb7c:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1bb80:	e9 2b ff ff ff       	jmp    1bab0 <sparc_code+0x20>
   1bb85:	89 f2                	mov    %esi,%edx
   1bb87:	f7 da                	neg    %edx
   1bb89:	c1 e6 07             	shl    $0x7,%esi
   1bb8c:	f7 de                	neg    %esi
   1bb8e:	31 ff                	xor    %edi,%edi
   1bb90:	e9 92 00 00 00       	jmp    1bc27 <sparc_code+0x197>
   1bb95:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1bb9c:	00 00 00 00 
   1bba0:	41 c1 e1 18          	shl    $0x18,%r9d
   1bba4:	45 0f b6 d2          	movzbl %r10b,%r10d
   1bba8:	41 c1 e2 10          	shl    $0x10,%r10d
   1bbac:	45 09 ca             	or     %r9d,%r10d
   1bbaf:	44 0f b6 4c 39 02    	movzbl 0x2(%rcx,%rdi,1),%r9d
   1bbb5:	41 c1 e1 08          	shl    $0x8,%r9d
   1bbb9:	45 09 d1             	or     %r10d,%r9d
   1bbbc:	44 0f b6 54 39 03    	movzbl 0x3(%rcx,%rdi,1),%r10d
   1bbc2:	45 09 ca             	or     %r9d,%r10d
   1bbc5:	46 8d 0c 92          	lea    (%rdx,%r10,4),%r9d
   1bbc9:	45 89 cb             	mov    %r9d,%r11d
   1bbcc:	41 c1 eb 02          	shr    $0x2,%r11d
   1bbd0:	41 c1 e2 09          	shl    $0x9,%r10d
   1bbd4:	41 01 f2             	add    %esi,%r10d
   1bbd7:	41 c1 fa 09          	sar    $0x9,%r10d
   1bbdb:	41 81 e2 00 00 c0 3f 	and    $0x3fc00000,%r10d
   1bbe2:	44 89 db             	mov    %r11d,%ebx
   1bbe5:	81 e3 00 00 3f 00    	and    $0x3f0000,%ebx
   1bbeb:	44 09 d3             	or     %r10d,%ebx
   1bbee:	41 c1 ea 18          	shr    $0x18,%r10d
   1bbf2:	41 80 ca 40          	or     $0x40,%r10b
   1bbf6:	44 88 14 39          	mov    %r10b,(%rcx,%rdi,1)
   1bbfa:	c1 eb 10             	shr    $0x10,%ebx
   1bbfd:	88 1c 01             	mov    %bl,(%rcx,%rax,1)
   1bc00:	41 c1 e9 0a          	shr    $0xa,%r9d
   1bc04:	44 88 4c 39 02       	mov    %r9b,0x2(%rcx,%rdi,1)
   1bc09:	44 88 5c 39 03       	mov    %r11b,0x3(%rcx,%rdi,1)
   1bc0e:	48 8d 47 04          	lea    0x4(%rdi),%rax
   1bc12:	83 c2 fc             	add    $0xfffffffc,%edx
   1bc15:	81 c6 00 fe ff ff    	add    $0xfffffe00,%esi
   1bc1b:	48 83 c7 08          	add    $0x8,%rdi
   1bc1f:	4c 39 c7             	cmp    %r8,%rdi
   1bc22:	48 89 c7             	mov    %rax,%rdi
   1bc25:	77 41                	ja     1bc68 <sparc_code+0x1d8>
   1bc27:	44 0f b6 0c 39       	movzbl (%rcx,%rdi,1),%r9d
   1bc2c:	41 83 f9 7f          	cmp    $0x7f,%r9d
   1bc30:	74 1e                	je     1bc50 <sparc_code+0x1c0>
   1bc32:	41 83 f9 40          	cmp    $0x40,%r9d
   1bc36:	75 d6                	jne    1bc0e <sparc_code+0x17e>
   1bc38:	44 0f b6 54 39 01    	movzbl 0x1(%rcx,%rdi,1),%r10d
   1bc3e:	41 80 fa 40          	cmp    $0x40,%r10b
   1bc42:	73 ca                	jae    1bc0e <sparc_code+0x17e>
   1bc44:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1bc48:	e9 53 ff ff ff       	jmp    1bba0 <sparc_code+0x110>
   1bc4d:	0f 1f 00             	nopl   (%rax)
   1bc50:	44 0f b6 54 39 01    	movzbl 0x1(%rcx,%rdi,1),%r10d
   1bc56:	41 80 fa c0          	cmp    $0xc0,%r10b
   1bc5a:	72 b2                	jb     1bc0e <sparc_code+0x17e>
   1bc5c:	48 89 f8             	mov    %rdi,%rax
   1bc5f:	48 83 c8 01          	or     $0x1,%rax
   1bc63:	e9 38 ff ff ff       	jmp    1bba0 <sparc_code+0x110>
   1bc68:	5b                   	pop    %rbx
   1bc69:	c3                   	ret    
   1bc6a:	66 90                	xchg   %ax,%ax
   1bc6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bc70 <coder_set_check>:
   1bc70:	89 3d d2 84 01 00    	mov    %edi,0x184d2(%rip)        # 34148 <check>
   1bc76:	c6 05 cf 84 01 00 01 	movb   $0x1,0x184cf(%rip)        # 3414c <check_default>
   1bc7d:	c3                   	ret    
   1bc7e:	66 90                	xchg   %ax,%ax

000000000001bc80 <coder_set_preset>:
   1bc80:	41 56                	push   %r14
   1bc82:	53                   	push   %rbx
   1bc83:	50                   	push   %rax
   1bc84:	8b 05 8a 84 01 00    	mov    0x1848a(%rip),%eax        # 34114 <preset_number>
   1bc8a:	83 e0 e0             	and    $0xffffffe0,%eax
   1bc8d:	09 f8                	or     %edi,%eax
   1bc8f:	89 05 7f 84 01 00    	mov    %eax,0x1847f(%rip)        # 34114 <preset_number>
   1bc95:	8b 1d b5 84 01 00    	mov    0x184b5(%rip),%ebx        # 34150 <filters_count>
   1bc9b:	48 85 db             	test   %rbx,%rbx
   1bc9e:	74 33                	je     1bcd3 <coder_set_preset+0x53>
   1bca0:	48 c1 e3 04          	shl    $0x4,%rbx
   1bca4:	4c 8d 35 b5 84 01 00 	lea    0x184b5(%rip),%r14        # 34160 <filters>
   1bcab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bcb0:	4a 8b 7c 33 f8       	mov    -0x8(%rbx,%r14,1),%rdi
   1bcb5:	e8 76 63 fe ff       	call   2030 <free@plt>
   1bcba:	4a c7 44 33 f8 00 00 	movq   $0x0,-0x8(%rbx,%r14,1)
   1bcc1:	00 00 
   1bcc3:	48 83 c3 f0          	add    $0xfffffffffffffff0,%rbx
   1bcc7:	75 e7                	jne    1bcb0 <coder_set_preset+0x30>
   1bcc9:	c7 05 7d 84 01 00 00 	movl   $0x0,0x1847d(%rip)        # 34150 <filters_count>
   1bcd0:	00 00 00 
   1bcd3:	48 83 c4 08          	add    $0x8,%rsp
   1bcd7:	5b                   	pop    %rbx
   1bcd8:	41 5e                	pop    %r14
   1bcda:	c3                   	ret    
   1bcdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bce0 <coder_set_extreme>:
   1bce0:	41 56                	push   %r14
   1bce2:	53                   	push   %rbx
   1bce3:	50                   	push   %rax
   1bce4:	80 0d 2c 84 01 00 80 	orb    $0x80,0x1842c(%rip)        # 34117 <preset_number+0x3>
   1bceb:	8b 1d 5f 84 01 00    	mov    0x1845f(%rip),%ebx        # 34150 <filters_count>
   1bcf1:	48 85 db             	test   %rbx,%rbx
   1bcf4:	74 3d                	je     1bd33 <coder_set_extreme+0x53>
   1bcf6:	48 c1 e3 04          	shl    $0x4,%rbx
   1bcfa:	4c 8d 35 5f 84 01 00 	lea    0x1845f(%rip),%r14        # 34160 <filters>
   1bd01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1bd08:	0f 1f 84 00 00 00 00 
   1bd0f:	00 
   1bd10:	4a 8b 7c 33 f8       	mov    -0x8(%rbx,%r14,1),%rdi
   1bd15:	e8 16 63 fe ff       	call   2030 <free@plt>
   1bd1a:	4a c7 44 33 f8 00 00 	movq   $0x0,-0x8(%rbx,%r14,1)
   1bd21:	00 00 
   1bd23:	48 83 c3 f0          	add    $0xfffffffffffffff0,%rbx
   1bd27:	75 e7                	jne    1bd10 <coder_set_extreme+0x30>
   1bd29:	c7 05 1d 84 01 00 00 	movl   $0x0,0x1841d(%rip)        # 34150 <filters_count>
   1bd30:	00 00 00 
   1bd33:	48 83 c4 08          	add    $0x8,%rsp
   1bd37:	5b                   	pop    %rbx
   1bd38:	41 5e                	pop    %r14
   1bd3a:	c3                   	ret    
   1bd3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bd40 <coder_add_filter>:
   1bd40:	41 56                	push   %r14
   1bd42:	53                   	push   %rbx
   1bd43:	50                   	push   %rax
   1bd44:	48 89 f3             	mov    %rsi,%rbx
   1bd47:	49 89 fe             	mov    %rdi,%r14
   1bd4a:	8b 05 00 84 01 00    	mov    0x18400(%rip),%eax        # 34150 <filters_count>
   1bd50:	83 f8 04             	cmp    $0x4,%eax
   1bd53:	75 14                	jne    1bd69 <coder_add_filter+0x29>
   1bd55:	48 8d 3d 02 e6 00 00 	lea    0xe602(%rip),%rdi        # 2a35e <is_format_xz.magic+0x6>
   1bd5c:	31 c0                	xor    %eax,%eax
   1bd5e:	e8 2d 34 00 00       	call   1f190 <message_fatal>
   1bd63:	8b 05 e7 83 01 00    	mov    0x183e7(%rip),%eax        # 34150 <filters_count>
   1bd69:	89 c1                	mov    %eax,%ecx
   1bd6b:	48 c1 e1 04          	shl    $0x4,%rcx
   1bd6f:	48 8d 15 ea 83 01 00 	lea    0x183ea(%rip),%rdx        # 34160 <filters>
   1bd76:	4c 89 34 11          	mov    %r14,(%rcx,%rdx,1)
   1bd7a:	48 89 5c 11 08       	mov    %rbx,0x8(%rcx,%rdx,1)
   1bd7f:	ff c0                	inc    %eax
   1bd81:	89 05 c9 83 01 00    	mov    %eax,0x183c9(%rip)        # 34150 <filters_count>
   1bd87:	c7 05 83 83 01 00 06 	movl   $0x6,0x18383(%rip)        # 34114 <preset_number>
   1bd8e:	00 00 00 
   1bd91:	48 83 c4 08          	add    $0x8,%rsp
   1bd95:	5b                   	pop    %rbx
   1bd96:	41 5e                	pop    %r14
   1bd98:	c3                   	ret    
   1bd99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001bda0 <coder_set_compression_settings>:
   1bda0:	55                   	push   %rbp
   1bda1:	41 57                	push   %r15
   1bda3:	41 56                	push   %r14
   1bda5:	41 55                	push   %r13
   1bda7:	41 54                	push   %r12
   1bda9:	53                   	push   %rbx
   1bdaa:	50                   	push   %rax
   1bdab:	49 bd 01 00 00 00 00 	movabs $0x4000000000000001,%r13
   1bdb2:	00 00 40 
   1bdb5:	8b 05 95 83 01 00    	mov    0x18395(%rip),%eax        # 34150 <filters_count>
   1bdbb:	8b 0d 83 83 01 00    	mov    0x18383(%rip),%ecx        # 34144 <opt_format>
   1bdc1:	85 c0                	test   %eax,%eax
   1bdc3:	75 78                	jne    1be3d <coder_set_compression_settings+0x9d>
   1bdc5:	83 f9 03             	cmp    $0x3,%ecx
   1bdc8:	75 26                	jne    1bdf0 <coder_set_compression_settings+0x50>
   1bdca:	48 8d 35 af e5 00 00 	lea    0xe5af(%rip),%rsi        # 2a380 <is_format_xz.magic+0x28>
   1bdd1:	bf 02 00 00 00       	mov    $0x2,%edi
   1bdd6:	31 c0                	xor    %eax,%eax
   1bdd8:	e8 83 33 00 00       	call   1f160 <message>
   1bddd:	48 8d 35 c7 e5 00 00 	lea    0xe5c7(%rip),%rsi        # 2a3ab <is_format_xz.magic+0x53>
   1bde4:	bf 02 00 00 00       	mov    $0x2,%edi
   1bde9:	31 c0                	xor    %eax,%eax
   1bdeb:	e8 70 33 00 00       	call   1f160 <message>
   1bdf0:	8b 35 1e 83 01 00    	mov    0x1831e(%rip),%esi        # 34114 <preset_number>
   1bdf6:	48 8d 1d b3 83 01 00 	lea    0x183b3(%rip),%rbx        # 341b0 <coder_set_compression_settings.opt_lzma>
   1bdfd:	48 89 df             	mov    %rbx,%rdi
   1be00:	e8 7b 5e ff ff       	call   11c80 <lzma_lzma_preset>
   1be05:	84 c0                	test   %al,%al
   1be07:	74 05                	je     1be0e <coder_set_compression_settings+0x6e>
   1be09:	e8 a2 33 00 00       	call   1f1b0 <message_bug>
   1be0e:	8b 0d 30 83 01 00    	mov    0x18330(%rip),%ecx        # 34144 <opt_format>
   1be14:	83 f9 02             	cmp    $0x2,%ecx
   1be17:	b8 21 00 00 00       	mov    $0x21,%eax
   1be1c:	49 0f 44 c5          	cmove  %r13,%rax
   1be20:	48 89 05 39 83 01 00 	mov    %rax,0x18339(%rip)        # 34160 <filters>
   1be27:	48 89 1d 3a 83 01 00 	mov    %rbx,0x1833a(%rip)        # 34168 <filters+0x8>
   1be2e:	c7 05 18 83 01 00 01 	movl   $0x1,0x18318(%rip)        # 34150 <filters_count>
   1be35:	00 00 00 
   1be38:	b8 01 00 00 00       	mov    $0x1,%eax
   1be3d:	89 c2                	mov    %eax,%edx
   1be3f:	48 c1 e2 04          	shl    $0x4,%rdx
   1be43:	4c 8d 35 16 83 01 00 	lea    0x18316(%rip),%r14        # 34160 <filters>
   1be4a:	4a c7 04 32 ff ff ff 	movq   $0xffffffffffffffff,(%rdx,%r14,1)
   1be51:	ff 
   1be52:	83 f9 02             	cmp    $0x2,%ecx
   1be55:	75 28                	jne    1be7f <coder_set_compression_settings+0xdf>
   1be57:	83 f8 01             	cmp    $0x1,%eax
   1be5a:	75 09                	jne    1be65 <coder_set_compression_settings+0xc5>
   1be5c:	4c 39 2d fd 82 01 00 	cmp    %r13,0x182fd(%rip)        # 34160 <filters>
   1be63:	74 60                	je     1bec5 <coder_set_compression_settings+0x125>
   1be65:	48 8d 3d 84 e5 00 00 	lea    0xe584(%rip),%rdi        # 2a3f0 <is_format_xz.magic+0x98>
   1be6c:	31 c0                	xor    %eax,%eax
   1be6e:	e8 1d 33 00 00       	call   1f190 <message_fatal>
   1be73:	8b 0d cb 82 01 00    	mov    0x182cb(%rip),%ecx        # 34144 <opt_format>
   1be79:	8b 05 d1 82 01 00    	mov    0x182d1(%rip),%eax        # 34150 <filters_count>
   1be7f:	83 f9 01             	cmp    $0x1,%ecx
   1be82:	75 41                	jne    1bec5 <coder_set_compression_settings+0x125>
   1be84:	85 c0                	test   %eax,%eax
   1be86:	74 3d                	je     1bec5 <coder_set_compression_settings+0x125>
   1be88:	48 8d 1d 91 e5 00 00 	lea    0xe591(%rip),%rbx        # 2a420 <is_format_xz.magic+0xc8>
   1be8f:	45 31 ff             	xor    %r15d,%r15d
   1be92:	eb 1a                	jmp    1beae <coder_set_compression_settings+0x10e>
   1be94:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1be9b:	00 00 00 00 00 
   1bea0:	49 ff c7             	inc    %r15
   1bea3:	89 c1                	mov    %eax,%ecx
   1bea5:	49 83 c6 10          	add    $0x10,%r14
   1bea9:	49 39 cf             	cmp    %rcx,%r15
   1beac:	73 17                	jae    1bec5 <coder_set_compression_settings+0x125>
   1beae:	4d 39 2e             	cmp    %r13,(%r14)
   1beb1:	75 ed                	jne    1bea0 <coder_set_compression_settings+0x100>
   1beb3:	48 89 df             	mov    %rbx,%rdi
   1beb6:	31 c0                	xor    %eax,%eax
   1beb8:	e8 d3 32 00 00       	call   1f190 <message_fatal>
   1bebd:	8b 05 8d 82 01 00    	mov    0x1828d(%rip),%eax        # 34150 <filters_count>
   1bec3:	eb db                	jmp    1bea0 <coder_set_compression_settings+0x100>
   1bec5:	4c 8d 35 94 82 01 00 	lea    0x18294(%rip),%r14        # 34160 <filters>
   1becc:	bf 04 00 00 00       	mov    $0x4,%edi
   1bed1:	4c 89 f6             	mov    %r14,%rsi
   1bed4:	e8 07 37 00 00       	call   1f5e0 <message_filters_show>
   1bed9:	8b 3d 61 82 01 00    	mov    0x18261(%rip),%edi        # 34140 <opt_mode>
   1bedf:	e8 cc 0f 00 00       	call   1ceb0 <hardware_memlimit_get>
   1bee4:	48 89 c3             	mov    %rax,%rbx
   1bee7:	83 3d 52 82 01 00 00 	cmpl   $0x0,0x18252(%rip)        # 34140 <opt_mode>
   1beee:	0f 84 3b 02 00 00    	je     1c12f <coder_set_compression_settings+0x38f>
   1bef4:	48 8d 3d 65 82 01 00 	lea    0x18265(%rip),%rdi        # 34160 <filters>
   1befb:	e8 00 d2 fe ff       	call   9100 <lzma_raw_decoder_memusage>
   1bf00:	49 89 c7             	mov    %rax,%r15
   1bf03:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bf07:	75 0e                	jne    1bf17 <coder_set_compression_settings+0x177>
   1bf09:	48 8d 3d 39 e5 00 00 	lea    0xe539(%rip),%rdi        # 2a449 <is_format_xz.magic+0xf1>
   1bf10:	31 c0                	xor    %eax,%eax
   1bf12:	e8 79 32 00 00       	call   1f190 <message_fatal>
   1bf17:	bf 04 00 00 00       	mov    $0x4,%edi
   1bf1c:	4c 89 fe             	mov    %r15,%rsi
   1bf1f:	e8 3c 33 00 00       	call   1f260 <message_mem_needed>
   1bf24:	83 3d 15 82 01 00 00 	cmpl   $0x0,0x18215(%rip)        # 34140 <opt_mode>
   1bf2b:	75 3a                	jne    1bf67 <coder_set_compression_settings+0x1c7>
   1bf2d:	48 8d 3d 2c 82 01 00 	lea    0x1822c(%rip),%rdi        # 34160 <filters>
   1bf34:	e8 c7 d1 fe ff       	call   9100 <lzma_raw_decoder_memusage>
   1bf39:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bf3d:	74 28                	je     1bf67 <coder_set_compression_settings+0x1c7>
   1bf3f:	48 89 c7             	mov    %rax,%rdi
   1bf42:	e8 99 40 00 00       	call   1ffe0 <round_up_to_mib>
   1bf47:	48 89 c7             	mov    %rax,%rdi
   1bf4a:	31 f6                	xor    %esi,%esi
   1bf4c:	e8 af 40 00 00       	call   20000 <uint64_to_str>
   1bf51:	48 8d 35 1c e5 00 00 	lea    0xe51c(%rip),%rsi        # 2a474 <is_format_xz.magic+0x11c>
   1bf58:	bf 04 00 00 00       	mov    $0x4,%edi
   1bf5d:	48 89 c2             	mov    %rax,%rdx
   1bf60:	31 c0                	xor    %eax,%eax
   1bf62:	e8 f9 31 00 00       	call   1f160 <message>
   1bf67:	49 39 df             	cmp    %rbx,%r15
   1bf6a:	0f 86 85 01 00 00    	jbe    1c0f5 <coder_set_compression_settings+0x355>
   1bf70:	80 3d 99 81 01 00 00 	cmpb   $0x0,0x18199(%rip)        # 34110 <opt_auto_adjust>
   1bf77:	74 09                	je     1bf82 <coder_set_compression_settings+0x1e2>
   1bf79:	83 3d c4 81 01 00 03 	cmpl   $0x3,0x181c4(%rip)        # 34144 <opt_format>
   1bf80:	75 31                	jne    1bfb3 <coder_set_compression_settings+0x213>
   1bf82:	48 8d 35 7a e5 00 00 	lea    0xe57a(%rip),%rsi        # 2a503 <is_format_xz.magic+0x1ab>
   1bf89:	bf 01 00 00 00       	mov    $0x1,%edi
   1bf8e:	31 c0                	xor    %eax,%eax
   1bf90:	e8 cb 31 00 00       	call   1f160 <message>
   1bf95:	bf 01 00 00 00       	mov    $0x1,%edi
   1bf9a:	4c 89 fe             	mov    %r15,%rsi
   1bf9d:	e8 be 32 00 00       	call   1f260 <message_mem_needed>
   1bfa2:	bf 01 00 00 00       	mov    $0x1,%edi
   1bfa7:	be 01 00 00 00       	mov    $0x1,%esi
   1bfac:	31 d2                	xor    %edx,%edx
   1bfae:	e8 ed 42 00 00       	call   202a0 <tuklib_exit>
   1bfb3:	4c 8d 25 49 e5 00 00 	lea    0xe549(%rip),%r12        # 2a503 <is_format_xz.magic+0x1ab>
   1bfba:	eb 35                	jmp    1bff1 <coder_set_compression_settings+0x251>
   1bfbc:	0f 1f 40 00          	nopl   0x0(%rax)
   1bfc0:	bf 01 00 00 00       	mov    $0x1,%edi
   1bfc5:	4c 89 e6             	mov    %r12,%rsi
   1bfc8:	31 c0                	xor    %eax,%eax
   1bfca:	e8 91 31 00 00       	call   1f160 <message>
   1bfcf:	bf 01 00 00 00       	mov    $0x1,%edi
   1bfd4:	4c 89 fe             	mov    %r15,%rsi
   1bfd7:	e8 84 32 00 00       	call   1f260 <message_mem_needed>
   1bfdc:	bf 01 00 00 00       	mov    $0x1,%edi
   1bfe1:	be 01 00 00 00       	mov    $0x1,%esi
   1bfe6:	31 d2                	xor    %edx,%edx
   1bfe8:	e8 b3 42 00 00       	call   202a0 <tuklib_exit>
   1bfed:	49 83 c6 10          	add    $0x10,%r14
   1bff1:	49 8b 06             	mov    (%r14),%rax
   1bff4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bff8:	74 c6                	je     1bfc0 <coder_set_compression_settings+0x220>
   1bffa:	48 83 f8 21          	cmp    $0x21,%rax
   1bffe:	74 05                	je     1c005 <coder_set_compression_settings+0x265>
   1c000:	4c 39 e8             	cmp    %r13,%rax
   1c003:	75 e8                	jne    1bfed <coder_set_compression_settings+0x24d>
   1c005:	4d 8b 66 08          	mov    0x8(%r14),%r12
   1c009:	41 8b 04 24          	mov    (%r12),%eax
   1c00d:	48 89 04 24          	mov    %rax,(%rsp)
   1c011:	25 00 00 f0 ff       	and    $0xfff00000,%eax
   1c016:	48 8d 2d 43 81 01 00 	lea    0x18143(%rip),%rbp        # 34160 <filters>
   1c01d:	41 bd 00 00 f0 ff    	mov    $0xfff00000,%r13d
   1c023:	41 89 04 24          	mov    %eax,(%r12)
   1c027:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
   1c02c:	77 33                	ja     1c061 <coder_set_compression_settings+0x2c1>
   1c02e:	66 90                	xchg   %ax,%ax
   1c030:	bf 01 00 00 00       	mov    $0x1,%edi
   1c035:	48 8d 35 c7 e4 00 00 	lea    0xe4c7(%rip),%rsi        # 2a503 <is_format_xz.magic+0x1ab>
   1c03c:	31 c0                	xor    %eax,%eax
   1c03e:	e8 1d 31 00 00       	call   1f160 <message>
   1c043:	bf 01 00 00 00       	mov    $0x1,%edi
   1c048:	4c 89 fe             	mov    %r15,%rsi
   1c04b:	e8 10 32 00 00       	call   1f260 <message_mem_needed>
   1c050:	bf 01 00 00 00       	mov    $0x1,%edi
   1c055:	be 01 00 00 00       	mov    $0x1,%esi
   1c05a:	31 d2                	xor    %edx,%edx
   1c05c:	e8 3f 42 00 00       	call   202a0 <tuklib_exit>
   1c061:	48 89 ef             	mov    %rbp,%rdi
   1c064:	e8 47 a8 fe ff       	call   68b0 <lzma_raw_encoder_memusage>
   1c069:	49 89 c7             	mov    %rax,%r15
   1c06c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c070:	75 05                	jne    1c077 <coder_set_compression_settings+0x2d7>
   1c072:	e8 39 31 00 00       	call   1f1b0 <message_bug>
   1c077:	49 39 df             	cmp    %rbx,%r15
   1c07a:	76 14                	jbe    1c090 <coder_set_compression_settings+0x2f0>
   1c07c:	41 8b 04 24          	mov    (%r12),%eax
   1c080:	44 01 e8             	add    %r13d,%eax
   1c083:	41 89 04 24          	mov    %eax,(%r12)
   1c087:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
   1c08c:	76 a2                	jbe    1c030 <coder_set_compression_settings+0x290>
   1c08e:	eb d1                	jmp    1c061 <coder_set_compression_settings+0x2c1>
   1c090:	31 ed                	xor    %ebp,%ebp
   1c092:	49 83 3e 21          	cmpq   $0x21,(%r14)
   1c096:	40 0f 94 c5          	sete   %bpl
   1c09a:	83 c5 31             	add    $0x31,%ebp
   1c09d:	48 8b 3c 24          	mov    (%rsp),%rdi
   1c0a1:	c1 ef 14             	shr    $0x14,%edi
   1c0a4:	31 f6                	xor    %esi,%esi
   1c0a6:	e8 55 3f 00 00       	call   20000 <uint64_to_str>
   1c0ab:	49 89 c6             	mov    %rax,%r14
   1c0ae:	41 8b 3c 24          	mov    (%r12),%edi
   1c0b2:	c1 ef 14             	shr    $0x14,%edi
   1c0b5:	be 01 00 00 00       	mov    $0x1,%esi
   1c0ba:	e8 41 3f 00 00       	call   20000 <uint64_to_str>
   1c0bf:	49 89 c7             	mov    %rax,%r15
   1c0c2:	48 89 df             	mov    %rbx,%rdi
   1c0c5:	e8 16 3f 00 00       	call   1ffe0 <round_up_to_mib>
   1c0ca:	48 89 c7             	mov    %rax,%rdi
   1c0cd:	be 02 00 00 00       	mov    $0x2,%esi
   1c0d2:	e8 29 3f 00 00       	call   20000 <uint64_to_str>
   1c0d7:	48 8d 35 c0 e3 00 00 	lea    0xe3c0(%rip),%rsi        # 2a49e <is_format_xz.magic+0x146>
   1c0de:	bf 02 00 00 00       	mov    $0x2,%edi
   1c0e3:	89 ea                	mov    %ebp,%edx
   1c0e5:	4c 89 f1             	mov    %r14,%rcx
   1c0e8:	4d 89 f8             	mov    %r15,%r8
   1c0eb:	49 89 c1             	mov    %rax,%r9
   1c0ee:	31 c0                	xor    %eax,%eax
   1c0f0:	e8 6b 30 00 00       	call   1f160 <message>
   1c0f5:	80 3d 50 80 01 00 00 	cmpb   $0x0,0x18050(%rip)        # 3414c <check_default>
   1c0fc:	75 22                	jne    1c120 <coder_set_compression_settings+0x380>
   1c0fe:	c7 05 40 80 01 00 04 	movl   $0x4,0x18040(%rip)        # 34148 <check>
   1c105:	00 00 00 
   1c108:	bf 04 00 00 00       	mov    $0x4,%edi
   1c10d:	e8 1e e8 fe ff       	call   a930 <lzma_check_is_supported>
   1c112:	84 c0                	test   %al,%al
   1c114:	75 0a                	jne    1c120 <coder_set_compression_settings+0x380>
   1c116:	c7 05 28 80 01 00 01 	movl   $0x1,0x18028(%rip)        # 34148 <check>
   1c11d:	00 00 00 
   1c120:	48 83 c4 08          	add    $0x8,%rsp
   1c124:	5b                   	pop    %rbx
   1c125:	41 5c                	pop    %r12
   1c127:	41 5d                	pop    %r13
   1c129:	41 5e                	pop    %r14
   1c12b:	41 5f                	pop    %r15
   1c12d:	5d                   	pop    %rbp
   1c12e:	c3                   	ret    
   1c12f:	48 8d 3d 2a 80 01 00 	lea    0x1802a(%rip),%rdi        # 34160 <filters>
   1c136:	e8 75 a7 fe ff       	call   68b0 <lzma_raw_encoder_memusage>
   1c13b:	49 89 c7             	mov    %rax,%r15
   1c13e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c142:	0f 85 cf fd ff ff    	jne    1bf17 <coder_set_compression_settings+0x177>
   1c148:	e9 bc fd ff ff       	jmp    1bf09 <coder_set_compression_settings+0x169>
   1c14d:	0f 1f 00             	nopl   (%rax)

000000000001c150 <coder_run>:
   1c150:	55                   	push   %rbp
   1c151:	41 57                	push   %r15
   1c153:	41 56                	push   %r14
   1c155:	41 55                	push   %r13
   1c157:	41 54                	push   %r12
   1c159:	53                   	push   %rbx
   1c15a:	50                   	push   %rax
   1c15b:	48 89 fb             	mov    %rdi,%rbx
   1c15e:	e8 bd 2f 00 00       	call   1f120 <message_filename>
   1c163:	48 89 df             	mov    %rbx,%rdi
   1c166:	e8 05 06 00 00       	call   1c770 <io_open_src>
   1c16b:	48 85 c0             	test   %rax,%rax
   1c16e:	0f 84 b8 00 00 00    	je     1c22c <coder_run+0xdc>
   1c174:	48 89 c3             	mov    %rax,%rbx
   1c177:	4c 8d 35 a2 80 01 00 	lea    0x180a2(%rip),%r14        # 34220 <in_buf>
   1c17e:	4c 89 35 9b a0 01 00 	mov    %r14,0x1a09b(%rip)        # 36220 <strm>
   1c185:	ba 00 20 00 00       	mov    $0x2000,%edx
   1c18a:	48 89 c7             	mov    %rax,%rdi
   1c18d:	4c 89 f6             	mov    %r14,%rsi
   1c190:	e8 eb 08 00 00       	call   1ca80 <io_read>
   1c195:	48 89 05 8c a0 01 00 	mov    %rax,0x1a08c(%rip)        # 36228 <strm+0x8>
   1c19c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c1a0:	0f 84 50 02 00 00    	je     1c3f6 <coder_run+0x2a6>
   1c1a6:	83 3d 93 7f 01 00 00 	cmpl   $0x0,0x17f93(%rip)        # 34140 <opt_mode>
   1c1ad:	8b 0d 91 7f 01 00    	mov    0x17f91(%rip),%ecx        # 34144 <opt_format>
   1c1b3:	0f 84 82 00 00 00    	je     1c23b <coder_run+0xeb>
   1c1b9:	83 f9 03             	cmp    $0x3,%ecx
   1c1bc:	0f 87 e4 00 00 00    	ja     1c2a6 <coder_run+0x156>
   1c1c2:	89 c9                	mov    %ecx,%ecx
   1c1c4:	48 8d 15 7d e1 00 00 	lea    0xe17d(%rip),%rdx        # 2a348 <stdin_filename+0x8>
   1c1cb:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   1c1cf:	48 01 d1             	add    %rdx,%rcx
   1c1d2:	ff e1                	jmp    *%rcx
   1c1d4:	48 83 f8 06          	cmp    $0x6,%rax
   1c1d8:	72 1d                	jb     1c1f7 <coder_run+0xa7>
   1c1da:	b8 fd 37 7a 58       	mov    $0x587a37fd,%eax
   1c1df:	33 05 3b 80 01 00    	xor    0x1803b(%rip),%eax        # 34220 <in_buf>
   1c1e5:	0f b7 0d 38 80 01 00 	movzwl 0x18038(%rip),%ecx        # 34224 <in_buf+0x4>
   1c1ec:	83 f1 5a             	xor    $0x5a,%ecx
   1c1ef:	09 c1                	or     %eax,%ecx
   1c1f1:	0f 84 57 01 00 00    	je     1c34e <coder_run+0x1fe>
   1c1f7:	e8 a4 04 00 00       	call   1c6a0 <is_format_lzma>
   1c1fc:	84 c0                	test   %al,%al
   1c1fe:	0f 84 a2 00 00 00    	je     1c2a6 <coder_run+0x156>
   1c204:	bf 01 00 00 00       	mov    $0x1,%edi
   1c209:	e8 a2 0c 00 00       	call   1ceb0 <hardware_memlimit_get>
   1c20e:	48 8d 3d 0b a0 01 00 	lea    0x1a00b(%rip),%rdi        # 36220 <strm>
   1c215:	48 89 c6             	mov    %rax,%rsi
   1c218:	e8 c3 bd fe ff       	call   7fe0 <lzma_alone_decoder>
   1c21d:	89 c5                	mov    %eax,%ebp
   1c21f:	85 c0                	test   %eax,%eax
   1c221:	0f 85 69 01 00 00    	jne    1c390 <coder_run+0x240>
   1c227:	e9 46 01 00 00       	jmp    1c372 <coder_run+0x222>
   1c22c:	48 83 c4 08          	add    $0x8,%rsp
   1c230:	5b                   	pop    %rbx
   1c231:	41 5c                	pop    %r12
   1c233:	41 5d                	pop    %r13
   1c235:	41 5e                	pop    %r14
   1c237:	41 5f                	pop    %r15
   1c239:	5d                   	pop    %rbp
   1c23a:	c3                   	ret    
   1c23b:	83 f9 03             	cmp    $0x3,%ecx
   1c23e:	0f 84 ec 00 00 00    	je     1c330 <coder_run+0x1e0>
   1c244:	83 f9 02             	cmp    $0x2,%ecx
   1c247:	0f 84 c5 00 00 00    	je     1c312 <coder_run+0x1c2>
   1c24d:	bd 0b 00 00 00       	mov    $0xb,%ebp
   1c252:	83 f9 01             	cmp    $0x1,%ecx
   1c255:	0f 85 35 01 00 00    	jne    1c390 <coder_run+0x240>
   1c25b:	8b 15 e7 7e 01 00    	mov    0x17ee7(%rip),%edx        # 34148 <check>
   1c261:	48 8d 3d b8 9f 01 00 	lea    0x19fb8(%rip),%rdi        # 36220 <strm>
   1c268:	48 8d 35 f1 7e 01 00 	lea    0x17ef1(%rip),%rsi        # 34160 <filters>
   1c26f:	e8 2c b7 fe ff       	call   79a0 <lzma_stream_encoder>
   1c274:	89 c5                	mov    %eax,%ebp
   1c276:	85 c0                	test   %eax,%eax
   1c278:	0f 85 12 01 00 00    	jne    1c390 <coder_run+0x240>
   1c27e:	e9 4e 01 00 00       	jmp    1c3d1 <coder_run+0x281>
   1c283:	48 83 f8 06          	cmp    $0x6,%rax
   1c287:	72 1d                	jb     1c2a6 <coder_run+0x156>
   1c289:	b8 fd 37 7a 58       	mov    $0x587a37fd,%eax
   1c28e:	33 05 8c 7f 01 00    	xor    0x17f8c(%rip),%eax        # 34220 <in_buf>
   1c294:	0f b7 0d 89 7f 01 00 	movzwl 0x17f89(%rip),%ecx        # 34224 <in_buf+0x4>
   1c29b:	83 f1 5a             	xor    $0x5a,%ecx
   1c29e:	09 c1                	or     %eax,%ecx
   1c2a0:	0f 84 a8 00 00 00    	je     1c34e <coder_run+0x1fe>
   1c2a6:	83 3d 93 7e 01 00 01 	cmpl   $0x1,0x17e93(%rip)        # 34140 <opt_mode>
   1c2ad:	bd 07 00 00 00       	mov    $0x7,%ebp
   1c2b2:	0f 85 d8 00 00 00    	jne    1c390 <coder_run+0x240>
   1c2b8:	48 8d 05 72 7e 01 00 	lea    0x17e72(%rip),%rax        # 34131 <opt_stdout>
   1c2bf:	80 38 00             	cmpb   $0x0,(%rax)
   1c2c2:	0f 84 c8 00 00 00    	je     1c390 <coder_run+0x240>
   1c2c8:	48 8d 05 63 7e 01 00 	lea    0x17e63(%rip),%rax        # 34132 <opt_force>
   1c2cf:	80 38 00             	cmpb   $0x0,(%rax)
   1c2d2:	0f 84 b8 00 00 00    	je     1c390 <coder_run+0x240>
   1c2d8:	31 ed                	xor    %ebp,%ebp
   1c2da:	4c 8d 3d 0f c1 01 00 	lea    0x1c10f(%rip),%r15        # 383f0 <user_abort>
   1c2e1:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c2e5:	0f 85 0b 01 00 00    	jne    1c3f6 <coder_run+0x2a6>
   1c2eb:	e9 f1 00 00 00       	jmp    1c3e1 <coder_run+0x291>
   1c2f0:	48 8d 3d 29 9f 01 00 	lea    0x19f29(%rip),%rdi        # 36220 <strm>
   1c2f7:	48 8d 35 62 7e 01 00 	lea    0x17e62(%rip),%rsi        # 34160 <filters>
   1c2fe:	e8 9d cd fe ff       	call   90a0 <lzma_raw_decoder>
   1c303:	89 c5                	mov    %eax,%ebp
   1c305:	85 c0                	test   %eax,%eax
   1c307:	0f 85 83 00 00 00    	jne    1c390 <coder_run+0x240>
   1c30d:	e9 bf 00 00 00       	jmp    1c3d1 <coder_run+0x281>
   1c312:	48 8b 35 4f 7e 01 00 	mov    0x17e4f(%rip),%rsi        # 34168 <filters+0x8>
   1c319:	48 8d 3d 00 9f 01 00 	lea    0x19f00(%rip),%rdi        # 36220 <strm>
   1c320:	e8 db 91 fe ff       	call   5500 <lzma_alone_encoder>
   1c325:	89 c5                	mov    %eax,%ebp
   1c327:	85 c0                	test   %eax,%eax
   1c329:	75 65                	jne    1c390 <coder_run+0x240>
   1c32b:	e9 a1 00 00 00       	jmp    1c3d1 <coder_run+0x281>
   1c330:	48 8d 3d e9 9e 01 00 	lea    0x19ee9(%rip),%rdi        # 36220 <strm>
   1c337:	48 8d 35 22 7e 01 00 	lea    0x17e22(%rip),%rsi        # 34160 <filters>
   1c33e:	e8 9d a5 fe ff       	call   68e0 <lzma_raw_encoder>
   1c343:	89 c5                	mov    %eax,%ebp
   1c345:	85 c0                	test   %eax,%eax
   1c347:	75 47                	jne    1c390 <coder_run+0x240>
   1c349:	e9 83 00 00 00       	jmp    1c3d1 <coder_run+0x281>
   1c34e:	bf 01 00 00 00       	mov    $0x1,%edi
   1c353:	e8 58 0b 00 00       	call   1ceb0 <hardware_memlimit_get>
   1c358:	48 8d 3d c1 9e 01 00 	lea    0x19ec1(%rip),%rdi        # 36220 <strm>
   1c35f:	48 89 c6             	mov    %rax,%rsi
   1c362:	ba 0a 00 00 00       	mov    $0xa,%edx
   1c367:	e8 d4 e2 fe ff       	call   a640 <lzma_stream_decoder>
   1c36c:	89 c5                	mov    %eax,%ebp
   1c36e:	85 c0                	test   %eax,%eax
   1c370:	75 1e                	jne    1c390 <coder_run+0x240>
   1c372:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c375:	0f 11 05 bc 9e 01 00 	movups %xmm0,0x19ebc(%rip)        # 36238 <strm+0x18>
   1c37c:	48 8d 3d 9d 9e 01 00 	lea    0x19e9d(%rip),%rdi        # 36220 <strm>
   1c383:	31 f6                	xor    %esi,%esi
   1c385:	e8 26 6e fe ff       	call   31b0 <lzma_code>
   1c38a:	89 c5                	mov    %eax,%ebp
   1c38c:	85 c0                	test   %eax,%eax
   1c38e:	74 41                	je     1c3d1 <coder_run+0x281>
   1c390:	4c 8b 33             	mov    (%rbx),%r14
   1c393:	89 ef                	mov    %ebp,%edi
   1c395:	e8 56 2e 00 00       	call   1f1f0 <message_strm>
   1c39a:	48 8d 3d 9c e1 00 00 	lea    0xe19c(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1c3a1:	45 31 e4             	xor    %r12d,%r12d
   1c3a4:	4c 89 f6             	mov    %r14,%rsi
   1c3a7:	48 89 c2             	mov    %rax,%rdx
   1c3aa:	31 c0                	xor    %eax,%eax
   1c3ac:	e8 cf 2d 00 00       	call   1f180 <message_error>
   1c3b1:	83 fd 06             	cmp    $0x6,%ebp
   1c3b4:	75 43                	jne    1c3f9 <coder_run+0x2a9>
   1c3b6:	48 8d 3d 63 9e 01 00 	lea    0x19e63(%rip),%rdi        # 36220 <strm>
   1c3bd:	e8 2e 71 fe ff       	call   34f0 <lzma_memusage>
   1c3c2:	bf 01 00 00 00       	mov    $0x1,%edi
   1c3c7:	48 89 c6             	mov    %rax,%rsi
   1c3ca:	e8 91 2e 00 00       	call   1f260 <message_mem_needed>
   1c3cf:	eb 25                	jmp    1c3f6 <coder_run+0x2a6>
   1c3d1:	40 b5 01             	mov    $0x1,%bpl
   1c3d4:	4c 8d 3d 15 c0 01 00 	lea    0x1c015(%rip),%r15        # 383f0 <user_abort>
   1c3db:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c3df:	75 15                	jne    1c3f6 <coder_run+0x2a6>
   1c3e1:	83 3d 58 7d 01 00 02 	cmpl   $0x2,0x17d58(%rip)        # 34140 <opt_mode>
   1c3e8:	74 29                	je     1c413 <coder_run+0x2c3>
   1c3ea:	48 89 df             	mov    %rbx,%rdi
   1c3ed:	e8 9e 04 00 00       	call   1c890 <io_open_dest>
   1c3f2:	84 c0                	test   %al,%al
   1c3f4:	74 1d                	je     1c413 <coder_run+0x2c3>
   1c3f6:	45 31 e4             	xor    %r12d,%r12d
   1c3f9:	41 0f b6 f4          	movzbl %r12b,%esi
   1c3fd:	48 89 df             	mov    %rbx,%rdi
   1c400:	48 83 c4 08          	add    $0x8,%rsp
   1c404:	5b                   	pop    %rbx
   1c405:	41 5c                	pop    %r12
   1c407:	41 5d                	pop    %r13
   1c409:	41 5e                	pop    %r14
   1c40b:	41 5f                	pop    %r15
   1c40d:	5d                   	pop    %rbp
   1c40e:	e9 fd 04 00 00       	jmp    1c910 <io_close>
   1c413:	48 8d 3d 06 9e 01 00 	lea    0x19e06(%rip),%rdi        # 36220 <strm>
   1c41a:	31 f6                	xor    %esi,%esi
   1c41c:	e8 0f 2d 00 00       	call   1f130 <message_progress_start>
   1c421:	40 84 ed             	test   %bpl,%bpl
   1c424:	0f 84 59 01 00 00    	je     1c583 <coder_run+0x433>
   1c42a:	0f b6 43 18          	movzbl 0x18(%rbx),%eax
   1c42e:	4c 8d 25 73 9e 01 00 	lea    0x19e73(%rip),%r12        # 362a8 <out_buf>
   1c435:	4c 89 25 fc 9d 01 00 	mov    %r12,0x19dfc(%rip)        # 36238 <strm+0x18>
   1c43c:	48 c7 05 f9 9d 01 00 	movq   $0x2000,0x19df9(%rip)        # 36240 <strm+0x20>
   1c443:	00 20 00 00 
   1c447:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c44b:	0f 85 ae 01 00 00    	jne    1c5ff <coder_run+0x4af>
   1c451:	0f b6 c0             	movzbl %al,%eax
   1c454:	8d 2c 40             	lea    (%rax,%rax,2),%ebp
   1c457:	eb 0f                	jmp    1c468 <coder_run+0x318>
   1c459:	e8 e2 2c 00 00       	call   1f140 <message_progress_update>
   1c45e:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c462:	0f 85 97 01 00 00    	jne    1c5ff <coder_run+0x4af>
   1c468:	48 83 3d b8 9d 01 00 	cmpq   $0x0,0x19db8(%rip)        # 36228 <strm+0x8>
   1c46f:	00 
   1c470:	75 3a                	jne    1c4ac <coder_run+0x35c>
   1c472:	80 7b 18 00          	cmpb   $0x0,0x18(%rbx)
   1c476:	75 34                	jne    1c4ac <coder_run+0x35c>
   1c478:	4c 89 35 a1 9d 01 00 	mov    %r14,0x19da1(%rip)        # 36220 <strm>
   1c47f:	ba 00 20 00 00       	mov    $0x2000,%edx
   1c484:	48 89 df             	mov    %rbx,%rdi
   1c487:	4c 89 f6             	mov    %r14,%rsi
   1c48a:	e8 f1 05 00 00       	call   1ca80 <io_read>
   1c48f:	48 89 05 92 9d 01 00 	mov    %rax,0x19d92(%rip)        # 36228 <strm+0x8>
   1c496:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c49a:	0f 84 5f 01 00 00    	je     1c5ff <coder_run+0x4af>
   1c4a0:	80 7b 18 00          	cmpb   $0x0,0x18(%rbx)
   1c4a4:	b8 03 00 00 00       	mov    $0x3,%eax
   1c4a9:	0f 45 e8             	cmovne %eax,%ebp
   1c4ac:	48 8d 3d 6d 9d 01 00 	lea    0x19d6d(%rip),%rdi        # 36220 <strm>
   1c4b3:	89 ee                	mov    %ebp,%esi
   1c4b5:	e8 f6 6c fe ff       	call   31b0 <lzma_code>
   1c4ba:	41 89 c5             	mov    %eax,%r13d
   1c4bd:	48 8b 05 7c 9d 01 00 	mov    0x19d7c(%rip),%rax        # 36240 <strm+0x20>
   1c4c4:	48 85 c0             	test   %rax,%rax
   1c4c7:	75 38                	jne    1c501 <coder_run+0x3b1>
   1c4c9:	83 3d 70 7c 01 00 02 	cmpl   $0x2,0x17c70(%rip)        # 34140 <opt_mode>
   1c4d0:	74 18                	je     1c4ea <coder_run+0x39a>
   1c4d2:	ba 00 20 00 00       	mov    $0x2000,%edx
   1c4d7:	48 89 df             	mov    %rbx,%rdi
   1c4da:	4c 89 e6             	mov    %r12,%rsi
   1c4dd:	e8 9e 07 00 00       	call   1cc80 <io_write>
   1c4e2:	84 c0                	test   %al,%al
   1c4e4:	0f 85 15 01 00 00    	jne    1c5ff <coder_run+0x4af>
   1c4ea:	4c 89 25 47 9d 01 00 	mov    %r12,0x19d47(%rip)        # 36238 <strm+0x18>
   1c4f1:	48 c7 05 44 9d 01 00 	movq   $0x2000,0x19d44(%rip)        # 36240 <strm+0x20>
   1c4f8:	00 20 00 00 
   1c4fc:	b8 00 20 00 00       	mov    $0x2000,%eax
   1c501:	45 85 ed             	test   %r13d,%r13d
   1c504:	0f 84 4f ff ff ff    	je     1c459 <coder_run+0x309>
   1c50a:	41 89 ef             	mov    %ebp,%r15d
   1c50d:	4c 89 e5             	mov    %r12,%rbp
   1c510:	45 8d 65 fc          	lea    -0x4(%r13),%r12d
   1c514:	41 83 fc fd          	cmp    $0xfffffffd,%r12d
   1c518:	77 24                	ja     1c53e <coder_run+0x3ee>
   1c51a:	83 3d 1f 7c 01 00 02 	cmpl   $0x2,0x17c1f(%rip)        # 34140 <opt_mode>
   1c521:	74 1b                	je     1c53e <coder_run+0x3ee>
   1c523:	ba 00 20 00 00       	mov    $0x2000,%edx
   1c528:	48 29 c2             	sub    %rax,%rdx
   1c52b:	48 89 df             	mov    %rbx,%rdi
   1c52e:	48 89 ee             	mov    %rbp,%rsi
   1c531:	e8 4a 07 00 00       	call   1cc80 <io_write>
   1c536:	84 c0                	test   %al,%al
   1c538:	0f 85 c1 00 00 00    	jne    1c5ff <coder_run+0x4af>
   1c53e:	41 83 fd 01          	cmp    $0x1,%r13d
   1c542:	0f 84 c8 00 00 00    	je     1c610 <coder_run+0x4c0>
   1c548:	41 83 fc fd          	cmp    $0xfffffffd,%r12d
   1c54c:	0f 86 ce 00 00 00    	jbe    1c620 <coder_run+0x4d0>
   1c552:	4c 8b 23             	mov    (%rbx),%r12
   1c555:	44 89 ef             	mov    %r13d,%edi
   1c558:	e8 93 2c 00 00       	call   1f1f0 <message_strm>
   1c55d:	48 8d 3d d9 df 00 00 	lea    0xdfd9(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1c564:	4c 89 e6             	mov    %r12,%rsi
   1c567:	48 89 c2             	mov    %rax,%rdx
   1c56a:	31 c0                	xor    %eax,%eax
   1c56c:	e8 ff 2b 00 00       	call   1f170 <message_warning>
   1c571:	49 89 ec             	mov    %rbp,%r12
   1c574:	44 89 fd             	mov    %r15d,%ebp
   1c577:	4c 8d 3d 72 be 01 00 	lea    0x1be72(%rip),%r15        # 383f0 <user_abort>
   1c57e:	e9 d6 fe ff ff       	jmp    1c459 <coder_run+0x309>
   1c583:	48 8b 05 9e 9c 01 00 	mov    0x19c9e(%rip),%rax        # 36228 <strm+0x8>
   1c58a:	4c 8d 35 8f 7c 01 00 	lea    0x17c8f(%rip),%r14        # 34220 <in_buf>
   1c591:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1c598:	0f 1f 84 00 00 00 00 
   1c59f:	00 
   1c5a0:	48 85 c0             	test   %rax,%rax
   1c5a3:	41 0f 94 c4          	sete   %r12b
   1c5a7:	74 59                	je     1c602 <coder_run+0x4b2>
   1c5a9:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c5ad:	75 53                	jne    1c602 <coder_run+0x4b2>
   1c5af:	48 89 df             	mov    %rbx,%rdi
   1c5b2:	4c 89 f6             	mov    %r14,%rsi
   1c5b5:	48 89 c2             	mov    %rax,%rdx
   1c5b8:	e8 c3 06 00 00       	call   1cc80 <io_write>
   1c5bd:	84 c0                	test   %al,%al
   1c5bf:	75 3e                	jne    1c5ff <coder_run+0x4af>
   1c5c1:	48 8b 05 68 9c 01 00 	mov    0x19c68(%rip),%rax        # 36230 <strm+0x10>
   1c5c8:	48 03 05 59 9c 01 00 	add    0x19c59(%rip),%rax        # 36228 <strm+0x8>
   1c5cf:	48 89 05 5a 9c 01 00 	mov    %rax,0x19c5a(%rip)        # 36230 <strm+0x10>
   1c5d6:	48 89 05 6b 9c 01 00 	mov    %rax,0x19c6b(%rip)        # 36248 <strm+0x28>
   1c5dd:	e8 5e 2b 00 00       	call   1f140 <message_progress_update>
   1c5e2:	ba 00 20 00 00       	mov    $0x2000,%edx
   1c5e7:	48 89 df             	mov    %rbx,%rdi
   1c5ea:	4c 89 f6             	mov    %r14,%rsi
   1c5ed:	e8 8e 04 00 00       	call   1ca80 <io_read>
   1c5f2:	48 89 05 2f 9c 01 00 	mov    %rax,0x19c2f(%rip)        # 36228 <strm+0x8>
   1c5f9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c5fd:	75 a1                	jne    1c5a0 <coder_run+0x450>
   1c5ff:	45 31 e4             	xor    %r12d,%r12d
   1c602:	41 0f b6 fc          	movzbl %r12b,%edi
   1c606:	e8 45 2b 00 00       	call   1f150 <message_progress_end>
   1c60b:	e9 e9 fd ff ff       	jmp    1c3f9 <coder_run+0x2a9>
   1c610:	41 bd 09 00 00 00    	mov    $0x9,%r13d
   1c616:	48 83 3d 0a 9c 01 00 	cmpq   $0x0,0x19c0a(%rip)        # 36228 <strm+0x8>
   1c61d:	00 
   1c61e:	74 43                	je     1c663 <coder_run+0x513>
   1c620:	4c 8b 33             	mov    (%rbx),%r14
   1c623:	44 89 ef             	mov    %r13d,%edi
   1c626:	e8 c5 2b 00 00       	call   1f1f0 <message_strm>
   1c62b:	48 8d 3d 0b df 00 00 	lea    0xdf0b(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1c632:	45 31 e4             	xor    %r12d,%r12d
   1c635:	4c 89 f6             	mov    %r14,%rsi
   1c638:	48 89 c2             	mov    %rax,%rdx
   1c63b:	31 c0                	xor    %eax,%eax
   1c63d:	e8 3e 2b 00 00       	call   1f180 <message_error>
   1c642:	41 83 fd 06          	cmp    $0x6,%r13d
   1c646:	75 ba                	jne    1c602 <coder_run+0x4b2>
   1c648:	48 8d 3d d1 9b 01 00 	lea    0x19bd1(%rip),%rdi        # 36220 <strm>
   1c64f:	e8 9c 6e fe ff       	call   34f0 <lzma_memusage>
   1c654:	bf 01 00 00 00       	mov    $0x1,%edi
   1c659:	48 89 c6             	mov    %rax,%rsi
   1c65c:	e8 ff 2b 00 00       	call   1f260 <message_mem_needed>
   1c661:	eb 9c                	jmp    1c5ff <coder_run+0x4af>
   1c663:	41 b4 01             	mov    $0x1,%r12b
   1c666:	80 7b 18 00          	cmpb   $0x0,0x18(%rbx)
   1c66a:	75 96                	jne    1c602 <coder_run+0x4b2>
   1c66c:	48 8d 35 ad 7b 01 00 	lea    0x17bad(%rip),%rsi        # 34220 <in_buf>
   1c673:	ba 01 00 00 00       	mov    $0x1,%edx
   1c678:	48 89 df             	mov    %rbx,%rdi
   1c67b:	e8 00 04 00 00       	call   1ca80 <io_read>
   1c680:	48 89 05 a1 9b 01 00 	mov    %rax,0x19ba1(%rip)        # 36228 <strm+0x8>
   1c687:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c68b:	0f 84 6e ff ff ff    	je     1c5ff <coder_run+0x4af>
   1c691:	48 85 c0             	test   %rax,%rax
   1c694:	0f 84 68 ff ff ff    	je     1c602 <coder_run+0x4b2>
   1c69a:	eb 84                	jmp    1c620 <coder_run+0x4d0>
   1c69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c6a0 <is_format_lzma>:
   1c6a0:	41 56                	push   %r14
   1c6a2:	53                   	push   %rbx
   1c6a3:	48 83 ec 18          	sub    $0x18,%rsp
   1c6a7:	48 83 3d 79 9b 01 00 	cmpq   $0xd,0x19b79(%rip)        # 36228 <strm+0x8>
   1c6ae:	0d 
   1c6af:	73 07                	jae    1c6b8 <is_format_lzma+0x18>
   1c6b1:	31 db                	xor    %ebx,%ebx
   1c6b3:	e9 8c 00 00 00       	jmp    1c744 <is_format_lzma+0xa4>
   1c6b8:	0f 10 05 89 de 00 00 	movups 0xde89(%rip),%xmm0        # 2a548 <is_format_xz.magic+0x1f0>
   1c6bf:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1c6c3:	48 8d 15 56 7b 01 00 	lea    0x17b56(%rip),%rdx        # 34220 <in_buf>
   1c6ca:	31 db                	xor    %ebx,%ebx
   1c6cc:	48 89 e7             	mov    %rsp,%rdi
   1c6cf:	b9 05 00 00 00       	mov    $0x5,%ecx
   1c6d4:	31 f6                	xor    %esi,%esi
   1c6d6:	e8 35 ca fe ff       	call   9110 <lzma_properties_decode>
   1c6db:	85 c0                	test   %eax,%eax
   1c6dd:	75 65                	jne    1c744 <is_format_lzma+0xa4>
   1c6df:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1c6e4:	44 8b 37             	mov    (%rdi),%r14d
   1c6e7:	e8 44 59 fe ff       	call   2030 <free@plt>
   1c6ec:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   1c6f0:	74 38                	je     1c72a <is_format_lzma+0x8a>
   1c6f2:	41 8d 46 ff          	lea    -0x1(%r14),%eax
   1c6f6:	31 db                	xor    %ebx,%ebx
   1c6f8:	44 89 f1             	mov    %r14d,%ecx
   1c6fb:	83 c1 ff             	add    $0xffffffff,%ecx
   1c6fe:	73 44                	jae    1c744 <is_format_lzma+0xa4>
   1c700:	89 c1                	mov    %eax,%ecx
   1c702:	c1 e9 02             	shr    $0x2,%ecx
   1c705:	09 c1                	or     %eax,%ecx
   1c707:	89 c8                	mov    %ecx,%eax
   1c709:	c1 e8 03             	shr    $0x3,%eax
   1c70c:	09 c8                	or     %ecx,%eax
   1c70e:	89 c1                	mov    %eax,%ecx
   1c710:	c1 e9 04             	shr    $0x4,%ecx
   1c713:	09 c1                	or     %eax,%ecx
   1c715:	89 c8                	mov    %ecx,%eax
   1c717:	c1 e8 08             	shr    $0x8,%eax
   1c71a:	09 c8                	or     %ecx,%eax
   1c71c:	89 c1                	mov    %eax,%ecx
   1c71e:	c1 e9 10             	shr    $0x10,%ecx
   1c721:	09 c1                	or     %eax,%ecx
   1c723:	ff c1                	inc    %ecx
   1c725:	44 39 f1             	cmp    %r14d,%ecx
   1c728:	75 1a                	jne    1c744 <is_format_lzma+0xa4>
   1c72a:	48 8b 05 f4 7a 01 00 	mov    0x17af4(%rip),%rax        # 34225 <in_buf+0x5>
   1c731:	48 ff c0             	inc    %rax
   1c734:	48 b9 02 00 00 00 40 	movabs $0x4000000002,%rcx
   1c73b:	00 00 00 
   1c73e:	48 39 c8             	cmp    %rcx,%rax
   1c741:	0f 92 c3             	setb   %bl
   1c744:	89 d8                	mov    %ebx,%eax
   1c746:	48 83 c4 18          	add    $0x18,%rsp
   1c74a:	5b                   	pop    %rbx
   1c74b:	41 5e                	pop    %r14
   1c74d:	c3                   	ret    
   1c74e:	66 90                	xchg   %ax,%ax

000000000001c750 <io_init>:
   1c750:	bf 01 00 00 00       	mov    $0x1,%edi
   1c755:	e9 26 3b 00 00       	jmp    20280 <tuklib_open_stdxxx>
   1c75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001c760 <io_no_sparse>:
   1c760:	c3                   	ret    
   1c761:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1c768:	0f 1f 84 00 00 00 00 
   1c76f:	00 

000000000001c770 <io_open_src>:
   1c770:	55                   	push   %rbp
   1c771:	41 57                	push   %r15
   1c773:	41 56                	push   %r14
   1c775:	53                   	push   %rbx
   1c776:	50                   	push   %rax
   1c777:	48 89 fb             	mov    %rdi,%rbx
   1c77a:	e8 b1 3a 00 00       	call   20230 <is_empty_filename>
   1c77f:	84 c0                	test   %al,%al
   1c781:	74 07                	je     1c78a <io_open_src+0x1a>
   1c783:	31 db                	xor    %ebx,%ebx
   1c785:	e9 f1 00 00 00       	jmp    1c87b <io_open_src+0x10b>
   1c78a:	48 89 1d 17 bb 01 00 	mov    %rbx,0x1bb17(%rip)        # 382a8 <io_open_src.pair>
   1c791:	48 c7 05 14 bb 01 00 	movq   $0x0,0x1bb14(%rip)        # 382b0 <io_open_src.pair+0x8>
   1c798:	00 00 00 00 
   1c79c:	48 c7 05 11 bb 01 00 	movq   $0xffffffffffffffff,0x1bb11(%rip)        # 382b8 <io_open_src.pair+0x10>
   1c7a3:	ff ff ff ff 
   1c7a7:	66 c7 05 10 bb 01 00 	movw   $0x0,0x1bb10(%rip)        # 382c0 <io_open_src.pair+0x18>
   1c7ae:	00 00 
   1c7b0:	48 c7 05 0d bb 01 00 	movq   $0x0,0x1bb0d(%rip)        # 382c8 <io_open_src.pair+0x20>
   1c7b7:	00 00 00 00 
   1c7bb:	e8 50 35 00 00       	call   1fd10 <signals_block>
   1c7c0:	48 8d 05 6a 79 01 00 	lea    0x1796a(%rip),%rax        # 34131 <opt_stdout>
   1c7c7:	0f b6 28             	movzbl (%rax),%ebp
   1c7ca:	40 84 ed             	test   %bpl,%bpl
   1c7cd:	74 05                	je     1c7d4 <io_open_src+0x64>
   1c7cf:	e8 4c 35 00 00       	call   1fd20 <signals_unblock>
   1c7d4:	4c 8d 35 25 be 01 00 	lea    0x1be25(%rip),%r14        # 38600 <spec_fd>
   1c7db:	4c 8d 3d 0e bc 01 00 	lea    0x1bc0e(%rip),%r15        # 383f0 <user_abort>
   1c7e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1c7e9:	1f 84 00 00 00 00 00 
   1c7f0:	49 8b 3e             	mov    (%r14),%rdi
   1c7f3:	48 8b 15 ae ba 01 00 	mov    0x1baae(%rip),%rdx        # 382a8 <io_open_src.pair>
   1c7fa:	be 03 00 00 00       	mov    $0x3,%esi
   1c7ff:	b9 00 01 00 00       	mov    $0x100,%ecx
   1c804:	e8 d7 51 00 00       	call   219e0 <spec_mem_open>
   1c809:	89 c3                	mov    %eax,%ebx
   1c80b:	89 05 a7 ba 01 00    	mov    %eax,0x1baa7(%rip)        # 382b8 <io_open_src.pair+0x10>
   1c811:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c814:	75 10                	jne    1c826 <io_open_src+0xb6>
   1c816:	e8 35 58 fe ff       	call   2050 <__errno_location@plt>
   1c81b:	83 38 04             	cmpl   $0x4,(%rax)
   1c81e:	75 06                	jne    1c826 <io_open_src+0xb6>
   1c820:	41 83 3f 00          	cmpl   $0x0,(%r15)
   1c824:	74 ca                	je     1c7f0 <io_open_src+0x80>
   1c826:	40 84 ed             	test   %bpl,%bpl
   1c829:	74 0b                	je     1c836 <io_open_src+0xc6>
   1c82b:	e8 e0 34 00 00       	call   1fd10 <signals_block>
   1c830:	8b 1d 82 ba 01 00    	mov    0x1ba82(%rip),%ebx        # 382b8 <io_open_src.pair+0x10>
   1c836:	83 fb ff             	cmp    $0xffffffff,%ebx
   1c839:	74 09                	je     1c844 <io_open_src+0xd4>
   1c83b:	48 8d 1d 66 ba 01 00 	lea    0x1ba66(%rip),%rbx        # 382a8 <io_open_src.pair>
   1c842:	eb 32                	jmp    1c876 <io_open_src+0x106>
   1c844:	e8 07 58 fe ff       	call   2050 <__errno_location@plt>
   1c849:	8b 38                	mov    (%rax),%edi
   1c84b:	83 ff 04             	cmp    $0x4,%edi
   1c84e:	75 04                	jne    1c854 <io_open_src+0xe4>
   1c850:	31 db                	xor    %ebx,%ebx
   1c852:	eb 22                	jmp    1c876 <io_open_src+0x106>
   1c854:	4c 8b 35 4d ba 01 00 	mov    0x1ba4d(%rip),%r14        # 382a8 <io_open_src.pair>
   1c85b:	e8 80 59 fe ff       	call   21e0 <strerror@plt>
   1c860:	48 8d 3d d6 dc 00 00 	lea    0xdcd6(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1c867:	31 db                	xor    %ebx,%ebx
   1c869:	4c 89 f6             	mov    %r14,%rsi
   1c86c:	48 89 c2             	mov    %rax,%rdx
   1c86f:	31 c0                	xor    %eax,%eax
   1c871:	e8 0a 29 00 00       	call   1f180 <message_error>
   1c876:	e8 a5 34 00 00       	call   1fd20 <signals_unblock>
   1c87b:	48 89 d8             	mov    %rbx,%rax
   1c87e:	48 83 c4 08          	add    $0x8,%rsp
   1c882:	5b                   	pop    %rbx
   1c883:	41 5e                	pop    %r14
   1c885:	41 5f                	pop    %r15
   1c887:	5d                   	pop    %rbp
   1c888:	c3                   	ret    
   1c889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c890 <io_open_dest>:
   1c890:	55                   	push   %rbp
   1c891:	41 56                	push   %r14
   1c893:	53                   	push   %rbx
   1c894:	48 89 fb             	mov    %rdi,%rbx
   1c897:	e8 74 34 00 00       	call   1fd10 <signals_block>
   1c89c:	48 8d 15 3d dd 00 00 	lea    0xdd3d(%rip),%rdx        # 2a5e0 <is_format_xz.magic+0x288>
   1c8a3:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1c8a7:	48 8d 05 52 bd 01 00 	lea    0x1bd52(%rip),%rax        # 38600 <spec_fd>
   1c8ae:	48 8b 38             	mov    (%rax),%rdi
   1c8b1:	be 03 00 00 00       	mov    $0x3,%esi
   1c8b6:	31 c9                	xor    %ecx,%ecx
   1c8b8:	e8 23 51 00 00       	call   219e0 <spec_mem_open>
   1c8bd:	89 c5                	mov    %eax,%ebp
   1c8bf:	89 43 14             	mov    %eax,0x14(%rbx)
   1c8c2:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c8c5:	75 2d                	jne    1c8f4 <io_open_dest+0x64>
   1c8c7:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1c8cb:	e8 80 57 fe ff       	call   2050 <__errno_location@plt>
   1c8d0:	8b 38                	mov    (%rax),%edi
   1c8d2:	e8 09 59 fe ff       	call   21e0 <strerror@plt>
   1c8d7:	48 8d 3d 5f dc 00 00 	lea    0xdc5f(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1c8de:	4c 89 f6             	mov    %r14,%rsi
   1c8e1:	48 89 c2             	mov    %rax,%rdx
   1c8e4:	31 c0                	xor    %eax,%eax
   1c8e6:	e8 95 28 00 00       	call   1f180 <message_error>
   1c8eb:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1c8ef:	e8 3c 57 fe ff       	call   2030 <free@plt>
   1c8f4:	83 fd ff             	cmp    $0xffffffff,%ebp
   1c8f7:	0f 94 c3             	sete   %bl
   1c8fa:	e8 21 34 00 00       	call   1fd20 <signals_unblock>
   1c8ff:	89 d8                	mov    %ebx,%eax
   1c901:	5b                   	pop    %rbx
   1c902:	41 5e                	pop    %r14
   1c904:	5d                   	pop    %rbp
   1c905:	c3                   	ret    
   1c906:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c90d:	00 00 00 

000000000001c910 <io_close>:
   1c910:	41 57                	push   %r15
   1c912:	41 56                	push   %r14
   1c914:	41 55                	push   %r13
   1c916:	41 54                	push   %r12
   1c918:	53                   	push   %rbx
   1c919:	48 83 ec 10          	sub    $0x10,%rsp
   1c91d:	48 89 fb             	mov    %rdi,%rbx
   1c920:	85 f6                	test   %esi,%esi
   1c922:	0f 84 d0 00 00 00    	je     1c9f8 <io_close+0xe8>
   1c928:	80 7b 19 00          	cmpb   $0x0,0x19(%rbx)
   1c92c:	0f 84 c6 00 00 00    	je     1c9f8 <io_close+0xe8>
   1c932:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   1c936:	48 85 c9             	test   %rcx,%rcx
   1c939:	0f 8e b9 00 00 00    	jle    1c9f8 <io_close+0xe8>
   1c93f:	4c 8d 25 ba bc 01 00 	lea    0x1bcba(%rip),%r12        # 38600 <spec_fd>
   1c946:	49 8b 3c 24          	mov    (%r12),%rdi
   1c94a:	8b 53 14             	mov    0x14(%rbx),%edx
   1c94d:	48 ff c9             	dec    %rcx
   1c950:	be 03 00 00 00       	mov    $0x3,%esi
   1c955:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1c95b:	e8 e0 4b 00 00       	call   21540 <spec_mem_lseek>
   1c960:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c964:	74 57                	je     1c9bd <io_close+0xad>
   1c966:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
   1c96b:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   1c970:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1c976:	4c 8d 2d 73 ba 01 00 	lea    0x1ba73(%rip),%r13        # 383f0 <user_abort>
   1c97d:	eb 0c                	jmp    1c98b <io_close+0x7b>
   1c97f:	90                   	nop
   1c980:	49 01 c6             	add    %rax,%r14
   1c983:	49 29 c7             	sub    %rax,%r15
   1c986:	4d 85 ff             	test   %r15,%r15
   1c989:	74 6d                	je     1c9f8 <io_close+0xe8>
   1c98b:	49 8b 3c 24          	mov    (%r12),%rdi
   1c98f:	8b 53 14             	mov    0x14(%rbx),%edx
   1c992:	be 03 00 00 00       	mov    $0x3,%esi
   1c997:	4c 89 f1             	mov    %r14,%rcx
   1c99a:	4d 89 f8             	mov    %r15,%r8
   1c99d:	e8 be 51 00 00       	call   21b60 <spec_mem_write>
   1c9a2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c9a6:	75 d8                	jne    1c980 <io_close+0x70>
   1c9a8:	e8 a3 56 fe ff       	call   2050 <__errno_location@plt>
   1c9ad:	8b 38                	mov    (%rax),%edi
   1c9af:	83 ff 04             	cmp    $0x4,%edi
   1c9b2:	75 22                	jne    1c9d6 <io_close+0xc6>
   1c9b4:	41 83 7d 00 00       	cmpl   $0x0,0x0(%r13)
   1c9b9:	74 cb                	je     1c986 <io_close+0x76>
   1c9bb:	eb 3b                	jmp    1c9f8 <io_close+0xe8>
   1c9bd:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1c9c1:	e8 8a 56 fe ff       	call   2050 <__errno_location@plt>
   1c9c6:	8b 38                	mov    (%rax),%edi
   1c9c8:	e8 13 58 fe ff       	call   21e0 <strerror@plt>
   1c9cd:	48 8d 3d 84 db 00 00 	lea    0xdb84(%rip),%rdi        # 2a558 <is_format_xz.magic+0x200>
   1c9d4:	eb 15                	jmp    1c9eb <io_close+0xdb>
   1c9d6:	83 ff 20             	cmp    $0x20,%edi
   1c9d9:	74 1d                	je     1c9f8 <io_close+0xe8>
   1c9db:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1c9df:	e8 fc 57 fe ff       	call   21e0 <strerror@plt>
   1c9e4:	48 8d 3d 28 dc 00 00 	lea    0xdc28(%rip),%rdi        # 2a613 <is_format_xz.magic+0x2bb>
   1c9eb:	4c 89 f6             	mov    %r14,%rsi
   1c9ee:	48 89 c2             	mov    %rax,%rdx
   1c9f1:	31 c0                	xor    %eax,%eax
   1c9f3:	e8 88 27 00 00       	call   1f180 <message_error>
   1c9f8:	e8 13 33 00 00       	call   1fd10 <signals_block>
   1c9fd:	8b 53 14             	mov    0x14(%rbx),%edx
   1ca00:	83 fa ff             	cmp    $0xffffffff,%edx
   1ca03:	74 4d                	je     1ca52 <io_close+0x142>
   1ca05:	83 fa 01             	cmp    $0x1,%edx
   1ca08:	74 48                	je     1ca52 <io_close+0x142>
   1ca0a:	48 8d 05 ef bb 01 00 	lea    0x1bbef(%rip),%rax        # 38600 <spec_fd>
   1ca11:	48 8b 38             	mov    (%rax),%rdi
   1ca14:	be 03 00 00 00       	mov    $0x3,%esi
   1ca19:	e8 82 56 00 00       	call   220a0 <spec_mem_close>
   1ca1e:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1ca22:	85 c0                	test   %eax,%eax
   1ca24:	74 24                	je     1ca4a <io_close+0x13a>
   1ca26:	e8 25 56 fe ff       	call   2050 <__errno_location@plt>
   1ca2b:	8b 38                	mov    (%rax),%edi
   1ca2d:	e8 ae 57 fe ff       	call   21e0 <strerror@plt>
   1ca32:	48 8d 3d ba db 00 00 	lea    0xdbba(%rip),%rdi        # 2a5f3 <is_format_xz.magic+0x29b>
   1ca39:	4c 89 f6             	mov    %r14,%rsi
   1ca3c:	48 89 c2             	mov    %rax,%rdx
   1ca3f:	31 c0                	xor    %eax,%eax
   1ca41:	e8 3a 27 00 00       	call   1f180 <message_error>
   1ca46:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1ca4a:	4c 89 f7             	mov    %r14,%rdi
   1ca4d:	e8 de 55 fe ff       	call   2030 <free@plt>
   1ca52:	8b 53 10             	mov    0x10(%rbx),%edx
   1ca55:	48 8d 05 a4 bb 01 00 	lea    0x1bba4(%rip),%rax        # 38600 <spec_fd>
   1ca5c:	48 8b 38             	mov    (%rax),%rdi
   1ca5f:	be 03 00 00 00       	mov    $0x3,%esi
   1ca64:	e8 37 56 00 00       	call   220a0 <spec_mem_close>
   1ca69:	e8 b2 32 00 00       	call   1fd20 <signals_unblock>
   1ca6e:	48 83 c4 10          	add    $0x10,%rsp
   1ca72:	5b                   	pop    %rbx
   1ca73:	41 5c                	pop    %r12
   1ca75:	41 5d                	pop    %r13
   1ca77:	41 5e                	pop    %r14
   1ca79:	41 5f                	pop    %r15
   1ca7b:	c3                   	ret    
   1ca7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ca80 <io_read>:
   1ca80:	55                   	push   %rbp
   1ca81:	41 57                	push   %r15
   1ca83:	41 56                	push   %r14
   1ca85:	41 55                	push   %r13
   1ca87:	41 54                	push   %r12
   1ca89:	53                   	push   %rbx
   1ca8a:	50                   	push   %rax
   1ca8b:	48 89 d3             	mov    %rdx,%rbx
   1ca8e:	48 85 d2             	test   %rdx,%rdx
   1ca91:	74 68                	je     1cafb <io_read+0x7b>
   1ca93:	49 89 f4             	mov    %rsi,%r12
   1ca96:	49 89 fe             	mov    %rdi,%r14
   1ca99:	4c 8d 2d 60 bb 01 00 	lea    0x1bb60(%rip),%r13        # 38600 <spec_fd>
   1caa0:	48 8d 2d 49 b9 01 00 	lea    0x1b949(%rip),%rbp        # 383f0 <user_abort>
   1caa7:	49 89 df             	mov    %rbx,%r15
   1caaa:	eb 09                	jmp    1cab5 <io_read+0x35>
   1caac:	0f 1f 40 00          	nopl   0x0(%rax)
   1cab0:	4d 85 ff             	test   %r15,%r15
   1cab3:	74 46                	je     1cafb <io_read+0x7b>
   1cab5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1cab9:	41 8b 56 10          	mov    0x10(%r14),%edx
   1cabd:	be 03 00 00 00       	mov    $0x3,%esi
   1cac2:	4c 89 e1             	mov    %r12,%rcx
   1cac5:	4d 89 f8             	mov    %r15,%r8
   1cac8:	e8 f3 43 00 00       	call   20ec0 <spec_mem_read>
   1cacd:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cad1:	74 0d                	je     1cae0 <io_read+0x60>
   1cad3:	48 85 c0             	test   %rax,%rax
   1cad6:	74 3b                	je     1cb13 <io_read+0x93>
   1cad8:	49 01 c4             	add    %rax,%r12
   1cadb:	49 29 c7             	sub    %rax,%r15
   1cade:	eb d0                	jmp    1cab0 <io_read+0x30>
   1cae0:	e8 6b 55 fe ff       	call   2050 <__errno_location@plt>
   1cae5:	8b 38                	mov    (%rax),%edi
   1cae7:	83 ff 04             	cmp    $0x4,%edi
   1caea:	75 2e                	jne    1cb1a <io_read+0x9a>
   1caec:	83 7d 00 00          	cmpl   $0x0,0x0(%rbp)
   1caf0:	74 be                	je     1cab0 <io_read+0x30>
   1caf2:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1caf9:	eb 06                	jmp    1cb01 <io_read+0x81>
   1cafb:	45 31 ff             	xor    %r15d,%r15d
   1cafe:	4c 29 fb             	sub    %r15,%rbx
   1cb01:	48 89 d8             	mov    %rbx,%rax
   1cb04:	48 83 c4 08          	add    $0x8,%rsp
   1cb08:	5b                   	pop    %rbx
   1cb09:	41 5c                	pop    %r12
   1cb0b:	41 5d                	pop    %r13
   1cb0d:	41 5e                	pop    %r14
   1cb0f:	41 5f                	pop    %r15
   1cb11:	5d                   	pop    %rbp
   1cb12:	c3                   	ret    
   1cb13:	41 c6 46 18 01       	movb   $0x1,0x18(%r14)
   1cb18:	eb e4                	jmp    1cafe <io_read+0x7e>
   1cb1a:	49 8b 1e             	mov    (%r14),%rbx
   1cb1d:	e8 be 56 fe ff       	call   21e0 <strerror@plt>
   1cb22:	48 8d 3d 6a da 00 00 	lea    0xda6a(%rip),%rdi        # 2a593 <is_format_xz.magic+0x23b>
   1cb29:	48 89 de             	mov    %rbx,%rsi
   1cb2c:	48 89 c2             	mov    %rax,%rdx
   1cb2f:	31 c0                	xor    %eax,%eax
   1cb31:	e8 4a 26 00 00       	call   1f180 <message_error>
   1cb36:	41 c6 46 18 01       	movb   $0x1,0x18(%r14)
   1cb3b:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1cb42:	eb bd                	jmp    1cb01 <io_read+0x81>
   1cb44:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1cb4b:	00 00 00 00 00 

000000000001cb50 <io_pread>:
   1cb50:	55                   	push   %rbp
   1cb51:	41 57                	push   %r15
   1cb53:	41 56                	push   %r14
   1cb55:	41 55                	push   %r13
   1cb57:	41 54                	push   %r12
   1cb59:	53                   	push   %rbx
   1cb5a:	50                   	push   %rax
   1cb5b:	49 89 cc             	mov    %rcx,%r12
   1cb5e:	49 89 d6             	mov    %rdx,%r14
   1cb61:	49 89 f7             	mov    %rsi,%r15
   1cb64:	48 89 fb             	mov    %rdi,%rbx
   1cb67:	4c 8d 2d 92 ba 01 00 	lea    0x1ba92(%rip),%r13        # 38600 <spec_fd>
   1cb6e:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1cb72:	8b 53 10             	mov    0x10(%rbx),%edx
   1cb75:	be 03 00 00 00       	mov    $0x3,%esi
   1cb7a:	45 31 c0             	xor    %r8d,%r8d
   1cb7d:	e8 be 49 00 00       	call   21540 <spec_mem_lseek>
   1cb82:	4c 39 e0             	cmp    %r12,%rax
   1cb85:	75 5d                	jne    1cbe4 <io_pread+0x94>
   1cb87:	4d 85 f6             	test   %r14,%r14
   1cb8a:	0f 84 8b 00 00 00    	je     1cc1b <io_pread+0xcb>
   1cb90:	48 8d 2d 59 b8 01 00 	lea    0x1b859(%rip),%rbp        # 383f0 <user_abort>
   1cb97:	4d 89 f4             	mov    %r14,%r12
   1cb9a:	eb 09                	jmp    1cba5 <io_pread+0x55>
   1cb9c:	0f 1f 40 00          	nopl   0x0(%rax)
   1cba0:	4d 85 e4             	test   %r12,%r12
   1cba3:	74 76                	je     1cc1b <io_pread+0xcb>
   1cba5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1cba9:	8b 53 10             	mov    0x10(%rbx),%edx
   1cbac:	be 03 00 00 00       	mov    $0x3,%esi
   1cbb1:	4c 89 f9             	mov    %r15,%rcx
   1cbb4:	4d 89 e0             	mov    %r12,%r8
   1cbb7:	e8 04 43 00 00       	call   20ec0 <spec_mem_read>
   1cbbc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cbc0:	74 0e                	je     1cbd0 <io_pread+0x80>
   1cbc2:	48 85 c0             	test   %rax,%rax
   1cbc5:	74 7f                	je     1cc46 <io_pread+0xf6>
   1cbc7:	49 01 c7             	add    %rax,%r15
   1cbca:	49 29 c4             	sub    %rax,%r12
   1cbcd:	eb d1                	jmp    1cba0 <io_pread+0x50>
   1cbcf:	90                   	nop
   1cbd0:	e8 7b 54 fe ff       	call   2050 <__errno_location@plt>
   1cbd5:	8b 38                	mov    (%rax),%edi
   1cbd7:	83 ff 04             	cmp    $0x4,%edi
   1cbda:	75 7c                	jne    1cc58 <io_pread+0x108>
   1cbdc:	83 7d 00 00          	cmpl   $0x0,0x0(%rbp)
   1cbe0:	74 be                	je     1cba0 <io_pread+0x50>
   1cbe2:	eb 23                	jmp    1cc07 <io_pread+0xb7>
   1cbe4:	48 8b 1b             	mov    (%rbx),%rbx
   1cbe7:	e8 64 54 fe ff       	call   2050 <__errno_location@plt>
   1cbec:	8b 38                	mov    (%rax),%edi
   1cbee:	e8 ed 55 fe ff       	call   21e0 <strerror@plt>
   1cbf3:	48 8d 3d ac d9 00 00 	lea    0xd9ac(%rip),%rdi        # 2a5a6 <is_format_xz.magic+0x24e>
   1cbfa:	48 89 de             	mov    %rbx,%rsi
   1cbfd:	48 89 c2             	mov    %rax,%rdx
   1cc00:	31 c0                	xor    %eax,%eax
   1cc02:	e8 79 25 00 00       	call   1f180 <message_error>
   1cc07:	40 b5 01             	mov    $0x1,%bpl
   1cc0a:	89 e8                	mov    %ebp,%eax
   1cc0c:	48 83 c4 08          	add    $0x8,%rsp
   1cc10:	5b                   	pop    %rbx
   1cc11:	41 5c                	pop    %r12
   1cc13:	41 5d                	pop    %r13
   1cc15:	41 5e                	pop    %r14
   1cc17:	41 5f                	pop    %r15
   1cc19:	5d                   	pop    %rbp
   1cc1a:	c3                   	ret    
   1cc1b:	45 31 e4             	xor    %r12d,%r12d
   1cc1e:	4d 29 e6             	sub    %r12,%r14
   1cc21:	40 b5 01             	mov    $0x1,%bpl
   1cc24:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   1cc28:	74 e0                	je     1cc0a <io_pread+0xba>
   1cc2a:	4d 85 e4             	test   %r12,%r12
   1cc2d:	74 13                	je     1cc42 <io_pread+0xf2>
   1cc2f:	48 8b 33             	mov    (%rbx),%rsi
   1cc32:	48 8d 3d 8c d9 00 00 	lea    0xd98c(%rip),%rdi        # 2a5c5 <is_format_xz.magic+0x26d>
   1cc39:	31 c0                	xor    %eax,%eax
   1cc3b:	e8 40 25 00 00       	call   1f180 <message_error>
   1cc40:	eb c8                	jmp    1cc0a <io_pread+0xba>
   1cc42:	31 ed                	xor    %ebp,%ebp
   1cc44:	eb c4                	jmp    1cc0a <io_pread+0xba>
   1cc46:	c6 43 18 01          	movb   $0x1,0x18(%rbx)
   1cc4a:	4d 29 e6             	sub    %r12,%r14
   1cc4d:	40 b5 01             	mov    $0x1,%bpl
   1cc50:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   1cc54:	75 d4                	jne    1cc2a <io_pread+0xda>
   1cc56:	eb b2                	jmp    1cc0a <io_pread+0xba>
   1cc58:	4c 8b 33             	mov    (%rbx),%r14
   1cc5b:	e8 80 55 fe ff       	call   21e0 <strerror@plt>
   1cc60:	48 8d 3d 2c d9 00 00 	lea    0xd92c(%rip),%rdi        # 2a593 <is_format_xz.magic+0x23b>
   1cc67:	4c 89 f6             	mov    %r14,%rsi
   1cc6a:	48 89 c2             	mov    %rax,%rdx
   1cc6d:	31 c0                	xor    %eax,%eax
   1cc6f:	e8 0c 25 00 00       	call   1f180 <message_error>
   1cc74:	c6 43 18 01          	movb   $0x1,0x18(%rbx)
   1cc78:	eb 8d                	jmp    1cc07 <io_pread+0xb7>
   1cc7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001cc80 <io_write>:
   1cc80:	55                   	push   %rbp
   1cc81:	41 57                	push   %r15
   1cc83:	41 56                	push   %r14
   1cc85:	41 55                	push   %r13
   1cc87:	41 54                	push   %r12
   1cc89:	53                   	push   %rbx
   1cc8a:	50                   	push   %rax
   1cc8b:	49 89 d6             	mov    %rdx,%r14
   1cc8e:	49 89 f7             	mov    %rsi,%r15
   1cc91:	48 89 fb             	mov    %rdi,%rbx
   1cc94:	80 7f 19 00          	cmpb   $0x0,0x19(%rdi)
   1cc98:	74 54                	je     1ccee <io_write+0x6e>
   1cc9a:	4d 85 f6             	test   %r14,%r14
   1cc9d:	0f 84 75 01 00 00    	je     1ce18 <io_write+0x198>
   1cca3:	49 81 fe 00 20 00 00 	cmp    $0x2000,%r14
   1ccaa:	75 0a                	jne    1ccb6 <io_write+0x36>
   1ccac:	49 83 3f 00          	cmpq   $0x0,(%r15)
   1ccb0:	0f 84 f5 00 00 00    	je     1cdab <io_write+0x12b>
   1ccb6:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   1ccba:	48 85 c9             	test   %rcx,%rcx
   1ccbd:	7e 2f                	jle    1ccee <io_write+0x6e>
   1ccbf:	48 8d 05 3a b9 01 00 	lea    0x1b93a(%rip),%rax        # 38600 <spec_fd>
   1ccc6:	48 8b 38             	mov    (%rax),%rdi
   1ccc9:	8b 53 14             	mov    0x14(%rbx),%edx
   1cccc:	be 03 00 00 00       	mov    $0x3,%esi
   1ccd1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ccd7:	e8 64 48 00 00       	call   21540 <spec_mem_lseek>
   1ccdc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cce0:	0f 84 9c 00 00 00    	je     1cd82 <io_write+0x102>
   1cce6:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   1cced:	00 
   1ccee:	4d 85 f6             	test   %r14,%r14
   1ccf1:	0f 84 21 01 00 00    	je     1ce18 <io_write+0x198>
   1ccf7:	4c 8d 25 02 b9 01 00 	lea    0x1b902(%rip),%r12        # 38600 <spec_fd>
   1ccfe:	4c 8d 2d eb b6 01 00 	lea    0x1b6eb(%rip),%r13        # 383f0 <user_abort>
   1cd05:	eb 18                	jmp    1cd1f <io_write+0x9f>
   1cd07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cd0e:	00 00 
   1cd10:	49 01 c7             	add    %rax,%r15
   1cd13:	49 29 c6             	sub    %rax,%r14
   1cd16:	4d 85 f6             	test   %r14,%r14
   1cd19:	0f 84 f9 00 00 00    	je     1ce18 <io_write+0x198>
   1cd1f:	49 8b 3c 24          	mov    (%r12),%rdi
   1cd23:	8b 53 14             	mov    0x14(%rbx),%edx
   1cd26:	be 03 00 00 00       	mov    $0x3,%esi
   1cd2b:	4c 89 f9             	mov    %r15,%rcx
   1cd2e:	4d 89 f0             	mov    %r14,%r8
   1cd31:	e8 2a 4e 00 00       	call   21b60 <spec_mem_write>
   1cd36:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1cd3a:	75 d4                	jne    1cd10 <io_write+0x90>
   1cd3c:	e8 0f 53 fe ff       	call   2050 <__errno_location@plt>
   1cd41:	8b 38                	mov    (%rax),%edi
   1cd43:	40 b5 01             	mov    $0x1,%bpl
   1cd46:	83 ff 04             	cmp    $0x4,%edi
   1cd49:	75 0c                	jne    1cd57 <io_write+0xd7>
   1cd4b:	41 83 7d 00 00       	cmpl   $0x0,0x0(%r13)
   1cd50:	74 c4                	je     1cd16 <io_write+0x96>
   1cd52:	e9 c3 00 00 00       	jmp    1ce1a <io_write+0x19a>
   1cd57:	83 ff 20             	cmp    $0x20,%edi
   1cd5a:	0f 84 ba 00 00 00    	je     1ce1a <io_write+0x19a>
   1cd60:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   1cd64:	e8 77 54 fe ff       	call   21e0 <strerror@plt>
   1cd69:	48 8d 3d a3 d8 00 00 	lea    0xd8a3(%rip),%rdi        # 2a613 <is_format_xz.magic+0x2bb>
   1cd70:	48 89 de             	mov    %rbx,%rsi
   1cd73:	48 89 c2             	mov    %rax,%rdx
   1cd76:	31 c0                	xor    %eax,%eax
   1cd78:	e8 03 24 00 00       	call   1f180 <message_error>
   1cd7d:	e9 98 00 00 00       	jmp    1ce1a <io_write+0x19a>
   1cd82:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   1cd86:	e8 c5 52 fe ff       	call   2050 <__errno_location@plt>
   1cd8b:	8b 38                	mov    (%rax),%edi
   1cd8d:	e8 4e 54 fe ff       	call   21e0 <strerror@plt>
   1cd92:	48 8d 3d bf d7 00 00 	lea    0xd7bf(%rip),%rdi        # 2a558 <is_format_xz.magic+0x200>
   1cd99:	48 89 de             	mov    %rbx,%rsi
   1cd9c:	48 89 c2             	mov    %rax,%rdx
   1cd9f:	31 c0                	xor    %eax,%eax
   1cda1:	e8 da 23 00 00       	call   1f180 <message_error>
   1cda6:	40 b5 01             	mov    $0x1,%bpl
   1cda9:	eb 6f                	jmp    1ce1a <io_write+0x19a>
   1cdab:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1cdb2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1cdb9:	1f 84 00 00 00 00 00 
   1cdc0:	49 83 7c c7 10 00    	cmpq   $0x0,0x10(%r15,%rax,8)
   1cdc6:	75 29                	jne    1cdf1 <io_write+0x171>
   1cdc8:	49 83 7c c7 18 00    	cmpq   $0x0,0x18(%r15,%rax,8)
   1cdce:	75 26                	jne    1cdf6 <io_write+0x176>
   1cdd0:	49 83 7c c7 20 00    	cmpq   $0x0,0x20(%r15,%rax,8)
   1cdd6:	75 24                	jne    1cdfc <io_write+0x17c>
   1cdd8:	48 3d fb 03 00 00    	cmp    $0x3fb,%rax
   1cdde:	74 30                	je     1ce10 <io_write+0x190>
   1cde0:	48 8d 48 04          	lea    0x4(%rax),%rcx
   1cde4:	49 83 7c c7 28 00    	cmpq   $0x0,0x28(%r15,%rax,8)
   1cdea:	48 89 c8             	mov    %rcx,%rax
   1cded:	74 d1                	je     1cdc0 <io_write+0x140>
   1cdef:	eb 12                	jmp    1ce03 <io_write+0x183>
   1cdf1:	48 ff c0             	inc    %rax
   1cdf4:	eb 0a                	jmp    1ce00 <io_write+0x180>
   1cdf6:	48 83 c0 02          	add    $0x2,%rax
   1cdfa:	eb 04                	jmp    1ce00 <io_write+0x180>
   1cdfc:	48 83 c0 03          	add    $0x3,%rax
   1ce00:	48 89 c1             	mov    %rax,%rcx
   1ce03:	48 81 f9 ff 03 00 00 	cmp    $0x3ff,%rcx
   1ce0a:	0f 82 a6 fe ff ff    	jb     1ccb6 <io_write+0x36>
   1ce10:	48 81 43 20 00 20 00 	addq   $0x2000,0x20(%rbx)
   1ce17:	00 
   1ce18:	31 ed                	xor    %ebp,%ebp
   1ce1a:	89 e8                	mov    %ebp,%eax
   1ce1c:	48 83 c4 08          	add    $0x8,%rsp
   1ce20:	5b                   	pop    %rbx
   1ce21:	41 5c                	pop    %r12
   1ce23:	41 5d                	pop    %r13
   1ce25:	41 5e                	pop    %r14
   1ce27:	41 5f                	pop    %r15
   1ce29:	5d                   	pop    %rbp
   1ce2a:	c3                   	ret    
   1ce2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ce30 <hardware_threadlimit_set>:
   1ce30:	83 ff 01             	cmp    $0x1,%edi
   1ce33:	83 d7 00             	adc    $0x0,%edi
   1ce36:	89 3d 94 b4 01 00    	mov    %edi,0x1b494(%rip)        # 382d0 <threadlimit>
   1ce3c:	c3                   	ret    
   1ce3d:	0f 1f 00             	nopl   (%rax)

000000000001ce40 <hardware_threadlimit_get>:
   1ce40:	8b 05 8a b4 01 00    	mov    0x1b48a(%rip),%eax        # 382d0 <threadlimit>
   1ce46:	c3                   	ret    
   1ce47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ce4e:	00 00 

000000000001ce50 <hardware_memlimit_set>:
   1ce50:	41 89 d0             	mov    %edx,%r8d
   1ce53:	85 c9                	test   %ecx,%ecx
   1ce55:	75 0b                	jne    1ce62 <hardware_memlimit_set+0x12>
   1ce57:	40 84 f6             	test   %sil,%sil
   1ce5a:	75 37                	jne    1ce93 <hardware_memlimit_set+0x43>
   1ce5c:	45 84 c0             	test   %r8b,%r8b
   1ce5f:	75 3e                	jne    1ce9f <hardware_memlimit_set+0x4f>
   1ce61:	c3                   	ret    
   1ce62:	31 c9                	xor    %ecx,%ecx
   1ce64:	80 3d 6d b4 01 00 00 	cmpb   $0x0,0x1b46d(%rip)        # 382d8 <total_ram>
   1ce6b:	b8 00 00 40 38       	mov    $0x38400000,%eax
   1ce70:	48 0f 44 c1          	cmove  %rcx,%rax
   1ce74:	89 f9                	mov    %edi,%ecx
   1ce76:	48 0f af c1          	imul   %rcx,%rax
   1ce7a:	48 b9 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rcx
   1ce81:	c2 f5 28 
   1ce84:	48 f7 e1             	mul    %rcx
   1ce87:	48 89 d7             	mov    %rdx,%rdi
   1ce8a:	48 c1 ef 04          	shr    $0x4,%rdi
   1ce8e:	40 84 f6             	test   %sil,%sil
   1ce91:	74 c9                	je     1ce5c <hardware_memlimit_set+0xc>
   1ce93:	48 89 3d 46 b4 01 00 	mov    %rdi,0x1b446(%rip)        # 382e0 <memlimit_compress>
   1ce9a:	45 84 c0             	test   %r8b,%r8b
   1ce9d:	74 c2                	je     1ce61 <hardware_memlimit_set+0x11>
   1ce9f:	48 89 3d 42 b4 01 00 	mov    %rdi,0x1b442(%rip)        # 382e8 <memlimit_decompress>
   1cea6:	c3                   	ret    
   1cea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ceae:	00 00 

000000000001ceb0 <hardware_memlimit_get>:
   1ceb0:	85 ff                	test   %edi,%edi
   1ceb2:	48 8d 05 27 b4 01 00 	lea    0x1b427(%rip),%rax        # 382e0 <memlimit_compress>
   1ceb9:	48 8d 0d 28 b4 01 00 	lea    0x1b428(%rip),%rcx        # 382e8 <memlimit_decompress>
   1cec0:	48 0f 44 c8          	cmove  %rax,%rcx
   1cec4:	48 8b 09             	mov    (%rcx),%rcx
   1cec7:	31 c0                	xor    %eax,%eax
   1cec9:	48 83 f9 01          	cmp    $0x1,%rcx
   1cecd:	48 19 c0             	sbb    %rax,%rax
   1ced0:	48 09 c8             	or     %rcx,%rax
   1ced3:	c3                   	ret    
   1ced4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1cedb:	00 00 00 00 00 

000000000001cee0 <hardware_memlimit_show>:
   1cee0:	50                   	push   %rax
   1cee1:	e8 1a 22 00 00       	call   1f100 <message_verbosity_get>
   1cee6:	31 d2                	xor    %edx,%edx
   1cee8:	85 c0                	test   %eax,%eax
   1ceea:	0f 95 c2             	setne  %dl
   1ceed:	31 ff                	xor    %edi,%edi
   1ceef:	be 01 00 00 00       	mov    $0x1,%esi
   1cef4:	58                   	pop    %rax
   1cef5:	e9 a6 33 00 00       	jmp    202a0 <tuklib_exit>
   1cefa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001cf00 <hardware_init>:
   1cf00:	c6 05 d1 b3 01 00 01 	movb   $0x1,0x1b3d1(%rip)        # 382d8 <total_ram>
   1cf07:	48 c7 05 ce b3 01 00 	movq   $0x0,0x1b3ce(%rip)        # 382e0 <memlimit_compress>
   1cf0e:	00 00 00 00 
   1cf12:	48 c7 05 cb b3 01 00 	movq   $0x0,0x1b3cb(%rip)        # 382e8 <memlimit_decompress>
   1cf19:	00 00 00 00 
   1cf1d:	c7 05 a9 b3 01 00 01 	movl   $0x1,0x1b3a9(%rip)        # 382d0 <threadlimit>
   1cf24:	00 00 00 
   1cf27:	c3                   	ret    
   1cf28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf2f:	00 

000000000001cf30 <list_totals>:
   1cf30:	55                   	push   %rbp
   1cf31:	41 57                	push   %r15
   1cf33:	41 56                	push   %r14
   1cf35:	41 55                	push   %r13
   1cf37:	41 54                	push   %r12
   1cf39:	53                   	push   %rbx
   1cf3a:	48 81 ec 58 04 00 00 	sub    $0x458,%rsp
   1cf41:	48 8d 05 ec 71 01 00 	lea    0x171ec(%rip),%rax        # 34134 <opt_robot>
   1cf48:	80 38 00             	cmpb   $0x0,(%rax)
   1cf4b:	0f 84 4f 01 00 00    	je     1d0a0 <list_totals+0x170>
   1cf51:	8b 35 d1 b3 01 00    	mov    0x1b3d1(%rip),%esi        # 38328 <totals.7>
   1cf57:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   1cf5c:	48 89 df             	mov    %rbx,%rdi
   1cf5f:	31 d2                	xor    %edx,%edx
   1cf61:	e8 1a 18 00 00       	call   1e780 <get_check_names>
   1cf66:	48 8b 35 8b b3 01 00 	mov    0x1b38b(%rip),%rsi        # 382f8 <totals.1>
   1cf6d:	48 8b 15 8c b3 01 00 	mov    0x1b38c(%rip),%rdx        # 38300 <totals.2>
   1cf74:	48 8b 0d 8d b3 01 00 	mov    0x1b38d(%rip),%rcx        # 38308 <totals.3>
   1cf7b:	4c 8b 05 8e b3 01 00 	mov    0x1b38e(%rip),%r8        # 38310 <totals.4>
   1cf82:	4c 8d 0d 5f d7 00 00 	lea    0xd75f(%rip),%r9        # 2a6e8 <is_format_xz.magic+0x390>
   1cf89:	4d 85 c0             	test   %r8,%r8
   1cf8c:	0f 84 9a 00 00 00    	je     1d02c <list_totals+0xfc>
   1cf92:	48 89 c8             	mov    %rcx,%rax
   1cf95:	48 d1 e8             	shr    %rax
   1cf98:	89 cf                	mov    %ecx,%edi
   1cf9a:	83 e7 01             	and    $0x1,%edi
   1cf9d:	48 09 c7             	or     %rax,%rdi
   1cfa0:	48 85 c9             	test   %rcx,%rcx
   1cfa3:	48 0f 49 f9          	cmovns %rcx,%rdi
   1cfa7:	f2 48 0f 2a cf       	cvtsi2sd %rdi,%xmm1
   1cfac:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1cfb0:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1cfb4:	78 04                	js     1cfba <list_totals+0x8a>
   1cfb6:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1cfba:	4c 89 c0             	mov    %r8,%rax
   1cfbd:	48 d1 e8             	shr    %rax
   1cfc0:	44 89 c7             	mov    %r8d,%edi
   1cfc3:	83 e7 01             	and    $0x1,%edi
   1cfc6:	48 09 c7             	or     %rax,%rdi
   1cfc9:	4d 85 c0             	test   %r8,%r8
   1cfcc:	49 0f 49 f8          	cmovns %r8,%rdi
   1cfd0:	f2 48 0f 2a d7       	cvtsi2sd %rdi,%xmm2
   1cfd5:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1cfd9:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1cfdd:	78 04                	js     1cfe3 <list_totals+0xb3>
   1cfdf:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1cfe3:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1cfe7:	66 0f 2f 05 39 d6 00 	comisd 0xd639(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1cfee:	00 
   1cfef:	77 3b                	ja     1d02c <list_totals+0xfc>
   1cff1:	4c 8d 35 38 b3 01 00 	lea    0x1b338(%rip),%r14        # 38330 <get_ratio.buf>
   1cff8:	48 8d 05 ed d6 00 00 	lea    0xd6ed(%rip),%rax        # 2a6ec <is_format_xz.magic+0x394>
   1cfff:	49 89 f7             	mov    %rsi,%r15
   1d002:	be 10 00 00 00       	mov    $0x10,%esi
   1d007:	4c 89 f7             	mov    %r14,%rdi
   1d00a:	49 89 d4             	mov    %rdx,%r12
   1d00d:	48 89 c2             	mov    %rax,%rdx
   1d010:	b0 01                	mov    $0x1,%al
   1d012:	49 89 cd             	mov    %rcx,%r13
   1d015:	4c 89 c5             	mov    %r8,%rbp
   1d018:	e8 93 50 fe ff       	call   20b0 <snprintf@plt>
   1d01d:	4d 89 f1             	mov    %r14,%r9
   1d020:	49 89 e8             	mov    %rbp,%r8
   1d023:	4c 89 e9             	mov    %r13,%rcx
   1d026:	4c 89 e2             	mov    %r12,%rdx
   1d029:	4c 89 fe             	mov    %r15,%rsi
   1d02c:	48 83 ec 08          	sub    $0x8,%rsp
   1d030:	48 8d 3d 7b d6 00 00 	lea    0xd67b(%rip),%rdi        # 2a6b2 <is_format_xz.magic+0x35a>
   1d037:	31 c0                	xor    %eax,%eax
   1d039:	ff 35 b1 b2 01 00    	push   0x1b2b1(%rip)        # 382f0 <totals.0>
   1d03f:	ff 35 d3 b2 01 00    	push   0x1b2d3(%rip)        # 38318 <totals.5>
   1d045:	53                   	push   %rbx
   1d046:	e8 55 50 fe ff       	call   20a0 <printf@plt>
   1d04b:	48 83 c4 20          	add    $0x20,%rsp
   1d04f:	e8 ac 20 00 00       	call   1f100 <message_verbosity_get>
   1d054:	83 f8 04             	cmp    $0x4,%eax
   1d057:	72 2e                	jb     1d087 <list_totals+0x157>
   1d059:	48 8b 35 c0 b2 01 00 	mov    0x1b2c0(%rip),%rsi        # 38320 <totals.6>
   1d060:	80 3d b1 70 01 00 00 	cmpb   $0x0,0x170b1(%rip)        # 34118 <totals.8>
   1d067:	48 8d 05 6d d6 00 00 	lea    0xd66d(%rip),%rax        # 2a6db <is_format_xz.magic+0x383>
   1d06e:	48 8d 15 62 d6 00 00 	lea    0xd662(%rip),%rdx        # 2a6d7 <is_format_xz.magic+0x37f>
   1d075:	48 0f 44 d0          	cmove  %rax,%rdx
   1d079:	48 8d 3d 43 d8 00 00 	lea    0xd843(%rip),%rdi        # 2a8c3 <is_format_xz.magic+0x56b>
   1d080:	31 c0                	xor    %eax,%eax
   1d082:	e8 19 50 fe ff       	call   20a0 <printf@plt>
   1d087:	48 8b 05 42 6f 01 00 	mov    0x16f42(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   1d08e:	48 8b 30             	mov    (%rax),%rsi
   1d091:	bf 0a 00 00 00       	mov    $0xa,%edi
   1d096:	e8 85 50 fe ff       	call   2120 <putc@plt>
   1d09b:	e9 93 02 00 00       	jmp    1d333 <list_totals+0x403>
   1d0a0:	48 83 3d 48 b2 01 00 	cmpq   $0x2,0x1b248(%rip)        # 382f0 <totals.0>
   1d0a7:	02 
   1d0a8:	0f 82 85 02 00 00    	jb     1d333 <list_totals+0x403>
   1d0ae:	e8 4d 20 00 00       	call   1f100 <message_verbosity_get>
   1d0b3:	83 f8 02             	cmp    $0x2,%eax
   1d0b6:	0f 87 a0 01 00 00    	ja     1d25c <list_totals+0x32c>
   1d0bc:	66 0f 28 05 6c d5 00 	movapd 0xd56c(%rip),%xmm0        # 2a630 <is_format_xz.magic+0x2d8>
   1d0c3:	00 
   1d0c4:	66 0f 29 44 24 40    	movapd %xmm0,0x40(%rsp)
   1d0ca:	66 0f 29 44 24 30    	movapd %xmm0,0x30(%rsp)
   1d0d0:	66 0f 29 44 24 20    	movapd %xmm0,0x20(%rsp)
   1d0d6:	66 0f 29 44 24 10    	movapd %xmm0,0x10(%rsp)
   1d0dc:	66 0f 29 04 24       	movapd %xmm0,(%rsp)
   1d0e1:	c6 44 24 4f 00       	movb   $0x0,0x4f(%rsp)
   1d0e6:	48 89 e7             	mov    %rsp,%rdi
   1d0e9:	e8 72 4f fe ff       	call   2060 <puts@plt>
   1d0ee:	8b 35 34 b2 01 00    	mov    0x1b234(%rip),%esi        # 38328 <totals.7>
   1d0f4:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   1d0f9:	48 89 df             	mov    %rbx,%rdi
   1d0fc:	31 d2                	xor    %edx,%edx
   1d0fe:	e8 7d 16 00 00       	call   1e780 <get_check_names>
   1d103:	48 8b 3d ee b1 01 00 	mov    0x1b1ee(%rip),%rdi        # 382f8 <totals.1>
   1d10a:	31 f6                	xor    %esi,%esi
   1d10c:	e8 ef 2e 00 00       	call   20000 <uint64_to_str>
   1d111:	49 89 c6             	mov    %rax,%r14
   1d114:	48 8b 3d e5 b1 01 00 	mov    0x1b1e5(%rip),%rdi        # 38300 <totals.2>
   1d11b:	be 01 00 00 00       	mov    $0x1,%esi
   1d120:	e8 db 2e 00 00       	call   20000 <uint64_to_str>
   1d125:	49 89 c7             	mov    %rax,%r15
   1d128:	48 8b 3d d9 b1 01 00 	mov    0x1b1d9(%rip),%rdi        # 38308 <totals.3>
   1d12f:	31 f6                	xor    %esi,%esi
   1d131:	ba 04 00 00 00       	mov    $0x4,%edx
   1d136:	31 c9                	xor    %ecx,%ecx
   1d138:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1d13e:	e8 ed 2e 00 00       	call   20030 <uint64_to_nicestr>
   1d143:	49 89 c4             	mov    %rax,%r12
   1d146:	48 8b 3d c3 b1 01 00 	mov    0x1b1c3(%rip),%rdi        # 38310 <totals.4>
   1d14d:	31 f6                	xor    %esi,%esi
   1d14f:	ba 04 00 00 00       	mov    $0x4,%edx
   1d154:	31 c9                	xor    %ecx,%ecx
   1d156:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   1d15c:	e8 cf 2e 00 00       	call   20030 <uint64_to_nicestr>
   1d161:	48 8b 0d a8 b1 01 00 	mov    0x1b1a8(%rip),%rcx        # 38310 <totals.4>
   1d168:	4c 8d 0d 79 d5 00 00 	lea    0xd579(%rip),%r9        # 2a6e8 <is_format_xz.magic+0x390>
   1d16f:	48 85 c9             	test   %rcx,%rcx
   1d172:	0f 84 8b 00 00 00    	je     1d203 <list_totals+0x2d3>
   1d178:	48 8b 15 89 b1 01 00 	mov    0x1b189(%rip),%rdx        # 38308 <totals.3>
   1d17f:	48 89 d6             	mov    %rdx,%rsi
   1d182:	48 d1 ee             	shr    %rsi
   1d185:	89 d7                	mov    %edx,%edi
   1d187:	83 e7 01             	and    $0x1,%edi
   1d18a:	48 09 f7             	or     %rsi,%rdi
   1d18d:	48 85 d2             	test   %rdx,%rdx
   1d190:	48 0f 49 fa          	cmovns %rdx,%rdi
   1d194:	f2 48 0f 2a cf       	cvtsi2sd %rdi,%xmm1
   1d199:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1d19d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1d1a1:	78 04                	js     1d1a7 <list_totals+0x277>
   1d1a3:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1d1a7:	48 89 ca             	mov    %rcx,%rdx
   1d1aa:	48 d1 ea             	shr    %rdx
   1d1ad:	89 ce                	mov    %ecx,%esi
   1d1af:	83 e6 01             	and    $0x1,%esi
   1d1b2:	48 09 d6             	or     %rdx,%rsi
   1d1b5:	48 85 c9             	test   %rcx,%rcx
   1d1b8:	48 0f 49 f1          	cmovns %rcx,%rsi
   1d1bc:	f2 48 0f 2a d6       	cvtsi2sd %rsi,%xmm2
   1d1c1:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1d1c5:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1d1c9:	78 04                	js     1d1cf <list_totals+0x29f>
   1d1cb:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1d1cf:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1d1d3:	66 0f 2f 05 4d d4 00 	comisd 0xd44d(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1d1da:	00 
   1d1db:	77 26                	ja     1d203 <list_totals+0x2d3>
   1d1dd:	4c 8d 2d 4c b1 01 00 	lea    0x1b14c(%rip),%r13        # 38330 <get_ratio.buf>
   1d1e4:	48 8d 15 01 d5 00 00 	lea    0xd501(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1d1eb:	be 10 00 00 00       	mov    $0x10,%esi
   1d1f0:	4c 89 ef             	mov    %r13,%rdi
   1d1f3:	48 89 c5             	mov    %rax,%rbp
   1d1f6:	b0 01                	mov    $0x1,%al
   1d1f8:	e8 b3 4e fe ff       	call   20b0 <snprintf@plt>
   1d1fd:	4d 89 e9             	mov    %r13,%r9
   1d200:	48 89 e8             	mov    %rbp,%rax
   1d203:	48 83 ec 08          	sub    $0x8,%rsp
   1d207:	48 8d 3d e3 d4 00 00 	lea    0xd4e3(%rip),%rdi        # 2a6f1 <is_format_xz.magic+0x399>
   1d20e:	4c 89 f6             	mov    %r14,%rsi
   1d211:	4c 89 fa             	mov    %r15,%rdx
   1d214:	4c 89 e1             	mov    %r12,%rcx
   1d217:	49 89 c0             	mov    %rax,%r8
   1d21a:	31 c0                	xor    %eax,%eax
   1d21c:	53                   	push   %rbx
   1d21d:	e8 7e 4e fe ff       	call   20a0 <printf@plt>
   1d222:	48 83 c4 10          	add    $0x10,%rsp
   1d226:	48 8b 3d c3 b0 01 00 	mov    0x1b0c3(%rip),%rdi        # 382f0 <totals.0>
   1d22d:	48 83 ff 01          	cmp    $0x1,%rdi
   1d231:	48 8d 05 d9 d4 00 00 	lea    0xd4d9(%rip),%rax        # 2a711 <is_format_xz.magic+0x3b9>
   1d238:	48 8d 1d db d4 00 00 	lea    0xd4db(%rip),%rbx        # 2a71a <is_format_xz.magic+0x3c2>
   1d23f:	48 0f 44 d8          	cmove  %rax,%rbx
   1d243:	31 f6                	xor    %esi,%esi
   1d245:	e8 b6 2d 00 00       	call   20000 <uint64_to_str>
   1d24a:	48 89 df             	mov    %rbx,%rdi
   1d24d:	48 89 c6             	mov    %rax,%rsi
   1d250:	31 c0                	xor    %eax,%eax
   1d252:	e8 49 4e fe ff       	call   20a0 <printf@plt>
   1d257:	e9 d7 00 00 00       	jmp    1d333 <list_totals+0x403>
   1d25c:	48 8b 05 6d 6d 01 00 	mov    0x16d6d(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   1d263:	48 8b 30             	mov    (%rax),%rsi
   1d266:	bf 0a 00 00 00       	mov    $0xa,%edi
   1d26b:	e8 b0 4e fe ff       	call   2120 <putc@plt>
   1d270:	48 8d 3d ad d4 00 00 	lea    0xd4ad(%rip),%rdi        # 2a724 <is_format_xz.magic+0x3cc>
   1d277:	e8 e4 4d fe ff       	call   2060 <puts@plt>
   1d27c:	48 8b 3d 6d b0 01 00 	mov    0x1b06d(%rip),%rdi        # 382f0 <totals.0>
   1d283:	31 f6                	xor    %esi,%esi
   1d285:	e8 76 2d 00 00       	call   20000 <uint64_to_str>
   1d28a:	48 8d 3d 9b d4 00 00 	lea    0xd49b(%rip),%rdi        # 2a72c <is_format_xz.magic+0x3d4>
   1d291:	48 89 c6             	mov    %rax,%rsi
   1d294:	31 c0                	xor    %eax,%eax
   1d296:	e8 05 4e fe ff       	call   20a0 <printf@plt>
   1d29b:	48 8b 3d 56 b0 01 00 	mov    0x1b056(%rip),%rdi        # 382f8 <totals.1>
   1d2a2:	48 8b 35 57 b0 01 00 	mov    0x1b057(%rip),%rsi        # 38300 <totals.2>
   1d2a9:	48 8b 15 58 b0 01 00 	mov    0x1b058(%rip),%rdx        # 38308 <totals.3>
   1d2b0:	48 8b 0d 59 b0 01 00 	mov    0x1b059(%rip),%rcx        # 38310 <totals.4>
   1d2b7:	44 8b 05 6a b0 01 00 	mov    0x1b06a(%rip),%r8d        # 38328 <totals.7>
   1d2be:	4c 8b 0d 53 b0 01 00 	mov    0x1b053(%rip),%r9        # 38318 <totals.5>
   1d2c5:	e8 16 19 00 00       	call   1ebe0 <print_adv_helper>
   1d2ca:	e8 31 1e 00 00       	call   1f100 <message_verbosity_get>
   1d2cf:	83 f8 04             	cmp    $0x4,%eax
   1d2d2:	72 5f                	jb     1d333 <list_totals+0x403>
   1d2d4:	48 8b 3d 45 b0 01 00 	mov    0x1b045(%rip),%rdi        # 38320 <totals.6>
   1d2db:	e8 00 2d 00 00       	call   1ffe0 <round_up_to_mib>
   1d2e0:	48 89 c7             	mov    %rax,%rdi
   1d2e3:	31 f6                	xor    %esi,%esi
   1d2e5:	e8 16 2d 00 00       	call   20000 <uint64_to_str>
   1d2ea:	48 8d 3d 55 d4 00 00 	lea    0xd455(%rip),%rdi        # 2a746 <is_format_xz.magic+0x3ee>
   1d2f1:	48 89 c6             	mov    %rax,%rsi
   1d2f4:	31 c0                	xor    %eax,%eax
   1d2f6:	e8 a5 4d fe ff       	call   20a0 <printf@plt>
   1d2fb:	80 3d 16 6e 01 00 00 	cmpb   $0x0,0x16e16(%rip)        # 34118 <totals.8>
   1d302:	48 8d 05 79 d4 00 00 	lea    0xd479(%rip),%rax        # 2a782 <is_format_xz.magic+0x42a>
   1d309:	48 8d 35 6e d4 00 00 	lea    0xd46e(%rip),%rsi        # 2a77e <is_format_xz.magic+0x426>
   1d310:	48 0f 44 f0          	cmove  %rax,%rsi
   1d314:	48 8d 3d 49 d4 00 00 	lea    0xd449(%rip),%rdi        # 2a764 <is_format_xz.magic+0x40c>
   1d31b:	31 c0                	xor    %eax,%eax
   1d31d:	48 81 c4 58 04 00 00 	add    $0x458,%rsp
   1d324:	5b                   	pop    %rbx
   1d325:	41 5c                	pop    %r12
   1d327:	41 5d                	pop    %r13
   1d329:	41 5e                	pop    %r14
   1d32b:	41 5f                	pop    %r15
   1d32d:	5d                   	pop    %rbp
   1d32e:	e9 6d 4d fe ff       	jmp    20a0 <printf@plt>
   1d333:	48 81 c4 58 04 00 00 	add    $0x458,%rsp
   1d33a:	5b                   	pop    %rbx
   1d33b:	41 5c                	pop    %r12
   1d33d:	41 5d                	pop    %r13
   1d33f:	41 5e                	pop    %r14
   1d341:	41 5f                	pop    %r15
   1d343:	5d                   	pop    %rbp
   1d344:	c3                   	ret    
   1d345:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1d34c:	00 00 00 00 

000000000001d350 <list_file>:
   1d350:	55                   	push   %rbp
   1d351:	41 57                	push   %r15
   1d353:	41 56                	push   %r14
   1d355:	41 55                	push   %r13
   1d357:	41 54                	push   %r12
   1d359:	53                   	push   %rbx
   1d35a:	48 81 ec 08 24 00 00 	sub    $0x2408,%rsp
   1d361:	48 89 fb             	mov    %rdi,%rbx
   1d364:	48 8d 05 d9 6d 01 00 	lea    0x16dd9(%rip),%rax        # 34144 <opt_format>
   1d36b:	83 38 02             	cmpl   $0x2,(%rax)
   1d36e:	72 0e                	jb     1d37e <list_file+0x2e>
   1d370:	48 8d 3d c9 d2 00 00 	lea    0xd2c9(%rip),%rdi        # 2a640 <is_format_xz.magic+0x2e8>
   1d377:	31 c0                	xor    %eax,%eax
   1d379:	e8 12 1e 00 00       	call   1f190 <message_fatal>
   1d37e:	48 89 df             	mov    %rbx,%rdi
   1d381:	e8 9a 1d 00 00       	call   1f120 <message_filename>
   1d386:	48 3b 1d 53 6c 01 00 	cmp    0x16c53(%rip),%rbx        # 33fe0 <_DYNAMIC+0x200>
   1d38d:	0f 84 a2 04 00 00    	je     1d835 <list_file+0x4e5>
   1d393:	48 8d 05 97 6d 01 00 	lea    0x16d97(%rip),%rax        # 34131 <opt_stdout>
   1d39a:	c6 00 00             	movb   $0x0,(%rax)
   1d39d:	48 8d 05 8e 6d 01 00 	lea    0x16d8e(%rip),%rax        # 34132 <opt_force>
   1d3a4:	c6 00 01             	movb   $0x1,(%rax)
   1d3a7:	48 89 df             	mov    %rbx,%rdi
   1d3aa:	e8 c1 f3 ff ff       	call   1c770 <io_open_src>
   1d3af:	48 85 c0             	test   %rax,%rax
   1d3b2:	0f 84 ec 04 00 00    	je     1d8a4 <list_file+0x554>
   1d3b8:	48 89 c3             	mov    %rax,%rbx
   1d3bb:	0f 10 05 2e d7 00 00 	movups 0xd72e(%rip),%xmm0        # 2aaf0 <is_format_xz.magic+0x798>
   1d3c2:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1d3c7:	66 0f 10 05 11 d7 00 	movupd 0xd711(%rip),%xmm0        # 2aae0 <is_format_xz.magic+0x788>
   1d3ce:	00 
   1d3cf:	66 0f 29 44 24 50    	movapd %xmm0,0x50(%rsp)
   1d3d5:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   1d3d9:	66 0f 29 84 24 f0 00 	movapd %xmm0,0xf0(%rsp)
   1d3e0:	00 00 
   1d3e2:	66 0f 29 84 24 e0 00 	movapd %xmm0,0xe0(%rsp)
   1d3e9:	00 00 
   1d3eb:	66 0f 29 84 24 d0 00 	movapd %xmm0,0xd0(%rsp)
   1d3f2:	00 00 
   1d3f4:	66 0f 29 84 24 c0 00 	movapd %xmm0,0xc0(%rsp)
   1d3fb:	00 00 
   1d3fd:	66 0f 29 84 24 b0 00 	movapd %xmm0,0xb0(%rsp)
   1d404:	00 00 
   1d406:	66 0f 29 84 24 a0 00 	movapd %xmm0,0xa0(%rsp)
   1d40d:	00 00 
   1d40f:	66 0f 29 84 24 90 00 	movapd %xmm0,0x90(%rsp)
   1d416:	00 00 
   1d418:	66 0f 29 84 24 80 00 	movapd %xmm0,0x80(%rsp)
   1d41f:	00 00 
   1d421:	48 c7 84 24 00 01 00 	movq   $0x0,0x100(%rsp)
   1d428:	00 00 00 00 00 
   1d42d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1d434:	00 00 
   1d436:	48 8d 05 c3 b1 01 00 	lea    0x1b1c3(%rip),%rax        # 38600 <spec_fd>
   1d43d:	48 8b 38             	mov    (%rax),%rdi
   1d440:	8b 53 10             	mov    0x10(%rbx),%edx
   1d443:	be 03 00 00 00       	mov    $0x3,%esi
   1d448:	e8 93 43 00 00       	call   217e0 <spec_mem_get_length>
   1d44d:	48 89 c5             	mov    %rax,%rbp
   1d450:	45 31 f6             	xor    %r14d,%r14d
   1d453:	4c 8d a4 24 00 04 00 	lea    0x400(%rsp),%r12
   1d45a:	00 
   1d45b:	4c 8d bc 24 98 02 00 	lea    0x298(%rsp),%r15
   1d462:	00 
   1d463:	31 c0                	xor    %eax,%eax
   1d465:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1d46a:	48 83 fd 17          	cmp    $0x17,%rbp
   1d46e:	0f 8e e0 03 00 00    	jle    1d854 <list_file+0x504>
   1d474:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1d479:	48 83 c5 f4          	add    $0xfffffffffffffff4,%rbp
   1d47d:	45 31 f6             	xor    %r14d,%r14d
   1d480:	eb 1f                	jmp    1d4a1 <list_file+0x151>
   1d482:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1d489:	1f 84 00 00 00 00 00 
   1d490:	49 83 c6 04          	add    $0x4,%r14
   1d494:	48 83 fd 10          	cmp    $0x10,%rbp
   1d498:	48 89 c5             	mov    %rax,%rbp
   1d49b:	0f 8c b3 03 00 00    	jl     1d854 <list_file+0x504>
   1d4a1:	ba 0c 00 00 00       	mov    $0xc,%edx
   1d4a6:	48 89 df             	mov    %rbx,%rdi
   1d4a9:	4c 89 e6             	mov    %r12,%rsi
   1d4ac:	48 89 e9             	mov    %rbp,%rcx
   1d4af:	e8 9c f6 ff ff       	call   1cb50 <io_pread>
   1d4b4:	84 c0                	test   %al,%al
   1d4b6:	0f 85 b9 03 00 00    	jne    1d875 <list_file+0x525>
   1d4bc:	83 bc 24 08 04 00 00 	cmpl   $0x0,0x408(%rsp)
   1d4c3:	00 
   1d4c4:	75 38                	jne    1d4fe <list_file+0x1ae>
   1d4c6:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
   1d4ca:	83 bc 24 04 04 00 00 	cmpl   $0x0,0x404(%rsp)
   1d4d1:	00 
   1d4d2:	75 bc                	jne    1d490 <list_file+0x140>
   1d4d4:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
   1d4d8:	83 bc 24 00 04 00 00 	cmpl   $0x0,0x400(%rsp)
   1d4df:	00 
   1d4e0:	74 0c                	je     1d4ee <list_file+0x19e>
   1d4e2:	49 83 c6 08          	add    $0x8,%r14
   1d4e6:	48 89 c5             	mov    %rax,%rbp
   1d4e9:	48 89 c8             	mov    %rcx,%rax
   1d4ec:	eb a6                	jmp    1d494 <list_file+0x144>
   1d4ee:	49 83 c6 0c          	add    $0xc,%r14
   1d4f2:	48 89 e8             	mov    %rbp,%rax
   1d4f5:	48 83 c0 f4          	add    $0xfffffffffffffff4,%rax
   1d4f9:	48 89 cd             	mov    %rcx,%rbp
   1d4fc:	eb 96                	jmp    1d494 <list_file+0x144>
   1d4fe:	4c 89 ff             	mov    %r15,%rdi
   1d501:	4c 89 e6             	mov    %r12,%rsi
   1d504:	e8 27 d2 fe ff       	call   a730 <lzma_stream_footer_decode>
   1d509:	85 c0                	test   %eax,%eax
   1d50b:	0f 85 ff 03 00 00    	jne    1d910 <list_file+0x5c0>
   1d511:	83 bc 24 98 02 00 00 	cmpl   $0x0,0x298(%rsp)
   1d518:	00 
   1d519:	0f 85 fb 03 00 00    	jne    1d91a <list_file+0x5ca>
   1d51f:	4c 8b ac 24 a0 02 00 	mov    0x2a0(%rsp),%r13
   1d526:	00 
   1d527:	49 8d 45 0c          	lea    0xc(%r13),%rax
   1d52b:	48 39 c5             	cmp    %rax,%rbp
   1d52e:	0f 82 20 03 00 00    	jb     1d854 <list_file+0x504>
   1d534:	bf 03 00 00 00       	mov    $0x3,%edi
   1d539:	e8 72 f9 ff ff       	call   1ceb0 <hardware_memlimit_get>
   1d53e:	49 89 c7             	mov    %rax,%r15
   1d541:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1d546:	48 85 ff             	test   %rdi,%rdi
   1d549:	74 19                	je     1d564 <list_file+0x214>
   1d54b:	e8 60 6d fe ff       	call   42b0 <lzma_index_memused>
   1d550:	48 89 c1             	mov    %rax,%rcx
   1d553:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d558:	49 29 c7             	sub    %rax,%r15
   1d55b:	73 0e                	jae    1d56b <list_file+0x21b>
   1d55d:	e8 4e 1c 00 00       	call   1f1b0 <message_bug>
   1d562:	eb 07                	jmp    1d56b <list_file+0x21b>
   1d564:	31 c0                	xor    %eax,%eax
   1d566:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d56b:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1d572:	00 
   1d573:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   1d578:	4c 89 fa             	mov    %r15,%rdx
   1d57b:	e8 d0 bc fe ff       	call   9250 <lzma_index_decoder>
   1d580:	85 c0                	test   %eax,%eax
   1d582:	0f 85 88 03 00 00    	jne    1d910 <list_file+0x5c0>
   1d588:	4c 29 ed             	sub    %r13,%rbp
   1d58b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d590:	49 81 fd 00 20 00 00 	cmp    $0x2000,%r13
   1d597:	ba 00 20 00 00       	mov    $0x2000,%edx
   1d59c:	49 0f 42 d5          	cmovb  %r13,%rdx
   1d5a0:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
   1d5a7:	00 
   1d5a8:	48 89 df             	mov    %rbx,%rdi
   1d5ab:	4c 89 e6             	mov    %r12,%rsi
   1d5ae:	48 89 e9             	mov    %rbp,%rcx
   1d5b1:	e8 9a f5 ff ff       	call   1cb50 <io_pread>
   1d5b6:	84 c0                	test   %al,%al
   1d5b8:	0f 85 b7 02 00 00    	jne    1d875 <list_file+0x525>
   1d5be:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
   1d5c5:	00 
   1d5c6:	48 01 c5             	add    %rax,%rbp
   1d5c9:	49 29 c5             	sub    %rax,%r13
   1d5cc:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
   1d5d3:	00 
   1d5d4:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1d5db:	00 
   1d5dc:	31 f6                	xor    %esi,%esi
   1d5de:	e8 cd 5b fe ff       	call   31b0 <lzma_code>
   1d5e3:	85 c0                	test   %eax,%eax
   1d5e5:	74 a9                	je     1d590 <list_file+0x240>
   1d5e7:	41 89 c7             	mov    %eax,%r15d
   1d5ea:	83 f8 0a             	cmp    $0xa,%eax
   1d5ed:	0f 84 c3 02 00 00    	je     1d8b6 <list_file+0x566>
   1d5f3:	41 83 ff 01          	cmp    $0x1,%r15d
   1d5f7:	0f 85 bf 02 00 00    	jne    1d8bc <list_file+0x56c>
   1d5fd:	4c 0b ac 24 88 00 00 	or     0x88(%rsp),%r13
   1d604:	00 
   1d605:	0f 85 ab 02 00 00    	jne    1d8b6 <list_file+0x566>
   1d60b:	48 2b ac 24 a0 02 00 	sub    0x2a0(%rsp),%rbp
   1d612:	00 
   1d613:	48 83 c5 f4          	add    $0xfffffffffffffff4,%rbp
   1d617:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d61c:	e8 2f 6d fe ff       	call   4350 <lzma_index_total_size>
   1d621:	48 39 c5             	cmp    %rax,%rbp
   1d624:	0f 82 2a 02 00 00    	jb     1d854 <list_file+0x504>
   1d62a:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d62f:	e8 1c 6d fe ff       	call   4350 <lzma_index_total_size>
   1d634:	48 29 c5             	sub    %rax,%rbp
   1d637:	ba 0c 00 00 00       	mov    $0xc,%edx
   1d63c:	48 89 df             	mov    %rbx,%rdi
   1d63f:	4c 89 e6             	mov    %r12,%rsi
   1d642:	48 89 e9             	mov    %rbp,%rcx
   1d645:	e8 06 f5 ff ff       	call   1cb50 <io_pread>
   1d64a:	84 c0                	test   %al,%al
   1d64c:	4c 8d bc 24 98 02 00 	lea    0x298(%rsp),%r15
   1d653:	00 
   1d654:	0f 85 1b 02 00 00    	jne    1d875 <list_file+0x525>
   1d65a:	4c 8d ac 24 d0 02 00 	lea    0x2d0(%rsp),%r13
   1d661:	00 
   1d662:	4c 89 ef             	mov    %r13,%rdi
   1d665:	4c 89 e6             	mov    %r12,%rsi
   1d668:	e8 33 d0 fe ff       	call   a6a0 <lzma_stream_header_decode>
   1d66d:	85 c0                	test   %eax,%eax
   1d66f:	0f 85 9b 02 00 00    	jne    1d910 <list_file+0x5c0>
   1d675:	4c 89 ef             	mov    %r13,%rdi
   1d678:	4c 89 fe             	mov    %r15,%rsi
   1d67b:	e8 e0 7d fe ff       	call   5460 <lzma_stream_flags_compare>
   1d680:	85 c0                	test   %eax,%eax
   1d682:	0f 85 88 02 00 00    	jne    1d910 <list_file+0x5c0>
   1d688:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d68d:	4c 89 fe             	mov    %r15,%rsi
   1d690:	e8 eb 6d fe ff       	call   4480 <lzma_index_stream_flags>
   1d695:	85 c0                	test   %eax,%eax
   1d697:	74 05                	je     1d69e <list_file+0x34e>
   1d699:	e8 12 1b 00 00       	call   1f1b0 <message_bug>
   1d69e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d6a3:	4c 89 f6             	mov    %r14,%rsi
   1d6a6:	e8 35 6e fe ff       	call   44e0 <lzma_index_stream_padding>
   1d6ab:	85 c0                	test   %eax,%eax
   1d6ad:	74 05                	je     1d6b4 <list_file+0x364>
   1d6af:	e8 fc 1a 00 00       	call   1f1b0 <message_bug>
   1d6b4:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   1d6ba:	74 19                	je     1d6d5 <list_file+0x385>
   1d6bc:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d6c1:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1d6c6:	31 d2                	xor    %edx,%edx
   1d6c8:	e8 43 71 fe ff       	call   4810 <lzma_index_cat>
   1d6cd:	85 c0                	test   %eax,%eax
   1d6cf:	0f 85 3b 02 00 00    	jne    1d910 <list_file+0x5c0>
   1d6d5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d6da:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1d6e1:	00 00 
   1d6e3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d6e8:	4c 01 f1             	add    %r14,%rcx
   1d6eb:	49 89 ce             	mov    %rcx,%r14
   1d6ee:	48 85 ed             	test   %rbp,%rbp
   1d6f1:	0f 8f 6e fd ff ff    	jg     1d465 <list_file+0x115>
   1d6f7:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   1d6fc:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1d703:	00 
   1d704:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1d709:	e8 02 5d fe ff       	call   3410 <lzma_end>
   1d70e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1d713:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
   1d718:	48 8d 05 15 6a 01 00 	lea    0x16a15(%rip),%rax        # 34134 <opt_robot>
   1d71f:	80 38 00             	cmpb   $0x0,(%rax)
   1d722:	0f 84 ff 01 00 00    	je     1d927 <list_file+0x5d7>
   1d728:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1d72d:	49 89 fe             	mov    %rdi,%r14
   1d730:	e8 0b 6d fe ff       	call   4440 <lzma_index_checks>
   1d735:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1d73c:	00 
   1d73d:	89 c6                	mov    %eax,%esi
   1d73f:	31 d2                	xor    %edx,%edx
   1d741:	e8 3a 10 00 00       	call   1e780 <get_check_names>
   1d746:	48 8b 33             	mov    (%rbx),%rsi
   1d749:	48 8d 3d eb d0 00 00 	lea    0xd0eb(%rip),%rdi        # 2a83b <is_format_xz.magic+0x4e3>
   1d750:	31 c0                	xor    %eax,%eax
   1d752:	e8 49 49 fe ff       	call   20a0 <printf@plt>
   1d757:	4c 89 f7             	mov    %r14,%rdi
   1d75a:	e8 c1 6b fe ff       	call   4320 <lzma_index_stream_count>
   1d75f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1d764:	4c 89 f7             	mov    %r14,%rdi
   1d767:	e8 a4 6b fe ff       	call   4310 <lzma_index_block_count>
   1d76c:	49 89 c4             	mov    %rax,%r12
   1d76f:	4c 89 f7             	mov    %r14,%rdi
   1d772:	e8 29 6c fe ff       	call   43a0 <lzma_index_file_size>
   1d777:	49 89 c5             	mov    %rax,%r13
   1d77a:	4c 89 f7             	mov    %r14,%rdi
   1d77d:	e8 ae 6c fe ff       	call   4430 <lzma_index_uncompressed_size>
   1d782:	48 89 c5             	mov    %rax,%rbp
   1d785:	4c 89 f7             	mov    %r14,%rdi
   1d788:	e8 13 6c fe ff       	call   43a0 <lzma_index_file_size>
   1d78d:	49 89 c7             	mov    %rax,%r15
   1d790:	4c 89 f7             	mov    %r14,%rdi
   1d793:	e8 98 6c fe ff       	call   4430 <lzma_index_uncompressed_size>
   1d798:	4c 8d 35 49 cf 00 00 	lea    0xcf49(%rip),%r14        # 2a6e8 <is_format_xz.magic+0x390>
   1d79f:	48 85 c0             	test   %rax,%rax
   1d7a2:	0f 84 a7 03 00 00    	je     1db4f <list_file+0x7ff>
   1d7a8:	4c 89 f9             	mov    %r15,%rcx
   1d7ab:	48 d1 e9             	shr    %rcx
   1d7ae:	44 89 fa             	mov    %r15d,%edx
   1d7b1:	83 e2 01             	and    $0x1,%edx
   1d7b4:	48 09 ca             	or     %rcx,%rdx
   1d7b7:	4d 85 ff             	test   %r15,%r15
   1d7ba:	49 0f 49 d7          	cmovns %r15,%rdx
   1d7be:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
   1d7c3:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1d7c7:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1d7cb:	78 04                	js     1d7d1 <list_file+0x481>
   1d7cd:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1d7d1:	48 89 c1             	mov    %rax,%rcx
   1d7d4:	48 d1 e9             	shr    %rcx
   1d7d7:	89 c2                	mov    %eax,%edx
   1d7d9:	83 e2 01             	and    $0x1,%edx
   1d7dc:	48 09 ca             	or     %rcx,%rdx
   1d7df:	48 85 c0             	test   %rax,%rax
   1d7e2:	48 0f 49 d0          	cmovns %rax,%rdx
   1d7e6:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
   1d7eb:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1d7ef:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1d7f3:	4c 8d bc 24 00 04 00 	lea    0x400(%rsp),%r15
   1d7fa:	00 
   1d7fb:	78 04                	js     1d801 <list_file+0x4b1>
   1d7fd:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1d801:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1d805:	66 0f 2f 05 1b ce 00 	comisd 0xce1b(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1d80c:	00 
   1d80d:	0f 87 44 03 00 00    	ja     1db57 <list_file+0x807>
   1d813:	4c 8d 35 16 ab 01 00 	lea    0x1ab16(%rip),%r14        # 38330 <get_ratio.buf>
   1d81a:	48 8d 15 cb ce 00 00 	lea    0xcecb(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1d821:	be 10 00 00 00       	mov    $0x10,%esi
   1d826:	4c 89 f7             	mov    %r14,%rdi
   1d829:	b0 01                	mov    $0x1,%al
   1d82b:	e8 80 48 fe ff       	call   20b0 <snprintf@plt>
   1d830:	e9 22 03 00 00       	jmp    1db57 <list_file+0x807>
   1d835:	48 8d 3d 42 ce 00 00 	lea    0xce42(%rip),%rdi        # 2a67e <is_format_xz.magic+0x326>
   1d83c:	31 c0                	xor    %eax,%eax
   1d83e:	48 81 c4 08 24 00 00 	add    $0x2408,%rsp
   1d845:	5b                   	pop    %rbx
   1d846:	41 5c                	pop    %r12
   1d848:	41 5d                	pop    %r13
   1d84a:	41 5e                	pop    %r14
   1d84c:	41 5f                	pop    %r15
   1d84e:	5d                   	pop    %rbp
   1d84f:	e9 2c 19 00 00       	jmp    1f180 <message_error>
   1d854:	4c 8b 33             	mov    (%rbx),%r14
   1d857:	bf 09 00 00 00       	mov    $0x9,%edi
   1d85c:	e8 8f 19 00 00       	call   1f1f0 <message_strm>
   1d861:	48 8d 3d d5 cc 00 00 	lea    0xccd5(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1d868:	4c 89 f6             	mov    %r14,%rsi
   1d86b:	48 89 c2             	mov    %rax,%rdx
   1d86e:	31 c0                	xor    %eax,%eax
   1d870:	e8 0b 19 00 00       	call   1f180 <message_error>
   1d875:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1d87c:	00 
   1d87d:	e8 8e 5b fe ff       	call   3410 <lzma_end>
   1d882:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1d887:	31 f6                	xor    %esi,%esi
   1d889:	e8 42 69 fe ff       	call   41d0 <lzma_index_end>
   1d88e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   1d893:	31 f6                	xor    %esi,%esi
   1d895:	e8 36 69 fe ff       	call   41d0 <lzma_index_end>
   1d89a:	48 89 df             	mov    %rbx,%rdi
   1d89d:	31 f6                	xor    %esi,%esi
   1d89f:	e8 6c f0 ff ff       	call   1c910 <io_close>
   1d8a4:	48 81 c4 08 24 00 00 	add    $0x2408,%rsp
   1d8ab:	5b                   	pop    %rbx
   1d8ac:	41 5c                	pop    %r12
   1d8ae:	41 5d                	pop    %r13
   1d8b0:	41 5e                	pop    %r14
   1d8b2:	41 5f                	pop    %r15
   1d8b4:	5d                   	pop    %rbp
   1d8b5:	c3                   	ret    
   1d8b6:	41 bf 09 00 00 00    	mov    $0x9,%r15d
   1d8bc:	4c 8b 33             	mov    (%rbx),%r14
   1d8bf:	44 89 ff             	mov    %r15d,%edi
   1d8c2:	e8 29 19 00 00       	call   1f1f0 <message_strm>
   1d8c7:	48 8d 3d 6f cc 00 00 	lea    0xcc6f(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1d8ce:	4c 89 f6             	mov    %r14,%rsi
   1d8d1:	48 89 c2             	mov    %rax,%rdx
   1d8d4:	31 c0                	xor    %eax,%eax
   1d8d6:	e8 a5 18 00 00       	call   1f180 <message_error>
   1d8db:	41 83 ff 06          	cmp    $0x6,%r15d
   1d8df:	75 94                	jne    1d875 <list_file+0x525>
   1d8e1:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1d8e8:	00 
   1d8e9:	e8 02 5c fe ff       	call   34f0 <lzma_memusage>
   1d8ee:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1d8f3:	48 01 c1             	add    %rax,%rcx
   1d8f6:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   1d8fd:	48 0f 43 f1          	cmovae %rcx,%rsi
   1d901:	bf 01 00 00 00       	mov    $0x1,%edi
   1d906:	e8 55 19 00 00       	call   1f260 <message_mem_needed>
   1d90b:	e9 65 ff ff ff       	jmp    1d875 <list_file+0x525>
   1d910:	4c 8b 33             	mov    (%rbx),%r14
   1d913:	89 c7                	mov    %eax,%edi
   1d915:	e9 42 ff ff ff       	jmp    1d85c <list_file+0x50c>
   1d91a:	4c 8b 33             	mov    (%rbx),%r14
   1d91d:	bf 08 00 00 00       	mov    $0x8,%edi
   1d922:	e9 35 ff ff ff       	jmp    1d85c <list_file+0x50c>
   1d927:	e8 d4 17 00 00       	call   1f100 <message_verbosity_get>
   1d92c:	83 f8 02             	cmp    $0x2,%eax
   1d92f:	0f 87 b5 04 00 00    	ja     1ddea <list_file+0xa9a>
   1d935:	80 3d 85 aa 01 00 00 	cmpb   $0x0,0x1aa85(%rip)        # 383c1 <print_info_basic.headings_displayed>
   1d93c:	75 13                	jne    1d951 <list_file+0x601>
   1d93e:	c6 05 7c aa 01 00 01 	movb   $0x1,0x1aa7c(%rip)        # 383c1 <print_info_basic.headings_displayed>
   1d945:	48 8d 3d a0 cf 00 00 	lea    0xcfa0(%rip),%rdi        # 2a8ec <is_format_xz.magic+0x594>
   1d94c:	e8 0f 47 fe ff       	call   2060 <puts@plt>
   1d951:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1d956:	4c 89 f7             	mov    %r14,%rdi
   1d959:	e8 e2 6a fe ff       	call   4440 <lzma_index_checks>
   1d95e:	48 8d bc 24 00 04 00 	lea    0x400(%rsp),%rdi
   1d965:	00 
   1d966:	89 c6                	mov    %eax,%esi
   1d968:	31 d2                	xor    %edx,%edx
   1d96a:	e8 11 0e 00 00       	call   1e780 <get_check_names>
   1d96f:	4c 89 f7             	mov    %r14,%rdi
   1d972:	e8 a9 69 fe ff       	call   4320 <lzma_index_stream_count>
   1d977:	48 89 c7             	mov    %rax,%rdi
   1d97a:	31 f6                	xor    %esi,%esi
   1d97c:	e8 7f 26 00 00       	call   20000 <uint64_to_str>
   1d981:	49 89 c4             	mov    %rax,%r12
   1d984:	4c 89 f7             	mov    %r14,%rdi
   1d987:	e8 84 69 fe ff       	call   4310 <lzma_index_block_count>
   1d98c:	48 89 c7             	mov    %rax,%rdi
   1d98f:	be 01 00 00 00       	mov    $0x1,%esi
   1d994:	e8 67 26 00 00       	call   20000 <uint64_to_str>
   1d999:	48 89 c5             	mov    %rax,%rbp
   1d99c:	4c 89 f7             	mov    %r14,%rdi
   1d99f:	e8 fc 69 fe ff       	call   43a0 <lzma_index_file_size>
   1d9a4:	48 89 c7             	mov    %rax,%rdi
   1d9a7:	31 f6                	xor    %esi,%esi
   1d9a9:	ba 04 00 00 00       	mov    $0x4,%edx
   1d9ae:	31 c9                	xor    %ecx,%ecx
   1d9b0:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1d9b6:	e8 75 26 00 00       	call   20030 <uint64_to_nicestr>
   1d9bb:	49 89 c5             	mov    %rax,%r13
   1d9be:	4c 89 f7             	mov    %r14,%rdi
   1d9c1:	e8 6a 6a fe ff       	call   4430 <lzma_index_uncompressed_size>
   1d9c6:	48 89 c7             	mov    %rax,%rdi
   1d9c9:	31 f6                	xor    %esi,%esi
   1d9cb:	ba 04 00 00 00       	mov    $0x4,%edx
   1d9d0:	31 c9                	xor    %ecx,%ecx
   1d9d2:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   1d9d8:	e8 53 26 00 00       	call   20030 <uint64_to_nicestr>
   1d9dd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d9e2:	4c 89 f7             	mov    %r14,%rdi
   1d9e5:	e8 b6 69 fe ff       	call   43a0 <lzma_index_file_size>
   1d9ea:	49 89 c7             	mov    %rax,%r15
   1d9ed:	4c 89 f7             	mov    %r14,%rdi
   1d9f0:	e8 3b 6a fe ff       	call   4430 <lzma_index_uncompressed_size>
   1d9f5:	48 8d 0d ec cc 00 00 	lea    0xccec(%rip),%rcx        # 2a6e8 <is_format_xz.magic+0x390>
   1d9fc:	48 85 c0             	test   %rax,%rax
   1d9ff:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1da04:	74 7e                	je     1da84 <list_file+0x734>
   1da06:	4c 89 f9             	mov    %r15,%rcx
   1da09:	48 d1 e9             	shr    %rcx
   1da0c:	44 89 fa             	mov    %r15d,%edx
   1da0f:	83 e2 01             	and    $0x1,%edx
   1da12:	48 09 ca             	or     %rcx,%rdx
   1da15:	4d 85 ff             	test   %r15,%r15
   1da18:	49 0f 49 d7          	cmovns %r15,%rdx
   1da1c:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
   1da21:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1da25:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1da29:	78 04                	js     1da2f <list_file+0x6df>
   1da2b:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1da2f:	48 89 c1             	mov    %rax,%rcx
   1da32:	48 d1 e9             	shr    %rcx
   1da35:	89 c2                	mov    %eax,%edx
   1da37:	83 e2 01             	and    $0x1,%edx
   1da3a:	48 09 ca             	or     %rcx,%rdx
   1da3d:	48 85 c0             	test   %rax,%rax
   1da40:	48 0f 49 d0          	cmovns %rax,%rdx
   1da44:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
   1da49:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1da4d:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1da51:	78 04                	js     1da57 <list_file+0x707>
   1da53:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1da57:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1da5b:	66 0f 2f 05 c5 cb 00 	comisd 0xcbc5(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1da62:	00 
   1da63:	77 1f                	ja     1da84 <list_file+0x734>
   1da65:	48 8d 3d c4 a8 01 00 	lea    0x1a8c4(%rip),%rdi        # 38330 <get_ratio.buf>
   1da6c:	48 8d 15 79 cc 00 00 	lea    0xcc79(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1da73:	be 10 00 00 00       	mov    $0x10,%esi
   1da78:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1da7d:	b0 01                	mov    $0x1,%al
   1da7f:	e8 2c 46 fe ff       	call   20b0 <snprintf@plt>
   1da84:	48 8b 03             	mov    (%rbx),%rax
   1da87:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1da8c:	4c 89 e7             	mov    %r12,%rdi
   1da8f:	be 05 00 00 00       	mov    $0x5,%esi
   1da94:	e8 47 28 00 00       	call   202e0 <tuklib_mbstr_fw>
   1da99:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1da9d:	48 89 ef             	mov    %rbp,%rdi
   1daa0:	be 07 00 00 00       	mov    $0x7,%esi
   1daa5:	e8 36 28 00 00       	call   202e0 <tuklib_mbstr_fw>
   1daaa:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1daae:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
   1dab3:	4c 89 ef             	mov    %r13,%rdi
   1dab6:	be 0b 00 00 00       	mov    $0xb,%esi
   1dabb:	e8 20 28 00 00       	call   202e0 <tuklib_mbstr_fw>
   1dac0:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
   1dac4:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
   1dac9:	4c 89 f7             	mov    %r14,%rdi
   1dacc:	be 0b 00 00 00       	mov    $0xb,%esi
   1dad1:	e8 0a 28 00 00       	call   202e0 <tuklib_mbstr_fw>
   1dad6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1dadb:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   1dae0:	4c 89 ef             	mov    %r13,%rdi
   1dae3:	be 05 00 00 00       	mov    $0x5,%esi
   1dae8:	e8 f3 27 00 00       	call   202e0 <tuklib_mbstr_fw>
   1daed:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1daf2:	4c 8d bc 24 00 04 00 	lea    0x400(%rsp),%r15
   1daf9:	00 
   1dafa:	4c 89 ff             	mov    %r15,%rdi
   1dafd:	be 07 00 00 00       	mov    $0x7,%esi
   1db02:	e8 d9 27 00 00       	call   202e0 <tuklib_mbstr_fw>
   1db07:	41 89 c2             	mov    %eax,%r10d
   1db0a:	48 8d 3d 1c ce 00 00 	lea    0xce1c(%rip),%rdi        # 2a92d <is_format_xz.magic+0x5d5>
   1db11:	8b 74 24 40          	mov    0x40(%rsp),%esi
   1db15:	4c 89 e2             	mov    %r12,%rdx
   1db18:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   1db1c:	49 89 e8             	mov    %rbp,%r8
   1db1f:	44 8b 4c 24 4c       	mov    0x4c(%rsp),%r9d
   1db24:	31 c0                	xor    %eax,%eax
   1db26:	ff 74 24 30          	push   0x30(%rsp)
   1db2a:	41 57                	push   %r15
   1db2c:	41 52                	push   %r10
   1db2e:	41 55                	push   %r13
   1db30:	ff b4 24 98 00 00 00 	push   0x98(%rsp)
   1db37:	41 56                	push   %r14
   1db39:	ff 74 24 68          	push   0x68(%rsp)
   1db3d:	ff 74 24 58          	push   0x58(%rsp)
   1db41:	e8 5a 45 fe ff       	call   20a0 <printf@plt>
   1db46:	48 83 c4 40          	add    $0x40,%rsp
   1db4a:	e9 99 0b 00 00       	jmp    1e6e8 <list_file+0x1398>
   1db4f:	4c 8d bc 24 00 04 00 	lea    0x400(%rsp),%r15
   1db56:	00 
   1db57:	48 8d 3d e6 cc 00 00 	lea    0xcce6(%rip),%rdi        # 2a844 <is_format_xz.magic+0x4ec>
   1db5e:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1db63:	4c 89 e2             	mov    %r12,%rdx
   1db66:	4c 89 e9             	mov    %r13,%rcx
   1db69:	49 89 e8             	mov    %rbp,%r8
   1db6c:	4d 89 f1             	mov    %r14,%r9
   1db6f:	31 c0                	xor    %eax,%eax
   1db71:	ff 74 24 08          	push   0x8(%rsp)
   1db75:	41 57                	push   %r15
   1db77:	e8 24 45 fe ff       	call   20a0 <printf@plt>
   1db7c:	48 83 c4 10          	add    $0x10,%rsp
   1db80:	e8 7b 15 00 00       	call   1f100 <message_verbosity_get>
   1db85:	83 f8 03             	cmp    $0x3,%eax
   1db88:	0f 82 1f 02 00 00    	jb     1ddad <list_file+0xa5d>
   1db8e:	4c 8d b4 24 d0 02 00 	lea    0x2d0(%rsp),%r14
   1db95:	00 
   1db96:	4c 89 f7             	mov    %r14,%rdi
   1db99:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1db9e:	e8 cd 72 fe ff       	call   4e70 <lzma_index_iter_init>
   1dba3:	4c 89 f7             	mov    %r14,%rdi
   1dba6:	be 01 00 00 00       	mov    $0x1,%esi
   1dbab:	e8 00 73 fe ff       	call   4eb0 <lzma_index_iter_next>
   1dbb0:	84 c0                	test   %al,%al
   1dbb2:	0f 84 70 05 00 00    	je     1e128 <list_file+0xdd8>
   1dbb8:	4c 8d b4 24 d0 02 00 	lea    0x2d0(%rsp),%r14
   1dbbf:	00 
   1dbc0:	4c 89 f7             	mov    %r14,%rdi
   1dbc3:	e8 c8 72 fe ff       	call   4e90 <lzma_index_iter_rewind>
   1dbc8:	4c 89 f7             	mov    %r14,%rdi
   1dbcb:	eb 1c                	jmp    1dbe9 <list_file+0x899>
   1dbcd:	48 8b 05 fc 63 01 00 	mov    0x163fc(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   1dbd4:	48 8b 30             	mov    (%rax),%rsi
   1dbd7:	bf 0a 00 00 00       	mov    $0xa,%edi
   1dbdc:	e8 3f 45 fe ff       	call   2120 <putc@plt>
   1dbe1:	48 8d bc 24 d0 02 00 	lea    0x2d0(%rsp),%rdi
   1dbe8:	00 
   1dbe9:	be 02 00 00 00       	mov    $0x2,%esi
   1dbee:	e8 bd 72 fe ff       	call   4eb0 <lzma_index_iter_next>
   1dbf3:	84 c0                	test   %al,%al
   1dbf5:	0f 85 b2 01 00 00    	jne    1ddad <list_file+0xa5d>
   1dbfb:	e8 00 15 00 00       	call   1f100 <message_verbosity_get>
   1dc00:	83 f8 04             	cmp    $0x4,%eax
   1dc03:	72 25                	jb     1dc2a <list_file+0x8da>
   1dc05:	48 89 df             	mov    %rbx,%rdi
   1dc08:	48 8d b4 24 d0 02 00 	lea    0x2d0(%rsp),%rsi
   1dc0f:	00 
   1dc10:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
   1dc17:	00 
   1dc18:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
   1dc1d:	e8 5e 11 00 00       	call   1ed80 <parse_details>
   1dc22:	84 c0                	test   %al,%al
   1dc24:	0f 85 40 0b 00 00    	jne    1e76a <list_file+0x141a>
   1dc2a:	48 8b b4 24 f0 02 00 	mov    0x2f0(%rsp),%rsi
   1dc31:	00 
   1dc32:	4c 8b ac 24 48 03 00 	mov    0x348(%rsp),%r13
   1dc39:	00 
   1dc3a:	48 8b 94 24 60 03 00 	mov    0x360(%rsp),%rdx
   1dc41:	00 
   1dc42:	4c 8b 84 24 50 03 00 	mov    0x350(%rsp),%r8
   1dc49:	00 
   1dc4a:	4c 8b 8c 24 58 03 00 	mov    0x358(%rsp),%r9
   1dc51:	00 
   1dc52:	4c 8b b4 24 88 03 00 	mov    0x388(%rsp),%r14
   1dc59:	00 
   1dc5a:	4c 8b a4 24 78 03 00 	mov    0x378(%rsp),%r12
   1dc61:	00 
   1dc62:	4c 8d 15 7f ca 00 00 	lea    0xca7f(%rip),%r10        # 2a6e8 <is_format_xz.magic+0x390>
   1dc69:	4d 85 e4             	test   %r12,%r12
   1dc6c:	0f 84 ab 00 00 00    	je     1dd1d <list_file+0x9cd>
   1dc72:	4c 89 f0             	mov    %r14,%rax
   1dc75:	48 d1 e8             	shr    %rax
   1dc78:	44 89 f1             	mov    %r14d,%ecx
   1dc7b:	83 e1 01             	and    $0x1,%ecx
   1dc7e:	48 09 c1             	or     %rax,%rcx
   1dc81:	4d 85 f6             	test   %r14,%r14
   1dc84:	49 0f 49 ce          	cmovns %r14,%rcx
   1dc88:	0f 57 c9             	xorps  %xmm1,%xmm1
   1dc8b:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
   1dc90:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dc94:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1dc98:	78 04                	js     1dc9e <list_file+0x94e>
   1dc9a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dc9e:	4c 89 e0             	mov    %r12,%rax
   1dca1:	48 d1 e8             	shr    %rax
   1dca4:	44 89 e1             	mov    %r12d,%ecx
   1dca7:	83 e1 01             	and    $0x1,%ecx
   1dcaa:	48 09 c1             	or     %rax,%rcx
   1dcad:	4d 85 e4             	test   %r12,%r12
   1dcb0:	49 0f 49 cc          	cmovns %r12,%rcx
   1dcb4:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
   1dcb9:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1dcbd:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1dcc1:	78 04                	js     1dcc7 <list_file+0x977>
   1dcc3:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1dcc7:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1dccb:	66 0f 2f 05 55 c9 00 	comisd 0xc955(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1dcd2:	00 
   1dcd3:	4c 8d 15 0e ca 00 00 	lea    0xca0e(%rip),%r10        # 2a6e8 <is_format_xz.magic+0x390>
   1dcda:	77 41                	ja     1dd1d <list_file+0x9cd>
   1dcdc:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1dce1:	be 10 00 00 00       	mov    $0x10,%esi
   1dce6:	48 8d 3d 43 a6 01 00 	lea    0x1a643(%rip),%rdi        # 38330 <get_ratio.buf>
   1dced:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1dcf2:	48 8d 15 f3 c9 00 00 	lea    0xc9f3(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1dcf9:	b0 01                	mov    $0x1,%al
   1dcfb:	4d 89 c7             	mov    %r8,%r15
   1dcfe:	4c 89 cd             	mov    %r9,%rbp
   1dd01:	e8 aa 43 fe ff       	call   20b0 <snprintf@plt>
   1dd06:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1dd0b:	49 89 e9             	mov    %rbp,%r9
   1dd0e:	4d 89 f8             	mov    %r15,%r8
   1dd11:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1dd16:	4c 8d 15 13 a6 01 00 	lea    0x1a613(%rip),%r10        # 38330 <get_ratio.buf>
   1dd1d:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   1dd24:	00 
   1dd25:	8b 40 10             	mov    0x10(%rax),%eax
   1dd28:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1dd2c:	48 8d 0d cd cd 00 00 	lea    0xcdcd(%rip),%rcx        # 2ab00 <check_names>
   1dd33:	4c 8d 1c 81          	lea    (%rcx,%rax,4),%r11
   1dd37:	48 8d 3d 50 cb 00 00 	lea    0xcb50(%rip),%rdi        # 2a88e <is_format_xz.magic+0x536>
   1dd3e:	4c 89 e9             	mov    %r13,%rcx
   1dd41:	31 c0                	xor    %eax,%eax
   1dd43:	41 53                	push   %r11
   1dd45:	41 52                	push   %r10
   1dd47:	41 54                	push   %r12
   1dd49:	41 56                	push   %r14
   1dd4b:	e8 50 43 fe ff       	call   20a0 <printf@plt>
   1dd50:	48 83 c4 20          	add    $0x20,%rsp
   1dd54:	e8 a7 13 00 00       	call   1f100 <message_verbosity_get>
   1dd59:	83 f8 04             	cmp    $0x4,%eax
   1dd5c:	0f 82 6b fe ff ff    	jb     1dbcd <list_file+0x87d>
   1dd62:	8b 94 24 80 00 00 00 	mov    0x80(%rsp),%edx
   1dd69:	4c 8b 84 24 88 00 00 	mov    0x88(%rsp),%r8
   1dd70:	00 
   1dd71:	4c 8b 8c 24 90 00 00 	mov    0x90(%rsp),%r9
   1dd78:	00 
   1dd79:	48 83 ec 08          	sub    $0x8,%rsp
   1dd7d:	48 8d 3d 32 cb 00 00 	lea    0xcb32(%rip),%rdi        # 2a8b6 <is_format_xz.magic+0x55e>
   1dd84:	48 8d 35 b5 a5 01 00 	lea    0x1a5b5(%rip),%rsi        # 38340 <check_value>
   1dd8b:	48 8d 8c 24 8c 00 00 	lea    0x8c(%rsp),%rcx
   1dd92:	00 
   1dd93:	31 c0                	xor    %eax,%eax
   1dd95:	4c 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%r10
   1dd9c:	00 
   1dd9d:	41 52                	push   %r10
   1dd9f:	e8 fc 42 fe ff       	call   20a0 <printf@plt>
   1dda4:	48 83 c4 10          	add    $0x10,%rsp
   1dda8:	e9 20 fe ff ff       	jmp    1dbcd <list_file+0x87d>
   1ddad:	e8 4e 13 00 00       	call   1f100 <message_verbosity_get>
   1ddb2:	83 f8 04             	cmp    $0x4,%eax
   1ddb5:	0f 82 2d 09 00 00    	jb     1e6e8 <list_file+0x1398>
   1ddbb:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   1ddc0:	80 7c 24 68 00       	cmpb   $0x0,0x68(%rsp)
   1ddc5:	48 8d 05 0f c9 00 00 	lea    0xc90f(%rip),%rax        # 2a6db <is_format_xz.magic+0x383>
   1ddcc:	48 8d 15 04 c9 00 00 	lea    0xc904(%rip),%rdx        # 2a6d7 <is_format_xz.magic+0x37f>
   1ddd3:	48 0f 44 d0          	cmove  %rax,%rdx
   1ddd7:	48 8d 3d ed ca 00 00 	lea    0xcaed(%rip),%rdi        # 2a8cb <is_format_xz.magic+0x573>
   1ddde:	31 c0                	xor    %eax,%eax
   1dde0:	e8 bb 42 fe ff       	call   20a0 <printf@plt>
   1dde5:	e9 fe 08 00 00       	jmp    1e6e8 <list_file+0x1398>
   1ddea:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   1ddef:	48 89 ef             	mov    %rbp,%rdi
   1ddf2:	e8 29 65 fe ff       	call   4320 <lzma_index_stream_count>
   1ddf7:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1ddfc:	49 89 c6             	mov    %rax,%r14
   1ddff:	48 89 ef             	mov    %rbp,%rdi
   1de02:	e8 09 65 fe ff       	call   4310 <lzma_index_block_count>
   1de07:	49 89 c7             	mov    %rax,%r15
   1de0a:	48 89 ef             	mov    %rbp,%rdi
   1de0d:	e8 8e 65 fe ff       	call   43a0 <lzma_index_file_size>
   1de12:	49 89 c4             	mov    %rax,%r12
   1de15:	48 89 ef             	mov    %rbp,%rdi
   1de18:	e8 13 66 fe ff       	call   4430 <lzma_index_uncompressed_size>
   1de1d:	49 89 c5             	mov    %rax,%r13
   1de20:	48 89 ef             	mov    %rbp,%rdi
   1de23:	e8 18 66 fe ff       	call   4440 <lzma_index_checks>
   1de28:	4c 89 f7             	mov    %r14,%rdi
   1de2b:	4c 89 fe             	mov    %r15,%rsi
   1de2e:	4c 89 e2             	mov    %r12,%rdx
   1de31:	4c 89 e9             	mov    %r13,%rcx
   1de34:	41 89 c0             	mov    %eax,%r8d
   1de37:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1de3c:	e8 9f 0d 00 00       	call   1ebe0 <print_adv_helper>
   1de41:	48 8d 3d 06 cb 00 00 	lea    0xcb06(%rip),%rdi        # 2a94e <is_format_xz.magic+0x5f6>
   1de48:	e8 13 42 fe ff       	call   2060 <puts@plt>
   1de4d:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   1de54:	00 
   1de55:	4c 89 f7             	mov    %r14,%rdi
   1de58:	48 89 ee             	mov    %rbp,%rsi
   1de5b:	e8 10 70 fe ff       	call   4e70 <lzma_index_iter_init>
   1de60:	4c 89 f7             	mov    %r14,%rdi
   1de63:	be 01 00 00 00       	mov    $0x1,%esi
   1de68:	e8 43 70 fe ff       	call   4eb0 <lzma_index_iter_next>
   1de6d:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1de74:	00 
   1de75:	84 c0                	test   %al,%al
   1de77:	0f 85 23 04 00 00    	jne    1e2a0 <list_file+0xf50>
   1de7d:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1de84:	00 
   1de85:	eb 1a                	jmp    1dea1 <list_file+0xb51>
   1de87:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1de8e:	00 
   1de8f:	be 01 00 00 00       	mov    $0x1,%esi
   1de94:	e8 17 70 fe ff       	call   4eb0 <lzma_index_iter_next>
   1de99:	84 c0                	test   %al,%al
   1de9b:	0f 85 f5 03 00 00    	jne    1e296 <list_file+0xf46>
   1dea1:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   1dea8:	00 
   1dea9:	31 f6                	xor    %esi,%esi
   1deab:	e8 50 21 00 00       	call   20000 <uint64_to_str>
   1deb0:	49 89 c7             	mov    %rax,%r15
   1deb3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1deb8:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1debf:	00 
   1dec0:	be 01 00 00 00       	mov    $0x1,%esi
   1dec5:	e8 36 21 00 00       	call   20000 <uint64_to_str>
   1deca:	49 89 c5             	mov    %rax,%r13
   1decd:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
   1ded4:	00 
   1ded5:	be 02 00 00 00       	mov    $0x2,%esi
   1deda:	e8 21 21 00 00       	call   20000 <uint64_to_str>
   1dedf:	49 89 c4             	mov    %rax,%r12
   1dee2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1dee7:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
   1deee:	00 
   1deef:	be 03 00 00 00       	mov    $0x3,%esi
   1def4:	e8 07 21 00 00       	call   20000 <uint64_to_str>
   1def9:	49 89 c6             	mov    %rax,%r14
   1defc:	4c 89 ff             	mov    %r15,%rdi
   1deff:	be 06 00 00 00       	mov    $0x6,%esi
   1df04:	e8 d7 23 00 00       	call   202e0 <tuklib_mbstr_fw>
   1df09:	89 c5                	mov    %eax,%ebp
   1df0b:	4c 89 ef             	mov    %r13,%rdi
   1df0e:	be 09 00 00 00       	mov    $0x9,%esi
   1df13:	e8 c8 23 00 00       	call   202e0 <tuklib_mbstr_fw>
   1df18:	41 89 c7             	mov    %eax,%r15d
   1df1b:	4c 89 e7             	mov    %r12,%rdi
   1df1e:	be 0f 00 00 00       	mov    $0xf,%esi
   1df23:	e8 b8 23 00 00       	call   202e0 <tuklib_mbstr_fw>
   1df28:	41 89 c4             	mov    %eax,%r12d
   1df2b:	4c 89 f7             	mov    %r14,%rdi
   1df2e:	be 0f 00 00 00       	mov    $0xf,%esi
   1df33:	e8 a8 23 00 00       	call   202e0 <tuklib_mbstr_fw>
   1df38:	41 89 c2             	mov    %eax,%r10d
   1df3b:	48 83 ec 08          	sub    $0x8,%rsp
   1df3f:	48 8d 3d 83 ca 00 00 	lea    0xca83(%rip),%rdi        # 2a9c9 <is_format_xz.magic+0x671>
   1df46:	89 ee                	mov    %ebp,%esi
   1df48:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1df4d:	44 89 f9             	mov    %r15d,%ecx
   1df50:	4d 89 e8             	mov    %r13,%r8
   1df53:	45 89 e1             	mov    %r12d,%r9d
   1df56:	31 c0                	xor    %eax,%eax
   1df58:	41 56                	push   %r14
   1df5a:	41 52                	push   %r10
   1df5c:	ff 74 24 38          	push   0x38(%rsp)
   1df60:	e8 3b 41 fe ff       	call   20a0 <printf@plt>
   1df65:	48 83 c4 20          	add    $0x20,%rsp
   1df69:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   1df70:	00 
   1df71:	31 f6                	xor    %esi,%esi
   1df73:	e8 88 20 00 00       	call   20000 <uint64_to_str>
   1df78:	49 89 c7             	mov    %rax,%r15
   1df7b:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
   1df82:	00 
   1df83:	be 01 00 00 00       	mov    $0x1,%esi
   1df88:	e8 73 20 00 00       	call   20000 <uint64_to_str>
   1df8d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1df92:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1df99:	00 
   1df9a:	48 8d 2d 47 c7 00 00 	lea    0xc747(%rip),%rbp        # 2a6e8 <is_format_xz.magic+0x390>
   1dfa1:	48 85 c0             	test   %rax,%rax
   1dfa4:	0f 84 8a 00 00 00    	je     1e034 <list_file+0xce4>
   1dfaa:	48 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%rcx
   1dfb1:	00 
   1dfb2:	48 89 ca             	mov    %rcx,%rdx
   1dfb5:	48 d1 ea             	shr    %rdx
   1dfb8:	89 ce                	mov    %ecx,%esi
   1dfba:	83 e6 01             	and    $0x1,%esi
   1dfbd:	48 09 d6             	or     %rdx,%rsi
   1dfc0:	48 85 c9             	test   %rcx,%rcx
   1dfc3:	48 0f 49 f1          	cmovns %rcx,%rsi
   1dfc7:	f2 48 0f 2a ce       	cvtsi2sd %rsi,%xmm1
   1dfcc:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dfd0:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1dfd4:	78 04                	js     1dfda <list_file+0xc8a>
   1dfd6:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1dfda:	48 89 c1             	mov    %rax,%rcx
   1dfdd:	48 d1 e9             	shr    %rcx
   1dfe0:	89 c2                	mov    %eax,%edx
   1dfe2:	83 e2 01             	and    $0x1,%edx
   1dfe5:	48 09 ca             	or     %rcx,%rdx
   1dfe8:	48 85 c0             	test   %rax,%rax
   1dfeb:	48 0f 49 d0          	cmovns %rax,%rdx
   1dfef:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
   1dff4:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1dff8:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1dffc:	78 04                	js     1e002 <list_file+0xcb2>
   1dffe:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1e002:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1e006:	66 0f 2f 05 1a c6 00 	comisd 0xc61a(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1e00d:	00 
   1e00e:	48 8d 2d d3 c6 00 00 	lea    0xc6d3(%rip),%rbp        # 2a6e8 <is_format_xz.magic+0x390>
   1e015:	77 1d                	ja     1e034 <list_file+0xce4>
   1e017:	be 10 00 00 00       	mov    $0x10,%esi
   1e01c:	48 8d 2d 0d a3 01 00 	lea    0x1a30d(%rip),%rbp        # 38330 <get_ratio.buf>
   1e023:	48 89 ef             	mov    %rbp,%rdi
   1e026:	48 8d 15 bf c6 00 00 	lea    0xc6bf(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1e02d:	b0 01                	mov    $0x1,%al
   1e02f:	e8 7c 40 fe ff       	call   20b0 <snprintf@plt>
   1e034:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1e039:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1e040:	00 
   1e041:	48 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%rdi
   1e048:	00 
   1e049:	8b 40 10             	mov    0x10(%rax),%eax
   1e04c:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1e050:	48 8d 0d a9 ca 00 00 	lea    0xcaa9(%rip),%rcx        # 2ab00 <check_names>
   1e057:	4c 8d 24 81          	lea    (%rcx,%rax,4),%r12
   1e05b:	be 02 00 00 00       	mov    $0x2,%esi
   1e060:	e8 9b 1f 00 00       	call   20000 <uint64_to_str>
   1e065:	49 89 c6             	mov    %rax,%r14
   1e068:	4c 89 ff             	mov    %r15,%rdi
   1e06b:	be 0f 00 00 00       	mov    $0xf,%esi
   1e070:	e8 6b 22 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e075:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1e079:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   1e07e:	4c 89 ef             	mov    %r13,%rdi
   1e081:	be 0f 00 00 00       	mov    $0xf,%esi
   1e086:	e8 55 22 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e08b:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1e08f:	48 89 ef             	mov    %rbp,%rdi
   1e092:	be 05 00 00 00       	mov    $0x5,%esi
   1e097:	e8 44 22 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e09c:	89 c5                	mov    %eax,%ebp
   1e09e:	4c 89 e7             	mov    %r12,%rdi
   1e0a1:	be 0a 00 00 00       	mov    $0xa,%esi
   1e0a6:	e8 35 22 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e0ab:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1e0b0:	4c 89 f7             	mov    %r14,%rdi
   1e0b3:	be 07 00 00 00       	mov    $0x7,%esi
   1e0b8:	e8 23 22 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e0bd:	41 89 c2             	mov    %eax,%r10d
   1e0c0:	48 83 ec 08          	sub    $0x8,%rsp
   1e0c4:	48 8d 3d 13 c9 00 00 	lea    0xc913(%rip),%rdi        # 2a9de <is_format_xz.magic+0x686>
   1e0cb:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1e0cf:	4c 89 fa             	mov    %r15,%rdx
   1e0d2:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1e0d6:	4d 89 e8             	mov    %r13,%r8
   1e0d9:	41 89 e9             	mov    %ebp,%r9d
   1e0dc:	31 c0                	xor    %eax,%eax
   1e0de:	41 56                	push   %r14
   1e0e0:	41 52                	push   %r10
   1e0e2:	41 54                	push   %r12
   1e0e4:	ff 74 24 60          	push   0x60(%rsp)
   1e0e8:	ff 74 24 48          	push   0x48(%rsp)
   1e0ec:	e8 af 3f fe ff       	call   20a0 <printf@plt>
   1e0f1:	48 83 c4 30          	add    $0x30,%rsp
   1e0f5:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1e0fc:	00 
   1e0fd:	8b 78 10             	mov    0x10(%rax),%edi
   1e100:	e8 4b c8 fe ff       	call   a950 <lzma_check_size>
   1e105:	3b 44 24 1c          	cmp    0x1c(%rsp),%eax
   1e109:	0f 86 78 fd ff ff    	jbe    1de87 <list_file+0xb37>
   1e10f:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1e116:	00 
   1e117:	8b 78 10             	mov    0x10(%rax),%edi
   1e11a:	e8 31 c8 fe ff       	call   a950 <lzma_check_size>
   1e11f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1e123:	e9 5f fd ff ff       	jmp    1de87 <list_file+0xb37>
   1e128:	4c 8d 35 b9 c5 00 00 	lea    0xc5b9(%rip),%r14        # 2a6e8 <is_format_xz.magic+0x390>
   1e12f:	4c 8d 3d ca c9 00 00 	lea    0xc9ca(%rip),%r15        # 2ab00 <check_names>
   1e136:	4c 8d 2d 27 c7 00 00 	lea    0xc727(%rip),%r13        # 2a864 <is_format_xz.magic+0x50c>
   1e13d:	48 8d ac 24 d0 02 00 	lea    0x2d0(%rsp),%rbp
   1e144:	00 
   1e145:	eb 43                	jmp    1e18a <list_file+0xe3a>
   1e147:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   1e14e:	00 
   1e14f:	8b 40 10             	mov    0x10(%rax),%eax
   1e152:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1e156:	4d 8d 1c 87          	lea    (%r15,%rax,4),%r11
   1e15a:	4c 89 ef             	mov    %r13,%rdi
   1e15d:	31 c0                	xor    %eax,%eax
   1e15f:	ff b4 24 20 03 00 00 	push   0x320(%rsp)
   1e166:	41 53                	push   %r11
   1e168:	41 52                	push   %r10
   1e16a:	41 54                	push   %r12
   1e16c:	e8 2f 3f fe ff       	call   20a0 <printf@plt>
   1e171:	48 83 c4 20          	add    $0x20,%rsp
   1e175:	48 89 ef             	mov    %rbp,%rdi
   1e178:	be 01 00 00 00       	mov    $0x1,%esi
   1e17d:	e8 2e 6d fe ff       	call   4eb0 <lzma_index_iter_next>
   1e182:	84 c0                	test   %al,%al
   1e184:	0f 85 2e fa ff ff    	jne    1dbb8 <list_file+0x868>
   1e18a:	48 8b b4 24 f0 02 00 	mov    0x2f0(%rsp),%rsi
   1e191:	00 
   1e192:	48 8b 94 24 f8 02 00 	mov    0x2f8(%rsp),%rdx
   1e199:	00 
   1e19a:	48 8b 8c 24 00 03 00 	mov    0x300(%rsp),%rcx
   1e1a1:	00 
   1e1a2:	4c 8b 84 24 08 03 00 	mov    0x308(%rsp),%r8
   1e1a9:	00 
   1e1aa:	4c 8b 8c 24 10 03 00 	mov    0x310(%rsp),%r9
   1e1b1:	00 
   1e1b2:	4c 8b a4 24 18 03 00 	mov    0x318(%rsp),%r12
   1e1b9:	00 
   1e1ba:	4d 89 f2             	mov    %r14,%r10
   1e1bd:	4d 85 e4             	test   %r12,%r12
   1e1c0:	74 85                	je     1e147 <list_file+0xdf7>
   1e1c2:	4c 89 c8             	mov    %r9,%rax
   1e1c5:	48 d1 e8             	shr    %rax
   1e1c8:	44 89 cf             	mov    %r9d,%edi
   1e1cb:	83 e7 01             	and    $0x1,%edi
   1e1ce:	48 09 c7             	or     %rax,%rdi
   1e1d1:	4d 85 c9             	test   %r9,%r9
   1e1d4:	49 0f 49 f9          	cmovns %r9,%rdi
   1e1d8:	0f 57 c9             	xorps  %xmm1,%xmm1
   1e1db:	f2 48 0f 2a cf       	cvtsi2sd %rdi,%xmm1
   1e1e0:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1e1e4:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1e1e8:	78 04                	js     1e1ee <list_file+0xe9e>
   1e1ea:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1e1ee:	4c 89 e0             	mov    %r12,%rax
   1e1f1:	48 d1 e8             	shr    %rax
   1e1f4:	44 89 e7             	mov    %r12d,%edi
   1e1f7:	83 e7 01             	and    $0x1,%edi
   1e1fa:	48 09 c7             	or     %rax,%rdi
   1e1fd:	4d 85 e4             	test   %r12,%r12
   1e200:	49 0f 49 fc          	cmovns %r12,%rdi
   1e204:	0f 57 d2             	xorps  %xmm2,%xmm2
   1e207:	f2 48 0f 2a d7       	cvtsi2sd %rdi,%xmm2
   1e20c:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1e210:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1e214:	78 04                	js     1e21a <list_file+0xeca>
   1e216:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1e21a:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1e21e:	66 0f 2f 05 02 c4 00 	comisd 0xc402(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1e225:	00 
   1e226:	4d 89 f2             	mov    %r14,%r10
   1e229:	0f 87 18 ff ff ff    	ja     1e147 <list_file+0xdf7>
   1e22f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1e234:	be 10 00 00 00       	mov    $0x10,%esi
   1e239:	48 8d 3d f0 a0 01 00 	lea    0x1a0f0(%rip),%rdi        # 38330 <get_ratio.buf>
   1e240:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1e245:	48 8d 15 a0 c4 00 00 	lea    0xc4a0(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1e24c:	b0 01                	mov    $0x1,%al
   1e24e:	49 89 cf             	mov    %rcx,%r15
   1e251:	4d 89 c5             	mov    %r8,%r13
   1e254:	49 89 ee             	mov    %rbp,%r14
   1e257:	4c 89 cd             	mov    %r9,%rbp
   1e25a:	e8 51 3e fe ff       	call   20b0 <snprintf@plt>
   1e25f:	49 89 e9             	mov    %rbp,%r9
   1e262:	4c 89 f5             	mov    %r14,%rbp
   1e265:	4d 89 e8             	mov    %r13,%r8
   1e268:	4c 8d 2d f5 c5 00 00 	lea    0xc5f5(%rip),%r13        # 2a864 <is_format_xz.magic+0x50c>
   1e26f:	4c 89 f9             	mov    %r15,%rcx
   1e272:	4c 8d 3d 87 c8 00 00 	lea    0xc887(%rip),%r15        # 2ab00 <check_names>
   1e279:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1e27e:	4c 8d 35 63 c4 00 00 	lea    0xc463(%rip),%r14        # 2a6e8 <is_format_xz.magic+0x390>
   1e285:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1e28a:	4c 8d 15 9f a0 01 00 	lea    0x1a09f(%rip),%r10        # 38330 <get_ratio.buf>
   1e291:	e9 b1 fe ff ff       	jmp    1e147 <list_file+0xdf7>
   1e296:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   1e29a:	01 c0                	add    %eax,%eax
   1e29c:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1e2a0:	e8 5b 0e 00 00       	call   1f100 <message_verbosity_get>
   1e2a5:	89 44 24 08          	mov    %eax,0x8(%rsp)
   1e2a9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e2ae:	e8 5d 60 fe ff       	call   4310 <lzma_index_block_count>
   1e2b3:	48 85 c0             	test   %rax,%rax
   1e2b6:	0f 84 db 03 00 00    	je     1e697 <list_file+0x1347>
   1e2bc:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   1e2c0:	83 f9 09             	cmp    $0x9,%ecx
   1e2c3:	b8 08 00 00 00       	mov    $0x8,%eax
   1e2c8:	0f 43 c1             	cmovae %ecx,%eax
   1e2cb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e2d0:	48 8d 3d 1f c7 00 00 	lea    0xc71f(%rip),%rdi        # 2a9f6 <is_format_xz.magic+0x69e>
   1e2d7:	31 c0                	xor    %eax,%eax
   1e2d9:	e8 c2 3d fe ff       	call   20a0 <printf@plt>
   1e2de:	83 7c 24 08 04       	cmpl   $0x4,0x8(%rsp)
   1e2e3:	72 1d                	jb     1e302 <list_file+0xfb2>
   1e2e5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1e2ea:	8d 70 f8             	lea    -0x8(%rax),%esi
   1e2ed:	48 8d 3d 6f c7 00 00 	lea    0xc76f(%rip),%rdi        # 2aa63 <is_format_xz.magic+0x70b>
   1e2f4:	48 8d 15 74 cb 00 00 	lea    0xcb74(%rip),%rdx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e2fb:	31 c0                	xor    %eax,%eax
   1e2fd:	e8 9e 3d fe ff       	call   20a0 <printf@plt>
   1e302:	48 8b 05 c7 5c 01 00 	mov    0x15cc7(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   1e309:	48 8b 30             	mov    (%rax),%rsi
   1e30c:	bf 0a 00 00 00       	mov    $0xa,%edi
   1e311:	e8 0a 3e fe ff       	call   2120 <putc@plt>
   1e316:	4c 8d b4 24 80 00 00 	lea    0x80(%rsp),%r14
   1e31d:	00 
   1e31e:	4c 89 f7             	mov    %r14,%rdi
   1e321:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1e326:	e8 45 6b fe ff       	call   4e70 <lzma_index_iter_init>
   1e32b:	4c 89 f7             	mov    %r14,%rdi
   1e32e:	eb 1c                	jmp    1e34c <list_file+0xffc>
   1e330:	48 8b 05 99 5c 01 00 	mov    0x15c99(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   1e337:	48 8b 30             	mov    (%rax),%rsi
   1e33a:	bf 0a 00 00 00       	mov    $0xa,%edi
   1e33f:	e8 dc 3d fe ff       	call   2120 <putc@plt>
   1e344:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   1e34b:	00 
   1e34c:	be 02 00 00 00       	mov    $0x2,%esi
   1e351:	e8 5a 6b fe ff       	call   4eb0 <lzma_index_iter_next>
   1e356:	84 c0                	test   %al,%al
   1e358:	0f 85 39 03 00 00    	jne    1e697 <list_file+0x1347>
   1e35e:	b9 01 00 00 00       	mov    $0x1,%ecx
   1e363:	83 7c 24 08 04       	cmpl   $0x4,0x8(%rsp)
   1e368:	72 2a                	jb     1e394 <list_file+0x1044>
   1e36a:	48 89 df             	mov    %rbx,%rdi
   1e36d:	48 8d b4 24 80 00 00 	lea    0x80(%rsp),%rsi
   1e374:	00 
   1e375:	48 8d 94 24 00 04 00 	lea    0x400(%rsp),%rdx
   1e37c:	00 
   1e37d:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
   1e382:	e8 f9 09 00 00       	call   1ed80 <parse_details>
   1e387:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1e38c:	84 c0                	test   %al,%al
   1e38e:	0f 85 d6 03 00 00    	jne    1e76a <list_file+0x141a>
   1e394:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1e398:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   1e39f:	00 
   1e3a0:	31 f6                	xor    %esi,%esi
   1e3a2:	e8 59 1c 00 00       	call   20000 <uint64_to_str>
   1e3a7:	49 89 c6             	mov    %rax,%r14
   1e3aa:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e3af:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   1e3b6:	00 
   1e3b7:	be 01 00 00 00       	mov    $0x1,%esi
   1e3bc:	e8 3f 1c 00 00       	call   20000 <uint64_to_str>
   1e3c1:	49 89 c4             	mov    %rax,%r12
   1e3c4:	48 8b bc 24 00 01 00 	mov    0x100(%rsp),%rdi
   1e3cb:	00 
   1e3cc:	be 02 00 00 00       	mov    $0x2,%esi
   1e3d1:	e8 2a 1c 00 00       	call   20000 <uint64_to_str>
   1e3d6:	49 89 c7             	mov    %rax,%r15
   1e3d9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1e3de:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1e3e5:	00 
   1e3e6:	be 03 00 00 00       	mov    $0x3,%esi
   1e3eb:	e8 10 1c 00 00       	call   20000 <uint64_to_str>
   1e3f0:	48 89 c5             	mov    %rax,%rbp
   1e3f3:	4c 89 f7             	mov    %r14,%rdi
   1e3f6:	be 06 00 00 00       	mov    $0x6,%esi
   1e3fb:	e8 e0 1e 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e400:	41 89 c5             	mov    %eax,%r13d
   1e403:	4c 89 e7             	mov    %r12,%rdi
   1e406:	be 09 00 00 00       	mov    $0x9,%esi
   1e40b:	e8 d0 1e 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e410:	41 89 c6             	mov    %eax,%r14d
   1e413:	4c 89 ff             	mov    %r15,%rdi
   1e416:	be 0f 00 00 00       	mov    $0xf,%esi
   1e41b:	e8 c0 1e 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e420:	41 89 c7             	mov    %eax,%r15d
   1e423:	48 89 ef             	mov    %rbp,%rdi
   1e426:	be 0f 00 00 00       	mov    $0xf,%esi
   1e42b:	e8 b0 1e 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e430:	41 89 c2             	mov    %eax,%r10d
   1e433:	48 83 ec 08          	sub    $0x8,%rsp
   1e437:	48 8d 3d 8b c5 00 00 	lea    0xc58b(%rip),%rdi        # 2a9c9 <is_format_xz.magic+0x671>
   1e43e:	44 89 ee             	mov    %r13d,%esi
   1e441:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1e446:	44 89 f1             	mov    %r14d,%ecx
   1e449:	4d 89 e0             	mov    %r12,%r8
   1e44c:	45 89 f9             	mov    %r15d,%r9d
   1e44f:	31 c0                	xor    %eax,%eax
   1e451:	55                   	push   %rbp
   1e452:	41 52                	push   %r10
   1e454:	ff 74 24 48          	push   0x48(%rsp)
   1e458:	e8 43 3c fe ff       	call   20a0 <printf@plt>
   1e45d:	48 83 c4 20          	add    $0x20,%rsp
   1e461:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
   1e468:	00 
   1e469:	31 f6                	xor    %esi,%esi
   1e46b:	e8 90 1b 00 00       	call   20000 <uint64_to_str>
   1e470:	49 89 c6             	mov    %rax,%r14
   1e473:	48 8b bc 24 28 01 00 	mov    0x128(%rsp),%rdi
   1e47a:	00 
   1e47b:	be 01 00 00 00       	mov    $0x1,%esi
   1e480:	e8 7b 1b 00 00       	call   20000 <uint64_to_str>
   1e485:	49 89 c4             	mov    %rax,%r12
   1e488:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   1e48f:	00 
   1e490:	4c 8d 3d 51 c2 00 00 	lea    0xc251(%rip),%r15        # 2a6e8 <is_format_xz.magic+0x390>
   1e497:	48 85 c0             	test   %rax,%rax
   1e49a:	0f 84 8a 00 00 00    	je     1e52a <list_file+0x11da>
   1e4a0:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
   1e4a7:	00 
   1e4a8:	48 89 ca             	mov    %rcx,%rdx
   1e4ab:	48 d1 ea             	shr    %rdx
   1e4ae:	89 ce                	mov    %ecx,%esi
   1e4b0:	83 e6 01             	and    $0x1,%esi
   1e4b3:	48 09 d6             	or     %rdx,%rsi
   1e4b6:	48 85 c9             	test   %rcx,%rcx
   1e4b9:	48 0f 49 f1          	cmovns %rcx,%rsi
   1e4bd:	f2 48 0f 2a ce       	cvtsi2sd %rsi,%xmm1
   1e4c2:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1e4c6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1e4ca:	78 04                	js     1e4d0 <list_file+0x1180>
   1e4cc:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1e4d0:	48 89 c1             	mov    %rax,%rcx
   1e4d3:	48 d1 e9             	shr    %rcx
   1e4d6:	89 c2                	mov    %eax,%edx
   1e4d8:	83 e2 01             	and    $0x1,%edx
   1e4db:	48 09 ca             	or     %rcx,%rdx
   1e4de:	48 85 c0             	test   %rax,%rax
   1e4e1:	48 0f 49 d0          	cmovns %rax,%rdx
   1e4e5:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
   1e4ea:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1e4ee:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1e4f2:	78 04                	js     1e4f8 <list_file+0x11a8>
   1e4f4:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1e4f8:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1e4fc:	66 0f 2f 05 24 c1 00 	comisd 0xc124(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1e503:	00 
   1e504:	4c 8d 3d dd c1 00 00 	lea    0xc1dd(%rip),%r15        # 2a6e8 <is_format_xz.magic+0x390>
   1e50b:	77 1d                	ja     1e52a <list_file+0x11da>
   1e50d:	be 10 00 00 00       	mov    $0x10,%esi
   1e512:	4c 8d 3d 17 9e 01 00 	lea    0x19e17(%rip),%r15        # 38330 <get_ratio.buf>
   1e519:	4c 89 ff             	mov    %r15,%rdi
   1e51c:	48 8d 15 c9 c1 00 00 	lea    0xc1c9(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1e523:	b0 01                	mov    $0x1,%al
   1e525:	e8 86 3b fe ff       	call   20b0 <snprintf@plt>
   1e52a:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1e531:	00 
   1e532:	8b 40 10             	mov    0x10(%rax),%eax
   1e535:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1e539:	48 8d 0d c0 c5 00 00 	lea    0xc5c0(%rip),%rcx        # 2ab00 <check_names>
   1e540:	48 8d 2c 81          	lea    (%rcx,%rax,4),%rbp
   1e544:	4c 89 f7             	mov    %r14,%rdi
   1e547:	be 0f 00 00 00       	mov    $0xf,%esi
   1e54c:	e8 8f 1d 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e551:	89 44 24 20          	mov    %eax,0x20(%rsp)
   1e555:	4c 89 e7             	mov    %r12,%rdi
   1e558:	be 0f 00 00 00       	mov    $0xf,%esi
   1e55d:	e8 7e 1d 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e562:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1e566:	4c 89 ff             	mov    %r15,%rdi
   1e569:	be 05 00 00 00       	mov    $0x5,%esi
   1e56e:	e8 6d 1d 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e573:	41 89 c5             	mov    %eax,%r13d
   1e576:	48 89 ef             	mov    %rbp,%rdi
   1e579:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1e57d:	e8 5e 1d 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e582:	41 89 c2             	mov    %eax,%r10d
   1e585:	48 83 ec 08          	sub    $0x8,%rsp
   1e589:	48 8d 3d 19 c5 00 00 	lea    0xc519(%rip),%rdi        # 2aaa9 <is_format_xz.magic+0x751>
   1e590:	8b 74 24 28          	mov    0x28(%rsp),%esi
   1e594:	4c 89 f2             	mov    %r14,%rdx
   1e597:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   1e59b:	4d 89 e0             	mov    %r12,%r8
   1e59e:	45 89 e9             	mov    %r13d,%r9d
   1e5a1:	31 c0                	xor    %eax,%eax
   1e5a3:	55                   	push   %rbp
   1e5a4:	41 52                	push   %r10
   1e5a6:	41 57                	push   %r15
   1e5a8:	e8 f3 3a fe ff       	call   20a0 <printf@plt>
   1e5ad:	48 83 c4 20          	add    $0x20,%rsp
   1e5b1:	83 7c 24 08 04       	cmpl   $0x4,0x8(%rsp)
   1e5b6:	0f 82 74 fd ff ff    	jb     1e330 <list_file+0xfe0>
   1e5bc:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1e5c3:	00 
   1e5c4:	4c 8b b4 24 30 01 00 	mov    0x130(%rsp),%r14
   1e5cb:	00 
   1e5cc:	44 8b bc 24 00 04 00 	mov    0x400(%rsp),%r15d
   1e5d3:	00 
   1e5d4:	8b 78 10             	mov    0x10(%rax),%edi
   1e5d7:	e8 74 c3 fe ff       	call   a950 <lzma_check_size>
   1e5dc:	89 c0                	mov    %eax,%eax
   1e5de:	4c 01 f8             	add    %r15,%rax
   1e5e1:	49 29 c6             	sub    %rax,%r14
   1e5e4:	8b bc 24 00 04 00 00 	mov    0x400(%rsp),%edi
   1e5eb:	31 f6                	xor    %esi,%esi
   1e5ed:	e8 0e 1a 00 00       	call   20000 <uint64_to_str>
   1e5f2:	49 89 c7             	mov    %rax,%r15
   1e5f5:	4c 89 f7             	mov    %r14,%rdi
   1e5f8:	be 01 00 00 00       	mov    $0x1,%esi
   1e5fd:	e8 fe 19 00 00       	call   20000 <uint64_to_str>
   1e602:	49 89 c6             	mov    %rax,%r14
   1e605:	48 8b bc 24 10 04 00 	mov    0x410(%rsp),%rdi
   1e60c:	00 
   1e60d:	e8 ce 19 00 00       	call   1ffe0 <round_up_to_mib>
   1e612:	48 89 c7             	mov    %rax,%rdi
   1e615:	be 02 00 00 00       	mov    $0x2,%esi
   1e61a:	e8 e1 19 00 00       	call   20000 <uint64_to_str>
   1e61f:	49 89 c4             	mov    %rax,%r12
   1e622:	4c 89 ff             	mov    %r15,%rdi
   1e625:	be 06 00 00 00       	mov    $0x6,%esi
   1e62a:	e8 b1 1c 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e62f:	89 c5                	mov    %eax,%ebp
   1e631:	4c 89 f7             	mov    %r14,%rdi
   1e634:	be 0f 00 00 00       	mov    $0xf,%esi
   1e639:	e8 a2 1c 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e63e:	41 89 c5             	mov    %eax,%r13d
   1e641:	4c 89 e7             	mov    %r12,%rdi
   1e644:	be 07 00 00 00       	mov    $0x7,%esi
   1e649:	e8 92 1c 00 00       	call   202e0 <tuklib_mbstr_fw>
   1e64e:	41 89 c2             	mov    %eax,%r10d
   1e651:	48 83 ec 08          	sub    $0x8,%rsp
   1e655:	48 8d 3d 60 c4 00 00 	lea    0xc460(%rip),%rdi        # 2aabc <is_format_xz.magic+0x764>
   1e65c:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1e661:	48 8d 15 d8 9c 01 00 	lea    0x19cd8(%rip),%rdx        # 38340 <check_value>
   1e668:	89 e9                	mov    %ebp,%ecx
   1e66a:	4d 89 f8             	mov    %r15,%r8
   1e66d:	4c 8d 8c 24 0c 04 00 	lea    0x40c(%rsp),%r9
   1e674:	00 
   1e675:	31 c0                	xor    %eax,%eax
   1e677:	4c 8d 9c 24 20 04 00 	lea    0x420(%rsp),%r11
   1e67e:	00 
   1e67f:	41 53                	push   %r11
   1e681:	41 54                	push   %r12
   1e683:	41 52                	push   %r10
   1e685:	41 56                	push   %r14
   1e687:	41 55                	push   %r13
   1e689:	e8 12 3a fe ff       	call   20a0 <printf@plt>
   1e68e:	48 83 c4 30          	add    $0x30,%rsp
   1e692:	e9 99 fc ff ff       	jmp    1e330 <list_file+0xfe0>
   1e697:	83 7c 24 08 04       	cmpl   $0x4,0x8(%rsp)
   1e69c:	72 4a                	jb     1e6e8 <list_file+0x1398>
   1e69e:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1e6a3:	e8 38 19 00 00       	call   1ffe0 <round_up_to_mib>
   1e6a8:	48 89 c7             	mov    %rax,%rdi
   1e6ab:	31 f6                	xor    %esi,%esi
   1e6ad:	e8 4e 19 00 00       	call   20000 <uint64_to_str>
   1e6b2:	48 8d 3d 8d c0 00 00 	lea    0xc08d(%rip),%rdi        # 2a746 <is_format_xz.magic+0x3ee>
   1e6b9:	48 89 c6             	mov    %rax,%rsi
   1e6bc:	31 c0                	xor    %eax,%eax
   1e6be:	e8 dd 39 fe ff       	call   20a0 <printf@plt>
   1e6c3:	80 7c 24 68 00       	cmpb   $0x0,0x68(%rsp)
   1e6c8:	48 8d 05 b3 c0 00 00 	lea    0xc0b3(%rip),%rax        # 2a782 <is_format_xz.magic+0x42a>
   1e6cf:	48 8d 35 a8 c0 00 00 	lea    0xc0a8(%rip),%rsi        # 2a77e <is_format_xz.magic+0x426>
   1e6d6:	48 0f 44 f0          	cmove  %rax,%rsi
   1e6da:	48 8d 3d 83 c0 00 00 	lea    0xc083(%rip),%rdi        # 2a764 <is_format_xz.magic+0x40c>
   1e6e1:	31 c0                	xor    %eax,%eax
   1e6e3:	e8 b8 39 fe ff       	call   20a0 <printf@plt>
   1e6e8:	48 ff 05 01 9c 01 00 	incq   0x19c01(%rip)        # 382f0 <totals.0>
   1e6ef:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
   1e6f4:	4c 89 f7             	mov    %r14,%rdi
   1e6f7:	e8 24 5c fe ff       	call   4320 <lzma_index_stream_count>
   1e6fc:	48 01 05 f5 9b 01 00 	add    %rax,0x19bf5(%rip)        # 382f8 <totals.1>
   1e703:	4c 89 f7             	mov    %r14,%rdi
   1e706:	e8 05 5c fe ff       	call   4310 <lzma_index_block_count>
   1e70b:	48 01 05 ee 9b 01 00 	add    %rax,0x19bee(%rip)        # 38300 <totals.2>
   1e712:	4c 89 f7             	mov    %r14,%rdi
   1e715:	e8 86 5c fe ff       	call   43a0 <lzma_index_file_size>
   1e71a:	48 01 05 e7 9b 01 00 	add    %rax,0x19be7(%rip)        # 38308 <totals.3>
   1e721:	4c 89 f7             	mov    %r14,%rdi
   1e724:	e8 07 5d fe ff       	call   4430 <lzma_index_uncompressed_size>
   1e729:	48 01 05 e0 9b 01 00 	add    %rax,0x19be0(%rip)        # 38310 <totals.4>
   1e730:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1e735:	48 01 05 dc 9b 01 00 	add    %rax,0x19bdc(%rip)        # 38318 <totals.5>
   1e73c:	4c 89 f7             	mov    %r14,%rdi
   1e73f:	e8 fc 5c fe ff       	call   4440 <lzma_index_checks>
   1e744:	09 05 de 9b 01 00    	or     %eax,0x19bde(%rip)        # 38328 <totals.7>
   1e74a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1e74f:	48 39 05 ca 9b 01 00 	cmp    %rax,0x19bca(%rip)        # 38320 <totals.6>
   1e756:	73 07                	jae    1e75f <list_file+0x140f>
   1e758:	48 89 05 c1 9b 01 00 	mov    %rax,0x19bc1(%rip)        # 38320 <totals.6>
   1e75f:	0f b6 44 24 68       	movzbl 0x68(%rsp),%eax
   1e764:	20 05 ae 59 01 00    	and    %al,0x159ae(%rip)        # 34118 <totals.8>
   1e76a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1e76f:	e9 1f f1 ff ff       	jmp    1d893 <list_file+0x543>
   1e774:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1e77b:	00 00 00 00 00 

000000000001e780 <get_check_names>:
   1e780:	55                   	push   %rbp
   1e781:	53                   	push   %rbx
   1e782:	48 83 ec 18          	sub    $0x18,%rsp
   1e786:	89 f5                	mov    %esi,%ebp
   1e788:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1e78d:	48 c7 44 24 08 00 04 	movq   $0x400,0x8(%rsp)
   1e794:	00 00 
   1e796:	48 8d 05 41 bf 00 00 	lea    0xbf41(%rip),%rax        # 2a6de <is_format_xz.magic+0x386>
   1e79d:	48 8d 1d 3d bf 00 00 	lea    0xbf3d(%rip),%rbx        # 2a6e1 <is_format_xz.magic+0x389>
   1e7a4:	85 d2                	test   %edx,%edx
   1e7a6:	48 0f 45 d8          	cmovne %rax,%rbx
   1e7aa:	40 f6 c5 01          	test   $0x1,%bpl
   1e7ae:	75 0a                	jne    1e7ba <get_check_names+0x3a>
   1e7b0:	31 c0                	xor    %eax,%eax
   1e7b2:	40 f6 c5 02          	test   $0x2,%bpl
   1e7b6:	75 30                	jne    1e7e8 <get_check_names+0x68>
   1e7b8:	eb 5e                	jmp    1e818 <get_check_names+0x98>
   1e7ba:	48 8d 15 22 bf 00 00 	lea    0xbf22(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e7c1:	48 8d 0d a7 c6 00 00 	lea    0xc6a7(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e7c8:	4c 8d 05 31 c3 00 00 	lea    0xc331(%rip),%r8        # 2ab00 <check_names>
   1e7cf:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e7d4:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e7d9:	31 c0                	xor    %eax,%eax
   1e7db:	e8 90 19 00 00       	call   20170 <my_snprintf>
   1e7e0:	b0 01                	mov    $0x1,%al
   1e7e2:	40 f6 c5 02          	test   $0x2,%bpl
   1e7e6:	74 30                	je     1e818 <get_check_names+0x98>
   1e7e8:	40 f6 c5 01          	test   $0x1,%bpl
   1e7ec:	48 8d 0d 7c c6 00 00 	lea    0xc67c(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e7f3:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e7f7:	48 8d 15 e5 be 00 00 	lea    0xbee5(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e7fe:	4c 8d 05 07 c3 00 00 	lea    0xc307(%rip),%r8        # 2ab0c <check_names+0xc>
   1e805:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e80a:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e80f:	31 c0                	xor    %eax,%eax
   1e811:	e8 5a 19 00 00       	call   20170 <my_snprintf>
   1e816:	b0 01                	mov    $0x1,%al
   1e818:	40 f6 c5 04          	test   $0x4,%bpl
   1e81c:	0f 85 95 00 00 00    	jne    1e8b7 <get_check_names+0x137>
   1e822:	40 f6 c5 08          	test   $0x8,%bpl
   1e826:	0f 85 c3 00 00 00    	jne    1e8ef <get_check_names+0x16f>
   1e82c:	40 f6 c5 10          	test   $0x10,%bpl
   1e830:	0f 85 f1 00 00 00    	jne    1e927 <get_check_names+0x1a7>
   1e836:	40 f6 c5 20          	test   $0x20,%bpl
   1e83a:	0f 85 1f 01 00 00    	jne    1e95f <get_check_names+0x1df>
   1e840:	40 f6 c5 40          	test   $0x40,%bpl
   1e844:	0f 85 4d 01 00 00    	jne    1e997 <get_check_names+0x217>
   1e84a:	40 84 ed             	test   %bpl,%bpl
   1e84d:	0f 88 7b 01 00 00    	js     1e9ce <get_check_names+0x24e>
   1e853:	f7 c5 00 01 00 00    	test   $0x100,%ebp
   1e859:	0f 85 a9 01 00 00    	jne    1ea08 <get_check_names+0x288>
   1e85f:	f7 c5 00 02 00 00    	test   $0x200,%ebp
   1e865:	0f 85 d7 01 00 00    	jne    1ea42 <get_check_names+0x2c2>
   1e86b:	f7 c5 00 04 00 00    	test   $0x400,%ebp
   1e871:	0f 85 05 02 00 00    	jne    1ea7c <get_check_names+0x2fc>
   1e877:	f7 c5 00 08 00 00    	test   $0x800,%ebp
   1e87d:	0f 85 33 02 00 00    	jne    1eab6 <get_check_names+0x336>
   1e883:	f7 c5 00 10 00 00    	test   $0x1000,%ebp
   1e889:	0f 85 61 02 00 00    	jne    1eaf0 <get_check_names+0x370>
   1e88f:	f7 c5 00 20 00 00    	test   $0x2000,%ebp
   1e895:	0f 85 8f 02 00 00    	jne    1eb2a <get_check_names+0x3aa>
   1e89b:	f7 c5 00 40 00 00    	test   $0x4000,%ebp
   1e8a1:	0f 85 bd 02 00 00    	jne    1eb64 <get_check_names+0x3e4>
   1e8a7:	66 85 ed             	test   %bp,%bp
   1e8aa:	0f 88 eb 02 00 00    	js     1eb9b <get_check_names+0x41b>
   1e8b0:	48 83 c4 18          	add    $0x18,%rsp
   1e8b4:	5b                   	pop    %rbx
   1e8b5:	5d                   	pop    %rbp
   1e8b6:	c3                   	ret    
   1e8b7:	84 c0                	test   %al,%al
   1e8b9:	48 8d 0d af c5 00 00 	lea    0xc5af(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e8c0:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e8c4:	48 8d 15 18 be 00 00 	lea    0xbe18(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e8cb:	4c 8d 05 46 c2 00 00 	lea    0xc246(%rip),%r8        # 2ab18 <check_names+0x18>
   1e8d2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e8d7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e8dc:	31 c0                	xor    %eax,%eax
   1e8de:	e8 8d 18 00 00       	call   20170 <my_snprintf>
   1e8e3:	b0 01                	mov    $0x1,%al
   1e8e5:	40 f6 c5 08          	test   $0x8,%bpl
   1e8e9:	0f 84 3d ff ff ff    	je     1e82c <get_check_names+0xac>
   1e8ef:	84 c0                	test   %al,%al
   1e8f1:	48 8d 0d 77 c5 00 00 	lea    0xc577(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e8f8:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e8fc:	48 8d 15 e0 bd 00 00 	lea    0xbde0(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e903:	4c 8d 05 1a c2 00 00 	lea    0xc21a(%rip),%r8        # 2ab24 <check_names+0x24>
   1e90a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e90f:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e914:	31 c0                	xor    %eax,%eax
   1e916:	e8 55 18 00 00       	call   20170 <my_snprintf>
   1e91b:	b0 01                	mov    $0x1,%al
   1e91d:	40 f6 c5 10          	test   $0x10,%bpl
   1e921:	0f 84 0f ff ff ff    	je     1e836 <get_check_names+0xb6>
   1e927:	84 c0                	test   %al,%al
   1e929:	48 8d 0d 3f c5 00 00 	lea    0xc53f(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e930:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e934:	48 8d 15 a8 bd 00 00 	lea    0xbda8(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e93b:	4c 8d 05 ee c1 00 00 	lea    0xc1ee(%rip),%r8        # 2ab30 <check_names+0x30>
   1e942:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e947:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e94c:	31 c0                	xor    %eax,%eax
   1e94e:	e8 1d 18 00 00       	call   20170 <my_snprintf>
   1e953:	b0 01                	mov    $0x1,%al
   1e955:	40 f6 c5 20          	test   $0x20,%bpl
   1e959:	0f 84 e1 fe ff ff    	je     1e840 <get_check_names+0xc0>
   1e95f:	84 c0                	test   %al,%al
   1e961:	48 8d 0d 07 c5 00 00 	lea    0xc507(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e968:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e96c:	48 8d 15 70 bd 00 00 	lea    0xbd70(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e973:	4c 8d 05 c2 c1 00 00 	lea    0xc1c2(%rip),%r8        # 2ab3c <check_names+0x3c>
   1e97a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e97f:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e984:	31 c0                	xor    %eax,%eax
   1e986:	e8 e5 17 00 00       	call   20170 <my_snprintf>
   1e98b:	b0 01                	mov    $0x1,%al
   1e98d:	40 f6 c5 40          	test   $0x40,%bpl
   1e991:	0f 84 b3 fe ff ff    	je     1e84a <get_check_names+0xca>
   1e997:	84 c0                	test   %al,%al
   1e999:	48 8d 0d cf c4 00 00 	lea    0xc4cf(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e9a0:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e9a4:	48 8d 15 38 bd 00 00 	lea    0xbd38(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e9ab:	4c 8d 05 96 c1 00 00 	lea    0xc196(%rip),%r8        # 2ab48 <check_names+0x48>
   1e9b2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e9b7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e9bc:	31 c0                	xor    %eax,%eax
   1e9be:	e8 ad 17 00 00       	call   20170 <my_snprintf>
   1e9c3:	b0 01                	mov    $0x1,%al
   1e9c5:	40 84 ed             	test   %bpl,%bpl
   1e9c8:	0f 89 85 fe ff ff    	jns    1e853 <get_check_names+0xd3>
   1e9ce:	84 c0                	test   %al,%al
   1e9d0:	48 8d 0d 98 c4 00 00 	lea    0xc498(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1e9d7:	48 0f 45 cb          	cmovne %rbx,%rcx
   1e9db:	48 8d 15 01 bd 00 00 	lea    0xbd01(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1e9e2:	4c 8d 05 6b c1 00 00 	lea    0xc16b(%rip),%r8        # 2ab54 <check_names+0x54>
   1e9e9:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1e9ee:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1e9f3:	31 c0                	xor    %eax,%eax
   1e9f5:	e8 76 17 00 00       	call   20170 <my_snprintf>
   1e9fa:	b0 01                	mov    $0x1,%al
   1e9fc:	f7 c5 00 01 00 00    	test   $0x100,%ebp
   1ea02:	0f 84 57 fe ff ff    	je     1e85f <get_check_names+0xdf>
   1ea08:	84 c0                	test   %al,%al
   1ea0a:	48 8d 0d 5e c4 00 00 	lea    0xc45e(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1ea11:	48 0f 45 cb          	cmovne %rbx,%rcx
   1ea15:	48 8d 15 c7 bc 00 00 	lea    0xbcc7(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1ea1c:	4c 8d 05 3d c1 00 00 	lea    0xc13d(%rip),%r8        # 2ab60 <check_names+0x60>
   1ea23:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ea28:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1ea2d:	31 c0                	xor    %eax,%eax
   1ea2f:	e8 3c 17 00 00       	call   20170 <my_snprintf>
   1ea34:	b0 01                	mov    $0x1,%al
   1ea36:	f7 c5 00 02 00 00    	test   $0x200,%ebp
   1ea3c:	0f 84 29 fe ff ff    	je     1e86b <get_check_names+0xeb>
   1ea42:	84 c0                	test   %al,%al
   1ea44:	48 8d 0d 24 c4 00 00 	lea    0xc424(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1ea4b:	48 0f 45 cb          	cmovne %rbx,%rcx
   1ea4f:	48 8d 15 8d bc 00 00 	lea    0xbc8d(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1ea56:	4c 8d 05 0f c1 00 00 	lea    0xc10f(%rip),%r8        # 2ab6c <check_names+0x6c>
   1ea5d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ea62:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1ea67:	31 c0                	xor    %eax,%eax
   1ea69:	e8 02 17 00 00       	call   20170 <my_snprintf>
   1ea6e:	b0 01                	mov    $0x1,%al
   1ea70:	f7 c5 00 04 00 00    	test   $0x400,%ebp
   1ea76:	0f 84 fb fd ff ff    	je     1e877 <get_check_names+0xf7>
   1ea7c:	84 c0                	test   %al,%al
   1ea7e:	48 8d 0d ea c3 00 00 	lea    0xc3ea(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1ea85:	48 0f 45 cb          	cmovne %rbx,%rcx
   1ea89:	48 8d 15 53 bc 00 00 	lea    0xbc53(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1ea90:	4c 8d 05 e1 c0 00 00 	lea    0xc0e1(%rip),%r8        # 2ab78 <check_names+0x78>
   1ea97:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ea9c:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1eaa1:	31 c0                	xor    %eax,%eax
   1eaa3:	e8 c8 16 00 00       	call   20170 <my_snprintf>
   1eaa8:	b0 01                	mov    $0x1,%al
   1eaaa:	f7 c5 00 08 00 00    	test   $0x800,%ebp
   1eab0:	0f 84 cd fd ff ff    	je     1e883 <get_check_names+0x103>
   1eab6:	84 c0                	test   %al,%al
   1eab8:	48 8d 0d b0 c3 00 00 	lea    0xc3b0(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1eabf:	48 0f 45 cb          	cmovne %rbx,%rcx
   1eac3:	48 8d 15 19 bc 00 00 	lea    0xbc19(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1eaca:	4c 8d 05 b3 c0 00 00 	lea    0xc0b3(%rip),%r8        # 2ab84 <check_names+0x84>
   1ead1:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ead6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1eadb:	31 c0                	xor    %eax,%eax
   1eadd:	e8 8e 16 00 00       	call   20170 <my_snprintf>
   1eae2:	b0 01                	mov    $0x1,%al
   1eae4:	f7 c5 00 10 00 00    	test   $0x1000,%ebp
   1eaea:	0f 84 9f fd ff ff    	je     1e88f <get_check_names+0x10f>
   1eaf0:	84 c0                	test   %al,%al
   1eaf2:	48 8d 0d 76 c3 00 00 	lea    0xc376(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1eaf9:	48 0f 45 cb          	cmovne %rbx,%rcx
   1eafd:	48 8d 15 df bb 00 00 	lea    0xbbdf(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1eb04:	4c 8d 05 85 c0 00 00 	lea    0xc085(%rip),%r8        # 2ab90 <check_names+0x90>
   1eb0b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1eb10:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1eb15:	31 c0                	xor    %eax,%eax
   1eb17:	e8 54 16 00 00       	call   20170 <my_snprintf>
   1eb1c:	b0 01                	mov    $0x1,%al
   1eb1e:	f7 c5 00 20 00 00    	test   $0x2000,%ebp
   1eb24:	0f 84 71 fd ff ff    	je     1e89b <get_check_names+0x11b>
   1eb2a:	84 c0                	test   %al,%al
   1eb2c:	48 8d 0d 3c c3 00 00 	lea    0xc33c(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1eb33:	48 0f 45 cb          	cmovne %rbx,%rcx
   1eb37:	48 8d 15 a5 bb 00 00 	lea    0xbba5(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1eb3e:	4c 8d 05 57 c0 00 00 	lea    0xc057(%rip),%r8        # 2ab9c <check_names+0x9c>
   1eb45:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1eb4a:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1eb4f:	31 c0                	xor    %eax,%eax
   1eb51:	e8 1a 16 00 00       	call   20170 <my_snprintf>
   1eb56:	b0 01                	mov    $0x1,%al
   1eb58:	f7 c5 00 40 00 00    	test   $0x4000,%ebp
   1eb5e:	0f 84 43 fd ff ff    	je     1e8a7 <get_check_names+0x127>
   1eb64:	84 c0                	test   %al,%al
   1eb66:	48 8d 0d 02 c3 00 00 	lea    0xc302(%rip),%rcx        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1eb6d:	48 0f 45 cb          	cmovne %rbx,%rcx
   1eb71:	48 8d 15 6b bb 00 00 	lea    0xbb6b(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1eb78:	4c 8d 05 29 c0 00 00 	lea    0xc029(%rip),%r8        # 2aba8 <check_names+0xa8>
   1eb7f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1eb84:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1eb89:	31 c0                	xor    %eax,%eax
   1eb8b:	e8 e0 15 00 00       	call   20170 <my_snprintf>
   1eb90:	b0 01                	mov    $0x1,%al
   1eb92:	66 85 ed             	test   %bp,%bp
   1eb95:	0f 89 15 fd ff ff    	jns    1e8b0 <get_check_names+0x130>
   1eb9b:	84 c0                	test   %al,%al
   1eb9d:	48 8d 05 cb c2 00 00 	lea    0xc2cb(%rip),%rax        # 2ae6f <message_filters_to_str.bcj_names+0x23f>
   1eba4:	48 0f 44 d8          	cmove  %rax,%rbx
   1eba8:	48 8d 15 34 bb 00 00 	lea    0xbb34(%rip),%rdx        # 2a6e3 <is_format_xz.magic+0x38b>
   1ebaf:	4c 8d 05 fe bf 00 00 	lea    0xbffe(%rip),%r8        # 2abb4 <check_names+0xb4>
   1ebb6:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1ebbb:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1ebc0:	48 89 d9             	mov    %rbx,%rcx
   1ebc3:	31 c0                	xor    %eax,%eax
   1ebc5:	e8 a6 15 00 00       	call   20170 <my_snprintf>
   1ebca:	48 83 c4 18          	add    $0x18,%rsp
   1ebce:	5b                   	pop    %rbx
   1ebcf:	5d                   	pop    %rbp
   1ebd0:	c3                   	ret    
   1ebd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1ebd8:	0f 1f 84 00 00 00 00 
   1ebdf:	00 

000000000001ebe0 <print_adv_helper>:
   1ebe0:	41 57                	push   %r15
   1ebe2:	41 56                	push   %r14
   1ebe4:	41 55                	push   %r13
   1ebe6:	41 54                	push   %r12
   1ebe8:	53                   	push   %rbx
   1ebe9:	48 81 ec 00 04 00 00 	sub    $0x400,%rsp
   1ebf0:	4c 89 cb             	mov    %r9,%rbx
   1ebf3:	49 89 ce             	mov    %rcx,%r14
   1ebf6:	49 89 d7             	mov    %rdx,%r15
   1ebf9:	49 89 f4             	mov    %rsi,%r12
   1ebfc:	49 89 fd             	mov    %rdi,%r13
   1ebff:	48 89 e7             	mov    %rsp,%rdi
   1ec02:	44 89 c6             	mov    %r8d,%esi
   1ec05:	ba 01 00 00 00       	mov    $0x1,%edx
   1ec0a:	e8 71 fb ff ff       	call   1e780 <get_check_names>
   1ec0f:	4c 89 ef             	mov    %r13,%rdi
   1ec12:	31 f6                	xor    %esi,%esi
   1ec14:	e8 e7 13 00 00       	call   20000 <uint64_to_str>
   1ec19:	48 8d 3d 65 bb 00 00 	lea    0xbb65(%rip),%rdi        # 2a785 <is_format_xz.magic+0x42d>
   1ec20:	48 89 c6             	mov    %rax,%rsi
   1ec23:	31 c0                	xor    %eax,%eax
   1ec25:	e8 76 34 fe ff       	call   20a0 <printf@plt>
   1ec2a:	4c 89 e7             	mov    %r12,%rdi
   1ec2d:	31 f6                	xor    %esi,%esi
   1ec2f:	e8 cc 13 00 00       	call   20000 <uint64_to_str>
   1ec34:	48 8d 3d 64 bb 00 00 	lea    0xbb64(%rip),%rdi        # 2a79f <is_format_xz.magic+0x447>
   1ec3b:	48 89 c6             	mov    %rax,%rsi
   1ec3e:	31 c0                	xor    %eax,%eax
   1ec40:	e8 5b 34 fe ff       	call   20a0 <printf@plt>
   1ec45:	4c 89 ff             	mov    %r15,%rdi
   1ec48:	31 f6                	xor    %esi,%esi
   1ec4a:	ba 04 00 00 00       	mov    $0x4,%edx
   1ec4f:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ec54:	45 31 c0             	xor    %r8d,%r8d
   1ec57:	e8 d4 13 00 00       	call   20030 <uint64_to_nicestr>
   1ec5c:	48 8d 3d 56 bb 00 00 	lea    0xbb56(%rip),%rdi        # 2a7b9 <is_format_xz.magic+0x461>
   1ec63:	48 89 c6             	mov    %rax,%rsi
   1ec66:	31 c0                	xor    %eax,%eax
   1ec68:	e8 33 34 fe ff       	call   20a0 <printf@plt>
   1ec6d:	4c 89 f7             	mov    %r14,%rdi
   1ec70:	31 f6                	xor    %esi,%esi
   1ec72:	ba 04 00 00 00       	mov    $0x4,%edx
   1ec77:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ec7c:	45 31 c0             	xor    %r8d,%r8d
   1ec7f:	e8 ac 13 00 00       	call   20030 <uint64_to_nicestr>
   1ec84:	48 8d 3d 48 bb 00 00 	lea    0xbb48(%rip),%rdi        # 2a7d3 <is_format_xz.magic+0x47b>
   1ec8b:	48 89 c6             	mov    %rax,%rsi
   1ec8e:	31 c0                	xor    %eax,%eax
   1ec90:	e8 0b 34 fe ff       	call   20a0 <printf@plt>
   1ec95:	48 8d 35 4c ba 00 00 	lea    0xba4c(%rip),%rsi        # 2a6e8 <is_format_xz.magic+0x390>
   1ec9c:	4d 85 f6             	test   %r14,%r14
   1ec9f:	0f 84 80 00 00 00    	je     1ed25 <print_adv_helper+0x145>
   1eca5:	4c 89 f8             	mov    %r15,%rax
   1eca8:	48 d1 e8             	shr    %rax
   1ecab:	44 89 f9             	mov    %r15d,%ecx
   1ecae:	83 e1 01             	and    $0x1,%ecx
   1ecb1:	48 09 c1             	or     %rax,%rcx
   1ecb4:	4d 85 ff             	test   %r15,%r15
   1ecb7:	49 0f 49 cf          	cmovns %r15,%rcx
   1ecbb:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
   1ecc0:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1ecc4:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1ecc8:	78 04                	js     1ecce <print_adv_helper+0xee>
   1ecca:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1ecce:	4c 89 f0             	mov    %r14,%rax
   1ecd1:	48 d1 e8             	shr    %rax
   1ecd4:	44 89 f1             	mov    %r14d,%ecx
   1ecd7:	83 e1 01             	and    $0x1,%ecx
   1ecda:	48 09 c1             	or     %rax,%rcx
   1ecdd:	4d 85 f6             	test   %r14,%r14
   1ece0:	49 0f 49 ce          	cmovns %r14,%rcx
   1ece4:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
   1ece9:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1eced:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
   1ecf1:	78 04                	js     1ecf7 <print_adv_helper+0x117>
   1ecf3:	66 0f 28 ca          	movapd %xmm2,%xmm1
   1ecf7:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   1ecfb:	66 0f 2f 05 25 b9 00 	comisd 0xb925(%rip),%xmm0        # 2a628 <is_format_xz.magic+0x2d0>
   1ed02:	00 
   1ed03:	77 20                	ja     1ed25 <print_adv_helper+0x145>
   1ed05:	4c 8d 35 24 96 01 00 	lea    0x19624(%rip),%r14        # 38330 <get_ratio.buf>
   1ed0c:	48 8d 15 d9 b9 00 00 	lea    0xb9d9(%rip),%rdx        # 2a6ec <is_format_xz.magic+0x394>
   1ed13:	be 10 00 00 00       	mov    $0x10,%esi
   1ed18:	4c 89 f7             	mov    %r14,%rdi
   1ed1b:	b0 01                	mov    $0x1,%al
   1ed1d:	e8 8e 33 fe ff       	call   20b0 <snprintf@plt>
   1ed22:	4c 89 f6             	mov    %r14,%rsi
   1ed25:	48 8d 3d c1 ba 00 00 	lea    0xbac1(%rip),%rdi        # 2a7ed <is_format_xz.magic+0x495>
   1ed2c:	31 c0                	xor    %eax,%eax
   1ed2e:	e8 6d 33 fe ff       	call   20a0 <printf@plt>
   1ed33:	48 8d 3d cd ba 00 00 	lea    0xbacd(%rip),%rdi        # 2a807 <is_format_xz.magic+0x4af>
   1ed3a:	48 89 e6             	mov    %rsp,%rsi
   1ed3d:	31 c0                	xor    %eax,%eax
   1ed3f:	e8 5c 33 fe ff       	call   20a0 <printf@plt>
   1ed44:	48 89 df             	mov    %rbx,%rdi
   1ed47:	31 f6                	xor    %esi,%esi
   1ed49:	ba 04 00 00 00       	mov    $0x4,%edx
   1ed4e:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ed53:	45 31 c0             	xor    %r8d,%r8d
   1ed56:	e8 d5 12 00 00       	call   20030 <uint64_to_nicestr>
   1ed5b:	48 8d 3d bf ba 00 00 	lea    0xbabf(%rip),%rdi        # 2a821 <is_format_xz.magic+0x4c9>
   1ed62:	48 89 c6             	mov    %rax,%rsi
   1ed65:	31 c0                	xor    %eax,%eax
   1ed67:	e8 34 33 fe ff       	call   20a0 <printf@plt>
   1ed6c:	48 81 c4 00 04 00 00 	add    $0x400,%rsp
   1ed73:	5b                   	pop    %rbx
   1ed74:	41 5c                	pop    %r12
   1ed76:	41 5d                	pop    %r13
   1ed78:	41 5e                	pop    %r14
   1ed7a:	41 5f                	pop    %r15
   1ed7c:	c3                   	ret    
   1ed7d:	0f 1f 00             	nopl   (%rax)

000000000001ed80 <parse_details>:
   1ed80:	55                   	push   %rbp
   1ed81:	41 57                	push   %r15
   1ed83:	41 56                	push   %r14
   1ed85:	41 55                	push   %r13
   1ed87:	41 54                	push   %r12
   1ed89:	53                   	push   %rbx
   1ed8a:	48 81 ec 28 21 00 00 	sub    $0x2128,%rsp
   1ed91:	49 89 cc             	mov    %rcx,%r12
   1ed94:	49 89 d7             	mov    %rdx,%r15
   1ed97:	49 89 f6             	mov    %rsi,%r14
   1ed9a:	48 89 fb             	mov    %rdi,%rbx
   1ed9d:	48 8b 06             	mov    (%rsi),%rax
   1eda0:	4c 8b ae b8 00 00 00 	mov    0xb8(%rsi),%r13
   1eda7:	8b 78 10             	mov    0x10(%rax),%edi
   1edaa:	e8 a1 bb fe ff       	call   a950 <lzma_check_size>
   1edaf:	89 c0                	mov    %eax,%eax
   1edb1:	49 29 c5             	sub    %rax,%r13
   1edb4:	bd 00 04 00 00       	mov    $0x400,%ebp
   1edb9:	49 81 fd ff 03 00 00 	cmp    $0x3ff,%r13
   1edc0:	77 14                	ja     1edd6 <parse_details+0x56>
   1edc2:	41 8b ae b8 00 00 00 	mov    0xb8(%r14),%ebp
   1edc9:	49 8b 06             	mov    (%r14),%rax
   1edcc:	8b 78 10             	mov    0x10(%rax),%edi
   1edcf:	e8 7c bb fe ff       	call   a950 <lzma_check_size>
   1edd4:	29 c5                	sub    %eax,%ebp
   1edd6:	89 ea                	mov    %ebp,%edx
   1edd8:	49 8b 8e 80 00 00 00 	mov    0x80(%r14),%rcx
   1eddf:	48 8d b4 24 28 01 00 	lea    0x128(%rsp),%rsi
   1ede6:	00 
   1ede7:	48 89 df             	mov    %rbx,%rdi
   1edea:	e8 61 dd ff ff       	call   1cb50 <io_pread>
   1edef:	84 c0                	test   %al,%al
   1edf1:	75 56                	jne    1ee49 <parse_details+0xc9>
   1edf3:	0f b6 84 24 28 01 00 	movzbl 0x128(%rsp),%eax
   1edfa:	00 
   1edfb:	85 c0                	test   %eax,%eax
   1edfd:	74 29                	je     1ee28 <parse_details+0xa8>
   1edff:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   1ee06:	00 
   1ee07:	49 8b 0e             	mov    (%r14),%rcx
   1ee0a:	8b 49 10             	mov    0x10(%rcx),%ecx
   1ee0d:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
   1ee11:	48 89 e1             	mov    %rsp,%rcx
   1ee14:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1ee19:	8d 04 85 04 00 00 00 	lea    0x4(,%rax,4),%eax
   1ee20:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1ee24:	39 e8                	cmp    %ebp,%eax
   1ee26:	76 37                	jbe    1ee5f <parse_details+0xdf>
   1ee28:	bf 09 00 00 00       	mov    $0x9,%edi
   1ee2d:	48 8b 1b             	mov    (%rbx),%rbx
   1ee30:	e8 bb 03 00 00       	call   1f1f0 <message_strm>
   1ee35:	48 8d 3d 01 b7 00 00 	lea    0xb701(%rip),%rdi        # 2a53d <is_format_xz.magic+0x1e5>
   1ee3c:	48 89 de             	mov    %rbx,%rsi
   1ee3f:	48 89 c2             	mov    %rax,%rdx
   1ee42:	31 c0                	xor    %eax,%eax
   1ee44:	e8 37 03 00 00       	call   1f180 <message_error>
   1ee49:	b3 01                	mov    $0x1,%bl
   1ee4b:	89 d8                	mov    %ebx,%eax
   1ee4d:	48 81 c4 28 21 00 00 	add    $0x2128,%rsp
   1ee54:	5b                   	pop    %rbx
   1ee55:	41 5c                	pop    %r12
   1ee57:	41 5d                	pop    %r13
   1ee59:	41 5e                	pop    %r14
   1ee5b:	41 5f                	pop    %r15
   1ee5d:	5d                   	pop    %rbp
   1ee5e:	c3                   	ret    
   1ee5f:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1ee64:	48 8d 94 24 28 01 00 	lea    0x128(%rsp),%rdx
   1ee6b:	00 
   1ee6c:	31 f6                	xor    %esi,%esi
   1ee6e:	e8 2d 9c fe ff       	call   8aa0 <lzma_block_header_decode>
   1ee73:	85 c0                	test   %eax,%eax
   1ee75:	74 11                	je     1ee88 <parse_details+0x108>
   1ee77:	89 c7                	mov    %eax,%edi
   1ee79:	83 f8 08             	cmp    $0x8,%eax
   1ee7c:	74 af                	je     1ee2d <parse_details+0xad>
   1ee7e:	83 ff 09             	cmp    $0x9,%edi
   1ee81:	74 a5                	je     1ee28 <parse_details+0xa8>
   1ee83:	e8 28 03 00 00       	call   1f1b0 <message_bug>
   1ee88:	48 83 7c 24 68 ff    	cmpq   $0xffffffffffffffff,0x68(%rsp)
   1ee8e:	b8 2d 00 00 00       	mov    $0x2d,%eax
   1ee93:	b9 63 00 00 00       	mov    $0x63,%ecx
   1ee98:	0f 44 c8             	cmove  %eax,%ecx
   1ee9b:	41 88 4f 04          	mov    %cl,0x4(%r15)
   1ee9f:	0f 95 c1             	setne  %cl
   1eea2:	48 83 7c 24 70 ff    	cmpq   $0xffffffffffffffff,0x70(%rsp)
   1eea8:	ba 75 00 00 00       	mov    $0x75,%edx
   1eead:	0f 44 d0             	cmove  %eax,%edx
   1eeb0:	41 88 57 05          	mov    %dl,0x5(%r15)
   1eeb4:	41 c6 47 06 00       	movb   $0x0,0x6(%r15)
   1eeb9:	0f 95 c0             	setne  %al
   1eebc:	20 c8                	and    %cl,%al
   1eebe:	41 80 7c 24 18 00    	cmpb   $0x0,0x18(%r12)
   1eec4:	0f 95 c1             	setne  %cl
   1eec7:	20 c1                	and    %al,%cl
   1eec9:	41 88 4c 24 18       	mov    %cl,0x18(%r12)
   1eece:	49 8b b6 b0 00 00 00 	mov    0xb0(%r14),%rsi
   1eed5:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1eeda:	e8 01 47 fe ff       	call   35e0 <lzma_block_compressed_size>
   1eedf:	83 f8 09             	cmp    $0x9,%eax
   1eee2:	74 18                	je     1eefc <parse_details+0x17c>
   1eee4:	85 c0                	test   %eax,%eax
   1eee6:	75 40                	jne    1ef28 <parse_details+0x1a8>
   1eee8:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1eeed:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1eef1:	74 3a                	je     1ef2d <parse_details+0x1ad>
   1eef3:	49 3b 86 a8 00 00 00 	cmp    0xa8(%r14),%rax
   1eefa:	74 31                	je     1ef2d <parse_details+0x1ad>
   1eefc:	48 83 3c 24 ff       	cmpq   $0xffffffffffffffff,(%rsp)
   1ef01:	0f 84 21 ff ff ff    	je     1ee28 <parse_details+0xa8>
   1ef07:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   1ef0c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ef10:	49 8b 7e f8          	mov    -0x8(%r14),%rdi
   1ef14:	e8 17 31 fe ff       	call   2030 <free@plt>
   1ef19:	49 83 3e ff          	cmpq   $0xffffffffffffffff,(%r14)
   1ef1d:	4d 8d 76 10          	lea    0x10(%r14),%r14
   1ef21:	75 ed                	jne    1ef10 <parse_details+0x190>
   1ef23:	e9 00 ff ff ff       	jmp    1ee28 <parse_details+0xa8>
   1ef28:	e8 83 02 00 00       	call   1f1b0 <message_bug>
   1ef2d:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1ef31:	41 89 07             	mov    %eax,(%r15)
   1ef34:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1ef39:	49 89 47 08          	mov    %rax,0x8(%r15)
   1ef3d:	48 89 e7             	mov    %rsp,%rdi
   1ef40:	e8 bb a1 fe ff       	call   9100 <lzma_raw_decoder_memusage>
   1ef45:	49 89 47 10          	mov    %rax,0x10(%r15)
   1ef49:	49 39 44 24 10       	cmp    %rax,0x10(%r12)
   1ef4e:	73 05                	jae    1ef55 <parse_details+0x1d5>
   1ef50:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   1ef55:	49 83 c7 18          	add    $0x18,%r15
   1ef59:	48 89 e6             	mov    %rsp,%rsi
   1ef5c:	4c 89 ff             	mov    %r15,%rdi
   1ef5f:	31 d2                	xor    %edx,%edx
   1ef61:	e8 9a 03 00 00       	call   1f300 <message_filters_to_str>
   1ef66:	48 83 3c 24 ff       	cmpq   $0xffffffffffffffff,(%rsp)
   1ef6b:	74 26                	je     1ef93 <parse_details+0x213>
   1ef6d:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   1ef72:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1ef79:	1f 84 00 00 00 00 00 
   1ef80:	49 8b 7f f8          	mov    -0x8(%r15),%rdi
   1ef84:	e8 a7 30 fe ff       	call   2030 <free@plt>
   1ef89:	49 83 3f ff          	cmpq   $0xffffffffffffffff,(%r15)
   1ef8d:	4d 8d 7f 10          	lea    0x10(%r15),%r15
   1ef91:	75 ed                	jne    1ef80 <parse_details+0x200>
   1ef93:	49 8b 06             	mov    (%r14),%rax
   1ef96:	8b 78 10             	mov    0x10(%rax),%edi
   1ef99:	85 ff                	test   %edi,%edi
   1ef9b:	74 72                	je     1f00f <parse_details+0x28f>
   1ef9d:	e8 ae b9 fe ff       	call   a950 <lzma_check_size>
   1efa2:	49 8b 8e 80 00 00 00 	mov    0x80(%r14),%rcx
   1efa9:	41 89 c7             	mov    %eax,%r15d
   1efac:	4c 29 f9             	sub    %r15,%rcx
   1efaf:	49 03 8e b8 00 00 00 	add    0xb8(%r14),%rcx
   1efb6:	48 8d b4 24 28 01 00 	lea    0x128(%rsp),%rsi
   1efbd:	00 
   1efbe:	48 89 df             	mov    %rbx,%rdi
   1efc1:	4c 89 fa             	mov    %r15,%rdx
   1efc4:	e8 87 db ff ff       	call   1cb50 <io_pread>
   1efc9:	89 c3                	mov    %eax,%ebx
   1efcb:	84 c0                	test   %al,%al
   1efcd:	0f 85 78 fe ff ff    	jne    1ee4b <parse_details+0xcb>
   1efd3:	4d 85 ff             	test   %r15,%r15
   1efd6:	0f 84 6f fe ff ff    	je     1ee4b <parse_details+0xcb>
   1efdc:	41 83 ff 04          	cmp    $0x4,%r15d
   1efe0:	74 3e                	je     1f020 <parse_details+0x2a0>
   1efe2:	41 83 ff 08          	cmp    $0x8,%r15d
   1efe6:	75 5e                	jne    1f046 <parse_details+0x2c6>
   1efe8:	48 8b 8c 24 28 01 00 	mov    0x128(%rsp),%rcx
   1efef:	00 
   1eff0:	48 8d 3d 49 93 01 00 	lea    0x19349(%rip),%rdi        # 38340 <check_value>
   1eff7:	48 8d 15 e2 b8 00 00 	lea    0xb8e2(%rip),%rdx        # 2a8e0 <is_format_xz.magic+0x588>
   1effe:	be 81 00 00 00       	mov    $0x81,%esi
   1f003:	31 c0                	xor    %eax,%eax
   1f005:	e8 a6 30 fe ff       	call   20b0 <snprintf@plt>
   1f00a:	e9 3c fe ff ff       	jmp    1ee4b <parse_details+0xcb>
   1f00f:	c7 05 27 93 01 00 2d 	movl   $0x2d2d2d,0x19327(%rip)        # 38340 <check_value>
   1f016:	2d 2d 00 
   1f019:	31 db                	xor    %ebx,%ebx
   1f01b:	e9 2b fe ff ff       	jmp    1ee4b <parse_details+0xcb>
   1f020:	8b 8c 24 28 01 00 00 	mov    0x128(%rsp),%ecx
   1f027:	48 8d 3d 12 93 01 00 	lea    0x19312(%rip),%rdi        # 38340 <check_value>
   1f02e:	48 8d 15 a6 b8 00 00 	lea    0xb8a6(%rip),%rdx        # 2a8db <is_format_xz.magic+0x583>
   1f035:	be 81 00 00 00       	mov    $0x81,%esi
   1f03a:	31 c0                	xor    %eax,%eax
   1f03c:	e8 6f 30 fe ff       	call   20b0 <snprintf@plt>
   1f041:	e9 05 fe ff ff       	jmp    1ee4b <parse_details+0xcb>
   1f046:	4c 8d 35 f3 92 01 00 	lea    0x192f3(%rip),%r14        # 38340 <check_value>
   1f04d:	4c 8d 25 93 b8 00 00 	lea    0xb893(%rip),%r12        # 2a8e7 <is_format_xz.magic+0x58f>
   1f054:	45 31 ed             	xor    %r13d,%r13d
   1f057:	42 0f b6 8c 2c 28 01 	movzbl 0x128(%rsp,%r13,1),%ecx
   1f05e:	00 00 
   1f060:	be 03 00 00 00       	mov    $0x3,%esi
   1f065:	4c 89 f7             	mov    %r14,%rdi
   1f068:	4c 89 e2             	mov    %r12,%rdx
   1f06b:	31 c0                	xor    %eax,%eax
   1f06d:	e8 3e 30 fe ff       	call   20b0 <snprintf@plt>
   1f072:	49 ff c5             	inc    %r13
   1f075:	49 83 c6 02          	add    $0x2,%r14
   1f079:	4d 39 ef             	cmp    %r13,%r15
   1f07c:	75 d9                	jne    1f057 <parse_details+0x2d7>
   1f07e:	e9 c8 fd ff ff       	jmp    1ee4b <parse_details+0xcb>
   1f083:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f08a:	00 00 00 
   1f08d:	0f 1f 00             	nopl   (%rax)

000000000001f090 <set_exit_status>:
   1f090:	83 3d 2d 93 01 00 01 	cmpl   $0x1,0x1932d(%rip)        # 383c4 <exit_status>
   1f097:	74 06                	je     1f09f <set_exit_status+0xf>
   1f099:	89 3d 25 93 01 00    	mov    %edi,0x19325(%rip)        # 383c4 <exit_status>
   1f09f:	c3                   	ret    

000000000001f0a0 <set_exit_no_warn>:
   1f0a0:	c3                   	ret    
   1f0a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f0a8:	00 00 00 
   1f0ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f0b0 <message_init>:
   1f0b0:	c3                   	ret    
   1f0b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f0b8:	0f 1f 84 00 00 00 00 
   1f0bf:	00 

000000000001f0c0 <message_verbosity_increase>:
   1f0c0:	8b 05 56 50 01 00    	mov    0x15056(%rip),%eax        # 3411c <verbosity>
   1f0c6:	83 f8 03             	cmp    $0x3,%eax
   1f0c9:	77 08                	ja     1f0d3 <message_verbosity_increase+0x13>
   1f0cb:	ff c0                	inc    %eax
   1f0cd:	89 05 49 50 01 00    	mov    %eax,0x15049(%rip)        # 3411c <verbosity>
   1f0d3:	c3                   	ret    
   1f0d4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f0db:	00 00 00 00 00 

000000000001f0e0 <message_verbosity_decrease>:
   1f0e0:	8b 05 36 50 01 00    	mov    0x15036(%rip),%eax        # 3411c <verbosity>
   1f0e6:	85 c0                	test   %eax,%eax
   1f0e8:	74 08                	je     1f0f2 <message_verbosity_decrease+0x12>
   1f0ea:	ff c8                	dec    %eax
   1f0ec:	89 05 2a 50 01 00    	mov    %eax,0x1502a(%rip)        # 3411c <verbosity>
   1f0f2:	c3                   	ret    
   1f0f3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f0fa:	84 00 00 00 00 00 

000000000001f100 <message_verbosity_get>:
   1f100:	8b 05 16 50 01 00    	mov    0x15016(%rip),%eax        # 3411c <verbosity>
   1f106:	c3                   	ret    
   1f107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f10e:	00 00 

000000000001f110 <message_set_files>:
   1f110:	c3                   	ret    
   1f111:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f118:	0f 1f 84 00 00 00 00 
   1f11f:	00 

000000000001f120 <message_filename>:
   1f120:	ff 05 aa 92 01 00    	incl   0x192aa(%rip)        # 383d0 <files_pos>
   1f126:	c3                   	ret    
   1f127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f12e:	00 00 

000000000001f130 <message_progress_start>:
   1f130:	c3                   	ret    
   1f131:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f138:	0f 1f 84 00 00 00 00 
   1f13f:	00 

000000000001f140 <message_progress_update>:
   1f140:	c3                   	ret    
   1f141:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f148:	0f 1f 84 00 00 00 00 
   1f14f:	00 

000000000001f150 <message_progress_end>:
   1f150:	c3                   	ret    
   1f151:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f158:	0f 1f 84 00 00 00 00 
   1f15f:	00 

000000000001f160 <message>:
   1f160:	c3                   	ret    
   1f161:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f168:	0f 1f 84 00 00 00 00 
   1f16f:	00 

000000000001f170 <message_warning>:
   1f170:	bf 02 00 00 00       	mov    $0x2,%edi
   1f175:	e9 16 ff ff ff       	jmp    1f090 <set_exit_status>
   1f17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001f180 <message_error>:
   1f180:	bf 01 00 00 00       	mov    $0x1,%edi
   1f185:	e9 06 ff ff ff       	jmp    1f090 <set_exit_status>
   1f18a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001f190 <message_fatal>:
   1f190:	bf 01 00 00 00       	mov    $0x1,%edi
   1f195:	be 01 00 00 00       	mov    $0x1,%esi
   1f19a:	31 d2                	xor    %edx,%edx
   1f19c:	e9 ff 10 00 00       	jmp    202a0 <tuklib_exit>
   1f1a1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f1a8:	0f 1f 84 00 00 00 00 
   1f1af:	00 

000000000001f1b0 <message_bug>:
   1f1b0:	bf 01 00 00 00       	mov    $0x1,%edi
   1f1b5:	be 01 00 00 00       	mov    $0x1,%esi
   1f1ba:	31 d2                	xor    %edx,%edx
   1f1bc:	e9 df 10 00 00       	jmp    202a0 <tuklib_exit>
   1f1c1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f1c8:	0f 1f 84 00 00 00 00 
   1f1cf:	00 

000000000001f1d0 <message_signal_handler>:
   1f1d0:	bf 01 00 00 00       	mov    $0x1,%edi
   1f1d5:	be 01 00 00 00       	mov    $0x1,%esi
   1f1da:	31 d2                	xor    %edx,%edx
   1f1dc:	e9 bf 10 00 00       	jmp    202a0 <tuklib_exit>
   1f1e1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f1e8:	0f 1f 84 00 00 00 00 
   1f1ef:	00 

000000000001f1f0 <message_strm>:
   1f1f0:	83 c7 fe             	add    $0xfffffffe,%edi
   1f1f3:	83 ff 08             	cmp    $0x8,%edi
   1f1f6:	77 18                	ja     1f210 <message_strm+0x20>
   1f1f8:	48 8d 05 c1 b9 00 00 	lea    0xb9c1(%rip),%rax        # 2abc0 <check_names+0xc0>
   1f1ff:	48 63 0c b8          	movslq (%rax,%rdi,4),%rcx
   1f203:	48 01 c1             	add    %rax,%rcx
   1f206:	ff e1                	jmp    *%rcx
   1f208:	48 8d 05 6c ba 00 00 	lea    0xba6c(%rip),%rax        # 2ac7b <message_filters_to_str.bcj_names+0x4b>
   1f20f:	c3                   	ret    
   1f210:	48 8d 05 4f ba 00 00 	lea    0xba4f(%rip),%rax        # 2ac66 <message_filters_to_str.bcj_names+0x36>
   1f217:	c3                   	ret    
   1f218:	48 8d 05 05 bb 00 00 	lea    0xbb05(%rip),%rax        # 2ad24 <message_filters_to_str.bcj_names+0xf4>
   1f21f:	c3                   	ret    
   1f220:	48 8d 05 85 ba 00 00 	lea    0xba85(%rip),%rax        # 2acac <message_filters_to_str.bcj_names+0x7c>
   1f227:	c3                   	ret    
   1f228:	48 8d 05 7d 43 00 00 	lea    0x437d(%rip),%rax        # 235ac <_IO_stdin_used+0x5ac>
   1f22f:	c3                   	ret    
   1f230:	48 8d 05 01 bb 00 00 	lea    0xbb01(%rip),%rax        # 2ad38 <message_filters_to_str.bcj_names+0x108>
   1f237:	c3                   	ret    
   1f238:	bf 0c 00 00 00       	mov    $0xc,%edi
   1f23d:	e9 9e 2f fe ff       	jmp    21e0 <strerror@plt>
   1f242:	48 8d 05 a5 ba 00 00 	lea    0xbaa5(%rip),%rax        # 2acee <message_filters_to_str.bcj_names+0xbe>
   1f249:	c3                   	ret    
   1f24a:	48 8d 05 b8 ba 00 00 	lea    0xbab8(%rip),%rax        # 2ad09 <message_filters_to_str.bcj_names+0xd9>
   1f251:	c3                   	ret    
   1f252:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f259:	1f 84 00 00 00 00 00 

000000000001f260 <message_mem_needed>:
   1f260:	41 56                	push   %r14
   1f262:	53                   	push   %rbx
   1f263:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   1f26a:	39 3d ac 4e 01 00    	cmp    %edi,0x14eac(%rip)        # 3411c <verbosity>
   1f270:	72 7f                	jb     1f2f1 <message_mem_needed+0x91>
   1f272:	48 89 f7             	mov    %rsi,%rdi
   1f275:	e8 66 0d 00 00       	call   1ffe0 <round_up_to_mib>
   1f27a:	48 89 c3             	mov    %rax,%rbx
   1f27d:	48 8d 05 bc 4e 01 00 	lea    0x14ebc(%rip),%rax        # 34140 <opt_mode>
   1f284:	8b 38                	mov    (%rax),%edi
   1f286:	e8 25 dc ff ff       	call   1ceb0 <hardware_memlimit_get>
   1f28b:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1f28f:	74 11                	je     1f2a2 <message_mem_needed+0x42>
   1f291:	48 3d 00 00 10 00    	cmp    $0x100000,%rax
   1f297:	73 1d                	jae    1f2b6 <message_mem_needed+0x56>
   1f299:	4c 8d 35 b0 ba 00 00 	lea    0xbab0(%rip),%r14        # 2ad50 <message_filters_to_str.bcj_names+0x120>
   1f2a0:	eb 23                	jmp    1f2c5 <message_mem_needed+0x65>
   1f2a2:	48 89 df             	mov    %rbx,%rdi
   1f2a5:	31 f6                	xor    %esi,%esi
   1f2a7:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1f2ae:	5b                   	pop    %rbx
   1f2af:	41 5e                	pop    %r14
   1f2b1:	e9 4a 0d 00 00       	jmp    20000 <uint64_to_str>
   1f2b6:	48 89 c7             	mov    %rax,%rdi
   1f2b9:	e8 22 0d 00 00       	call   1ffe0 <round_up_to_mib>
   1f2be:	4c 8d 35 37 b2 00 00 	lea    0xb237(%rip),%r14        # 2a4fc <is_format_xz.magic+0x1a4>
   1f2c5:	48 89 c7             	mov    %rax,%rdi
   1f2c8:	be 01 00 00 00       	mov    $0x1,%esi
   1f2cd:	e8 2e 0d 00 00       	call   20000 <uint64_to_str>
   1f2d2:	48 89 e7             	mov    %rsp,%rdi
   1f2d5:	be 80 00 00 00       	mov    $0x80,%esi
   1f2da:	4c 89 f2             	mov    %r14,%rdx
   1f2dd:	48 89 c1             	mov    %rax,%rcx
   1f2e0:	31 c0                	xor    %eax,%eax
   1f2e2:	e8 c9 2d fe ff       	call   20b0 <snprintf@plt>
   1f2e7:	48 89 df             	mov    %rbx,%rdi
   1f2ea:	31 f6                	xor    %esi,%esi
   1f2ec:	e8 0f 0d 00 00       	call   20000 <uint64_to_str>
   1f2f1:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   1f2f8:	5b                   	pop    %rbx
   1f2f9:	41 5e                	pop    %r14
   1f2fb:	c3                   	ret    
   1f2fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f300 <message_filters_to_str>:
   1f300:	55                   	push   %rbp
   1f301:	41 57                	push   %r15
   1f303:	41 56                	push   %r14
   1f305:	41 55                	push   %r13
   1f307:	41 54                	push   %r12
   1f309:	53                   	push   %rbx
   1f30a:	48 83 ec 28          	sub    $0x28,%rsp
   1f30e:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1f313:	48 c7 44 24 08 00 02 	movq   $0x200,0x8(%rsp)
   1f31a:	00 00 
   1f31c:	48 83 3e ff          	cmpq   $0xffffffffffffffff,(%rsi)
   1f320:	0f 84 a9 02 00 00    	je     1f5cf <message_filters_to_str+0x2cf>
   1f326:	89 d5                	mov    %edx,%ebp
   1f328:	49 89 f6             	mov    %rsi,%r14
   1f32b:	49 83 c6 10          	add    $0x10,%r14
   1f32f:	4c 8d 2d 20 ba 00 00 	lea    0xba20(%rip),%r13        # 2ad56 <message_filters_to_str.bcj_names+0x126>
   1f336:	31 db                	xor    %ebx,%ebx
   1f338:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
   1f33c:	eb 37                	jmp    1f375 <message_filters_to_str+0x75>
   1f33e:	48 83 f8 03          	cmp    $0x3,%rax
   1f342:	0f 85 84 01 00 00    	jne    1f4cc <message_filters_to_str+0x1cc>
   1f348:	49 8b 46 f8          	mov    -0x8(%r14),%rax
   1f34c:	8b 48 04             	mov    0x4(%rax),%ecx
   1f34f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f354:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f359:	48 8d 15 6c ba 00 00 	lea    0xba6c(%rip),%rdx        # 2adcc <message_filters_to_str.bcj_names+0x19c>
   1f360:	31 c0                	xor    %eax,%eax
   1f362:	e8 09 0e 00 00       	call   20170 <my_snprintf>
   1f367:	49 83 3e ff          	cmpq   $0xffffffffffffffff,(%r14)
   1f36b:	4d 8d 76 10          	lea    0x10(%r14),%r14
   1f36f:	0f 84 5a 02 00 00    	je     1f5cf <message_filters_to_str+0x2cf>
   1f375:	48 83 eb 01          	sub    $0x1,%rbx
   1f379:	48 8d 0d d5 b9 00 00 	lea    0xb9d5(%rip),%rcx        # 2ad55 <message_filters_to_str.bcj_names+0x125>
   1f380:	49 0f 42 cd          	cmovb  %r13,%rcx
   1f384:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f389:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f38e:	48 8d 15 1e b5 00 00 	lea    0xb51e(%rip),%rdx        # 2a8b3 <is_format_xz.magic+0x55b>
   1f395:	31 c0                	xor    %eax,%eax
   1f397:	e8 d4 0d 00 00       	call   20170 <my_snprintf>
   1f39c:	49 8b 46 f0          	mov    -0x10(%r14),%rax
   1f3a0:	48 83 f8 20          	cmp    $0x20,%rax
   1f3a4:	7f 6a                	jg     1f410 <message_filters_to_str+0x110>
   1f3a6:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
   1f3aa:	48 83 f9 06          	cmp    $0x6,%rcx
   1f3ae:	73 8e                	jae    1f33e <message_filters_to_str+0x3e>
   1f3b0:	4d 8b 7e f8          	mov    -0x8(%r14),%r15
   1f3b4:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
   1f3b8:	48 8d 0d 71 b8 00 00 	lea    0xb871(%rip),%rcx        # 2ac30 <message_filters_to_str.bcj_names>
   1f3bf:	48 01 c1             	add    %rax,%rcx
   1f3c2:	48 83 c1 dc          	add    $0xffffffffffffffdc,%rcx
   1f3c6:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f3cb:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f3d0:	48 8d 15 dc b4 00 00 	lea    0xb4dc(%rip),%rdx        # 2a8b3 <is_format_xz.magic+0x55b>
   1f3d7:	31 c0                	xor    %eax,%eax
   1f3d9:	e8 92 0d 00 00       	call   20170 <my_snprintf>
   1f3de:	4d 85 ff             	test   %r15,%r15
   1f3e1:	74 84                	je     1f367 <message_filters_to_str+0x67>
   1f3e3:	41 8b 0f             	mov    (%r15),%ecx
   1f3e6:	85 c9                	test   %ecx,%ecx
   1f3e8:	0f 84 79 ff ff ff    	je     1f367 <message_filters_to_str+0x67>
   1f3ee:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f3f3:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f3f8:	48 8d 15 c3 b9 00 00 	lea    0xb9c3(%rip),%rdx        # 2adc2 <message_filters_to_str.bcj_names+0x192>
   1f3ff:	e9 5c ff ff ff       	jmp    1f360 <message_filters_to_str+0x60>
   1f404:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f40b:	00 00 00 00 00 
   1f410:	48 b9 01 00 00 00 00 	movabs $0x4000000000000001,%rcx
   1f417:	00 00 40 
   1f41a:	48 39 c8             	cmp    %rcx,%rax
   1f41d:	74 0a                	je     1f429 <message_filters_to_str+0x129>
   1f41f:	48 83 f8 21          	cmp    $0x21,%rax
   1f423:	0f 85 a3 00 00 00    	jne    1f4cc <message_filters_to_str+0x1cc>
   1f429:	4d 8b 66 f8          	mov    -0x8(%r14),%r12
   1f42d:	40 84 ed             	test   %bpl,%bpl
   1f430:	74 57                	je     1f489 <message_filters_to_str+0x189>
   1f432:	41 8b 54 24 20       	mov    0x20(%r12),%edx
   1f437:	41 8b 4c 24 28       	mov    0x28(%r12),%ecx
   1f43c:	83 fa 02             	cmp    $0x2,%edx
   1f43f:	4c 8d 3d 1f b9 00 00 	lea    0xb91f(%rip),%r15        # 2ad65 <message_filters_to_str.bcj_names+0x135>
   1f446:	48 8d 35 11 b9 00 00 	lea    0xb911(%rip),%rsi        # 2ad5e <message_filters_to_str.bcj_names+0x12e>
   1f44d:	4c 0f 44 fe          	cmove  %rsi,%r15
   1f451:	83 fa 01             	cmp    $0x1,%edx
   1f454:	48 8d 15 fe b8 00 00 	lea    0xb8fe(%rip),%rdx        # 2ad59 <message_filters_to_str.bcj_names+0x129>
   1f45b:	4c 0f 44 fa          	cmove  %rdx,%r15
   1f45f:	83 c1 fd             	add    $0xfffffffd,%ecx
   1f462:	83 f9 11             	cmp    $0x11,%ecx
   1f465:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1f46a:	0f 87 23 01 00 00    	ja     1f593 <message_filters_to_str+0x293>
   1f470:	48 8d 15 6d b7 00 00 	lea    0xb76d(%rip),%rdx        # 2abe4 <check_names+0xe4>
   1f477:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   1f47b:	48 01 d1             	add    %rdx,%rcx
   1f47e:	ff e1                	jmp    *%rcx
   1f480:	48 8d 0d e6 b8 00 00 	lea    0xb8e6(%rip),%rcx        # 2ad6d <message_filters_to_str.bcj_names+0x13d>
   1f487:	eb 09                	jmp    1f492 <message_filters_to_str+0x192>
   1f489:	31 c9                	xor    %ecx,%ecx
   1f48b:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1f490:	31 c9                	xor    %ecx,%ecx
   1f492:	48 89 0c 24          	mov    %rcx,(%rsp)
   1f496:	48 8d 3d 43 8f 01 00 	lea    0x18f43(%rip),%rdi        # 383e0 <uint32_to_optstr.buf>
   1f49d:	31 ed                	xor    %ebp,%ebp
   1f49f:	48 83 f8 21          	cmp    $0x21,%rax
   1f4a3:	41 0f 94 c5          	sete   %r13b
   1f4a7:	41 8b 0c 24          	mov    (%r12),%ecx
   1f4ab:	f7 c1 ff ff 0f 00    	test   $0xfffff,%ecx
   1f4b1:	74 36                	je     1f4e9 <message_filters_to_str+0x1e9>
   1f4b3:	f7 c1 ff 03 00 00    	test   $0x3ff,%ecx
   1f4b9:	74 42                	je     1f4fd <message_filters_to_str+0x1fd>
   1f4bb:	be 10 00 00 00       	mov    $0x10,%esi
   1f4c0:	49 89 ff             	mov    %rdi,%r15
   1f4c3:	48 8d 15 f5 cb 00 00 	lea    0xcbf5(%rip),%rdx        # 2c0bf <message_filters_to_str.bcj_names+0x148f>
   1f4ca:	eb 43                	jmp    1f50f <message_filters_to_str+0x20f>
   1f4cc:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f4d1:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f4d6:	48 8d 15 88 b8 00 00 	lea    0xb888(%rip),%rdx        # 2ad65 <message_filters_to_str.bcj_names+0x135>
   1f4dd:	31 c0                	xor    %eax,%eax
   1f4df:	e8 8c 0c 00 00       	call   20170 <my_snprintf>
   1f4e4:	e9 7e fe ff ff       	jmp    1f367 <message_filters_to_str+0x67>
   1f4e9:	c1 e9 14             	shr    $0x14,%ecx
   1f4ec:	be 10 00 00 00       	mov    $0x10,%esi
   1f4f1:	49 89 ff             	mov    %rdi,%r15
   1f4f4:	48 8d 15 d7 ca 00 00 	lea    0xcad7(%rip),%rdx        # 2bfd2 <message_filters_to_str.bcj_names+0x13a2>
   1f4fb:	eb 12                	jmp    1f50f <message_filters_to_str+0x20f>
   1f4fd:	c1 e9 0a             	shr    $0xa,%ecx
   1f500:	be 10 00 00 00       	mov    $0x10,%esi
   1f505:	49 89 ff             	mov    %rdi,%r15
   1f508:	48 8d 15 c9 ca 00 00 	lea    0xcac9(%rip),%rdx        # 2bfd8 <message_filters_to_str.bcj_names+0x13a8>
   1f50f:	31 c0                	xor    %eax,%eax
   1f511:	e8 9a 2b fe ff       	call   20b0 <snprintf@plt>
   1f516:	44 88 ed             	mov    %r13b,%bpl
   1f519:	83 c5 31             	add    $0x31,%ebp
   1f51c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f521:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f526:	48 8d 15 54 b8 00 00 	lea    0xb854(%rip),%rdx        # 2ad81 <message_filters_to_str.bcj_names+0x151>
   1f52d:	89 e9                	mov    %ebp,%ecx
   1f52f:	4d 89 f8             	mov    %r15,%r8
   1f532:	31 c0                	xor    %eax,%eax
   1f534:	e8 37 0c 00 00       	call   20170 <my_snprintf>
   1f539:	8b 6c 24 1c          	mov    0x1c(%rsp),%ebp
   1f53d:	40 84 ed             	test   %bpl,%bpl
   1f540:	4c 8d 2d 0f b8 00 00 	lea    0xb80f(%rip),%r13        # 2ad56 <message_filters_to_str.bcj_names+0x126>
   1f547:	0f 84 1a fe ff ff    	je     1f367 <message_filters_to_str+0x67>
   1f54d:	41 8b 4c 24 14       	mov    0x14(%r12),%ecx
   1f552:	45 8b 44 24 18       	mov    0x18(%r12),%r8d
   1f557:	45 8b 4c 24 1c       	mov    0x1c(%r12),%r9d
   1f55c:	45 8b 54 24 24       	mov    0x24(%r12),%r10d
   1f561:	45 8b 5c 24 2c       	mov    0x2c(%r12),%r11d
   1f566:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1f56b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1f570:	48 8d 15 19 b8 00 00 	lea    0xb819(%rip),%rdx        # 2ad90 <message_filters_to_str.bcj_names+0x160>
   1f577:	31 c0                	xor    %eax,%eax
   1f579:	41 53                	push   %r11
   1f57b:	ff 74 24 08          	push   0x8(%rsp)
   1f57f:	41 52                	push   %r10
   1f581:	ff 74 24 38          	push   0x38(%rsp)
   1f585:	e8 e6 0b 00 00       	call   20170 <my_snprintf>
   1f58a:	48 83 c4 20          	add    $0x20,%rsp
   1f58e:	e9 d4 fd ff ff       	jmp    1f367 <message_filters_to_str+0x67>
   1f593:	48 8d 0d cb b7 00 00 	lea    0xb7cb(%rip),%rcx        # 2ad65 <message_filters_to_str.bcj_names+0x135>
   1f59a:	e9 f3 fe ff ff       	jmp    1f492 <message_filters_to_str+0x192>
   1f59f:	48 8d 0d cf b7 00 00 	lea    0xb7cf(%rip),%rcx        # 2ad75 <message_filters_to_str.bcj_names+0x145>
   1f5a6:	e9 e7 fe ff ff       	jmp    1f492 <message_filters_to_str+0x192>
   1f5ab:	48 8d 0d bf b7 00 00 	lea    0xb7bf(%rip),%rcx        # 2ad71 <message_filters_to_str.bcj_names+0x141>
   1f5b2:	e9 db fe ff ff       	jmp    1f492 <message_filters_to_str+0x192>
   1f5b7:	48 8d 0d bb b7 00 00 	lea    0xb7bb(%rip),%rcx        # 2ad79 <message_filters_to_str.bcj_names+0x149>
   1f5be:	e9 cf fe ff ff       	jmp    1f492 <message_filters_to_str+0x192>
   1f5c3:	48 8d 0d b3 b7 00 00 	lea    0xb7b3(%rip),%rcx        # 2ad7d <message_filters_to_str.bcj_names+0x14d>
   1f5ca:	e9 c3 fe ff ff       	jmp    1f492 <message_filters_to_str+0x192>
   1f5cf:	48 83 c4 28          	add    $0x28,%rsp
   1f5d3:	5b                   	pop    %rbx
   1f5d4:	41 5c                	pop    %r12
   1f5d6:	41 5d                	pop    %r13
   1f5d8:	41 5e                	pop    %r14
   1f5da:	41 5f                	pop    %r15
   1f5dc:	5d                   	pop    %rbp
   1f5dd:	c3                   	ret    
   1f5de:	66 90                	xchg   %ax,%ax

000000000001f5e0 <message_filters_show>:
   1f5e0:	39 3d 36 4b 01 00    	cmp    %edi,0x14b36(%rip)        # 3411c <verbosity>
   1f5e6:	73 01                	jae    1f5e9 <message_filters_show+0x9>
   1f5e8:	c3                   	ret    
   1f5e9:	53                   	push   %rbx
   1f5ea:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
   1f5f1:	48 89 e3             	mov    %rsp,%rbx
   1f5f4:	48 89 df             	mov    %rbx,%rdi
   1f5f7:	ba 01 00 00 00       	mov    $0x1,%edx
   1f5fc:	e8 ff fc ff ff       	call   1f300 <message_filters_to_str>
   1f601:	48 8b 05 f0 49 01 00 	mov    0x149f0(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   1f608:	48 8b 38             	mov    (%rax),%rdi
   1f60b:	48 8d 05 0e 4b 01 00 	lea    0x14b0e(%rip),%rax        # 34120 <progname>
   1f612:	48 8b 10             	mov    (%rax),%rdx
   1f615:	48 8d 35 be b7 00 00 	lea    0xb7be(%rip),%rsi        # 2adda <message_filters_to_str.bcj_names+0x1aa>
   1f61c:	48 89 d9             	mov    %rbx,%rcx
   1f61f:	31 c0                	xor    %eax,%eax
   1f621:	e8 0a 2b fe ff       	call   2130 <fprintf@plt>
   1f626:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
   1f62d:	5b                   	pop    %rbx
   1f62e:	c3                   	ret    
   1f62f:	90                   	nop

000000000001f630 <message_try_help>:
   1f630:	c3                   	ret    
   1f631:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f638:	0f 1f 84 00 00 00 00 
   1f63f:	00 

000000000001f640 <message_version>:
   1f640:	50                   	push   %rax
   1f641:	48 8d 05 ec 4a 01 00 	lea    0x14aec(%rip),%rax        # 34134 <opt_robot>
   1f648:	80 38 00             	cmpb   $0x0,(%rax)
   1f64b:	74 1c                	je     1f669 <message_version+0x29>
   1f64d:	e8 4e 38 fe ff       	call   2ea0 <lzma_version_number>
   1f652:	48 8d 3d 97 b7 00 00 	lea    0xb797(%rip),%rdi        # 2adf0 <message_filters_to_str.bcj_names+0x1c0>
   1f659:	be b8 f0 fa 02       	mov    $0x2faf0b8,%esi
   1f65e:	89 c2                	mov    %eax,%edx
   1f660:	31 c0                	xor    %eax,%eax
   1f662:	e8 39 2a fe ff       	call   20a0 <printf@plt>
   1f667:	eb 22                	jmp    1f68b <message_version+0x4b>
   1f669:	48 8d 3d 6e c9 00 00 	lea    0xc96e(%rip),%rdi        # 2bfde <message_filters_to_str.bcj_names+0x13ae>
   1f670:	e8 eb 29 fe ff       	call   2060 <puts@plt>
   1f675:	e8 36 38 fe ff       	call   2eb0 <lzma_version_string>
   1f67a:	48 8d 3d 91 b7 00 00 	lea    0xb791(%rip),%rdi        # 2ae12 <message_filters_to_str.bcj_names+0x1e2>
   1f681:	48 89 c6             	mov    %rax,%rsi
   1f684:	31 c0                	xor    %eax,%eax
   1f686:	e8 15 2a fe ff       	call   20a0 <printf@plt>
   1f68b:	31 d2                	xor    %edx,%edx
   1f68d:	83 3d 88 4a 01 00 00 	cmpl   $0x0,0x14a88(%rip)        # 3411c <verbosity>
   1f694:	0f 95 c2             	setne  %dl
   1f697:	31 ff                	xor    %edi,%edi
   1f699:	be 01 00 00 00       	mov    $0x1,%esi
   1f69e:	58                   	pop    %rax
   1f69f:	e9 fc 0b 00 00       	jmp    202a0 <tuklib_exit>
   1f6a4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f6ab:	00 00 00 00 00 

000000000001f6b0 <message_help>:
   1f6b0:	53                   	push   %rbx
   1f6b1:	89 fb                	mov    %edi,%ebx
   1f6b3:	48 8d 05 66 4a 01 00 	lea    0x14a66(%rip),%rax        # 34120 <progname>
   1f6ba:	48 8b 30             	mov    (%rax),%rsi
   1f6bd:	48 8d 3d 5a b7 00 00 	lea    0xb75a(%rip),%rdi        # 2ae1e <message_filters_to_str.bcj_names+0x1ee>
   1f6c4:	31 c0                	xor    %eax,%eax
   1f6c6:	e8 d5 29 fe ff       	call   20a0 <printf@plt>
   1f6cb:	85 db                	test   %ebx,%ebx
   1f6cd:	0f 84 0a 01 00 00    	je     1f7dd <message_help+0x12d>
   1f6d3:	48 8d 3d 96 b7 00 00 	lea    0xb796(%rip),%rdi        # 2ae70 <message_filters_to_str.bcj_names+0x240>
   1f6da:	e8 81 29 fe ff       	call   2060 <puts@plt>
   1f6df:	48 8d 3d d4 b7 00 00 	lea    0xb7d4(%rip),%rdi        # 2aeba <message_filters_to_str.bcj_names+0x28a>
   1f6e6:	e8 75 29 fe ff       	call   2060 <puts@plt>
   1f6eb:	48 8d 3d da b7 00 00 	lea    0xb7da(%rip),%rdi        # 2aecc <message_filters_to_str.bcj_names+0x29c>
   1f6f2:	e8 69 29 fe ff       	call   2060 <puts@plt>
   1f6f7:	48 8d 3d 8c b8 00 00 	lea    0xb88c(%rip),%rdi        # 2af8a <message_filters_to_str.bcj_names+0x35a>
   1f6fe:	e8 5d 29 fe ff       	call   2060 <puts@plt>
   1f703:	48 8d 3d 98 b8 00 00 	lea    0xb898(%rip),%rdi        # 2afa2 <message_filters_to_str.bcj_names+0x372>
   1f70a:	e8 51 29 fe ff       	call   2060 <puts@plt>
   1f70f:	48 8d 3d 5a b9 00 00 	lea    0xb95a(%rip),%rdi        # 2b070 <message_filters_to_str.bcj_names+0x440>
   1f716:	e8 45 29 fe ff       	call   2060 <puts@plt>
   1f71b:	48 8d 3d fd ba 00 00 	lea    0xbafd(%rip),%rdi        # 2b21f <message_filters_to_str.bcj_names+0x5ef>
   1f722:	e8 39 29 fe ff       	call   2060 <puts@plt>
   1f727:	48 8d 3d 1f bb 00 00 	lea    0xbb1f(%rip),%rdi        # 2b24d <message_filters_to_str.bcj_names+0x61d>
   1f72e:	e8 2d 29 fe ff       	call   2060 <puts@plt>
   1f733:	48 8d 3d 23 bc 00 00 	lea    0xbc23(%rip),%rdi        # 2b35d <message_filters_to_str.bcj_names+0x72d>
   1f73a:	e8 21 29 fe ff       	call   2060 <puts@plt>
   1f73f:	48 8d 3d b4 bc 00 00 	lea    0xbcb4(%rip),%rdi        # 2b3fa <message_filters_to_str.bcj_names+0x7ca>
   1f746:	e8 15 29 fe ff       	call   2060 <puts@plt>
   1f74b:	48 8d 3d 3e bd 00 00 	lea    0xbd3e(%rip),%rdi        # 2b490 <message_filters_to_str.bcj_names+0x860>
   1f752:	e8 09 29 fe ff       	call   2060 <puts@plt>
   1f757:	48 8d 3d 26 be 00 00 	lea    0xbe26(%rip),%rdi        # 2b584 <message_filters_to_str.bcj_names+0x954>
   1f75e:	e8 fd 28 fe ff       	call   2060 <puts@plt>
   1f763:	48 8d 3d b7 be 00 00 	lea    0xbeb7(%rip),%rdi        # 2b621 <message_filters_to_str.bcj_names+0x9f1>
   1f76a:	e8 f1 28 fe ff       	call   2060 <puts@plt>
   1f76f:	48 8d 3d f2 be 00 00 	lea    0xbef2(%rip),%rdi        # 2b668 <message_filters_to_str.bcj_names+0xa38>
   1f776:	e8 e5 28 fe ff       	call   2060 <puts@plt>
   1f77b:	48 8d 3d 1e c2 00 00 	lea    0xc21e(%rip),%rdi        # 2b9a0 <message_filters_to_str.bcj_names+0xd70>
   1f782:	e8 d9 28 fe ff       	call   2060 <puts@plt>
   1f787:	48 8d 3d db c3 00 00 	lea    0xc3db(%rip),%rdi        # 2bb69 <message_filters_to_str.bcj_names+0xf39>
   1f78e:	e8 cd 28 fe ff       	call   2060 <puts@plt>
   1f793:	48 8d 3d a1 c4 00 00 	lea    0xc4a1(%rip),%rdi        # 2bc3b <message_filters_to_str.bcj_names+0x100b>
   1f79a:	e8 c1 28 fe ff       	call   2060 <puts@plt>
   1f79f:	48 8d 3d a7 c4 00 00 	lea    0xc4a7(%rip),%rdi        # 2bc4d <message_filters_to_str.bcj_names+0x101d>
   1f7a6:	e8 b5 28 fe ff       	call   2060 <puts@plt>
   1f7ab:	48 8d 3d 2f c5 00 00 	lea    0xc52f(%rip),%rdi        # 2bce1 <message_filters_to_str.bcj_names+0x10b1>
   1f7b2:	e8 a9 28 fe ff       	call   2060 <puts@plt>
   1f7b7:	48 8d 3d 62 c5 00 00 	lea    0xc562(%rip),%rdi        # 2bd20 <message_filters_to_str.bcj_names+0x10f0>
   1f7be:	e8 9d 28 fe ff       	call   2060 <puts@plt>
   1f7c3:	bf 0a 00 00 00       	mov    $0xa,%edi
   1f7c8:	e8 73 28 fe ff       	call   2040 <putchar@plt>
   1f7cd:	48 8d 1d 18 c6 00 00 	lea    0xc618(%rip),%rbx        # 2bdec <message_filters_to_str.bcj_names+0x11bc>
   1f7d4:	48 8d 3d 8e c5 00 00 	lea    0xc58e(%rip),%rdi        # 2bd69 <message_filters_to_str.bcj_names+0x1139>
   1f7db:	eb 3e                	jmp    1f81b <message_help+0x16b>
   1f7dd:	48 8d 3d e8 b6 00 00 	lea    0xb6e8(%rip),%rdi        # 2aecc <message_filters_to_str.bcj_names+0x29c>
   1f7e4:	e8 77 28 fe ff       	call   2060 <puts@plt>
   1f7e9:	48 8d 3d b2 b7 00 00 	lea    0xb7b2(%rip),%rdi        # 2afa2 <message_filters_to_str.bcj_names+0x372>
   1f7f0:	e8 6b 28 fe ff       	call   2060 <puts@plt>
   1f7f5:	48 8d 3d 61 bb 00 00 	lea    0xbb61(%rip),%rdi        # 2b35d <message_filters_to_str.bcj_names+0x72d>
   1f7fc:	e8 5f 28 fe ff       	call   2060 <puts@plt>
   1f801:	48 8d 3d f2 bb 00 00 	lea    0xbbf2(%rip),%rdi        # 2b3fa <message_filters_to_str.bcj_names+0x7ca>
   1f808:	e8 53 28 fe ff       	call   2060 <puts@plt>
   1f80d:	48 8d 1d 5a c6 00 00 	lea    0xc65a(%rip),%rbx        # 2be6e <message_filters_to_str.bcj_names+0x123e>
   1f814:	48 8d 3d 32 c4 00 00 	lea    0xc432(%rip),%rdi        # 2bc4d <message_filters_to_str.bcj_names+0x101d>
   1f81b:	e8 40 28 fe ff       	call   2060 <puts@plt>
   1f820:	48 89 df             	mov    %rbx,%rdi
   1f823:	e8 38 28 fe ff       	call   2060 <puts@plt>
   1f828:	48 8d 3d c4 c6 00 00 	lea    0xc6c4(%rip),%rdi        # 2bef3 <message_filters_to_str.bcj_names+0x12c3>
   1f82f:	e8 2c 28 fe ff       	call   2060 <puts@plt>
   1f834:	48 8d 3d f2 c6 00 00 	lea    0xc6f2(%rip),%rdi        # 2bf2d <message_filters_to_str.bcj_names+0x12fd>
   1f83b:	e8 20 28 fe ff       	call   2060 <puts@plt>
   1f840:	48 8d 3d 1e c7 00 00 	lea    0xc71e(%rip),%rdi        # 2bf65 <message_filters_to_str.bcj_names+0x1335>
   1f847:	48 8d 35 2d c7 00 00 	lea    0xc72d(%rip),%rsi        # 2bf7b <message_filters_to_str.bcj_names+0x134b>
   1f84e:	31 c0                	xor    %eax,%eax
   1f850:	e8 4b 28 fe ff       	call   20a0 <printf@plt>
   1f855:	48 8d 3d 30 c7 00 00 	lea    0xc730(%rip),%rdi        # 2bf8c <message_filters_to_str.bcj_names+0x135c>
   1f85c:	48 8d 35 3d c7 00 00 	lea    0xc73d(%rip),%rsi        # 2bfa0 <message_filters_to_str.bcj_names+0x1370>
   1f863:	48 8d 15 4b c7 00 00 	lea    0xc74b(%rip),%rdx        # 2bfb5 <message_filters_to_str.bcj_names+0x1385>
   1f86a:	31 c0                	xor    %eax,%eax
   1f86c:	e8 2f 28 fe ff       	call   20a0 <printf@plt>
   1f871:	31 d2                	xor    %edx,%edx
   1f873:	83 3d a2 48 01 00 00 	cmpl   $0x0,0x148a2(%rip)        # 3411c <verbosity>
   1f87a:	0f 95 c2             	setne  %dl
   1f87d:	31 ff                	xor    %edi,%edi
   1f87f:	be 01 00 00 00       	mov    $0x1,%esi
   1f884:	5b                   	pop    %rbx
   1f885:	e9 16 0a 00 00       	jmp    202a0 <tuklib_exit>
   1f88a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001f890 <options_delta>:
   1f890:	41 56                	push   %r14
   1f892:	53                   	push   %rbx
   1f893:	50                   	push   %rax
   1f894:	48 89 fb             	mov    %rdi,%rbx
   1f897:	be 28 00 00 00       	mov    $0x28,%esi
   1f89c:	31 ff                	xor    %edi,%edi
   1f89e:	e8 9d 04 00 00       	call   1fd40 <xrealloc>
   1f8a3:	49 89 c6             	mov    %rax,%r14
   1f8a6:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   1f8ad:	00 00 00 
   1f8b0:	49 89 06             	mov    %rax,(%r14)
   1f8b3:	0f 57 c0             	xorps  %xmm0,%xmm0
   1f8b6:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
   1f8bb:	41 0f 11 46 18       	movups %xmm0,0x18(%r14)
   1f8c0:	48 8d 35 c9 42 01 00 	lea    0x142c9(%rip),%rsi        # 33b90 <options_delta.opts>
   1f8c7:	48 8d 15 32 02 00 00 	lea    0x232(%rip),%rdx        # 1fb00 <set_delta>
   1f8ce:	48 89 df             	mov    %rbx,%rdi
   1f8d1:	4c 89 f1             	mov    %r14,%rcx
   1f8d4:	e8 17 00 00 00       	call   1f8f0 <parse_options>
   1f8d9:	4c 89 f0             	mov    %r14,%rax
   1f8dc:	48 83 c4 08          	add    $0x8,%rsp
   1f8e0:	5b                   	pop    %rbx
   1f8e1:	41 5e                	pop    %r14
   1f8e3:	c3                   	ret    
   1f8e4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1f8eb:	00 00 00 00 00 

000000000001f8f0 <parse_options>:
   1f8f0:	55                   	push   %rbp
   1f8f1:	41 57                	push   %r15
   1f8f3:	41 56                	push   %r14
   1f8f5:	41 55                	push   %r13
   1f8f7:	41 54                	push   %r12
   1f8f9:	53                   	push   %rbx
   1f8fa:	48 83 ec 38          	sub    $0x38,%rsp
   1f8fe:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1f903:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1f908:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1f90d:	48 85 ff             	test   %rdi,%rdi
   1f910:	0f 84 c2 01 00 00    	je     1fad8 <parse_options+0x1e8>
   1f916:	49 89 fe             	mov    %rdi,%r14
   1f919:	80 3f 00             	cmpb   $0x0,(%rdi)
   1f91c:	0f 84 b6 01 00 00    	je     1fad8 <parse_options+0x1e8>
   1f922:	4c 89 f7             	mov    %r14,%rdi
   1f925:	e8 66 04 00 00       	call   1fd90 <xstrdup>
   1f92a:	48 89 c5             	mov    %rax,%rbp
   1f92d:	4c 8d 2d cb c7 00 00 	lea    0xc7cb(%rip),%r13        # 2c0ff <message_filters_to_str.bcj_names+0x14cf>
   1f934:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f939:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   1f93e:	eb 50                	jmp    1f990 <parse_options+0xa0>
   1f940:	31 ed                	xor    %ebp,%ebp
   1f942:	48 8d 3d ce c7 00 00 	lea    0xc7ce(%rip),%rdi        # 2c117 <message_filters_to_str.bcj_names+0x14e7>
   1f949:	4c 89 e6             	mov    %r12,%rsi
   1f94c:	31 c0                	xor    %eax,%eax
   1f94e:	e8 3d f8 ff ff       	call   1f190 <message_fatal>
   1f953:	4d 8b 6f e8          	mov    -0x18(%r15),%r13
   1f957:	48 c1 e5 04          	shl    $0x4,%rbp
   1f95b:	49 8b 54 2d 08       	mov    0x8(%r13,%rbp,1),%rdx
   1f960:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1f965:	89 de                	mov    %ebx,%esi
   1f967:	4c 89 e1             	mov    %r12,%rcx
   1f96a:	ff 54 24 08          	call   *0x8(%rsp)
   1f96e:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   1f973:	4c 8d 2d 85 c7 00 00 	lea    0xc785(%rip),%r13        # 2c0ff <message_filters_to_str.bcj_names+0x14cf>
   1f97a:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   1f97f:	48 85 ed             	test   %rbp,%rbp
   1f982:	0f 85 48 01 00 00    	jne    1fad0 <parse_options+0x1e0>
   1f988:	e9 5a 01 00 00       	jmp    1fae7 <parse_options+0x1f7>
   1f98d:	0f 1f 00             	nopl   (%rax)
   1f990:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1f994:	83 f8 2c             	cmp    $0x2c,%eax
   1f997:	0f 84 33 01 00 00    	je     1fad0 <parse_options+0x1e0>
   1f99d:	85 c0                	test   %eax,%eax
   1f99f:	0f 84 42 01 00 00    	je     1fae7 <parse_options+0x1f7>
   1f9a5:	48 89 ef             	mov    %rbp,%rdi
   1f9a8:	be 2c 00 00 00       	mov    $0x2c,%esi
   1f9ad:	e8 de 26 fe ff       	call   2090 <strchr@plt>
   1f9b2:	48 85 c0             	test   %rax,%rax
   1f9b5:	74 03                	je     1f9ba <parse_options+0xca>
   1f9b7:	c6 00 00             	movb   $0x0,(%rax)
   1f9ba:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1f9bf:	48 89 ef             	mov    %rbp,%rdi
   1f9c2:	be 3d 00 00 00       	mov    $0x3d,%esi
   1f9c7:	e8 c4 26 fe ff       	call   2090 <strchr@plt>
   1f9cc:	48 85 c0             	test   %rax,%rax
   1f9cf:	74 11                	je     1f9e2 <parse_options+0xf2>
   1f9d1:	49 89 c4             	mov    %rax,%r12
   1f9d4:	49 ff c4             	inc    %r12
   1f9d7:	c6 00 00             	movb   $0x0,(%rax)
   1f9da:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
   1f9de:	75 16                	jne    1f9f6 <parse_options+0x106>
   1f9e0:	eb 03                	jmp    1f9e5 <parse_options+0xf5>
   1f9e2:	45 31 e4             	xor    %r12d,%r12d
   1f9e5:	48 8d 3d d6 c6 00 00 	lea    0xc6d6(%rip),%rdi        # 2c0c2 <message_filters_to_str.bcj_names+0x1492>
   1f9ec:	4c 89 f6             	mov    %r14,%rsi
   1f9ef:	31 c0                	xor    %eax,%eax
   1f9f1:	e8 9a f7 ff ff       	call   1f190 <message_fatal>
   1f9f6:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   1f9fb:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   1fa00:	eb 20                	jmp    1fa22 <parse_options+0x132>
   1fa02:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fa09:	1f 84 00 00 00 00 00 
   1fa10:	48 89 ef             	mov    %rbp,%rdi
   1fa13:	e8 f8 26 fe ff       	call   2110 <strcmp@plt>
   1fa18:	49 83 c7 20          	add    $0x20,%r15
   1fa1c:	ff c3                	inc    %ebx
   1fa1e:	85 c0                	test   %eax,%eax
   1fa20:	74 1e                	je     1fa40 <parse_options+0x150>
   1fa22:	49 8b 37             	mov    (%r15),%rsi
   1fa25:	48 85 f6             	test   %rsi,%rsi
   1fa28:	75 e6                	jne    1fa10 <parse_options+0x120>
   1fa2a:	4c 89 ef             	mov    %r13,%rdi
   1fa2d:	48 89 ee             	mov    %rbp,%rsi
   1fa30:	31 c0                	xor    %eax,%eax
   1fa32:	e8 59 f7 ff ff       	call   1f190 <message_fatal>
   1fa37:	49 8b 37             	mov    (%r15),%rsi
   1fa3a:	eb d4                	jmp    1fa10 <parse_options+0x120>
   1fa3c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fa40:	4d 8b 6f e8          	mov    -0x18(%r15),%r13
   1fa44:	4d 85 ed             	test   %r13,%r13
   1fa47:	74 3b                	je     1fa84 <parse_options+0x194>
   1fa49:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1fa4d:	48 85 ff             	test   %rdi,%rdi
   1fa50:	0f 84 ea fe ff ff    	je     1f940 <parse_options+0x50>
   1fa56:	4d 8d 75 10          	lea    0x10(%r13),%r14
   1fa5a:	31 ed                	xor    %ebp,%ebp
   1fa5c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fa60:	4c 89 e6             	mov    %r12,%rsi
   1fa63:	e8 a8 26 fe ff       	call   2110 <strcmp@plt>
   1fa68:	85 c0                	test   %eax,%eax
   1fa6a:	0f 84 e7 fe ff ff    	je     1f957 <parse_options+0x67>
   1fa70:	48 ff c5             	inc    %rbp
   1fa73:	49 8b 3e             	mov    (%r14),%rdi
   1fa76:	49 83 c6 10          	add    $0x10,%r14
   1fa7a:	48 85 ff             	test   %rdi,%rdi
   1fa7d:	75 e1                	jne    1fa60 <parse_options+0x170>
   1fa7f:	e9 be fe ff ff       	jmp    1f942 <parse_options+0x52>
   1fa84:	49 8b 57 f0          	mov    -0x10(%r15),%rdx
   1fa88:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1fa8c:	74 1b                	je     1faa9 <parse_options+0x1b9>
   1fa8e:	49 8b 4f f8          	mov    -0x8(%r15),%rcx
   1fa92:	48 89 ef             	mov    %rbp,%rdi
   1fa95:	4c 89 e6             	mov    %r12,%rsi
   1fa98:	e8 53 03 00 00       	call   1fdf0 <str_to_uint64>
   1fa9d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1faa2:	89 de                	mov    %ebx,%esi
   1faa4:	48 89 c2             	mov    %rax,%rdx
   1faa7:	eb 09                	jmp    1fab2 <parse_options+0x1c2>
   1faa9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1faae:	89 de                	mov    %ebx,%esi
   1fab0:	31 d2                	xor    %edx,%edx
   1fab2:	4c 89 e1             	mov    %r12,%rcx
   1fab5:	ff 54 24 08          	call   *0x8(%rsp)
   1fab9:	4c 8d 2d 3f c6 00 00 	lea    0xc63f(%rip),%r13        # 2c0ff <message_filters_to_str.bcj_names+0x14cf>
   1fac0:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   1fac5:	48 85 ed             	test   %rbp,%rbp
   1fac8:	74 1d                	je     1fae7 <parse_options+0x1f7>
   1faca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fad0:	48 ff c5             	inc    %rbp
   1fad3:	e9 b8 fe ff ff       	jmp    1f990 <parse_options+0xa0>
   1fad8:	48 83 c4 38          	add    $0x38,%rsp
   1fadc:	5b                   	pop    %rbx
   1fadd:	41 5c                	pop    %r12
   1fadf:	41 5d                	pop    %r13
   1fae1:	41 5e                	pop    %r14
   1fae3:	41 5f                	pop    %r15
   1fae5:	5d                   	pop    %rbp
   1fae6:	c3                   	ret    
   1fae7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1faec:	48 83 c4 38          	add    $0x38,%rsp
   1faf0:	5b                   	pop    %rbx
   1faf1:	41 5c                	pop    %r12
   1faf3:	41 5d                	pop    %r13
   1faf5:	41 5e                	pop    %r14
   1faf7:	41 5f                	pop    %r15
   1faf9:	5d                   	pop    %rbp
   1fafa:	e9 31 25 fe ff       	jmp    2030 <free@plt>
   1faff:	90                   	nop

000000000001fb00 <set_delta>:
   1fb00:	85 f6                	test   %esi,%esi
   1fb02:	74 01                	je     1fb05 <set_delta+0x5>
   1fb04:	c3                   	ret    
   1fb05:	89 57 04             	mov    %edx,0x4(%rdi)
   1fb08:	c3                   	ret    
   1fb09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001fb10 <options_bcj>:
   1fb10:	41 56                	push   %r14
   1fb12:	53                   	push   %rbx
   1fb13:	50                   	push   %rax
   1fb14:	48 89 fb             	mov    %rdi,%rbx
   1fb17:	be 04 00 00 00       	mov    $0x4,%esi
   1fb1c:	31 ff                	xor    %edi,%edi
   1fb1e:	e8 1d 02 00 00       	call   1fd40 <xrealloc>
   1fb23:	49 89 c6             	mov    %rax,%r14
   1fb26:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1fb2c:	48 8d 35 9d 40 01 00 	lea    0x1409d(%rip),%rsi        # 33bd0 <options_bcj.opts>
   1fb33:	48 8d 15 16 00 00 00 	lea    0x16(%rip),%rdx        # 1fb50 <set_bcj>
   1fb3a:	48 89 df             	mov    %rbx,%rdi
   1fb3d:	48 89 c1             	mov    %rax,%rcx
   1fb40:	e8 ab fd ff ff       	call   1f8f0 <parse_options>
   1fb45:	4c 89 f0             	mov    %r14,%rax
   1fb48:	48 83 c4 08          	add    $0x8,%rsp
   1fb4c:	5b                   	pop    %rbx
   1fb4d:	41 5e                	pop    %r14
   1fb4f:	c3                   	ret    

000000000001fb50 <set_bcj>:
   1fb50:	85 f6                	test   %esi,%esi
   1fb52:	74 01                	je     1fb55 <set_bcj+0x5>
   1fb54:	c3                   	ret    
   1fb55:	89 17                	mov    %edx,(%rdi)
   1fb57:	c3                   	ret    
   1fb58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fb5f:	00 

000000000001fb60 <options_lzma>:
   1fb60:	41 56                	push   %r14
   1fb62:	53                   	push   %rbx
   1fb63:	50                   	push   %rax
   1fb64:	49 89 fe             	mov    %rdi,%r14
   1fb67:	be 70 00 00 00       	mov    $0x70,%esi
   1fb6c:	31 ff                	xor    %edi,%edi
   1fb6e:	e8 cd 01 00 00       	call   1fd40 <xrealloc>
   1fb73:	48 89 c3             	mov    %rax,%rbx
   1fb76:	48 89 c7             	mov    %rax,%rdi
   1fb79:	be 06 00 00 00       	mov    $0x6,%esi
   1fb7e:	e8 fd 20 ff ff       	call   11c80 <lzma_lzma_preset>
   1fb83:	84 c0                	test   %al,%al
   1fb85:	74 05                	je     1fb8c <options_lzma+0x2c>
   1fb87:	e8 24 f6 ff ff       	call   1f1b0 <message_bug>
   1fb8c:	48 8d 35 0d 41 01 00 	lea    0x1410d(%rip),%rsi        # 33ca0 <options_lzma.opts>
   1fb93:	48 8d 15 56 00 00 00 	lea    0x56(%rip),%rdx        # 1fbf0 <set_lzma>
   1fb9a:	4c 89 f7             	mov    %r14,%rdi
   1fb9d:	48 89 d9             	mov    %rbx,%rcx
   1fba0:	e8 4b fd ff ff       	call   1f8f0 <parse_options>
   1fba5:	8b 43 18             	mov    0x18(%rbx),%eax
   1fba8:	03 43 14             	add    0x14(%rbx),%eax
   1fbab:	83 f8 05             	cmp    $0x5,%eax
   1fbae:	72 0e                	jb     1fbbe <options_lzma+0x5e>
   1fbb0:	48 8d 3d b0 c4 00 00 	lea    0xc4b0(%rip),%rdi        # 2c067 <message_filters_to_str.bcj_names+0x1437>
   1fbb7:	31 c0                	xor    %eax,%eax
   1fbb9:	e8 d2 f5 ff ff       	call   1f190 <message_fatal>
   1fbbe:	8b 73 28             	mov    0x28(%rbx),%esi
   1fbc1:	83 e6 0f             	and    $0xf,%esi
   1fbc4:	39 73 24             	cmp    %esi,0x24(%rbx)
   1fbc7:	73 0e                	jae    1fbd7 <options_lzma+0x77>
   1fbc9:	48 8d 3d be c4 00 00 	lea    0xc4be(%rip),%rdi        # 2c08e <message_filters_to_str.bcj_names+0x145e>
   1fbd0:	31 c0                	xor    %eax,%eax
   1fbd2:	e8 b9 f5 ff ff       	call   1f190 <message_fatal>
   1fbd7:	48 89 d8             	mov    %rbx,%rax
   1fbda:	48 83 c4 08          	add    $0x8,%rsp
   1fbde:	5b                   	pop    %rbx
   1fbdf:	41 5e                	pop    %r14
   1fbe1:	c3                   	ret    
   1fbe2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fbe9:	1f 84 00 00 00 00 00 

000000000001fbf0 <set_lzma>:
   1fbf0:	41 57                	push   %r15
   1fbf2:	41 56                	push   %r14
   1fbf4:	53                   	push   %rbx
   1fbf5:	83 fe 08             	cmp    $0x8,%esi
   1fbf8:	77 66                	ja     1fc60 <set_lzma+0x70>
   1fbfa:	89 f0                	mov    %esi,%eax
   1fbfc:	48 8d 35 0d c4 00 00 	lea    0xc40d(%rip),%rsi        # 2c010 <message_filters_to_str.bcj_names+0x13e0>
   1fc03:	48 63 04 86          	movslq (%rsi,%rax,4),%rax
   1fc07:	48 01 f0             	add    %rsi,%rax
   1fc0a:	ff e0                	jmp    *%rax
   1fc0c:	0f b6 01             	movzbl (%rcx),%eax
   1fc0f:	8d 50 c6             	lea    -0x3a(%rax),%edx
   1fc12:	80 fa f5             	cmp    $0xf5,%dl
   1fc15:	49 89 ce             	mov    %rcx,%r14
   1fc18:	77 21                	ja     1fc3b <set_lzma+0x4b>
   1fc1a:	48 8d 05 0f c5 00 00 	lea    0xc50f(%rip),%rax        # 2c130 <message_filters_to_str.bcj_names+0x1500>
   1fc21:	48 89 fb             	mov    %rdi,%rbx
   1fc24:	48 89 c7             	mov    %rax,%rdi
   1fc27:	48 89 ce             	mov    %rcx,%rsi
   1fc2a:	31 c0                	xor    %eax,%eax
   1fc2c:	e8 5f f5 ff ff       	call   1f190 <message_fatal>
   1fc31:	4c 89 f1             	mov    %r14,%rcx
   1fc34:	48 89 df             	mov    %rbx,%rdi
   1fc37:	41 0f b6 06          	movzbl (%r14),%eax
   1fc3b:	0f be d8             	movsbl %al,%ebx
   1fc3e:	83 c3 d0             	add    $0xffffffd0,%ebx
   1fc41:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
   1fc45:	85 c0                	test   %eax,%eax
   1fc47:	0f 84 85 00 00 00    	je     1fcd2 <set_lzma+0xe2>
   1fc4d:	49 89 ff             	mov    %rdi,%r15
   1fc50:	83 f8 65             	cmp    $0x65,%eax
   1fc53:	75 4f                	jne    1fca4 <set_lzma+0xb4>
   1fc55:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
   1fc5b:	eb 5b                	jmp    1fcb8 <set_lzma+0xc8>
   1fc5d:	89 57 1c             	mov    %edx,0x1c(%rdi)
   1fc60:	5b                   	pop    %rbx
   1fc61:	41 5e                	pop    %r14
   1fc63:	41 5f                	pop    %r15
   1fc65:	c3                   	ret    
   1fc66:	89 57 14             	mov    %edx,0x14(%rdi)
   1fc69:	5b                   	pop    %rbx
   1fc6a:	41 5e                	pop    %r14
   1fc6c:	41 5f                	pop    %r15
   1fc6e:	c3                   	ret    
   1fc6f:	89 57 18             	mov    %edx,0x18(%rdi)
   1fc72:	5b                   	pop    %rbx
   1fc73:	41 5e                	pop    %r14
   1fc75:	41 5f                	pop    %r15
   1fc77:	c3                   	ret    
   1fc78:	89 57 28             	mov    %edx,0x28(%rdi)
   1fc7b:	5b                   	pop    %rbx
   1fc7c:	41 5e                	pop    %r14
   1fc7e:	41 5f                	pop    %r15
   1fc80:	c3                   	ret    
   1fc81:	89 17                	mov    %edx,(%rdi)
   1fc83:	5b                   	pop    %rbx
   1fc84:	41 5e                	pop    %r14
   1fc86:	41 5f                	pop    %r15
   1fc88:	c3                   	ret    
   1fc89:	89 57 20             	mov    %edx,0x20(%rdi)
   1fc8c:	5b                   	pop    %rbx
   1fc8d:	41 5e                	pop    %r14
   1fc8f:	41 5f                	pop    %r15
   1fc91:	c3                   	ret    
   1fc92:	89 57 24             	mov    %edx,0x24(%rdi)
   1fc95:	5b                   	pop    %rbx
   1fc96:	41 5e                	pop    %r14
   1fc98:	41 5f                	pop    %r15
   1fc9a:	c3                   	ret    
   1fc9b:	89 57 2c             	mov    %edx,0x2c(%rdi)
   1fc9e:	5b                   	pop    %rbx
   1fc9f:	41 5e                	pop    %r14
   1fca1:	41 5f                	pop    %r15
   1fca3:	c3                   	ret    
   1fca4:	48 8d 3d 85 c4 00 00 	lea    0xc485(%rip),%rdi        # 2c130 <message_filters_to_str.bcj_names+0x1500>
   1fcab:	48 89 ce             	mov    %rcx,%rsi
   1fcae:	31 c0                	xor    %eax,%eax
   1fcb0:	e8 db f4 ff ff       	call   1f190 <message_fatal>
   1fcb5:	4c 89 f1             	mov    %r14,%rcx
   1fcb8:	80 79 02 00          	cmpb   $0x0,0x2(%rcx)
   1fcbc:	74 11                	je     1fccf <set_lzma+0xdf>
   1fcbe:	48 8d 3d 6b c4 00 00 	lea    0xc46b(%rip),%rdi        # 2c130 <message_filters_to_str.bcj_names+0x1500>
   1fcc5:	48 89 ce             	mov    %rcx,%rsi
   1fcc8:	31 c0                	xor    %eax,%eax
   1fcca:	e8 c1 f4 ff ff       	call   1f190 <message_fatal>
   1fccf:	4c 89 ff             	mov    %r15,%rdi
   1fcd2:	89 de                	mov    %ebx,%esi
   1fcd4:	e8 a7 1f ff ff       	call   11c80 <lzma_lzma_preset>
   1fcd9:	84 c0                	test   %al,%al
   1fcdb:	74 83                	je     1fc60 <set_lzma+0x70>
   1fcdd:	4c 89 f6             	mov    %r14,%rsi
   1fce0:	48 8d 3d 49 c4 00 00 	lea    0xc449(%rip),%rdi        # 2c130 <message_filters_to_str.bcj_names+0x1500>
   1fce7:	31 c0                	xor    %eax,%eax
   1fce9:	5b                   	pop    %rbx
   1fcea:	41 5e                	pop    %r14
   1fcec:	41 5f                	pop    %r15
   1fcee:	e9 9d f4 ff ff       	jmp    1f190 <message_fatal>
   1fcf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fcfa:	00 00 00 
   1fcfd:	0f 1f 00             	nopl   (%rax)

000000000001fd00 <signals_init>:
   1fd00:	c3                   	ret    
   1fd01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fd08:	0f 1f 84 00 00 00 00 
   1fd0f:	00 

000000000001fd10 <signals_block>:
   1fd10:	c3                   	ret    
   1fd11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fd18:	0f 1f 84 00 00 00 00 
   1fd1f:	00 

000000000001fd20 <signals_unblock>:
   1fd20:	c3                   	ret    
   1fd21:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fd28:	0f 1f 84 00 00 00 00 
   1fd2f:	00 

000000000001fd30 <signals_exit>:
   1fd30:	c3                   	ret    
   1fd31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fd38:	00 00 00 
   1fd3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001fd40 <xrealloc>:
   1fd40:	55                   	push   %rbp
   1fd41:	41 56                	push   %r14
   1fd43:	53                   	push   %rbx
   1fd44:	48 89 fb             	mov    %rdi,%rbx
   1fd47:	e8 44 24 fe ff       	call   2190 <realloc@plt>
   1fd4c:	48 85 c0             	test   %rax,%rax
   1fd4f:	74 05                	je     1fd56 <xrealloc+0x16>
   1fd51:	5b                   	pop    %rbx
   1fd52:	41 5e                	pop    %r14
   1fd54:	5d                   	pop    %rbp
   1fd55:	c3                   	ret    
   1fd56:	49 89 c6             	mov    %rax,%r14
   1fd59:	e8 f2 22 fe ff       	call   2050 <__errno_location@plt>
   1fd5e:	8b 28                	mov    (%rax),%ebp
   1fd60:	48 89 df             	mov    %rbx,%rdi
   1fd63:	e8 c8 22 fe ff       	call   2030 <free@plt>
   1fd68:	89 ef                	mov    %ebp,%edi
   1fd6a:	e8 71 24 fe ff       	call   21e0 <strerror@plt>
   1fd6f:	48 8d 3d 3d ab 00 00 	lea    0xab3d(%rip),%rdi        # 2a8b3 <is_format_xz.magic+0x55b>
   1fd76:	48 89 c6             	mov    %rax,%rsi
   1fd79:	31 c0                	xor    %eax,%eax
   1fd7b:	e8 10 f4 ff ff       	call   1f190 <message_fatal>
   1fd80:	4c 89 f0             	mov    %r14,%rax
   1fd83:	5b                   	pop    %rbx
   1fd84:	41 5e                	pop    %r14
   1fd86:	5d                   	pop    %rbp
   1fd87:	c3                   	ret    
   1fd88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fd8f:	00 

000000000001fd90 <xstrdup>:
   1fd90:	41 57                	push   %r15
   1fd92:	41 56                	push   %r14
   1fd94:	53                   	push   %rbx
   1fd95:	48 89 fb             	mov    %rdi,%rbx
   1fd98:	e8 e3 22 fe ff       	call   2080 <strlen@plt>
   1fd9d:	49 89 c6             	mov    %rax,%r14
   1fda0:	49 ff c6             	inc    %r14
   1fda3:	4c 89 f7             	mov    %r14,%rdi
   1fda6:	e8 b5 23 fe ff       	call   2160 <malloc@plt>
   1fdab:	49 89 c7             	mov    %rax,%r15
   1fdae:	48 85 c0             	test   %rax,%rax
   1fdb1:	75 1d                	jne    1fdd0 <xstrdup+0x40>
   1fdb3:	e8 98 22 fe ff       	call   2050 <__errno_location@plt>
   1fdb8:	8b 38                	mov    (%rax),%edi
   1fdba:	e8 21 24 fe ff       	call   21e0 <strerror@plt>
   1fdbf:	48 8d 3d ed aa 00 00 	lea    0xaaed(%rip),%rdi        # 2a8b3 <is_format_xz.magic+0x55b>
   1fdc6:	48 89 c6             	mov    %rax,%rsi
   1fdc9:	31 c0                	xor    %eax,%eax
   1fdcb:	e8 c0 f3 ff ff       	call   1f190 <message_fatal>
   1fdd0:	4c 89 ff             	mov    %r15,%rdi
   1fdd3:	48 89 de             	mov    %rbx,%rsi
   1fdd6:	4c 89 f2             	mov    %r14,%rdx
   1fdd9:	5b                   	pop    %rbx
   1fdda:	41 5e                	pop    %r14
   1fddc:	41 5f                	pop    %r15
   1fdde:	e9 6d 23 fe ff       	jmp    2150 <memcpy@plt>
   1fde3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fdea:	84 00 00 00 00 00 

000000000001fdf0 <str_to_uint64>:
   1fdf0:	55                   	push   %rbp
   1fdf1:	41 57                	push   %r15
   1fdf3:	41 56                	push   %r14
   1fdf5:	41 55                	push   %r13
   1fdf7:	41 54                	push   %r12
   1fdf9:	53                   	push   %rbx
   1fdfa:	50                   	push   %rax
   1fdfb:	48 89 cb             	mov    %rcx,%rbx
   1fdfe:	49 89 d6             	mov    %rdx,%r14
   1fe01:	49 89 f4             	mov    %rsi,%r12
   1fe04:	49 89 ff             	mov    %rdi,%r15
   1fe07:	eb 0a                	jmp    1fe13 <str_to_uint64+0x23>
   1fe09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fe10:	49 ff c4             	inc    %r12
   1fe13:	41 0f b6 2c 24       	movzbl (%r12),%ebp
   1fe18:	83 fd 20             	cmp    $0x20,%ebp
   1fe1b:	74 f3                	je     1fe10 <str_to_uint64+0x20>
   1fe1d:	83 fd 09             	cmp    $0x9,%ebp
   1fe20:	74 ee                	je     1fe10 <str_to_uint64+0x20>
   1fe22:	48 8d 35 3f c3 00 00 	lea    0xc33f(%rip),%rsi        # 2c168 <message_filters_to_str.bcj_names+0x1538>
   1fe29:	4c 89 e7             	mov    %r12,%rdi
   1fe2c:	e8 df 22 fe ff       	call   2110 <strcmp@plt>
   1fe31:	85 c0                	test   %eax,%eax
   1fe33:	0f 84 b0 00 00 00    	je     1fee9 <str_to_uint64+0xf9>
   1fe39:	40 80 c5 c6          	add    $0xc6,%bpl
   1fe3d:	40 80 fd f5          	cmp    $0xf5,%bpl
   1fe41:	77 11                	ja     1fe54 <str_to_uint64+0x64>
   1fe43:	48 8d 3d 22 c3 00 00 	lea    0xc322(%rip),%rdi        # 2c16c <message_filters_to_str.bcj_names+0x153c>
   1fe4a:	4c 89 e6             	mov    %r12,%rsi
   1fe4d:	31 c0                	xor    %eax,%eax
   1fe4f:	e8 3c f3 ff ff       	call   1f190 <message_fatal>
   1fe54:	49 ff c4             	inc    %r12
   1fe57:	45 31 ed             	xor    %r13d,%r13d
   1fe5a:	48 b8 99 99 99 99 99 	movabs $0x1999999999999999,%rax
   1fe61:	99 99 19 
   1fe64:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   1fe6b:	00 00 00 00 00 
   1fe70:	49 39 c5             	cmp    %rax,%r13
   1fe73:	0f 87 31 01 00 00    	ja     1ffaa <str_to_uint64+0x1ba>
   1fe79:	4d 01 ed             	add    %r13,%r13
   1fe7c:	4a 8d 0c ad 00 00 00 	lea    0x0(,%r13,4),%rcx
   1fe83:	00 
   1fe84:	4c 01 e9             	add    %r13,%rcx
   1fe87:	45 0f be 6c 24 ff    	movsbl -0x1(%r12),%r13d
   1fe8d:	41 83 c5 d0          	add    $0xffffffd0,%r13d
   1fe91:	49 01 cd             	add    %rcx,%r13
   1fe94:	0f 82 10 01 00 00    	jb     1ffaa <str_to_uint64+0x1ba>
   1fe9a:	41 0f b6 0c 24       	movzbl (%r12),%ecx
   1fe9f:	8d 51 d0             	lea    -0x30(%rcx),%edx
   1fea2:	49 ff c4             	inc    %r12
   1fea5:	80 fa 0a             	cmp    $0xa,%dl
   1fea8:	72 c6                	jb     1fe70 <str_to_uint64+0x80>
   1feaa:	8d 41 b9             	lea    -0x47(%rcx),%eax
   1fead:	83 f8 26             	cmp    $0x26,%eax
   1feb0:	77 46                	ja     1fef8 <str_to_uint64+0x108>
   1feb2:	48 ba 01 00 00 00 01 	movabs $0x100000001,%rdx
   1feb9:	00 00 00 
   1febc:	48 0f a3 c2          	bt     %rax,%rdx
   1fec0:	72 49                	jb     1ff0b <str_to_uint64+0x11b>
   1fec2:	48 ba 10 00 00 00 10 	movabs $0x1000000010,%rdx
   1fec9:	00 00 00 
   1fecc:	48 0f a3 c2          	bt     %rax,%rdx
   1fed0:	72 1f                	jb     1fef1 <str_to_uint64+0x101>
   1fed2:	48 ba 40 00 00 00 40 	movabs $0x4000000040,%rdx
   1fed9:	00 00 00 
   1fedc:	48 0f a3 c2          	bt     %rax,%rdx
   1fee0:	73 16                	jae    1fef8 <str_to_uint64+0x108>
   1fee2:	b8 00 00 10 00       	mov    $0x100000,%eax
   1fee7:	eb 27                	jmp    1ff10 <str_to_uint64+0x120>
   1fee9:	49 89 dd             	mov    %rbx,%r13
   1feec:	e9 d3 00 00 00       	jmp    1ffc4 <str_to_uint64+0x1d4>
   1fef1:	b8 00 04 00 00       	mov    $0x400,%eax
   1fef6:	eb 18                	jmp    1ff10 <str_to_uint64+0x120>
   1fef8:	85 c9                	test   %ecx,%ecx
   1fefa:	0f 84 a0 00 00 00    	je     1ffa0 <str_to_uint64+0x1b0>
   1ff00:	40 b5 01             	mov    $0x1,%bpl
   1ff03:	31 c0                	xor    %eax,%eax
   1ff05:	48 89 04 24          	mov    %rax,(%rsp)
   1ff09:	eb 0b                	jmp    1ff16 <str_to_uint64+0x126>
   1ff0b:	b8 00 00 00 40       	mov    $0x40000000,%eax
   1ff10:	48 89 04 24          	mov    %rax,(%rsp)
   1ff14:	31 ed                	xor    %ebp,%ebp
   1ff16:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   1ff1b:	74 45                	je     1ff62 <str_to_uint64+0x172>
   1ff1d:	48 8d 35 78 c2 00 00 	lea    0xc278(%rip),%rsi        # 2c19c <message_filters_to_str.bcj_names+0x156c>
   1ff24:	4c 89 e7             	mov    %r12,%rdi
   1ff27:	e8 e4 21 fe ff       	call   2110 <strcmp@plt>
   1ff2c:	85 c0                	test   %eax,%eax
   1ff2e:	74 32                	je     1ff62 <str_to_uint64+0x172>
   1ff30:	48 8d 35 a4 c0 00 00 	lea    0xc0a4(%rip),%rsi        # 2bfdb <message_filters_to_str.bcj_names+0x13ab>
   1ff37:	4c 89 e7             	mov    %r12,%rdi
   1ff3a:	e8 d1 21 fe ff       	call   2110 <strcmp@plt>
   1ff3f:	85 c0                	test   %eax,%eax
   1ff41:	74 1f                	je     1ff62 <str_to_uint64+0x172>
   1ff43:	48 8d 35 09 ae 00 00 	lea    0xae09(%rip),%rsi        # 2ad53 <message_filters_to_str.bcj_names+0x123>
   1ff4a:	4c 89 e7             	mov    %r12,%rdi
   1ff4d:	e8 be 21 fe ff       	call   2110 <strcmp@plt>
   1ff52:	85 c0                	test   %eax,%eax
   1ff54:	0f 95 c0             	setne  %al
   1ff57:	40 08 c5             	or     %al,%bpl
   1ff5a:	48 8b 2c 24          	mov    (%rsp),%rbp
   1ff5e:	75 0b                	jne    1ff6b <str_to_uint64+0x17b>
   1ff60:	eb 32                	jmp    1ff94 <str_to_uint64+0x1a4>
   1ff62:	40 84 ed             	test   %bpl,%bpl
   1ff65:	48 8b 2c 24          	mov    (%rsp),%rbp
   1ff69:	74 29                	je     1ff94 <str_to_uint64+0x1a4>
   1ff6b:	49 ff cc             	dec    %r12
   1ff6e:	48 8d 35 29 c2 00 00 	lea    0xc229(%rip),%rsi        # 2c19e <message_filters_to_str.bcj_names+0x156e>
   1ff75:	31 ed                	xor    %ebp,%ebp
   1ff77:	bf 01 00 00 00       	mov    $0x1,%edi
   1ff7c:	4c 89 e2             	mov    %r12,%rdx
   1ff7f:	31 c0                	xor    %eax,%eax
   1ff81:	e8 da f1 ff ff       	call   1f160 <message>
   1ff86:	48 8d 3d 2f c2 00 00 	lea    0xc22f(%rip),%rdi        # 2c1bc <message_filters_to_str.bcj_names+0x158c>
   1ff8d:	31 c0                	xor    %eax,%eax
   1ff8f:	e8 fc f1 ff ff       	call   1f190 <message_fatal>
   1ff94:	48 89 e8             	mov    %rbp,%rax
   1ff97:	49 f7 e5             	mul    %r13
   1ff9a:	70 0e                	jo     1ffaa <str_to_uint64+0x1ba>
   1ff9c:	4c 0f af ed          	imul   %rbp,%r13
   1ffa0:	4d 39 f5             	cmp    %r14,%r13
   1ffa3:	72 05                	jb     1ffaa <str_to_uint64+0x1ba>
   1ffa5:	49 39 dd             	cmp    %rbx,%r13
   1ffa8:	76 1a                	jbe    1ffc4 <str_to_uint64+0x1d4>
   1ffaa:	48 8d 3d 4c c2 00 00 	lea    0xc24c(%rip),%rdi        # 2c1fd <message_filters_to_str.bcj_names+0x15cd>
   1ffb1:	45 31 ed             	xor    %r13d,%r13d
   1ffb4:	4c 89 fe             	mov    %r15,%rsi
   1ffb7:	4c 89 f2             	mov    %r14,%rdx
   1ffba:	48 89 d9             	mov    %rbx,%rcx
   1ffbd:	31 c0                	xor    %eax,%eax
   1ffbf:	e8 cc f1 ff ff       	call   1f190 <message_fatal>
   1ffc4:	4c 89 e8             	mov    %r13,%rax
   1ffc7:	48 83 c4 08          	add    $0x8,%rsp
   1ffcb:	5b                   	pop    %rbx
   1ffcc:	41 5c                	pop    %r12
   1ffce:	41 5d                	pop    %r13
   1ffd0:	41 5e                	pop    %r14
   1ffd2:	41 5f                	pop    %r15
   1ffd4:	5d                   	pop    %rbp
   1ffd5:	c3                   	ret    
   1ffd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ffdd:	00 00 00 

000000000001ffe0 <round_up_to_mib>:
   1ffe0:	48 89 f8             	mov    %rdi,%rax
   1ffe3:	48 c1 e8 14          	shr    $0x14,%rax
   1ffe7:	81 e7 ff ff 0f 00    	and    $0xfffff,%edi
   1ffed:	48 83 ff 01          	cmp    $0x1,%rdi
   1fff1:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
   1fff5:	c3                   	ret    
   1fff6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fffd:	00 00 00 

0000000000020000 <uint64_to_str>:
   20000:	53                   	push   %rbx
   20001:	48 89 f9             	mov    %rdi,%rcx
   20004:	89 f0                	mov    %esi,%eax
   20006:	48 c1 e0 07          	shl    $0x7,%rax
   2000a:	48 8d 1d ef 83 01 00 	lea    0x183ef(%rip),%rbx        # 38400 <bufs>
   20011:	48 01 c3             	add    %rax,%rbx
   20014:	48 8d 15 b8 a6 00 00 	lea    0xa6b8(%rip),%rdx        # 2a6d3 <is_format_xz.magic+0x37b>
   2001b:	be 80 00 00 00       	mov    $0x80,%esi
   20020:	48 89 df             	mov    %rbx,%rdi
   20023:	31 c0                	xor    %eax,%eax
   20025:	e8 86 20 fe ff       	call   20b0 <snprintf@plt>
   2002a:	48 89 d8             	mov    %rbx,%rax
   2002d:	5b                   	pop    %rbx
   2002e:	c3                   	ret    
   2002f:	90                   	nop

0000000000020030 <uint64_to_nicestr>:
   20030:	55                   	push   %rbp
   20031:	41 57                	push   %r15
   20033:	41 56                	push   %r14
   20035:	53                   	push   %rbx
   20036:	48 83 ec 18          	sub    $0x18,%rsp
   2003a:	89 cd                	mov    %ecx,%ebp
   2003c:	49 89 fe             	mov    %rdi,%r14
   2003f:	44 89 c0             	mov    %r8d,%eax
   20042:	48 c1 e0 07          	shl    $0x7,%rax
   20046:	48 8d 1d b3 83 01 00 	lea    0x183b3(%rip),%rbx        # 38400 <bufs>
   2004d:	48 01 c3             	add    %rax,%rbx
   20050:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   20055:	48 c7 44 24 08 80 00 	movq   $0x80,0x8(%rsp)
   2005c:	00 00 
   2005e:	85 f6                	test   %esi,%esi
   20060:	0f 94 c0             	sete   %al
   20063:	48 81 ff 10 27 00 00 	cmp    $0x2710,%rdi
   2006a:	0f 92 c1             	setb   %cl
   2006d:	84 c1                	test   %al,%cl
   2006f:	0f 85 81 00 00 00    	jne    200f6 <uint64_to_nicestr+0xc6>
   20075:	85 d2                	test   %edx,%edx
   20077:	0f 84 79 00 00 00    	je     200f6 <uint64_to_nicestr+0xc6>
   2007d:	4c 89 f0             	mov    %r14,%rax
   20080:	48 d1 e8             	shr    %rax
   20083:	44 89 f1             	mov    %r14d,%ecx
   20086:	83 e1 01             	and    $0x1,%ecx
   20089:	48 09 c1             	or     %rax,%rcx
   2008c:	4d 85 f6             	test   %r14,%r14
   2008f:	49 0f 49 ce          	cmovns %r14,%rcx
   20093:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
   20098:	66 0f 28 c1          	movapd %xmm1,%xmm0
   2009c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   200a0:	78 04                	js     200a6 <uint64_to_nicestr+0x76>
   200a2:	66 0f 28 c1          	movapd %xmm1,%xmm0
   200a6:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   200ac:	f2 0f 10 0d a4 c0 00 	movsd  0xc0a4(%rip),%xmm1        # 2c158 <message_filters_to_str.bcj_names+0x1528>
   200b3:	00 
   200b4:	f2 0f 10 15 a4 c0 00 	movsd  0xc0a4(%rip),%xmm2        # 2c160 <message_filters_to_str.bcj_names+0x1530>
   200bb:	00 
   200bc:	eb 05                	jmp    200c3 <uint64_to_nicestr+0x93>
   200be:	66 90                	xchg   %ax,%ax
   200c0:	49 ff c7             	inc    %r15
   200c3:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
   200c7:	41 39 f7             	cmp    %esi,%r15d
   200ca:	72 f4                	jb     200c0 <uint64_to_nicestr+0x90>
   200cc:	66 0f 2f c2          	comisd %xmm2,%xmm0
   200d0:	0f 97 c0             	seta   %al
   200d3:	41 39 d7             	cmp    %edx,%r15d
   200d6:	73 04                	jae    200dc <uint64_to_nicestr+0xac>
   200d8:	84 c0                	test   %al,%al
   200da:	75 e4                	jne    200c0 <uint64_to_nicestr+0x90>
   200dc:	48 8d 15 53 c1 00 00 	lea    0xc153(%rip),%rdx        # 2c236 <message_filters_to_str.bcj_names+0x1606>
   200e3:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   200e8:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   200ed:	b0 01                	mov    $0x1,%al
   200ef:	e8 7c 00 00 00       	call   20170 <my_snprintf>
   200f4:	eb 1e                	jmp    20114 <uint64_to_nicestr+0xe4>
   200f6:	48 8d 15 c2 bf 00 00 	lea    0xbfc2(%rip),%rdx        # 2c0bf <message_filters_to_str.bcj_names+0x148f>
   200fd:	45 31 ff             	xor    %r15d,%r15d
   20100:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   20105:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   2010a:	44 89 f1             	mov    %r14d,%ecx
   2010d:	31 c0                	xor    %eax,%eax
   2010f:	e8 5c 00 00 00       	call   20170 <my_snprintf>
   20114:	48 8d 05 45 c1 00 00 	lea    0xc145(%rip),%rax        # 2c260 <uint64_to_nicestr.suffix>
   2011b:	4a 8d 0c b8          	lea    (%rax,%r15,4),%rcx
   2011f:	48 8d 15 b2 a9 00 00 	lea    0xa9b2(%rip),%rdx        # 2aad8 <is_format_xz.magic+0x780>
   20126:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2012b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   20130:	31 c0                	xor    %eax,%eax
   20132:	e8 39 00 00 00       	call   20170 <my_snprintf>
   20137:	49 81 fe 10 27 00 00 	cmp    $0x2710,%r14
   2013e:	72 20                	jb     20160 <uint64_to_nicestr+0x130>
   20140:	40 84 ed             	test   %bpl,%bpl
   20143:	74 1b                	je     20160 <uint64_to_nicestr+0x130>
   20145:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   2014a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2014f:	48 8d 15 e5 c0 00 00 	lea    0xc0e5(%rip),%rdx        # 2c23b <message_filters_to_str.bcj_names+0x160b>
   20156:	4c 89 f1             	mov    %r14,%rcx
   20159:	31 c0                	xor    %eax,%eax
   2015b:	e8 50 1f fe ff       	call   20b0 <snprintf@plt>
   20160:	48 89 d8             	mov    %rbx,%rax
   20163:	48 83 c4 18          	add    $0x18,%rsp
   20167:	5b                   	pop    %rbx
   20168:	41 5e                	pop    %r14
   2016a:	41 5f                	pop    %r15
   2016c:	5d                   	pop    %rbp
   2016d:	c3                   	ret    
   2016e:	66 90                	xchg   %ax,%ax

0000000000020170 <my_snprintf>:
   20170:	41 56                	push   %r14
   20172:	53                   	push   %rbx
   20173:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   2017a:	48 89 f3             	mov    %rsi,%rbx
   2017d:	49 89 fe             	mov    %rdi,%r14
   20180:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   20185:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   2018a:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   2018f:	84 c0                	test   %al,%al
   20191:	74 37                	je     201ca <my_snprintf+0x5a>
   20193:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   20198:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   2019d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   201a2:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   201a9:	00 
   201aa:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   201b1:	00 
   201b2:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
   201b9:	00 
   201ba:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
   201c1:	00 
   201c2:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
   201c9:	00 
   201ca:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   201cf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   201d4:	48 8d 84 24 f0 00 00 	lea    0xf0(%rsp),%rax
   201db:	00 
   201dc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   201e1:	48 b8 18 00 00 00 30 	movabs $0x3000000018,%rax
   201e8:	00 00 00 
   201eb:	48 89 04 24          	mov    %rax,(%rsp)
   201ef:	48 8b 3f             	mov    (%rdi),%rdi
   201f2:	48 8b 36             	mov    (%rsi),%rsi
   201f5:	48 89 e1             	mov    %rsp,%rcx
   201f8:	e8 73 1e fe ff       	call   2070 <vsnprintf@plt>
   201fd:	85 c0                	test   %eax,%eax
   201ff:	78 12                	js     20213 <my_snprintf+0xa3>
   20201:	89 c1                	mov    %eax,%ecx
   20203:	48 39 0b             	cmp    %rcx,(%rbx)
   20206:	76 0b                	jbe    20213 <my_snprintf+0xa3>
   20208:	49 01 0e             	add    %rcx,(%r14)
   2020b:	48 8b 03             	mov    (%rbx),%rax
   2020e:	48 29 c8             	sub    %rcx,%rax
   20211:	eb 02                	jmp    20215 <my_snprintf+0xa5>
   20213:	31 c0                	xor    %eax,%eax
   20215:	48 89 03             	mov    %rax,(%rbx)
   20218:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   2021f:	5b                   	pop    %rbx
   20220:	41 5e                	pop    %r14
   20222:	c3                   	ret    
   20223:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   2022a:	84 00 00 00 00 00 

0000000000020230 <is_empty_filename>:
   20230:	53                   	push   %rbx
   20231:	0f b6 1f             	movzbl (%rdi),%ebx
   20234:	84 db                	test   %bl,%bl
   20236:	74 07                	je     2023f <is_empty_filename+0xf>
   20238:	84 db                	test   %bl,%bl
   2023a:	0f 94 c0             	sete   %al
   2023d:	5b                   	pop    %rbx
   2023e:	c3                   	ret    
   2023f:	48 8d 3d fe bf 00 00 	lea    0xbffe(%rip),%rdi        # 2c244 <message_filters_to_str.bcj_names+0x1614>
   20246:	31 c0                	xor    %eax,%eax
   20248:	e8 33 ef ff ff       	call   1f180 <message_error>
   2024d:	84 db                	test   %bl,%bl
   2024f:	0f 94 c0             	sete   %al
   20252:	5b                   	pop    %rbx
   20253:	c3                   	ret    
   20254:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   2025b:	00 00 00 00 00 

0000000000020260 <is_tty_stdin>:
   20260:	31 c0                	xor    %eax,%eax
   20262:	c3                   	ret    
   20263:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   2026a:	84 00 00 00 00 00 

0000000000020270 <is_tty_stdout>:
   20270:	31 c0                	xor    %eax,%eax
   20272:	c3                   	ret    
   20273:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2027a:	00 00 00 
   2027d:	0f 1f 00             	nopl   (%rax)

0000000000020280 <tuklib_open_stdxxx>:
   20280:	c3                   	ret    
   20281:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20288:	00 00 00 
   2028b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000020290 <tuklib_progname_init>:
   20290:	c3                   	ret    
   20291:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20298:	00 00 00 
   2029b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000202a0 <tuklib_exit>:
   202a0:	50                   	push   %rax
   202a1:	e8 1a 1f fe ff       	call   21c0 <exit@plt>
   202a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   202ad:	00 00 00 

00000000000202b0 <tuklib_cpucores>:
   202b0:	31 c0                	xor    %eax,%eax
   202b2:	c3                   	ret    
   202b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   202ba:	00 00 00 
   202bd:	0f 1f 00             	nopl   (%rax)

00000000000202c0 <tuklib_mbstr_width>:
   202c0:	53                   	push   %rbx
   202c1:	48 89 f3             	mov    %rsi,%rbx
   202c4:	e8 b7 1d fe ff       	call   2080 <strlen@plt>
   202c9:	48 85 db             	test   %rbx,%rbx
   202cc:	74 03                	je     202d1 <tuklib_mbstr_width+0x11>
   202ce:	48 89 03             	mov    %rax,(%rbx)
   202d1:	5b                   	pop    %rbx
   202d2:	c3                   	ret    
   202d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   202da:	00 00 00 
   202dd:	0f 1f 00             	nopl   (%rax)

00000000000202e0 <tuklib_mbstr_fw>:
   202e0:	53                   	push   %rbx
   202e1:	48 83 ec 10          	sub    $0x10,%rsp
   202e5:	89 f3                	mov    %esi,%ebx
   202e7:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   202ec:	e8 cf ff ff ff       	call   202c0 <tuklib_mbstr_width>
   202f1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   202f5:	74 20                	je     20317 <tuklib_mbstr_fw+0x37>
   202f7:	48 89 c1             	mov    %rax,%rcx
   202fa:	48 63 d3             	movslq %ebx,%rdx
   202fd:	31 c0                	xor    %eax,%eax
   202ff:	48 39 d1             	cmp    %rdx,%rcx
   20302:	77 0d                	ja     20311 <tuklib_mbstr_fw+0x31>
   20304:	31 c0                	xor    %eax,%eax
   20306:	48 29 ca             	sub    %rcx,%rdx
   20309:	48 0f 43 c2          	cmovae %rdx,%rax
   2030d:	03 44 24 08          	add    0x8(%rsp),%eax
   20311:	48 83 c4 10          	add    $0x10,%rsp
   20315:	5b                   	pop    %rbx
   20316:	c3                   	ret    
   20317:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2031c:	48 83 c4 10          	add    $0x10,%rsp
   20320:	5b                   	pop    %rbx
   20321:	c3                   	ret    
   20322:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20329:	00 00 00 
   2032c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020330 <spec_mem_init>:
   20330:	55                   	push   %rbp
   20331:	41 57                	push   %r15
   20333:	41 56                	push   %r14
   20335:	41 55                	push   %r13
   20337:	41 54                	push   %r12
   20339:	53                   	push   %rbx
   2033a:	50                   	push   %rax
   2033b:	41 89 d6             	mov    %edx,%r14d
   2033e:	89 f5                	mov    %esi,%ebp
   20340:	49 89 fc             	mov    %rdi,%r12
   20343:	83 3d de 3d 01 00 05 	cmpl   $0x5,0x13dde(%rip)        # 34128 <dbglvl>
   2034a:	7c 32                	jl     2037e <spec_mem_init+0x4e>
   2034c:	4c 39 25 ad 82 01 00 	cmp    %r12,0x182ad(%rip)        # 38600 <spec_fd>
   20353:	be 00 00 00 00       	mov    $0x0,%esi
   20358:	49 0f 45 f4          	cmovne %r12,%rsi
   2035c:	48 8d 3d 1a bf 00 00 	lea    0xbf1a(%rip),%rdi        # 2c27d <uint64_to_nicestr.suffix+0x1d>
   20363:	89 ea                	mov    %ebp,%edx
   20365:	44 89 f1             	mov    %r14d,%ecx
   20368:	31 c0                	xor    %eax,%eax
   2036a:	e8 31 1d fe ff       	call   20a0 <printf@plt>
   2036f:	48 8b 05 5a 3c 01 00 	mov    0x13c5a(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20376:	48 8b 38             	mov    (%rax),%rdi
   20379:	e8 f2 1d fe ff       	call   2170 <fflush@plt>
   2037e:	85 ed                	test   %ebp,%ebp
   20380:	0f 84 49 01 00 00    	je     204cf <spec_mem_init+0x19f>
   20386:	45 85 f6             	test   %r14d,%r14d
   20389:	0f 84 c9 00 00 00    	je     20458 <spec_mem_init+0x128>
   2038f:	45 31 f6             	xor    %r14d,%r14d
   20392:	eb 18                	jmp    203ac <spec_mem_init+0x7c>
   20394:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   2039b:	00 00 00 00 00 
   203a0:	41 ff c6             	inc    %r14d
   203a3:	41 39 ee             	cmp    %ebp,%r14d
   203a6:	0f 84 23 01 00 00    	je     204cf <spec_mem_init+0x19f>
   203ac:	44 89 f0             	mov    %r14d,%eax
   203af:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   203b3:	4d 8b 3c dc          	mov    (%r12,%rbx,8),%r15
   203b7:	0f 57 c0             	xorps  %xmm0,%xmm0
   203ba:	41 0f 11 44 dc 18    	movups %xmm0,0x18(%r12,%rbx,8)
   203c0:	41 0f 11 44 dc 08    	movups %xmm0,0x8(%r12,%rbx,8)
   203c6:	41 c7 44 dc 18 00 00 	movl   $0x0,0x18(%r12,%rbx,8)
   203cd:	00 00 
   203cf:	4d 85 ff             	test   %r15,%r15
   203d2:	0f 88 08 01 00 00    	js     204e0 <spec_mem_init+0x1b0>
   203d8:	4d 8d af 00 00 10 00 	lea    0x100000(%r15),%r13
   203df:	4c 89 ef             	mov    %r13,%rdi
   203e2:	e8 79 1d fe ff       	call   2160 <malloc@plt>
   203e7:	49 89 44 dc 20       	mov    %rax,0x20(%r12,%rbx,8)
   203ec:	48 85 c0             	test   %rax,%rax
   203ef:	0f 84 1a 01 00 00    	je     2050f <spec_mem_init+0x1df>
   203f5:	83 3d 2c 3d 01 00 05 	cmpl   $0x5,0x13d2c(%rip)        # 34128 <dbglvl>
   203fc:	7c 26                	jl     20424 <spec_mem_init+0xf4>
   203fe:	48 8d 3d 1f bf 00 00 	lea    0xbf1f(%rip),%rdi        # 2c324 <uint64_to_nicestr.suffix+0xc4>
   20405:	44 89 f6             	mov    %r14d,%esi
   20408:	4c 89 fa             	mov    %r15,%rdx
   2040b:	4c 89 e9             	mov    %r13,%rcx
   2040e:	31 c0                	xor    %eax,%eax
   20410:	e8 8b 1c fe ff       	call   20a0 <printf@plt>
   20415:	48 8b 05 b4 3b 01 00 	mov    0x13bb4(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2041c:	48 8b 38             	mov    (%rax),%rdi
   2041f:	e8 4c 1d fe ff       	call   2170 <fflush@plt>
   20424:	4d 85 ff             	test   %r15,%r15
   20427:	0f 84 73 ff ff ff    	je     203a0 <spec_mem_init+0x70>
   2042d:	49 8d 04 dc          	lea    (%r12,%rbx,8),%rax
   20431:	48 83 c0 20          	add    $0x20,%rax
   20435:	31 c9                	xor    %ecx,%ecx
   20437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2043e:	00 00 
   20440:	48 8b 10             	mov    (%rax),%rdx
   20443:	c6 04 0a 00          	movb   $0x0,(%rdx,%rcx,1)
   20447:	48 81 c1 00 04 00 00 	add    $0x400,%rcx
   2044e:	4c 39 f9             	cmp    %r15,%rcx
   20451:	7c ed                	jl     20440 <spec_mem_init+0x110>
   20453:	e9 48 ff ff ff       	jmp    203a0 <spec_mem_init+0x70>
   20458:	4c 89 e3             	mov    %r12,%rbx
   2045b:	45 31 f6             	xor    %r14d,%r14d
   2045e:	eb 0c                	jmp    2046c <spec_mem_init+0x13c>
   20460:	41 ff c6             	inc    %r14d
   20463:	48 83 c3 28          	add    $0x28,%rbx
   20467:	44 39 f5             	cmp    %r14d,%ebp
   2046a:	74 63                	je     204cf <spec_mem_init+0x19f>
   2046c:	4c 8b 3b             	mov    (%rbx),%r15
   2046f:	0f 57 c0             	xorps  %xmm0,%xmm0
   20472:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
   20476:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
   2047a:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   20481:	4d 85 ff             	test   %r15,%r15
   20484:	78 5a                	js     204e0 <spec_mem_init+0x1b0>
   20486:	4d 8d af 00 00 10 00 	lea    0x100000(%r15),%r13
   2048d:	4c 89 ef             	mov    %r13,%rdi
   20490:	e8 cb 1c fe ff       	call   2160 <malloc@plt>
   20495:	48 89 43 20          	mov    %rax,0x20(%rbx)
   20499:	48 85 c0             	test   %rax,%rax
   2049c:	74 71                	je     2050f <spec_mem_init+0x1df>
   2049e:	83 3d 83 3c 01 00 05 	cmpl   $0x5,0x13c83(%rip)        # 34128 <dbglvl>
   204a5:	7c b9                	jl     20460 <spec_mem_init+0x130>
   204a7:	48 8d 3d 76 be 00 00 	lea    0xbe76(%rip),%rdi        # 2c324 <uint64_to_nicestr.suffix+0xc4>
   204ae:	44 89 f6             	mov    %r14d,%esi
   204b1:	4c 89 fa             	mov    %r15,%rdx
   204b4:	4c 89 e9             	mov    %r13,%rcx
   204b7:	31 c0                	xor    %eax,%eax
   204b9:	e8 e2 1b fe ff       	call   20a0 <printf@plt>
   204be:	48 8b 05 0b 3b 01 00 	mov    0x13b0b(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   204c5:	48 8b 38             	mov    (%rax),%rdi
   204c8:	e8 a3 1c fe ff       	call   2170 <fflush@plt>
   204cd:	eb 91                	jmp    20460 <spec_mem_init+0x130>
   204cf:	31 c0                	xor    %eax,%eax
   204d1:	48 83 c4 08          	add    $0x8,%rsp
   204d5:	5b                   	pop    %rbx
   204d6:	41 5c                	pop    %r12
   204d8:	41 5d                	pop    %r13
   204da:	41 5e                	pop    %r14
   204dc:	41 5f                	pop    %r15
   204de:	5d                   	pop    %rbp
   204df:	c3                   	ret    
   204e0:	48 8b 05 11 3b 01 00 	mov    0x13b11(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   204e7:	48 8b 38             	mov    (%rax),%rdi
   204ea:	49 81 c7 00 00 10 00 	add    $0x100000,%r15
   204f1:	48 8d 35 b9 bd 00 00 	lea    0xbdb9(%rip),%rsi        # 2c2b1 <uint64_to_nicestr.suffix+0x51>
   204f8:	4c 89 fa             	mov    %r15,%rdx
   204fb:	44 89 f1             	mov    %r14d,%ecx
   204fe:	31 c0                	xor    %eax,%eax
   20500:	e8 2b 1c fe ff       	call   2130 <fprintf@plt>
   20505:	bf 01 00 00 00       	mov    $0x1,%edi
   2050a:	e8 b1 1c fe ff       	call   21c0 <exit@plt>
   2050f:	48 8b 05 e2 3a 01 00 	mov    0x13ae2(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20516:	48 8b 38             	mov    (%rax),%rdi
   20519:	48 8d 35 cc bd 00 00 	lea    0xbdcc(%rip),%rsi        # 2c2ec <uint64_to_nicestr.suffix+0x8c>
   20520:	4c 89 ea             	mov    %r13,%rdx
   20523:	44 89 f1             	mov    %r14d,%ecx
   20526:	4d 89 e0             	mov    %r12,%r8
   20529:	31 c0                	xor    %eax,%eax
   2052b:	e8 00 1c fe ff       	call   2130 <fprintf@plt>
   20530:	bf 01 00 00 00       	mov    $0x1,%edi
   20535:	e8 86 1c fe ff       	call   21c0 <exit@plt>
   2053a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020540 <spec_mem_sum>:
   20540:	41 57                	push   %r15
   20542:	41 56                	push   %r14
   20544:	41 55                	push   %r13
   20546:	41 54                	push   %r12
   20548:	53                   	push   %rbx
   20549:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   20550:	81 fa 00 02 00 00    	cmp    $0x200,%edx
   20556:	75 6f                	jne    205c7 <spec_mem_sum+0x87>
   20558:	48 89 f3             	mov    %rsi,%rbx
   2055b:	48 85 f6             	test   %rsi,%rsi
   2055e:	74 53                	je     205b3 <spec_mem_sum+0x73>
   20560:	49 89 fe             	mov    %rdi,%r14
   20563:	48 89 e7             	mov    %rsp,%rdi
   20566:	e8 f5 1e 00 00       	call   22460 <sha_init>
   2056b:	49 8b 46 08          	mov    0x8(%r14),%rax
   2056f:	48 85 c0             	test   %rax,%rax
   20572:	7e 34                	jle    205a8 <spec_mem_sum+0x68>
   20574:	41 bf ff ff ff 7f    	mov    $0x7fffffff,%r15d
   2057a:	45 31 ed             	xor    %r13d,%r13d
   2057d:	49 89 e4             	mov    %rsp,%r12
   20580:	4c 29 e8             	sub    %r13,%rax
   20583:	4c 39 f8             	cmp    %r15,%rax
   20586:	4c 0f 4c f8          	cmovl  %rax,%r15
   2058a:	49 8b 76 20          	mov    0x20(%r14),%rsi
   2058e:	4c 01 ee             	add    %r13,%rsi
   20591:	4c 89 e7             	mov    %r12,%rdi
   20594:	44 89 fa             	mov    %r15d,%edx
   20597:	e8 44 1f 00 00       	call   224e0 <sha_process>
   2059c:	4d 01 fd             	add    %r15,%r13
   2059f:	49 8b 46 08          	mov    0x8(%r14),%rax
   205a3:	49 39 c5             	cmp    %rax,%r13
   205a6:	7c d8                	jl     20580 <spec_mem_sum+0x40>
   205a8:	48 89 e7             	mov    %rsp,%rdi
   205ab:	48 89 de             	mov    %rbx,%rsi
   205ae:	e8 dd 24 00 00       	call   22a90 <sha_done>
   205b3:	48 89 d8             	mov    %rbx,%rax
   205b6:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
   205bd:	5b                   	pop    %rbx
   205be:	41 5c                	pop    %r12
   205c0:	41 5d                	pop    %r13
   205c2:	41 5e                	pop    %r14
   205c4:	41 5f                	pop    %r15
   205c6:	c3                   	ret    
   205c7:	48 8b 05 2a 3a 01 00 	mov    0x13a2a(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   205ce:	48 8b 08             	mov    (%rax),%rcx
   205d1:	48 8d 3d 7e bd 00 00 	lea    0xbd7e(%rip),%rdi        # 2c356 <uint64_to_nicestr.suffix+0xf6>
   205d8:	be 28 00 00 00       	mov    $0x28,%esi
   205dd:	ba 01 00 00 00       	mov    $0x1,%edx
   205e2:	e8 e9 1b fe ff       	call   21d0 <fwrite@plt>
   205e7:	bf 01 00 00 00       	mov    $0x1,%edi
   205ec:	e8 cf 1b fe ff       	call   21c0 <exit@plt>
   205f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   205f8:	0f 1f 84 00 00 00 00 
   205ff:	00 

0000000000020600 <spec_mem_load>:
   20600:	55                   	push   %rbp
   20601:	41 57                	push   %r15
   20603:	41 56                	push   %r14
   20605:	41 55                	push   %r13
   20607:	41 54                	push   %r12
   20609:	53                   	push   %rbx
   2060a:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
   20611:	44 89 cd             	mov    %r9d,%ebp
   20614:	4d 89 c6             	mov    %r8,%r14
   20617:	48 89 0c 24          	mov    %rcx,(%rsp)
   2061b:	89 54 24 10          	mov    %edx,0x10(%rsp)
   2061f:	41 89 f4             	mov    %esi,%r12d
   20622:	49 89 fd             	mov    %rdi,%r13
   20625:	4c 63 bc 24 38 01 00 	movslq 0x138(%rsp),%r15
   2062c:	00 
   2062d:	4c 89 ff             	mov    %r15,%rdi
   20630:	48 c1 ef 03          	shr    $0x3,%rdi
   20634:	e8 27 1b fe ff       	call   2160 <malloc@plt>
   20639:	48 85 c0             	test   %rax,%rax
   2063c:	0f 84 4c 05 00 00    	je     20b8e <spec_mem_load+0x58e>
   20642:	85 ed                	test   %ebp,%ebp
   20644:	0f 88 77 05 00 00    	js     20bc1 <spec_mem_load+0x5c1>
   2064a:	44 39 e5             	cmp    %r12d,%ebp
   2064d:	0f 83 6e 05 00 00    	jae    20bc1 <spec_mem_load+0x5c1>
   20653:	8b 54 24 10          	mov    0x10(%rsp),%edx
   20657:	85 d2                	test   %edx,%edx
   20659:	0f 88 77 05 00 00    	js     20bd6 <spec_mem_load+0x5d6>
   2065f:	44 39 e2             	cmp    %r12d,%edx
   20662:	0f 83 6e 05 00 00    	jae    20bd6 <spec_mem_load+0x5d6>
   20668:	48 89 c3             	mov    %rax,%rbx
   2066b:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   20670:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   20675:	48 8b 3c 24          	mov    (%rsp),%rdi
   20679:	31 f6                	xor    %esi,%esi
   2067b:	31 c0                	xor    %eax,%eax
   2067d:	e8 2e 1b fe ff       	call   21b0 <open@plt>
   20682:	85 c0                	test   %eax,%eax
   20684:	0f 88 74 05 00 00    	js     20bfe <spec_mem_load+0x5fe>
   2068a:	41 89 c4             	mov    %eax,%r12d
   2068d:	89 e8                	mov    %ebp,%eax
   2068f:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
   20693:	4e 8d 34 fd 08 00 00 	lea    0x8(,%r15,8),%r14
   2069a:	00 
   2069b:	4d 01 ee             	add    %r13,%r14
   2069e:	0f 57 c0             	xorps  %xmm0,%xmm0
   206a1:	43 0f 11 44 fd 08    	movups %xmm0,0x8(%r13,%r15,8)
   206a7:	43 c7 44 fd 18 00 00 	movl   $0x0,0x18(%r13,%r15,8)
   206ae:	00 00 
   206b0:	4b 8b 74 fd 20       	mov    0x20(%r13,%r15,8),%rsi
   206b5:	ba 00 00 e0 0f       	mov    $0xfe00000,%edx
   206ba:	44 89 e7             	mov    %r12d,%edi
   206bd:	e8 2e 1a fe ff       	call   20f0 <read@plt>
   206c2:	48 85 c0             	test   %rax,%rax
   206c5:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   206ca:	7e 5b                	jle    20727 <spec_mem_load+0x127>
   206cc:	4e 8d 3c fd 00 00 00 	lea    0x0(,%r15,8),%r15
   206d3:	00 
   206d4:	4d 01 ef             	add    %r13,%r15
   206d7:	4c 8d 2d 8b bd 00 00 	lea    0xbd8b(%rip),%r13        # 2c469 <uint64_to_nicestr.suffix+0x209>
   206de:	eb 16                	jmp    206f6 <spec_mem_load+0xf6>
   206e0:	49 03 77 20          	add    0x20(%r15),%rsi
   206e4:	ba 00 00 e0 0f       	mov    $0xfe00000,%edx
   206e9:	44 89 e7             	mov    %r12d,%edi
   206ec:	e8 ff 19 fe ff       	call   20f0 <read@plt>
   206f1:	48 85 c0             	test   %rax,%rax
   206f4:	7e 31                	jle    20727 <spec_mem_load+0x127>
   206f6:	49 8b 36             	mov    (%r14),%rsi
   206f9:	48 01 c6             	add    %rax,%rsi
   206fc:	49 89 36             	mov    %rsi,(%r14)
   206ff:	48 3d 00 00 e0 0f    	cmp    $0xfe00000,%rax
   20705:	72 29                	jb     20730 <spec_mem_load+0x130>
   20707:	48 8d 86 00 00 e0 0f 	lea    0xfe00000(%rsi),%rax
   2070e:	49 3b 07             	cmp    (%r15),%rax
   20711:	7e cd                	jle    206e0 <spec_mem_load+0xe0>
   20713:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   20718:	89 ee                	mov    %ebp,%esi
   2071a:	4c 89 ea             	mov    %r13,%rdx
   2071d:	e8 7e 05 00 00       	call   20ca0 <fd_grow>
   20722:	49 8b 36             	mov    (%r14),%rsi
   20725:	eb b9                	jmp    206e0 <spec_mem_load+0xe0>
   20727:	48 85 c0             	test   %rax,%rax
   2072a:	0f 88 2d 05 00 00    	js     20c5d <spec_mem_load+0x65d>
   20730:	44 89 e7             	mov    %r12d,%edi
   20733:	e8 98 19 fe ff       	call   20d0 <close@plt>
   20738:	8b 74 24 10          	mov    0x10(%rsp),%esi
   2073c:	89 f0                	mov    %esi,%eax
   2073e:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
   20742:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   20747:	48 8d 54 c8 08       	lea    0x8(%rax,%rcx,8),%rdx
   2074c:	0f 57 c0             	xorps  %xmm0,%xmm0
   2074f:	48 89 0c 24          	mov    %rcx,(%rsp)
   20753:	0f 11 44 c8 08       	movups %xmm0,0x8(%rax,%rcx,8)
   20758:	48 8b 05 a1 7e 01 00 	mov    0x17ea1(%rip),%rax        # 38600 <spec_fd>
   2075f:	48 63 cd             	movslq %ebp,%rcx
   20762:	48 c1 e1 03          	shl    $0x3,%rcx
   20766:	4c 8d 3c 89          	lea    (%rcx,%rcx,4),%r15
   2076a:	42 8b 4c 38 18       	mov    0x18(%rax,%r15,1),%ecx
   2076f:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   20773:	48 63 ce             	movslq %esi,%rcx
   20776:	48 c1 e1 03          	shl    $0x3,%rcx
   2077a:	4c 8d 2c 89          	lea    (%rcx,%rcx,4),%r13
   2077e:	46 8b 64 28 18       	mov    0x18(%rax,%r13,1),%r12d
   20783:	42 c7 44 28 18 01 00 	movl   $0x1,0x18(%rax,%r13,1)
   2078a:	00 00 
   2078c:	48 8b 05 6d 7e 01 00 	mov    0x17e6d(%rip),%rax        # 38600 <spec_fd>
   20793:	42 c7 44 38 18 01 00 	movl   $0x1,0x18(%rax,%r15,1)
   2079a:	00 00 
   2079c:	89 ef                	mov    %ebp,%edi
   2079e:	48 89 d5             	mov    %rdx,%rbp
   207a1:	e8 8a 21 fe ff       	call   2930 <uncompressStream>
   207a6:	48 8b 05 53 7e 01 00 	mov    0x17e53(%rip),%rax        # 38600 <spec_fd>
   207ad:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   207b1:	42 89 4c 38 18       	mov    %ecx,0x18(%rax,%r15,1)
   207b6:	48 8b 05 43 7e 01 00 	mov    0x17e43(%rip),%rax        # 38600 <spec_fd>
   207bd:	46 89 64 28 18       	mov    %r12d,0x18(%rax,%r13,1)
   207c2:	83 3d 5f 39 01 00 02 	cmpl   $0x2,0x1395f(%rip)        # 34128 <dbglvl>
   207c9:	7c 24                	jl     207ef <spec_mem_load+0x1ef>
   207cb:	49 8b 36             	mov    (%r14),%rsi
   207ce:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   207d2:	48 8d 3d b9 bc 00 00 	lea    0xbcb9(%rip),%rdi        # 2c492 <uint64_to_nicestr.suffix+0x232>
   207d9:	31 c0                	xor    %eax,%eax
   207db:	e8 c0 18 fe ff       	call   20a0 <printf@plt>
   207e0:	48 8b 05 e9 37 01 00 	mov    0x137e9(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   207e7:	48 8b 38             	mov    (%rax),%rdi
   207ea:	e8 81 19 fe ff       	call   2170 <fflush@plt>
   207ef:	0f 57 c0             	xorps  %xmm0,%xmm0
   207f2:	41 0f 11 06          	movups %xmm0,(%r14)
   207f6:	81 7c 24 20 00 02 00 	cmpl   $0x200,0x20(%rsp)
   207fd:	00 
   207fe:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   20803:	0f 85 2a 04 00 00    	jne    20c33 <spec_mem_load+0x633>
   20809:	4c 8b a4 24 30 01 00 	mov    0x130(%rsp),%r12
   20810:	00 
   20811:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   20816:	e8 45 1c 00 00       	call   22460 <sha_init>
   2081b:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2081f:	48 85 c0             	test   %rax,%rax
   20822:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
   20827:	7e 61                	jle    2088a <spec_mem_load+0x28a>
   20829:	48 8b 0c 24          	mov    (%rsp),%rcx
   2082d:	4d 8d 34 ce          	lea    (%r14,%rcx,8),%r14
   20831:	49 83 c6 20          	add    $0x20,%r14
   20835:	41 bd ff ff ff 7f    	mov    $0x7fffffff,%r13d
   2083b:	45 31 ff             	xor    %r15d,%r15d
   2083e:	66 90                	xchg   %ax,%ax
   20840:	4c 29 f8             	sub    %r15,%rax
   20843:	4c 39 e8             	cmp    %r13,%rax
   20846:	4c 0f 4c e8          	cmovl  %rax,%r13
   2084a:	49 8b 36             	mov    (%r14),%rsi
   2084d:	4c 01 fe             	add    %r15,%rsi
   20850:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   20855:	44 89 ea             	mov    %r13d,%edx
   20858:	e8 83 1c 00 00       	call   224e0 <sha_process>
   2085d:	4d 01 ef             	add    %r13,%r15
   20860:	48 8b 45 00          	mov    0x0(%rbp),%rax
   20864:	49 39 c7             	cmp    %rax,%r15
   20867:	7c d7                	jl     20840 <spec_mem_load+0x240>
   20869:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2086e:	48 89 de             	mov    %rbx,%rsi
   20871:	e8 1a 22 00 00       	call   22a90 <sha_done>
   20876:	4d 85 e4             	test   %r12,%r12
   20879:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
   2087e:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   20883:	75 1b                	jne    208a0 <spec_mem_load+0x2a0>
   20885:	e9 7e 02 00 00       	jmp    20b08 <spec_mem_load+0x508>
   2088a:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2088f:	48 89 de             	mov    %rbx,%rsi
   20892:	e8 f9 21 00 00       	call   22a90 <sha_done>
   20897:	4d 85 e4             	test   %r12,%r12
   2089a:	0f 84 68 02 00 00    	je     20b08 <spec_mem_load+0x508>
   208a0:	48 8b 04 24          	mov    (%rsp),%rax
   208a4:	4d 8d 34 c6          	lea    (%r14,%rax,8),%r14
   208a8:	49 83 c6 10          	add    $0x10,%r14
   208ac:	ba 03 00 00 00       	mov    $0x3,%edx
   208b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   208b8:	0f 1f 84 00 00 00 00 
   208bf:	00 
   208c0:	41 0f b6 44 14 fd    	movzbl -0x3(%r12,%rdx,1),%eax
   208c6:	0f b6 4c 13 fd       	movzbl -0x3(%rbx,%rdx,1),%ecx
   208cb:	38 c8                	cmp    %cl,%al
   208cd:	0f 85 07 02 00 00    	jne    20ada <spec_mem_load+0x4da>
   208d3:	41 0f b6 44 14 fe    	movzbl -0x2(%r12,%rdx,1),%eax
   208d9:	0f b6 4c 13 fe       	movzbl -0x2(%rbx,%rdx,1),%ecx
   208de:	38 c8                	cmp    %cl,%al
   208e0:	0f 85 fa 01 00 00    	jne    20ae0 <spec_mem_load+0x4e0>
   208e6:	41 0f b6 44 14 ff    	movzbl -0x1(%r12,%rdx,1),%eax
   208ec:	0f b6 4c 13 ff       	movzbl -0x1(%rbx,%rdx,1),%ecx
   208f1:	38 c8                	cmp    %cl,%al
   208f3:	0f 85 ed 01 00 00    	jne    20ae6 <spec_mem_load+0x4e6>
   208f9:	41 0f b6 04 14       	movzbl (%r12,%rdx,1),%eax
   208fe:	0f b6 0c 13          	movzbl (%rbx,%rdx,1),%ecx
   20902:	38 c8                	cmp    %cl,%al
   20904:	0f 85 df 01 00 00    	jne    20ae9 <spec_mem_load+0x4e9>
   2090a:	48 83 c2 04          	add    $0x4,%rdx
   2090e:	48 83 fa 43          	cmp    $0x43,%rdx
   20912:	75 ac                	jne    208c0 <spec_mem_load+0x2c0>
   20914:	83 3d 0d 38 01 00 02 	cmpl   $0x2,0x1380d(%rip)        # 34128 <dbglvl>
   2091b:	7c 22                	jl     2093f <spec_mem_load+0x33f>
   2091d:	48 8d 3d ee bb 00 00 	lea    0xbbee(%rip),%rdi        # 2c512 <uint64_to_nicestr.suffix+0x2b2>
   20924:	be 00 02 00 00       	mov    $0x200,%esi
   20929:	31 c0                	xor    %eax,%eax
   2092b:	e8 70 17 fe ff       	call   20a0 <printf@plt>
   20930:	48 8b 05 99 36 01 00 	mov    0x13699(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20937:	48 8b 38             	mov    (%rax),%rdi
   2093a:	e8 31 18 fe ff       	call   2170 <fflush@plt>
   2093f:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   20943:	4c 39 ff             	cmp    %r15,%rdi
   20946:	7e 3c                	jle    20984 <spec_mem_load+0x384>
   20948:	49 89 ec             	mov    %rbp,%r12
   2094b:	83 3d d6 37 01 00 02 	cmpl   $0x2,0x137d6(%rip)        # 34128 <dbglvl>
   20952:	7c 20                	jl     20974 <spec_mem_load+0x374>
   20954:	48 8d 3d eb bb 00 00 	lea    0xbbeb(%rip),%rdi        # 2c546 <uint64_to_nicestr.suffix+0x2e6>
   2095b:	4c 89 fe             	mov    %r15,%rsi
   2095e:	31 c0                	xor    %eax,%eax
   20960:	e8 3b 17 fe ff       	call   20a0 <printf@plt>
   20965:	48 8b 05 64 36 01 00 	mov    0x13664(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2096c:	48 8b 38             	mov    (%rax),%rdi
   2096f:	e8 fc 17 fe ff       	call   2170 <fflush@plt>
   20974:	4d 89 3c 24          	mov    %r15,(%r12)
   20978:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   2097f:	e9 83 00 00 00       	jmp    20a07 <spec_mem_load+0x407>
   20984:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   2098b:	7d 7a                	jge    20a07 <spec_mem_load+0x407>
   2098d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   20992:	48 8b 0c 24          	mov    (%rsp),%rcx
   20996:	4c 8d 34 c8          	lea    (%rax,%rcx,8),%r14
   2099a:	49 83 c6 20          	add    $0x20,%r14
   2099e:	4c 8b 25 2b 36 01 00 	mov    0x1362b(%rip),%r12        # 33fd0 <stdout@GLIBC_2.2.5>
   209a5:	eb 2a                	jmp    209d1 <spec_mem_load+0x3d1>
   209a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   209ae:	00 00 
   209b0:	49 8b 36             	mov    (%r14),%rsi
   209b3:	48 01 f7             	add    %rsi,%rdi
   209b6:	4c 89 ea             	mov    %r13,%rdx
   209b9:	e8 92 17 fe ff       	call   2150 <memcpy@plt>
   209be:	48 89 e8             	mov    %rbp,%rax
   209c1:	4c 03 6d 00          	add    0x0(%rbp),%r13
   209c5:	4c 89 6d 00          	mov    %r13,0x0(%rbp)
   209c9:	4c 89 ef             	mov    %r13,%rdi
   209cc:	4d 39 fd             	cmp    %r15,%r13
   209cf:	7d 36                	jge    20a07 <spec_mem_load+0x407>
   209d1:	4d 89 fd             	mov    %r15,%r13
   209d4:	49 29 fd             	sub    %rdi,%r13
   209d7:	49 39 fd             	cmp    %rdi,%r13
   209da:	4c 0f 4d ef          	cmovge %rdi,%r13
   209de:	83 3d 43 37 01 00 04 	cmpl   $0x4,0x13743(%rip)        # 34128 <dbglvl>
   209e5:	7c c9                	jl     209b0 <spec_mem_load+0x3b0>
   209e7:	48 8d 3d 97 bb 00 00 	lea    0xbb97(%rip),%rdi        # 2c585 <uint64_to_nicestr.suffix+0x325>
   209ee:	4c 89 ee             	mov    %r13,%rsi
   209f1:	31 c0                	xor    %eax,%eax
   209f3:	e8 a8 16 fe ff       	call   20a0 <printf@plt>
   209f8:	49 8b 3c 24          	mov    (%r12),%rdi
   209fc:	e8 6f 17 fe ff       	call   2170 <fflush@plt>
   20a01:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   20a05:	eb a9                	jmp    209b0 <spec_mem_load+0x3b0>
   20a07:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   20a0c:	e8 4f 1a 00 00       	call   22460 <sha_init>
   20a11:	48 8b 45 00          	mov    0x0(%rbp),%rax
   20a15:	48 85 c0             	test   %rax,%rax
   20a18:	7e 4e                	jle    20a68 <spec_mem_load+0x468>
   20a1a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20a1f:	48 8b 14 24          	mov    (%rsp),%rdx
   20a23:	4c 8d 2c d1          	lea    (%rcx,%rdx,8),%r13
   20a27:	49 83 c5 20          	add    $0x20,%r13
   20a2b:	41 be ff ff ff 7f    	mov    $0x7fffffff,%r14d
   20a31:	45 31 ff             	xor    %r15d,%r15d
   20a34:	4c 8d 64 24 28       	lea    0x28(%rsp),%r12
   20a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20a40:	4c 29 f8             	sub    %r15,%rax
   20a43:	4c 39 f0             	cmp    %r14,%rax
   20a46:	4c 0f 4c f0          	cmovl  %rax,%r14
   20a4a:	49 8b 75 00          	mov    0x0(%r13),%rsi
   20a4e:	4c 01 fe             	add    %r15,%rsi
   20a51:	4c 89 e7             	mov    %r12,%rdi
   20a54:	44 89 f2             	mov    %r14d,%edx
   20a57:	e8 84 1a 00 00       	call   224e0 <sha_process>
   20a5c:	4d 01 f7             	add    %r14,%r15
   20a5f:	48 8b 45 00          	mov    0x0(%rbp),%rax
   20a63:	49 39 c7             	cmp    %rax,%r15
   20a66:	7c d8                	jl     20a40 <spec_mem_load+0x440>
   20a68:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   20a6d:	48 89 de             	mov    %rbx,%rsi
   20a70:	e8 1b 20 00 00       	call   22a90 <sha_done>
   20a75:	48 8d 3d 20 bb 00 00 	lea    0xbb20(%rip),%rdi        # 2c59c <uint64_to_nicestr.suffix+0x33c>
   20a7c:	be 00 02 00 00       	mov    $0x200,%esi
   20a81:	31 c0                	xor    %eax,%eax
   20a83:	e8 18 16 fe ff       	call   20a0 <printf@plt>
   20a88:	48 8b 05 41 35 01 00 	mov    0x13541(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20a8f:	4c 8b 30             	mov    (%rax),%r14
   20a92:	4c 8d 3d 4e 9e 00 00 	lea    0x9e4e(%rip),%r15        # 2a8e7 <is_format_xz.magic+0x58f>
   20a99:	45 31 e4             	xor    %r12d,%r12d
   20a9c:	0f 1f 40 00          	nopl   0x0(%rax)
   20aa0:	42 0f b6 14 23       	movzbl (%rbx,%r12,1),%edx
   20aa5:	4c 89 f7             	mov    %r14,%rdi
   20aa8:	4c 89 fe             	mov    %r15,%rsi
   20aab:	31 c0                	xor    %eax,%eax
   20aad:	e8 7e 16 fe ff       	call   2130 <fprintf@plt>
   20ab2:	49 ff c4             	inc    %r12
   20ab5:	49 83 fc 40          	cmp    $0x40,%r12
   20ab9:	75 e5                	jne    20aa0 <spec_mem_load+0x4a0>
   20abb:	bf 0a 00 00 00       	mov    $0xa,%edi
   20ac0:	e8 7b 15 fe ff       	call   2040 <putchar@plt>
   20ac5:	48 89 d8             	mov    %rbx,%rax
   20ac8:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
   20acf:	5b                   	pop    %rbx
   20ad0:	41 5c                	pop    %r12
   20ad2:	41 5d                	pop    %r13
   20ad4:	41 5e                	pop    %r14
   20ad6:	41 5f                	pop    %r15
   20ad8:	5d                   	pop    %rbp
   20ad9:	c3                   	ret    
   20ada:	48 83 c2 fd          	add    $0xfffffffffffffffd,%rdx
   20ade:	eb 09                	jmp    20ae9 <spec_mem_load+0x4e9>
   20ae0:	48 83 c2 fe          	add    $0xfffffffffffffffe,%rdx
   20ae4:	eb 03                	jmp    20ae9 <spec_mem_load+0x4e9>
   20ae6:	48 ff ca             	dec    %rdx
   20ae9:	44 0f b6 c1          	movzbl %cl,%r8d
   20aed:	0f b6 c8             	movzbl %al,%ecx
   20af0:	48 8b 05 01 35 01 00 	mov    0x13501(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20af7:	48 8b 38             	mov    (%rax),%rdi
   20afa:	48 8d 35 28 c4 00 00 	lea    0xc428(%rip),%rsi        # 2cf29 <uint64_to_nicestr.suffix+0xcc9>
   20b01:	31 c0                	xor    %eax,%eax
   20b03:	e8 28 16 fe ff       	call   2130 <fprintf@plt>
   20b08:	4c 8b 35 e9 34 01 00 	mov    0x134e9(%rip),%r14        # 33ff8 <stderr@GLIBC_2.2.5>
   20b0f:	49 8b 3e             	mov    (%r14),%rdi
   20b12:	48 8d 35 a7 b9 00 00 	lea    0xb9a7(%rip),%rsi        # 2c4c0 <uint64_to_nicestr.suffix+0x260>
   20b19:	ba 00 02 00 00       	mov    $0x200,%edx
   20b1e:	31 c0                	xor    %eax,%eax
   20b20:	e8 0b 16 fe ff       	call   2130 <fprintf@plt>
   20b25:	49 8b 0e             	mov    (%r14),%rcx
   20b28:	48 8d 3d 32 28 00 00 	lea    0x2832(%rip),%rdi        # 23361 <_IO_stdin_used+0x361>
   20b2f:	be 0d 00 00 00       	mov    $0xd,%esi
   20b34:	ba 01 00 00 00       	mov    $0x1,%edx
   20b39:	e8 92 16 fe ff       	call   21d0 <fwrite@plt>
   20b3e:	49 8b 3e             	mov    (%r14),%rdi
   20b41:	48 89 de             	mov    %rbx,%rsi
   20b44:	ba 00 02 00 00       	mov    $0x200,%edx
   20b49:	e8 12 03 00 00       	call   20e60 <print_sum>
   20b4e:	49 8b 0e             	mov    (%r14),%rcx
   20b51:	48 8d 3d ab b9 00 00 	lea    0xb9ab(%rip),%rdi        # 2c503 <uint64_to_nicestr.suffix+0x2a3>
   20b58:	be 0e 00 00 00       	mov    $0xe,%esi
   20b5d:	ba 01 00 00 00       	mov    $0x1,%edx
   20b62:	e8 69 16 fe ff       	call   21d0 <fwrite@plt>
   20b67:	49 8b 3e             	mov    (%r14),%rdi
   20b6a:	4c 89 e6             	mov    %r12,%rsi
   20b6d:	ba 00 02 00 00       	mov    $0x200,%edx
   20b72:	e8 e9 02 00 00       	call   20e60 <print_sum>
   20b77:	49 8b 36             	mov    (%r14),%rsi
   20b7a:	bf 0a 00 00 00       	mov    $0xa,%edi
   20b7f:	e8 5c 15 fe ff       	call   20e0 <fputc@plt>
   20b84:	bf 01 00 00 00       	mov    $0x1,%edi
   20b89:	e8 32 16 fe ff       	call   21c0 <exit@plt>
   20b8e:	48 8b 05 63 34 01 00 	mov    0x13463(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20b95:	48 8b 38             	mov    (%rax),%rdi
   20b98:	41 8d 57 07          	lea    0x7(%r15),%edx
   20b9c:	45 85 ff             	test   %r15d,%r15d
   20b9f:	41 0f 49 d7          	cmovns %r15d,%edx
   20ba3:	c1 fa 03             	sar    $0x3,%edx
   20ba6:	48 8d 35 d2 b7 00 00 	lea    0xb7d2(%rip),%rsi        # 2c37f <uint64_to_nicestr.suffix+0x11f>
   20bad:	44 89 f9             	mov    %r15d,%ecx
   20bb0:	31 c0                	xor    %eax,%eax
   20bb2:	e8 79 15 fe ff       	call   2130 <fprintf@plt>
   20bb7:	bf 01 00 00 00       	mov    $0x1,%edi
   20bbc:	e8 ff 15 fe ff       	call   21c0 <exit@plt>
   20bc1:	48 8b 05 30 34 01 00 	mov    0x13430(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20bc8:	48 8b 38             	mov    (%rax),%rdi
   20bcb:	48 8d 35 e7 b7 00 00 	lea    0xb7e7(%rip),%rsi        # 2c3b9 <uint64_to_nicestr.suffix+0x159>
   20bd2:	89 ea                	mov    %ebp,%edx
   20bd4:	eb 11                	jmp    20be7 <spec_mem_load+0x5e7>
   20bd6:	48 8b 05 1b 34 01 00 	mov    0x1341b(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20bdd:	48 8b 38             	mov    (%rax),%rdi
   20be0:	48 8d 35 1f b8 00 00 	lea    0xb81f(%rip),%rsi        # 2c406 <uint64_to_nicestr.suffix+0x1a6>
   20be7:	4c 89 e9             	mov    %r13,%rcx
   20bea:	45 89 e0             	mov    %r12d,%r8d
   20bed:	31 c0                	xor    %eax,%eax
   20bef:	e8 3c 15 fe ff       	call   2130 <fprintf@plt>
   20bf4:	bf 01 00 00 00       	mov    $0x1,%edi
   20bf9:	e8 c2 15 fe ff       	call   21c0 <exit@plt>
   20bfe:	48 8b 05 f3 33 01 00 	mov    0x133f3(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20c05:	48 8b 18             	mov    (%rax),%rbx
   20c08:	e8 43 14 fe ff       	call   2050 <__errno_location@plt>
   20c0d:	8b 38                	mov    (%rax),%edi
   20c0f:	e8 cc 15 fe ff       	call   21e0 <strerror@plt>
   20c14:	48 8d 35 36 b8 00 00 	lea    0xb836(%rip),%rsi        # 2c451 <uint64_to_nicestr.suffix+0x1f1>
   20c1b:	48 89 df             	mov    %rbx,%rdi
   20c1e:	48 8b 14 24          	mov    (%rsp),%rdx
   20c22:	48 89 c1             	mov    %rax,%rcx
   20c25:	31 c0                	xor    %eax,%eax
   20c27:	e8 04 15 fe ff       	call   2130 <fprintf@plt>
   20c2c:	31 ff                	xor    %edi,%edi
   20c2e:	e8 8d 15 fe ff       	call   21c0 <exit@plt>
   20c33:	48 8b 05 be 33 01 00 	mov    0x133be(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20c3a:	48 8b 08             	mov    (%rax),%rcx
   20c3d:	48 8d 3d 12 b7 00 00 	lea    0xb712(%rip),%rdi        # 2c356 <uint64_to_nicestr.suffix+0xf6>
   20c44:	be 28 00 00 00       	mov    $0x28,%esi
   20c49:	ba 01 00 00 00       	mov    $0x1,%edx
   20c4e:	e8 7d 15 fe ff       	call   21d0 <fwrite@plt>
   20c53:	bf 01 00 00 00       	mov    $0x1,%edi
   20c58:	e8 63 15 fe ff       	call   21c0 <exit@plt>
   20c5d:	48 8b 05 94 33 01 00 	mov    0x13394(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20c64:	48 8b 18             	mov    (%rax),%rbx
   20c67:	e8 e4 13 fe ff       	call   2050 <__errno_location@plt>
   20c6c:	8b 38                	mov    (%rax),%edi
   20c6e:	e8 6d 15 fe ff       	call   21e0 <strerror@plt>
   20c73:	48 8d 35 fd b7 00 00 	lea    0xb7fd(%rip),%rsi        # 2c477 <uint64_to_nicestr.suffix+0x217>
   20c7a:	48 89 df             	mov    %rbx,%rdi
   20c7d:	48 8b 14 24          	mov    (%rsp),%rdx
   20c81:	48 89 c1             	mov    %rax,%rcx
   20c84:	31 c0                	xor    %eax,%eax
   20c86:	e8 a5 14 fe ff       	call   2130 <fprintf@plt>
   20c8b:	bf 01 00 00 00       	mov    $0x1,%edi
   20c90:	e8 2b 15 fe ff       	call   21c0 <exit@plt>
   20c95:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   20c9c:	00 00 00 00 

0000000000020ca0 <fd_grow>:
   20ca0:	55                   	push   %rbp
   20ca1:	41 57                	push   %r15
   20ca3:	41 56                	push   %r14
   20ca5:	53                   	push   %rbx
   20ca6:	50                   	push   %rax
   20ca7:	49 89 d6             	mov    %rdx,%r14
   20caa:	89 f5                	mov    %esi,%ebp
   20cac:	48 89 fb             	mov    %rdi,%rbx
   20caf:	89 f0                	mov    %esi,%eax
   20cb1:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
   20cb5:	4a 8b 34 ff          	mov    (%rdi,%r15,8),%rsi
   20cb9:	4a 8b 7c ff 20       	mov    0x20(%rdi,%r15,8),%rdi
   20cbe:	48 01 f6             	add    %rsi,%rsi
   20cc1:	4a 89 34 fb          	mov    %rsi,(%rbx,%r15,8)
   20cc5:	e8 c6 14 fe ff       	call   2190 <realloc@plt>
   20cca:	4a 89 44 fb 20       	mov    %rax,0x20(%rbx,%r15,8)
   20ccf:	48 85 c0             	test   %rax,%rax
   20cd2:	74 47                	je     20d1b <fd_grow+0x7b>
   20cd4:	83 3d 4d 34 01 00 06 	cmpl   $0x6,0x1344d(%rip)        # 34128 <dbglvl>
   20cdb:	7c 33                	jl     20d10 <fd_grow+0x70>
   20cdd:	4a 8d 04 fb          	lea    (%rbx,%r15,8),%rax
   20ce1:	48 8b 08             	mov    (%rax),%rcx
   20ce4:	48 8d 3d 62 c3 00 00 	lea    0xc362(%rip),%rdi        # 2d04d <uint64_to_nicestr.suffix+0xded>
   20ceb:	89 ee                	mov    %ebp,%esi
   20ced:	48 89 da             	mov    %rbx,%rdx
   20cf0:	31 c0                	xor    %eax,%eax
   20cf2:	e8 a9 13 fe ff       	call   20a0 <printf@plt>
   20cf7:	48 8b 05 d2 32 01 00 	mov    0x132d2(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20cfe:	48 8b 38             	mov    (%rax),%rdi
   20d01:	48 83 c4 08          	add    $0x8,%rsp
   20d05:	5b                   	pop    %rbx
   20d06:	41 5e                	pop    %r14
   20d08:	41 5f                	pop    %r15
   20d0a:	5d                   	pop    %rbp
   20d0b:	e9 60 14 fe ff       	jmp    2170 <fflush@plt>
   20d10:	48 83 c4 08          	add    $0x8,%rsp
   20d14:	5b                   	pop    %rbx
   20d15:	41 5e                	pop    %r14
   20d17:	41 5f                	pop    %r15
   20d19:	5d                   	pop    %rbp
   20d1a:	c3                   	ret    
   20d1b:	48 8b 05 d6 32 01 00 	mov    0x132d6(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20d22:	4c 8b 38             	mov    (%rax),%r15
   20d25:	e8 26 13 fe ff       	call   2050 <__errno_location@plt>
   20d2a:	8b 38                	mov    (%rax),%edi
   20d2c:	e8 af 14 fe ff       	call   21e0 <strerror@plt>
   20d31:	48 8d 35 ea c2 00 00 	lea    0xc2ea(%rip),%rsi        # 2d022 <uint64_to_nicestr.suffix+0xdc2>
   20d38:	4c 89 ff             	mov    %r15,%rdi
   20d3b:	4c 89 f2             	mov    %r14,%rdx
   20d3e:	89 e9                	mov    %ebp,%ecx
   20d40:	49 89 d8             	mov    %rbx,%r8
   20d43:	49 89 c1             	mov    %rax,%r9
   20d46:	31 c0                	xor    %eax,%eax
   20d48:	e8 e3 13 fe ff       	call   2130 <fprintf@plt>
   20d4d:	bf 01 00 00 00       	mov    $0x1,%edi
   20d52:	e8 69 14 fe ff       	call   21c0 <exit@plt>
   20d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   20d5e:	00 00 

0000000000020d60 <spec_uncompress>:
   20d60:	55                   	push   %rbp
   20d61:	41 57                	push   %r15
   20d63:	41 56                	push   %r14
   20d65:	53                   	push   %rbx
   20d66:	50                   	push   %rax
   20d67:	48 8b 05 92 78 01 00 	mov    0x17892(%rip),%rax        # 38600 <spec_fd>
   20d6e:	48 63 ff             	movslq %edi,%rdi
   20d71:	48 8d 0c fd 00 00 00 	lea    0x0(,%rdi,8),%rcx
   20d78:	00 
   20d79:	48 8d 1c 89          	lea    (%rcx,%rcx,4),%rbx
   20d7d:	8b 6c 18 18          	mov    0x18(%rax,%rbx,1),%ebp
   20d81:	48 63 f6             	movslq %esi,%rsi
   20d84:	48 8d 0c f5 00 00 00 	lea    0x0(,%rsi,8),%rcx
   20d8b:	00 
   20d8c:	4c 8d 34 89          	lea    (%rcx,%rcx,4),%r14
   20d90:	46 8b 7c 30 18       	mov    0x18(%rax,%r14,1),%r15d
   20d95:	42 c7 44 30 18 01 00 	movl   $0x1,0x18(%rax,%r14,1)
   20d9c:	00 00 
   20d9e:	48 8b 05 5b 78 01 00 	mov    0x1785b(%rip),%rax        # 38600 <spec_fd>
   20da5:	c7 44 18 18 01 00 00 	movl   $0x1,0x18(%rax,%rbx,1)
   20dac:	00 
   20dad:	e8 7e 1b fe ff       	call   2930 <uncompressStream>
   20db2:	48 8b 05 47 78 01 00 	mov    0x17847(%rip),%rax        # 38600 <spec_fd>
   20db9:	89 6c 18 18          	mov    %ebp,0x18(%rax,%rbx,1)
   20dbd:	48 8b 05 3c 78 01 00 	mov    0x1783c(%rip),%rax        # 38600 <spec_fd>
   20dc4:	46 89 7c 30 18       	mov    %r15d,0x18(%rax,%r14,1)
   20dc9:	48 83 c4 08          	add    $0x8,%rsp
   20dcd:	5b                   	pop    %rbx
   20dce:	41 5e                	pop    %r14
   20dd0:	41 5f                	pop    %r15
   20dd2:	5d                   	pop    %rbp
   20dd3:	c3                   	ret    
   20dd4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   20ddb:	00 00 00 00 00 

0000000000020de0 <compare_sum>:
   20de0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20de5:	48 85 ff             	test   %rdi,%rdi
   20de8:	74 33                	je     20e1d <compare_sum+0x3d>
   20dea:	48 85 f6             	test   %rsi,%rsi
   20ded:	74 2e                	je     20e1d <compare_sum+0x3d>
   20def:	31 c0                	xor    %eax,%eax
   20df1:	83 fa 08             	cmp    $0x8,%edx
   20df4:	7c 27                	jl     20e1d <compare_sum+0x3d>
   20df6:	41 57                	push   %r15
   20df8:	41 56                	push   %r14
   20dfa:	53                   	push   %rbx
   20dfb:	c1 ea 03             	shr    $0x3,%edx
   20dfe:	31 db                	xor    %ebx,%ebx
   20e00:	0f b6 0c 1f          	movzbl (%rdi,%rbx,1),%ecx
   20e04:	44 0f b6 04 1e       	movzbl (%rsi,%rbx,1),%r8d
   20e09:	44 38 c1             	cmp    %r8b,%cl
   20e0c:	75 10                	jne    20e1e <compare_sum+0x3e>
   20e0e:	48 ff c3             	inc    %rbx
   20e11:	48 39 da             	cmp    %rbx,%rdx
   20e14:	75 ea                	jne    20e00 <compare_sum+0x20>
   20e16:	31 c0                	xor    %eax,%eax
   20e18:	5b                   	pop    %rbx
   20e19:	41 5e                	pop    %r14
   20e1b:	41 5f                	pop    %r15
   20e1d:	c3                   	ret    
   20e1e:	48 8b 05 d3 31 01 00 	mov    0x131d3(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20e25:	48 8b 00             	mov    (%rax),%rax
   20e28:	48 8d 15 fa c0 00 00 	lea    0xc0fa(%rip),%rdx        # 2cf29 <uint64_to_nicestr.suffix+0xcc9>
   20e2f:	49 89 fe             	mov    %rdi,%r14
   20e32:	48 89 c7             	mov    %rax,%rdi
   20e35:	49 89 f7             	mov    %rsi,%r15
   20e38:	48 89 d6             	mov    %rdx,%rsi
   20e3b:	89 da                	mov    %ebx,%edx
   20e3d:	31 c0                	xor    %eax,%eax
   20e3f:	e8 ec 12 fe ff       	call   2130 <fprintf@plt>
   20e44:	31 c0                	xor    %eax,%eax
   20e46:	41 0f b6 0c 1e       	movzbl (%r14,%rbx,1),%ecx
   20e4b:	41 3a 0c 1f          	cmp    (%r15,%rbx,1),%cl
   20e4f:	19 c0                	sbb    %eax,%eax
   20e51:	83 c8 01             	or     $0x1,%eax
   20e54:	eb c2                	jmp    20e18 <compare_sum+0x38>
   20e56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20e5d:	00 00 00 

0000000000020e60 <print_sum>:
   20e60:	83 fa 08             	cmp    $0x8,%edx
   20e63:	7c 4e                	jl     20eb3 <print_sum+0x53>
   20e65:	41 57                	push   %r15
   20e67:	41 56                	push   %r14
   20e69:	41 55                	push   %r13
   20e6b:	41 54                	push   %r12
   20e6d:	53                   	push   %rbx
   20e6e:	89 d3                	mov    %edx,%ebx
   20e70:	49 89 f6             	mov    %rsi,%r14
   20e73:	49 89 ff             	mov    %rdi,%r15
   20e76:	c1 eb 03             	shr    $0x3,%ebx
   20e79:	4c 8d 25 67 9a 00 00 	lea    0x9a67(%rip),%r12        # 2a8e7 <is_format_xz.magic+0x58f>
   20e80:	45 31 ed             	xor    %r13d,%r13d
   20e83:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   20e8a:	84 00 00 00 00 00 
   20e90:	43 0f b6 14 2e       	movzbl (%r14,%r13,1),%edx
   20e95:	4c 89 ff             	mov    %r15,%rdi
   20e98:	4c 89 e6             	mov    %r12,%rsi
   20e9b:	31 c0                	xor    %eax,%eax
   20e9d:	e8 8e 12 fe ff       	call   2130 <fprintf@plt>
   20ea2:	49 ff c5             	inc    %r13
   20ea5:	4c 39 eb             	cmp    %r13,%rbx
   20ea8:	75 e6                	jne    20e90 <print_sum+0x30>
   20eaa:	5b                   	pop    %rbx
   20eab:	41 5c                	pop    %r12
   20ead:	41 5d                	pop    %r13
   20eaf:	41 5e                	pop    %r14
   20eb1:	41 5f                	pop    %r15
   20eb3:	c3                   	ret    
   20eb4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   20ebb:	00 00 00 00 00 

0000000000020ec0 <spec_mem_read>:
   20ec0:	55                   	push   %rbp
   20ec1:	41 57                	push   %r15
   20ec3:	41 56                	push   %r14
   20ec5:	41 55                	push   %r13
   20ec7:	41 54                	push   %r12
   20ec9:	53                   	push   %rbx
   20eca:	50                   	push   %rax
   20ecb:	4d 89 c7             	mov    %r8,%r15
   20ece:	49 89 cc             	mov    %rcx,%r12
   20ed1:	89 d3                	mov    %edx,%ebx
   20ed3:	89 f5                	mov    %esi,%ebp
   20ed5:	49 89 fe             	mov    %rdi,%r14
   20ed8:	83 3d 49 32 01 00 06 	cmpl   $0x6,0x13249(%rip)        # 34128 <dbglvl>
   20edf:	7c 28                	jl     20f09 <spec_mem_read+0x49>
   20ee1:	48 8d 3d cb b6 00 00 	lea    0xb6cb(%rip),%rdi        # 2c5b3 <uint64_to_nicestr.suffix+0x353>
   20ee8:	89 de                	mov    %ebx,%esi
   20eea:	4c 89 f2             	mov    %r14,%rdx
   20eed:	4c 89 e1             	mov    %r12,%rcx
   20ef0:	4d 89 f8             	mov    %r15,%r8
   20ef3:	31 c0                	xor    %eax,%eax
   20ef5:	e8 a6 11 fe ff       	call   20a0 <printf@plt>
   20efa:	48 8b 05 cf 30 01 00 	mov    0x130cf(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20f01:	48 8b 38             	mov    (%rax),%rdi
   20f04:	e8 67 12 fe ff       	call   2170 <fflush@plt>
   20f09:	85 db                	test   %ebx,%ebx
   20f0b:	0f 88 21 01 00 00    	js     21032 <spec_mem_read+0x172>
   20f11:	39 eb                	cmp    %ebp,%ebx
   20f13:	0f 83 19 01 00 00    	jae    21032 <spec_mem_read+0x172>
   20f19:	89 d8                	mov    %ebx,%eax
   20f1b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   20f1f:	41 83 7c c6 18 01    	cmpl   $0x1,0x18(%r14,%rax,8)
   20f25:	0f 85 cc 00 00 00    	jne    20ff7 <spec_mem_read+0x137>
   20f2b:	49 8b 54 c6 08       	mov    0x8(%r14,%rax,8),%rdx
   20f30:	49 8b 74 c6 10       	mov    0x10(%r14,%rax,8),%rsi
   20f35:	49 89 d5             	mov    %rdx,%r13
   20f38:	49 29 f5             	sub    %rsi,%r13
   20f3b:	7e 7a                	jle    20fb7 <spec_mem_read+0xf7>
   20f3d:	4a 8d 0c 3e          	lea    (%rsi,%r15,1),%rcx
   20f41:	48 39 d1             	cmp    %rdx,%rcx
   20f44:	4d 0f 4c ef          	cmovl  %r15,%r13
   20f48:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   20f4c:	48 83 c5 10          	add    $0x10,%rbp
   20f50:	49 03 74 c6 20       	add    0x20(%r14,%rax,8),%rsi
   20f55:	4d 63 fd             	movslq %r13d,%r15
   20f58:	4c 89 e7             	mov    %r12,%rdi
   20f5b:	4c 89 fa             	mov    %r15,%rdx
   20f5e:	e8 ed 11 fe ff       	call   2150 <memcpy@plt>
   20f63:	4c 01 7d 00          	add    %r15,0x0(%rbp)
   20f67:	83 3d ba 31 01 00 06 	cmpl   $0x6,0x131ba(%rip)        # 34128 <dbglvl>
   20f6e:	7c 75                	jl     20fe5 <spec_mem_read+0x125>
   20f70:	48 8d 3d a5 bb 00 00 	lea    0xbba5(%rip),%rdi        # 2cb1c <uint64_to_nicestr.suffix+0x8bc>
   20f77:	44 89 ee             	mov    %r13d,%esi
   20f7a:	31 c0                	xor    %eax,%eax
   20f7c:	e8 1f 11 fe ff       	call   20a0 <printf@plt>
   20f81:	4c 8b 25 48 30 01 00 	mov    0x13048(%rip),%r12        # 33fd0 <stdout@GLIBC_2.2.5>
   20f88:	49 8b 3c 24          	mov    (%r12),%rdi
   20f8c:	e8 df 11 fe ff       	call   2170 <fflush@plt>
   20f91:	83 3d 90 31 01 00 06 	cmpl   $0x6,0x13190(%rip)        # 34128 <dbglvl>
   20f98:	7c 4b                	jl     20fe5 <spec_mem_read+0x125>
   20f9a:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   20f9e:	48 8d 3d c4 b6 00 00 	lea    0xb6c4(%rip),%rdi        # 2c669 <uint64_to_nicestr.suffix+0x409>
   20fa5:	89 de                	mov    %ebx,%esi
   20fa7:	4c 89 f2             	mov    %r14,%rdx
   20faa:	31 c0                	xor    %eax,%eax
   20fac:	e8 ef 10 fe ff       	call   20a0 <printf@plt>
   20fb1:	49 8b 3c 24          	mov    (%r12),%rdi
   20fb5:	eb 24                	jmp    20fdb <spec_mem_read+0x11b>
   20fb7:	83 3d 6a 31 01 00 05 	cmpl   $0x5,0x1316a(%rip)        # 34128 <dbglvl>
   20fbe:	7c 22                	jl     20fe2 <spec_mem_read+0x122>
   20fc0:	48 8d 3d 77 b6 00 00 	lea    0xb677(%rip),%rdi        # 2c63e <uint64_to_nicestr.suffix+0x3de>
   20fc7:	45 31 ff             	xor    %r15d,%r15d
   20fca:	31 c0                	xor    %eax,%eax
   20fcc:	e8 cf 10 fe ff       	call   20a0 <printf@plt>
   20fd1:	48 8b 05 f8 2f 01 00 	mov    0x12ff8(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   20fd8:	48 8b 38             	mov    (%rax),%rdi
   20fdb:	e8 90 11 fe ff       	call   2170 <fflush@plt>
   20fe0:	eb 03                	jmp    20fe5 <spec_mem_read+0x125>
   20fe2:	45 31 ff             	xor    %r15d,%r15d
   20fe5:	4c 89 f8             	mov    %r15,%rax
   20fe8:	48 83 c4 08          	add    $0x8,%rsp
   20fec:	5b                   	pop    %rbx
   20fed:	41 5c                	pop    %r12
   20fef:	41 5d                	pop    %r13
   20ff1:	41 5e                	pop    %r14
   20ff3:	41 5f                	pop    %r15
   20ff5:	5d                   	pop    %rbp
   20ff6:	c3                   	ret    
   20ff7:	48 8b 05 fa 2f 01 00 	mov    0x12ffa(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   20ffe:	48 8b 38             	mov    (%rax),%rdi
   21001:	4c 89 3c 24          	mov    %r15,(%rsp)
   21005:	48 8d 35 05 b6 00 00 	lea    0xb605(%rip),%rsi        # 2c611 <uint64_to_nicestr.suffix+0x3b1>
   2100c:	4c 89 f2             	mov    %r14,%rdx
   2100f:	89 e9                	mov    %ebp,%ecx
   21011:	41 89 d8             	mov    %ebx,%r8d
   21014:	4d 89 e1             	mov    %r12,%r9
   21017:	31 c0                	xor    %eax,%eax
   21019:	e8 12 11 fe ff       	call   2130 <fprintf@plt>
   2101e:	e8 2d 10 fe ff       	call   2050 <__errno_location@plt>
   21023:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   21029:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
   21030:	eb b3                	jmp    20fe5 <spec_mem_read+0x125>
   21032:	48 8b 05 bf 2f 01 00 	mov    0x12fbf(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21039:	48 8b 38             	mov    (%rax),%rdi
   2103c:	48 8d 35 91 b5 00 00 	lea    0xb591(%rip),%rsi        # 2c5d4 <uint64_to_nicestr.suffix+0x374>
   21043:	89 da                	mov    %ebx,%edx
   21045:	4c 89 f1             	mov    %r14,%rcx
   21048:	41 89 e8             	mov    %ebp,%r8d
   2104b:	31 c0                	xor    %eax,%eax
   2104d:	e8 de 10 fe ff       	call   2130 <fprintf@plt>
   21052:	bf 01 00 00 00       	mov    $0x1,%edi
   21057:	e8 64 11 fe ff       	call   21c0 <exit@plt>
   2105c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021060 <spec_mem_fread>:
   21060:	55                   	push   %rbp
   21061:	41 57                	push   %r15
   21063:	41 56                	push   %r14
   21065:	41 55                	push   %r13
   21067:	41 54                	push   %r12
   21069:	53                   	push   %rbx
   2106a:	48 83 ec 18          	sub    $0x18,%rsp
   2106e:	44 89 cb             	mov    %r9d,%ebx
   21071:	44 89 c5             	mov    %r8d,%ebp
   21074:	49 89 cd             	mov    %rcx,%r13
   21077:	49 89 d7             	mov    %rdx,%r15
   2107a:	41 89 f4             	mov    %esi,%r12d
   2107d:	49 89 fe             	mov    %rdi,%r14
   21080:	83 3d a1 30 01 00 06 	cmpl   $0x6,0x130a1(%rip)        # 34128 <dbglvl>
   21087:	7c 2f                	jl     210b8 <spec_mem_fread+0x58>
   21089:	89 1c 24             	mov    %ebx,(%rsp)
   2108c:	48 8d 3d 02 b6 00 00 	lea    0xb602(%rip),%rdi        # 2c695 <uint64_to_nicestr.suffix+0x435>
   21093:	4c 89 f6             	mov    %r14,%rsi
   21096:	44 89 e2             	mov    %r12d,%edx
   21099:	4c 89 f9             	mov    %r15,%rcx
   2109c:	4d 89 e8             	mov    %r13,%r8
   2109f:	41 89 e9             	mov    %ebp,%r9d
   210a2:	31 c0                	xor    %eax,%eax
   210a4:	e8 f7 0f fe ff       	call   20a0 <printf@plt>
   210a9:	48 8b 05 20 2f 01 00 	mov    0x12f20(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   210b0:	48 8b 38             	mov    (%rax),%rdi
   210b3:	e8 b8 10 fe ff       	call   2170 <fflush@plt>
   210b8:	85 db                	test   %ebx,%ebx
   210ba:	0f 88 12 01 00 00    	js     211d2 <spec_mem_fread+0x172>
   210c0:	44 39 e3             	cmp    %r12d,%ebx
   210c3:	0f 83 09 01 00 00    	jae    211d2 <spec_mem_fread+0x172>
   210c9:	89 d8                	mov    %ebx,%eax
   210cb:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
   210cf:	41 83 7c ce 18 01    	cmpl   $0x1,0x18(%r14,%rcx,8)
   210d5:	0f 85 21 01 00 00    	jne    211fc <spec_mem_fread+0x19c>
   210db:	49 8b 54 ce 08       	mov    0x8(%r14,%rcx,8),%rdx
   210e0:	49 8b 74 ce 10       	mov    0x10(%r14,%rcx,8),%rsi
   210e5:	48 89 d0             	mov    %rdx,%rax
   210e8:	48 29 f0             	sub    %rsi,%rax
   210eb:	7e 36                	jle    21123 <spec_mem_fread+0xc3>
   210ed:	49 8d 3c ce          	lea    (%r14,%rcx,8),%rdi
   210f1:	48 83 c7 10          	add    $0x10,%rdi
   210f5:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   210fa:	4c 63 e5             	movslq %ebp,%r12
   210fd:	4c 89 e5             	mov    %r12,%rbp
   21100:	49 0f af ed          	imul   %r13,%rbp
   21104:	48 8d 3c 2e          	lea    (%rsi,%rbp,1),%rdi
   21108:	48 39 d7             	cmp    %rdx,%rdi
   2110b:	7c 44                	jl     21151 <spec_mem_fread+0xf1>
   2110d:	48 89 c2             	mov    %rax,%rdx
   21110:	4c 09 ea             	or     %r13,%rdx
   21113:	48 c1 ea 20          	shr    $0x20,%rdx
   21117:	74 29                	je     21142 <spec_mem_fread+0xe2>
   21119:	48 99                	cqto   
   2111b:	49 f7 fd             	idiv   %r13
   2111e:	49 89 c4             	mov    %rax,%r12
   21121:	eb 27                	jmp    2114a <spec_mem_fread+0xea>
   21123:	83 3d fe 2f 01 00 06 	cmpl   $0x6,0x12ffe(%rip)        # 34128 <dbglvl>
   2112a:	7c 11                	jl     2113d <spec_mem_fread+0xdd>
   2112c:	48 8d 3d 3e bf 00 00 	lea    0xbf3e(%rip),%rdi        # 2d071 <uint64_to_nicestr.suffix+0xe11>
   21133:	e8 28 0f fe ff       	call   2060 <puts@plt>
   21138:	45 31 e4             	xor    %r12d,%r12d
   2113b:	eb 74                	jmp    211b1 <spec_mem_fread+0x151>
   2113d:	45 31 e4             	xor    %r12d,%r12d
   21140:	eb 7e                	jmp    211c0 <spec_mem_fread+0x160>
   21142:	31 d2                	xor    %edx,%edx
   21144:	41 f7 f5             	div    %r13d
   21147:	41 89 c4             	mov    %eax,%r12d
   2114a:	4d 0f af ec          	imul   %r12,%r13
   2114e:	4c 89 ed             	mov    %r13,%rbp
   21151:	49 03 74 ce 20       	add    0x20(%r14,%rcx,8),%rsi
   21156:	4c 89 ff             	mov    %r15,%rdi
   21159:	4c 89 e2             	mov    %r12,%rdx
   2115c:	e8 ef 0f fe ff       	call   2150 <memcpy@plt>
   21161:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   21166:	49 01 2f             	add    %rbp,(%r15)
   21169:	83 3d b8 2f 01 00 06 	cmpl   $0x6,0x12fb8(%rip)        # 34128 <dbglvl>
   21170:	7c 4e                	jl     211c0 <spec_mem_fread+0x160>
   21172:	48 8d 3d 42 b3 00 00 	lea    0xb342(%rip),%rdi        # 2c4bb <uint64_to_nicestr.suffix+0x25b>
   21179:	48 89 ee             	mov    %rbp,%rsi
   2117c:	31 c0                	xor    %eax,%eax
   2117e:	e8 1d 0f fe ff       	call   20a0 <printf@plt>
   21183:	48 8b 05 46 2e 01 00 	mov    0x12e46(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2118a:	48 8b 38             	mov    (%rax),%rdi
   2118d:	e8 de 0f fe ff       	call   2170 <fflush@plt>
   21192:	83 3d 8f 2f 01 00 06 	cmpl   $0x6,0x12f8f(%rip)        # 34128 <dbglvl>
   21199:	7c 25                	jl     211c0 <spec_mem_fread+0x160>
   2119b:	49 8b 0f             	mov    (%r15),%rcx
   2119e:	48 8d 3d 83 b5 00 00 	lea    0xb583(%rip),%rdi        # 2c728 <uint64_to_nicestr.suffix+0x4c8>
   211a5:	89 de                	mov    %ebx,%esi
   211a7:	4c 89 f2             	mov    %r14,%rdx
   211aa:	31 c0                	xor    %eax,%eax
   211ac:	e8 ef 0e fe ff       	call   20a0 <printf@plt>
   211b1:	48 8b 05 18 2e 01 00 	mov    0x12e18(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   211b8:	48 8b 38             	mov    (%rax),%rdi
   211bb:	e8 b0 0f fe ff       	call   2170 <fflush@plt>
   211c0:	4c 89 e0             	mov    %r12,%rax
   211c3:	48 83 c4 18          	add    $0x18,%rsp
   211c7:	5b                   	pop    %rbx
   211c8:	41 5c                	pop    %r12
   211ca:	41 5d                	pop    %r13
   211cc:	41 5e                	pop    %r14
   211ce:	41 5f                	pop    %r15
   211d0:	5d                   	pop    %rbp
   211d1:	c3                   	ret    
   211d2:	48 8b 05 1f 2e 01 00 	mov    0x12e1f(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   211d9:	48 8b 38             	mov    (%rax),%rdi
   211dc:	48 8d 35 e1 b4 00 00 	lea    0xb4e1(%rip),%rsi        # 2c6c4 <uint64_to_nicestr.suffix+0x464>
   211e3:	89 da                	mov    %ebx,%edx
   211e5:	4c 89 f1             	mov    %r14,%rcx
   211e8:	45 89 e0             	mov    %r12d,%r8d
   211eb:	31 c0                	xor    %eax,%eax
   211ed:	e8 3e 0f fe ff       	call   2130 <fprintf@plt>
   211f2:	bf 01 00 00 00       	mov    $0x1,%edi
   211f7:	e8 c4 0f fe ff       	call   21c0 <exit@plt>
   211fc:	48 8b 05 f5 2d 01 00 	mov    0x12df5(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21203:	48 8b 38             	mov    (%rax),%rdi
   21206:	48 8d 35 f5 b4 00 00 	lea    0xb4f5(%rip),%rsi        # 2c702 <uint64_to_nicestr.suffix+0x4a2>
   2120d:	89 da                	mov    %ebx,%edx
   2120f:	4c 89 f1             	mov    %r14,%rcx
   21212:	31 c0                	xor    %eax,%eax
   21214:	e8 17 0f fe ff       	call   2130 <fprintf@plt>
   21219:	bf 01 00 00 00       	mov    $0x1,%edi
   2121e:	e8 9d 0f fe ff       	call   21c0 <exit@plt>
   21223:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   2122a:	84 00 00 00 00 00 

0000000000021230 <spec_mem_getc>:
   21230:	55                   	push   %rbp
   21231:	41 57                	push   %r15
   21233:	41 56                	push   %r14
   21235:	53                   	push   %rbx
   21236:	50                   	push   %rax
   21237:	89 d5                	mov    %edx,%ebp
   21239:	41 89 f6             	mov    %esi,%r14d
   2123c:	48 89 fb             	mov    %rdi,%rbx
   2123f:	83 3d e2 2e 01 00 07 	cmpl   $0x7,0x12ee2(%rip)        # 34128 <dbglvl>
   21246:	7c 25                	jl     2126d <spec_mem_getc+0x3d>
   21248:	48 8d 3d 06 b5 00 00 	lea    0xb506(%rip),%rdi        # 2c755 <uint64_to_nicestr.suffix+0x4f5>
   2124f:	48 89 de             	mov    %rbx,%rsi
   21252:	44 89 f2             	mov    %r14d,%edx
   21255:	89 e9                	mov    %ebp,%ecx
   21257:	31 c0                	xor    %eax,%eax
   21259:	e8 42 0e fe ff       	call   20a0 <printf@plt>
   2125e:	48 8b 05 6b 2d 01 00 	mov    0x12d6b(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21265:	48 8b 38             	mov    (%rax),%rdi
   21268:	e8 03 0f fe ff       	call   2170 <fflush@plt>
   2126d:	85 ed                	test   %ebp,%ebp
   2126f:	0f 88 cb 00 00 00    	js     21340 <spec_mem_getc+0x110>
   21275:	44 39 f5             	cmp    %r14d,%ebp
   21278:	0f 83 c2 00 00 00    	jae    21340 <spec_mem_getc+0x110>
   2127e:	89 e8                	mov    %ebp,%eax
   21280:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   21284:	83 7c c3 18 01       	cmpl   $0x1,0x18(%rbx,%rax,8)
   21289:	0f 85 db 00 00 00    	jne    2136a <spec_mem_getc+0x13a>
   2128f:	48 8b 4c c3 10       	mov    0x10(%rbx,%rax,8),%rcx
   21294:	48 3b 4c c3 08       	cmp    0x8(%rbx,%rax,8),%rcx
   21299:	7d 67                	jge    21302 <spec_mem_getc+0xd2>
   2129b:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
   2129f:	49 83 c7 10          	add    $0x10,%r15
   212a3:	48 8b 44 c3 20       	mov    0x20(%rbx,%rax,8),%rax
   212a8:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   212ac:	49 89 17             	mov    %rdx,(%r15)
   212af:	44 0f b6 34 08       	movzbl (%rax,%rcx,1),%r14d
   212b4:	8b 05 6e 2e 01 00    	mov    0x12e6e(%rip),%eax        # 34128 <dbglvl>
   212ba:	83 f8 07             	cmp    $0x7,%eax
   212bd:	7c 26                	jl     212e5 <spec_mem_getc+0xb5>
   212bf:	48 8d 3d 56 b8 00 00 	lea    0xb856(%rip),%rdi        # 2cb1c <uint64_to_nicestr.suffix+0x8bc>
   212c6:	44 89 f6             	mov    %r14d,%esi
   212c9:	31 c0                	xor    %eax,%eax
   212cb:	e8 d0 0d fe ff       	call   20a0 <printf@plt>
   212d0:	48 8b 05 f9 2c 01 00 	mov    0x12cf9(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   212d7:	48 8b 38             	mov    (%rax),%rdi
   212da:	e8 91 0e fe ff       	call   2170 <fflush@plt>
   212df:	8b 05 43 2e 01 00    	mov    0x12e43(%rip),%eax        # 34128 <dbglvl>
   212e5:	83 f8 06             	cmp    $0x6,%eax
   212e8:	7c 48                	jl     21332 <spec_mem_getc+0x102>
   212ea:	49 8b 0f             	mov    (%r15),%rcx
   212ed:	48 8d 3d e0 b4 00 00 	lea    0xb4e0(%rip),%rdi        # 2c7d4 <uint64_to_nicestr.suffix+0x574>
   212f4:	89 ee                	mov    %ebp,%esi
   212f6:	48 89 da             	mov    %rbx,%rdx
   212f9:	31 c0                	xor    %eax,%eax
   212fb:	e8 a0 0d fe ff       	call   20a0 <printf@plt>
   21300:	eb 21                	jmp    21323 <spec_mem_getc+0xf3>
   21302:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   21308:	83 3d 19 2e 01 00 07 	cmpl   $0x7,0x12e19(%rip)        # 34128 <dbglvl>
   2130f:	7c 21                	jl     21332 <spec_mem_getc+0x102>
   21311:	48 8d 3d 59 bd 00 00 	lea    0xbd59(%rip),%rdi        # 2d071 <uint64_to_nicestr.suffix+0xe11>
   21318:	e8 43 0d fe ff       	call   2060 <puts@plt>
   2131d:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
   21323:	48 8b 05 a6 2c 01 00 	mov    0x12ca6(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2132a:	48 8b 38             	mov    (%rax),%rdi
   2132d:	e8 3e 0e fe ff       	call   2170 <fflush@plt>
   21332:	44 89 f0             	mov    %r14d,%eax
   21335:	48 83 c4 08          	add    $0x8,%rsp
   21339:	5b                   	pop    %rbx
   2133a:	41 5e                	pop    %r14
   2133c:	41 5f                	pop    %r15
   2133e:	5d                   	pop    %rbp
   2133f:	c3                   	ret    
   21340:	48 8b 05 b1 2c 01 00 	mov    0x12cb1(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21347:	48 8b 38             	mov    (%rax),%rdi
   2134a:	48 8d 35 21 b4 00 00 	lea    0xb421(%rip),%rsi        # 2c772 <uint64_to_nicestr.suffix+0x512>
   21351:	89 ea                	mov    %ebp,%edx
   21353:	48 89 d9             	mov    %rbx,%rcx
   21356:	45 89 f0             	mov    %r14d,%r8d
   21359:	31 c0                	xor    %eax,%eax
   2135b:	e8 d0 0d fe ff       	call   2130 <fprintf@plt>
   21360:	bf 01 00 00 00       	mov    $0x1,%edi
   21365:	e8 56 0e fe ff       	call   21c0 <exit@plt>
   2136a:	48 8b 05 87 2c 01 00 	mov    0x12c87(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21371:	48 8b 38             	mov    (%rax),%rdi
   21374:	48 8d 35 34 b4 00 00 	lea    0xb434(%rip),%rsi        # 2c7af <uint64_to_nicestr.suffix+0x54f>
   2137b:	89 ea                	mov    %ebp,%edx
   2137d:	48 89 d9             	mov    %rbx,%rcx
   21380:	31 c0                	xor    %eax,%eax
   21382:	e8 a9 0d fe ff       	call   2130 <fprintf@plt>
   21387:	bf 01 00 00 00       	mov    $0x1,%edi
   2138c:	e8 2f 0e fe ff       	call   21c0 <exit@plt>
   21391:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   21398:	0f 1f 84 00 00 00 00 
   2139f:	00 

00000000000213a0 <spec_mem_ungetc>:
   213a0:	55                   	push   %rbp
   213a1:	41 57                	push   %r15
   213a3:	41 56                	push   %r14
   213a5:	53                   	push   %rbx
   213a6:	50                   	push   %rax
   213a7:	89 cd                	mov    %ecx,%ebp
   213a9:	41 89 d6             	mov    %edx,%r14d
   213ac:	41 89 f7             	mov    %esi,%r15d
   213af:	48 89 fb             	mov    %rdi,%rbx
   213b2:	83 3d 6f 2d 01 00 07 	cmpl   $0x7,0x12d6f(%rip)        # 34128 <dbglvl>
   213b9:	7c 2a                	jl     213e5 <spec_mem_ungetc+0x45>
   213bb:	41 0f b6 ce          	movzbl %r14b,%ecx
   213bf:	48 8d 3d 3a b4 00 00 	lea    0xb43a(%rip),%rdi        # 2c800 <uint64_to_nicestr.suffix+0x5a0>
   213c6:	48 89 de             	mov    %rbx,%rsi
   213c9:	44 89 fa             	mov    %r15d,%edx
   213cc:	41 89 e8             	mov    %ebp,%r8d
   213cf:	31 c0                	xor    %eax,%eax
   213d1:	e8 ca 0c fe ff       	call   20a0 <printf@plt>
   213d6:	48 8b 05 f3 2b 01 00 	mov    0x12bf3(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   213dd:	48 8b 38             	mov    (%rax),%rdi
   213e0:	e8 8b 0d fe ff       	call   2170 <fflush@plt>
   213e5:	85 ed                	test   %ebp,%ebp
   213e7:	0f 88 b2 00 00 00    	js     2149f <spec_mem_ungetc+0xff>
   213ed:	44 39 fd             	cmp    %r15d,%ebp
   213f0:	0f 83 a9 00 00 00    	jae    2149f <spec_mem_ungetc+0xff>
   213f6:	89 e8                	mov    %ebp,%eax
   213f8:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   213fc:	83 7c c3 18 01       	cmpl   $0x1,0x18(%rbx,%rax,8)
   21401:	0f 85 c2 00 00 00    	jne    214c9 <spec_mem_ungetc+0x129>
   21407:	48 8b 54 c3 10       	mov    0x10(%rbx,%rax,8),%rdx
   2140c:	48 85 d2             	test   %rdx,%rdx
   2140f:	0f 8e db 00 00 00    	jle    214f0 <spec_mem_ungetc+0x150>
   21415:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
   21419:	49 83 c7 10          	add    $0x10,%r15
   2141d:	48 8b 44 c3 20       	mov    0x20(%rbx,%rax,8),%rax
   21422:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   21426:	49 89 0f             	mov    %rcx,(%r15)
   21429:	0f b6 44 10 ff       	movzbl -0x1(%rax,%rdx,1),%eax
   2142e:	44 39 f0             	cmp    %r14d,%eax
   21431:	0f 85 db 00 00 00    	jne    21512 <spec_mem_ungetc+0x172>
   21437:	8b 05 eb 2c 01 00    	mov    0x12ceb(%rip),%eax        # 34128 <dbglvl>
   2143d:	83 f8 07             	cmp    $0x7,%eax
   21440:	7c 25                	jl     21467 <spec_mem_ungetc+0xc7>
   21442:	48 8d 3d d3 b6 00 00 	lea    0xb6d3(%rip),%rdi        # 2cb1c <uint64_to_nicestr.suffix+0x8bc>
   21449:	31 f6                	xor    %esi,%esi
   2144b:	31 c0                	xor    %eax,%eax
   2144d:	e8 4e 0c fe ff       	call   20a0 <printf@plt>
   21452:	48 8b 05 77 2b 01 00 	mov    0x12b77(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21459:	48 8b 38             	mov    (%rax),%rdi
   2145c:	e8 0f 0d fe ff       	call   2170 <fflush@plt>
   21461:	8b 05 c1 2c 01 00    	mov    0x12cc1(%rip),%eax        # 34128 <dbglvl>
   21467:	83 f8 06             	cmp    $0x6,%eax
   2146a:	7c 25                	jl     21491 <spec_mem_ungetc+0xf1>
   2146c:	49 8b 0f             	mov    (%r15),%rcx
   2146f:	48 8d 3d 82 b4 00 00 	lea    0xb482(%rip),%rdi        # 2c8f8 <uint64_to_nicestr.suffix+0x698>
   21476:	89 ee                	mov    %ebp,%esi
   21478:	48 89 da             	mov    %rbx,%rdx
   2147b:	31 c0                	xor    %eax,%eax
   2147d:	e8 1e 0c fe ff       	call   20a0 <printf@plt>
   21482:	48 8b 05 47 2b 01 00 	mov    0x12b47(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21489:	48 8b 38             	mov    (%rax),%rdi
   2148c:	e8 df 0c fe ff       	call   2170 <fflush@plt>
   21491:	44 89 f0             	mov    %r14d,%eax
   21494:	48 83 c4 08          	add    $0x8,%rsp
   21498:	5b                   	pop    %rbx
   21499:	41 5e                	pop    %r14
   2149b:	41 5f                	pop    %r15
   2149d:	5d                   	pop    %rbp
   2149e:	c3                   	ret    
   2149f:	48 8b 05 52 2b 01 00 	mov    0x12b52(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   214a6:	48 8b 38             	mov    (%rax),%rdi
   214a9:	48 8d 35 77 b3 00 00 	lea    0xb377(%rip),%rsi        # 2c827 <uint64_to_nicestr.suffix+0x5c7>
   214b0:	89 ea                	mov    %ebp,%edx
   214b2:	48 89 d9             	mov    %rbx,%rcx
   214b5:	45 89 f8             	mov    %r15d,%r8d
   214b8:	31 c0                	xor    %eax,%eax
   214ba:	e8 71 0c fe ff       	call   2130 <fprintf@plt>
   214bf:	bf 01 00 00 00       	mov    $0x1,%edi
   214c4:	e8 f7 0c fe ff       	call   21c0 <exit@plt>
   214c9:	48 8b 05 28 2b 01 00 	mov    0x12b28(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   214d0:	48 8b 38             	mov    (%rax),%rdi
   214d3:	48 8d 35 8c b3 00 00 	lea    0xb38c(%rip),%rsi        # 2c866 <uint64_to_nicestr.suffix+0x606>
   214da:	89 ea                	mov    %ebp,%edx
   214dc:	48 89 d9             	mov    %rbx,%rcx
   214df:	31 c0                	xor    %eax,%eax
   214e1:	e8 4a 0c fe ff       	call   2130 <fprintf@plt>
   214e6:	bf 01 00 00 00       	mov    $0x1,%edi
   214eb:	e8 d0 0c fe ff       	call   21c0 <exit@plt>
   214f0:	48 8b 05 01 2b 01 00 	mov    0x12b01(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   214f7:	48 8b 38             	mov    (%rax),%rdi
   214fa:	48 8d 35 8c b3 00 00 	lea    0xb38c(%rip),%rsi        # 2c88d <uint64_to_nicestr.suffix+0x62d>
   21501:	31 c0                	xor    %eax,%eax
   21503:	e8 28 0c fe ff       	call   2130 <fprintf@plt>
   21508:	bf 01 00 00 00       	mov    $0x1,%edi
   2150d:	e8 ae 0c fe ff       	call   21c0 <exit@plt>
   21512:	48 8b 05 df 2a 01 00 	mov    0x12adf(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21519:	48 8b 08             	mov    (%rax),%rcx
   2151c:	48 8d 3d 89 b3 00 00 	lea    0xb389(%rip),%rdi        # 2c8ac <uint64_to_nicestr.suffix+0x64c>
   21523:	be 4b 00 00 00       	mov    $0x4b,%esi
   21528:	ba 01 00 00 00       	mov    $0x1,%edx
   2152d:	e8 9e 0c fe ff       	call   21d0 <fwrite@plt>
   21532:	bf 01 00 00 00       	mov    $0x1,%edi
   21537:	e8 84 0c fe ff       	call   21c0 <exit@plt>
   2153c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021540 <spec_mem_lseek>:
   21540:	55                   	push   %rbp
   21541:	41 57                	push   %r15
   21543:	41 56                	push   %r14
   21545:	41 55                	push   %r13
   21547:	41 54                	push   %r12
   21549:	53                   	push   %rbx
   2154a:	50                   	push   %rax
   2154b:	44 89 c5             	mov    %r8d,%ebp
   2154e:	41 89 d0             	mov    %edx,%r8d
   21551:	89 f0                	mov    %esi,%eax
   21553:	49 89 ff             	mov    %rdi,%r15
   21556:	85 d2                	test   %edx,%edx
   21558:	0f 88 6a 01 00 00    	js     216c8 <spec_mem_lseek+0x188>
   2155e:	41 39 c0             	cmp    %eax,%r8d
   21561:	0f 83 61 01 00 00    	jae    216c8 <spec_mem_lseek+0x188>
   21567:	48 89 cb             	mov    %rcx,%rbx
   2156a:	44 89 c1             	mov    %r8d,%ecx
   2156d:	4c 8d 2c 89          	lea    (%rcx,%rcx,4),%r13
   21571:	43 83 7c ef 18 01    	cmpl   $0x1,0x18(%r15,%r13,8)
   21577:	0f 85 1b 01 00 00    	jne    21698 <spec_mem_lseek+0x158>
   2157d:	4f 8b 74 ef 10       	mov    0x10(%r15,%r13,8),%r14
   21582:	83 3d 9f 2b 01 00 05 	cmpl   $0x5,0x12b9f(%rip)        # 34128 <dbglvl>
   21589:	7c 2f                	jl     215ba <spec_mem_lseek+0x7a>
   2158b:	4c 89 34 24          	mov    %r14,(%rsp)
   2158f:	48 8d 3d fc b3 00 00 	lea    0xb3fc(%rip),%rdi        # 2c992 <uint64_to_nicestr.suffix+0x732>
   21596:	4c 89 fe             	mov    %r15,%rsi
   21599:	89 c2                	mov    %eax,%edx
   2159b:	44 89 c1             	mov    %r8d,%ecx
   2159e:	49 89 d8             	mov    %rbx,%r8
   215a1:	41 89 e9             	mov    %ebp,%r9d
   215a4:	31 c0                	xor    %eax,%eax
   215a6:	e8 f5 0a fe ff       	call   20a0 <printf@plt>
   215ab:	48 8b 05 1e 2a 01 00 	mov    0x12a1e(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   215b2:	48 8b 38             	mov    (%rax),%rdi
   215b5:	e8 b6 0b fe ff       	call   2170 <fflush@plt>
   215ba:	4f 8d 24 ef          	lea    (%r15,%r13,8),%r12
   215be:	49 83 c4 10          	add    $0x10,%r12
   215c2:	85 ed                	test   %ebp,%ebp
   215c4:	74 18                	je     215de <spec_mem_lseek+0x9e>
   215c6:	4c 89 e0             	mov    %r12,%rax
   215c9:	83 fd 01             	cmp    $0x1,%ebp
   215cc:	74 0d                	je     215db <spec_mem_lseek+0x9b>
   215ce:	83 fd 02             	cmp    $0x2,%ebp
   215d1:	75 77                	jne    2164a <spec_mem_lseek+0x10a>
   215d3:	4b 8d 04 ef          	lea    (%r15,%r13,8),%rax
   215d7:	48 83 c0 08          	add    $0x8,%rax
   215db:	48 03 18             	add    (%rax),%rbx
   215de:	49 89 1c 24          	mov    %rbx,(%r12)
   215e2:	8b 05 40 2b 01 00    	mov    0x12b40(%rip),%eax        # 34128 <dbglvl>
   215e8:	48 85 db             	test   %rbx,%rbx
   215eb:	78 2f                	js     2161c <spec_mem_lseek+0xdc>
   215ed:	83 f8 05             	cmp    $0x5,%eax
   215f0:	0f 8c 90 00 00 00    	jl     21686 <spec_mem_lseek+0x146>
   215f6:	48 8d 3d 2e b4 00 00 	lea    0xb42e(%rip),%rdi        # 2ca2b <uint64_to_nicestr.suffix+0x7cb>
   215fd:	48 89 de             	mov    %rbx,%rsi
   21600:	31 c0                	xor    %eax,%eax
   21602:	e8 99 0a fe ff       	call   20a0 <printf@plt>
   21607:	48 8b 05 c2 29 01 00 	mov    0x129c2(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2160e:	48 8b 38             	mov    (%rax),%rdi
   21611:	e8 5a 0b fe ff       	call   2170 <fflush@plt>
   21616:	49 8b 1c 24          	mov    (%r12),%rbx
   2161a:	eb 6a                	jmp    21686 <spec_mem_lseek+0x146>
   2161c:	83 f8 05             	cmp    $0x5,%eax
   2161f:	7c 23                	jl     21644 <spec_mem_lseek+0x104>
   21621:	48 8d 3d dc b3 00 00 	lea    0xb3dc(%rip),%rdi        # 2ca04 <uint64_to_nicestr.suffix+0x7a4>
   21628:	4c 89 f6             	mov    %r14,%rsi
   2162b:	48 89 da             	mov    %rbx,%rdx
   2162e:	31 c0                	xor    %eax,%eax
   21630:	e8 6b 0a fe ff       	call   20a0 <printf@plt>
   21635:	48 8b 05 94 29 01 00 	mov    0x12994(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2163c:	48 8b 38             	mov    (%rax),%rdi
   2163f:	e8 2c 0b fe ff       	call   2170 <fflush@plt>
   21644:	4d 89 34 24          	mov    %r14,(%r12)
   21648:	eb 2a                	jmp    21674 <spec_mem_lseek+0x134>
   2164a:	83 3d d7 2a 01 00 05 	cmpl   $0x5,0x12ad7(%rip)        # 34128 <dbglvl>
   21651:	7c 21                	jl     21674 <spec_mem_lseek+0x134>
   21653:	49 8b 34 24          	mov    (%r12),%rsi
   21657:	48 8d 3d 86 b3 00 00 	lea    0xb386(%rip),%rdi        # 2c9e4 <uint64_to_nicestr.suffix+0x784>
   2165e:	31 c0                	xor    %eax,%eax
   21660:	e8 3b 0a fe ff       	call   20a0 <printf@plt>
   21665:	48 8b 05 64 29 01 00 	mov    0x12964(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2166c:	48 8b 38             	mov    (%rax),%rdi
   2166f:	e8 fc 0a fe ff       	call   2170 <fflush@plt>
   21674:	e8 d7 09 fe ff       	call   2050 <__errno_location@plt>
   21679:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   2167f:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   21686:	48 89 d8             	mov    %rbx,%rax
   21689:	48 83 c4 08          	add    $0x8,%rsp
   2168d:	5b                   	pop    %rbx
   2168e:	41 5c                	pop    %r12
   21690:	41 5d                	pop    %r13
   21692:	41 5e                	pop    %r14
   21694:	41 5f                	pop    %r15
   21696:	5d                   	pop    %rbp
   21697:	c3                   	ret    
   21698:	48 8b 0d 59 29 01 00 	mov    0x12959(%rip),%rcx        # 33ff8 <stderr@GLIBC_2.2.5>
   2169f:	48 8b 39             	mov    (%rcx),%rdi
   216a2:	89 2c 24             	mov    %ebp,(%rsp)
   216a5:	48 8d 35 b8 b2 00 00 	lea    0xb2b8(%rip),%rsi        # 2c964 <uint64_to_nicestr.suffix+0x704>
   216ac:	4c 89 fa             	mov    %r15,%rdx
   216af:	89 c1                	mov    %eax,%ecx
   216b1:	49 89 d9             	mov    %rbx,%r9
   216b4:	31 c0                	xor    %eax,%eax
   216b6:	e8 75 0a fe ff       	call   2130 <fprintf@plt>
   216bb:	e8 90 09 fe ff       	call   2050 <__errno_location@plt>
   216c0:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   216c6:	eb b7                	jmp    2167f <spec_mem_lseek+0x13f>
   216c8:	48 8b 0d 29 29 01 00 	mov    0x12929(%rip),%rcx        # 33ff8 <stderr@GLIBC_2.2.5>
   216cf:	48 8b 39             	mov    (%rcx),%rdi
   216d2:	48 8d 35 4d b2 00 00 	lea    0xb24d(%rip),%rsi        # 2c926 <uint64_to_nicestr.suffix+0x6c6>
   216d9:	44 89 c2             	mov    %r8d,%edx
   216dc:	4c 89 f9             	mov    %r15,%rcx
   216df:	41 89 c0             	mov    %eax,%r8d
   216e2:	31 c0                	xor    %eax,%eax
   216e4:	e8 47 0a fe ff       	call   2130 <fprintf@plt>
   216e9:	bf 01 00 00 00       	mov    $0x1,%edi
   216ee:	e8 cd 0a fe ff       	call   21c0 <exit@plt>
   216f3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   216fa:	84 00 00 00 00 00 

0000000000021700 <spec_mem_rewind>:
   21700:	55                   	push   %rbp
   21701:	41 56                	push   %r14
   21703:	53                   	push   %rbx
   21704:	89 d3                	mov    %edx,%ebx
   21706:	89 f5                	mov    %esi,%ebp
   21708:	49 89 fe             	mov    %rdi,%r14
   2170b:	83 3d 16 2a 01 00 05 	cmpl   $0x5,0x12a16(%rip)        # 34128 <dbglvl>
   21712:	7c 24                	jl     21738 <spec_mem_rewind+0x38>
   21714:	48 8d 3d 17 b3 00 00 	lea    0xb317(%rip),%rdi        # 2ca32 <uint64_to_nicestr.suffix+0x7d2>
   2171b:	4c 89 f6             	mov    %r14,%rsi
   2171e:	89 ea                	mov    %ebp,%edx
   21720:	89 d9                	mov    %ebx,%ecx
   21722:	31 c0                	xor    %eax,%eax
   21724:	e8 77 09 fe ff       	call   20a0 <printf@plt>
   21729:	48 8b 05 a0 28 01 00 	mov    0x128a0(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21730:	48 8b 38             	mov    (%rax),%rdi
   21733:	e8 38 0a fe ff       	call   2170 <fflush@plt>
   21738:	4c 89 f7             	mov    %r14,%rdi
   2173b:	89 ee                	mov    %ebp,%esi
   2173d:	89 da                	mov    %ebx,%edx
   2173f:	31 c9                	xor    %ecx,%ecx
   21741:	45 31 c0             	xor    %r8d,%r8d
   21744:	e8 f7 fd ff ff       	call   21540 <spec_mem_lseek>
   21749:	31 c0                	xor    %eax,%eax
   2174b:	5b                   	pop    %rbx
   2174c:	41 5e                	pop    %r14
   2174e:	5d                   	pop    %rbp
   2174f:	c3                   	ret    

0000000000021750 <spec_mem_reset>:
   21750:	41 57                	push   %r15
   21752:	41 56                	push   %r14
   21754:	53                   	push   %rbx
   21755:	89 d3                	mov    %edx,%ebx
   21757:	49 89 fe             	mov    %rdi,%r14
   2175a:	83 3d c7 29 01 00 05 	cmpl   $0x5,0x129c7(%rip)        # 34128 <dbglvl>
   21761:	7c 24                	jl     21787 <spec_mem_reset+0x37>
   21763:	89 f2                	mov    %esi,%edx
   21765:	48 8d 3d e6 b2 00 00 	lea    0xb2e6(%rip),%rdi        # 2ca52 <uint64_to_nicestr.suffix+0x7f2>
   2176c:	4c 89 f6             	mov    %r14,%rsi
   2176f:	89 d9                	mov    %ebx,%ecx
   21771:	31 c0                	xor    %eax,%eax
   21773:	e8 28 09 fe ff       	call   20a0 <printf@plt>
   21778:	48 8b 05 51 28 01 00 	mov    0x12851(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2177f:	48 8b 38             	mov    (%rax),%rdi
   21782:	e8 e9 09 fe ff       	call   2170 <fflush@plt>
   21787:	48 63 c3             	movslq %ebx,%rax
   2178a:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
   2178e:	4b 8b 54 fe 08       	mov    0x8(%r14,%r15,8),%rdx
   21793:	4b 8b 7c fe 20       	mov    0x20(%r14,%r15,8),%rdi
   21798:	31 f6                	xor    %esi,%esi
   2179a:	e8 21 09 fe ff       	call   20c0 <memset@plt>
   2179f:	0f 57 c0             	xorps  %xmm0,%xmm0
   217a2:	43 0f 11 44 fe 08    	movups %xmm0,0x8(%r14,%r15,8)
   217a8:	83 3d 79 29 01 00 06 	cmpl   $0x6,0x12979(%rip)        # 34128 <dbglvl>
   217af:	7c 24                	jl     217d5 <spec_mem_reset+0x85>
   217b1:	48 8d 3d bd b2 00 00 	lea    0xb2bd(%rip),%rdi        # 2ca75 <uint64_to_nicestr.suffix+0x815>
   217b8:	89 de                	mov    %ebx,%esi
   217ba:	4c 89 f2             	mov    %r14,%rdx
   217bd:	31 c9                	xor    %ecx,%ecx
   217bf:	31 c0                	xor    %eax,%eax
   217c1:	e8 da 08 fe ff       	call   20a0 <printf@plt>
   217c6:	48 8b 05 03 28 01 00 	mov    0x12803(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   217cd:	48 8b 38             	mov    (%rax),%rdi
   217d0:	e8 9b 09 fe ff       	call   2170 <fflush@plt>
   217d5:	31 c0                	xor    %eax,%eax
   217d7:	5b                   	pop    %rbx
   217d8:	41 5e                	pop    %r14
   217da:	41 5f                	pop    %r15
   217dc:	c3                   	ret    
   217dd:	0f 1f 00             	nopl   (%rax)

00000000000217e0 <spec_mem_get_length>:
   217e0:	41 56                	push   %r14
   217e2:	53                   	push   %rbx
   217e3:	50                   	push   %rax
   217e4:	89 d0                	mov    %edx,%eax
   217e6:	89 f1                	mov    %esi,%ecx
   217e8:	48 89 fb             	mov    %rdi,%rbx
   217eb:	48 63 d2             	movslq %edx,%rdx
   217ee:	4c 8d 34 92          	lea    (%rdx,%rdx,4),%r14
   217f2:	42 83 7c f7 18 01    	cmpl   $0x1,0x18(%rdi,%r14,8)
   217f8:	75 3f                	jne    21839 <spec_mem_get_length+0x59>
   217fa:	83 3d 27 29 01 00 05 	cmpl   $0x5,0x12927(%rip)        # 34128 <dbglvl>
   21801:	7c 29                	jl     2182c <spec_mem_get_length+0x4c>
   21803:	4e 8b 44 f3 08       	mov    0x8(%rbx,%r14,8),%r8
   21808:	48 8d 3d c0 b2 00 00 	lea    0xb2c0(%rip),%rdi        # 2cacf <uint64_to_nicestr.suffix+0x86f>
   2180f:	48 89 de             	mov    %rbx,%rsi
   21812:	89 ca                	mov    %ecx,%edx
   21814:	89 c1                	mov    %eax,%ecx
   21816:	31 c0                	xor    %eax,%eax
   21818:	e8 83 08 fe ff       	call   20a0 <printf@plt>
   2181d:	48 8b 05 ac 27 01 00 	mov    0x127ac(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21824:	48 8b 38             	mov    (%rax),%rdi
   21827:	e8 44 09 fe ff       	call   2170 <fflush@plt>
   2182c:	4a 8b 44 f3 08       	mov    0x8(%rbx,%r14,8),%rax
   21831:	48 83 c4 08          	add    $0x8,%rsp
   21835:	5b                   	pop    %rbx
   21836:	41 5e                	pop    %r14
   21838:	c3                   	ret    
   21839:	48 8b 15 b8 27 01 00 	mov    0x127b8(%rip),%rdx        # 33ff8 <stderr@GLIBC_2.2.5>
   21840:	48 8b 3a             	mov    (%rdx),%rdi
   21843:	48 8d 35 58 b2 00 00 	lea    0xb258(%rip),%rsi        # 2caa2 <uint64_to_nicestr.suffix+0x842>
   2184a:	48 89 da             	mov    %rbx,%rdx
   2184d:	41 89 c0             	mov    %eax,%r8d
   21850:	31 c0                	xor    %eax,%eax
   21852:	e8 d9 08 fe ff       	call   2130 <fprintf@plt>
   21857:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2185e:	48 83 c4 08          	add    $0x8,%rsp
   21862:	5b                   	pop    %rbx
   21863:	41 5e                	pop    %r14
   21865:	c3                   	ret    
   21866:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2186d:	00 00 00 

0000000000021870 <spec_mem_fopen>:
   21870:	55                   	push   %rbp
   21871:	41 57                	push   %r15
   21873:	41 56                	push   %r14
   21875:	41 54                	push   %r12
   21877:	53                   	push   %rbx
   21878:	49 89 cf             	mov    %rcx,%r15
   2187b:	49 89 d4             	mov    %rdx,%r12
   2187e:	89 f5                	mov    %esi,%ebp
   21880:	49 89 fe             	mov    %rdi,%r14
   21883:	48 89 d7             	mov    %rdx,%rdi
   21886:	31 f6                	xor    %esi,%esi
   21888:	ba 0a 00 00 00       	mov    $0xa,%edx
   2188d:	e8 ae 08 fe ff       	call   2140 <strtol@plt>
   21892:	48 89 c3             	mov    %rax,%rbx
   21895:	85 db                	test   %ebx,%ebx
   21897:	78 6a                	js     21903 <spec_mem_fopen+0x93>
   21899:	39 eb                	cmp    %ebp,%ebx
   2189b:	73 66                	jae    21903 <spec_mem_fopen+0x93>
   2189d:	83 3d 84 28 01 00 05 	cmpl   $0x5,0x12884(%rip)        # 34128 <dbglvl>
   218a4:	7c 2b                	jl     218d1 <spec_mem_fopen+0x61>
   218a6:	48 8d 3d 4a b2 00 00 	lea    0xb24a(%rip),%rdi        # 2caf7 <uint64_to_nicestr.suffix+0x897>
   218ad:	4c 89 f6             	mov    %r14,%rsi
   218b0:	89 ea                	mov    %ebp,%edx
   218b2:	4c 89 e1             	mov    %r12,%rcx
   218b5:	4d 89 f8             	mov    %r15,%r8
   218b8:	41 89 d9             	mov    %ebx,%r9d
   218bb:	31 c0                	xor    %eax,%eax
   218bd:	e8 de 07 fe ff       	call   20a0 <printf@plt>
   218c2:	48 8b 05 07 27 01 00 	mov    0x12707(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   218c9:	48 8b 38             	mov    (%rax),%rdi
   218cc:	e8 9f 08 fe ff       	call   2170 <fflush@plt>
   218d1:	89 d8                	mov    %ebx,%eax
   218d3:	4c 8d 24 80          	lea    (%rax,%rax,4),%r12
   218d7:	43 c7 44 e6 18 01 00 	movl   $0x1,0x18(%r14,%r12,8)
   218de:	00 00 
   218e0:	41 0f b6 07          	movzbl (%r15),%eax
   218e4:	83 f8 72             	cmp    $0x72,%eax
   218e7:	74 2c                	je     21915 <spec_mem_fopen+0xa5>
   218e9:	83 f8 77             	cmp    $0x77,%eax
   218ec:	75 65                	jne    21953 <spec_mem_fopen+0xe3>
   218ee:	41 80 7f 01 2b       	cmpb   $0x2b,0x1(%r15)
   218f3:	75 69                	jne    2195e <spec_mem_fopen+0xee>
   218f5:	4b 8b 4c e6 10       	mov    0x10(%r14,%r12,8),%rcx
   218fa:	4c 89 f7             	mov    %r14,%rdi
   218fd:	89 ee                	mov    %ebp,%esi
   218ff:	89 da                	mov    %ebx,%edx
   21901:	eb 48                	jmp    2194b <spec_mem_fopen+0xdb>
   21903:	e8 48 07 fe ff       	call   2050 <__errno_location@plt>
   21908:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   2190e:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   21913:	eb 3e                	jmp    21953 <spec_mem_fopen+0xe3>
   21915:	83 3d 0c 28 01 00 05 	cmpl   $0x5,0x1280c(%rip)        # 34128 <dbglvl>
   2191c:	7c 24                	jl     21942 <spec_mem_fopen+0xd2>
   2191e:	48 8d 3d 0d b1 00 00 	lea    0xb10d(%rip),%rdi        # 2ca32 <uint64_to_nicestr.suffix+0x7d2>
   21925:	4c 89 f6             	mov    %r14,%rsi
   21928:	89 ea                	mov    %ebp,%edx
   2192a:	89 d9                	mov    %ebx,%ecx
   2192c:	31 c0                	xor    %eax,%eax
   2192e:	e8 6d 07 fe ff       	call   20a0 <printf@plt>
   21933:	48 8b 05 96 26 01 00 	mov    0x12696(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2193a:	48 8b 38             	mov    (%rax),%rdi
   2193d:	e8 2e 08 fe ff       	call   2170 <fflush@plt>
   21942:	4c 89 f7             	mov    %r14,%rdi
   21945:	89 ee                	mov    %ebp,%esi
   21947:	89 da                	mov    %ebx,%edx
   21949:	31 c9                	xor    %ecx,%ecx
   2194b:	45 31 c0             	xor    %r8d,%r8d
   2194e:	e8 ed fb ff ff       	call   21540 <spec_mem_lseek>
   21953:	89 d8                	mov    %ebx,%eax
   21955:	5b                   	pop    %rbx
   21956:	41 5c                	pop    %r12
   21958:	41 5e                	pop    %r14
   2195a:	41 5f                	pop    %r15
   2195c:	5d                   	pop    %rbp
   2195d:	c3                   	ret    
   2195e:	83 3d c3 27 01 00 05 	cmpl   $0x5,0x127c3(%rip)        # 34128 <dbglvl>
   21965:	7c 24                	jl     2198b <spec_mem_fopen+0x11b>
   21967:	48 8d 3d e4 b0 00 00 	lea    0xb0e4(%rip),%rdi        # 2ca52 <uint64_to_nicestr.suffix+0x7f2>
   2196e:	4c 89 f6             	mov    %r14,%rsi
   21971:	89 ea                	mov    %ebp,%edx
   21973:	89 d9                	mov    %ebx,%ecx
   21975:	31 c0                	xor    %eax,%eax
   21977:	e8 24 07 fe ff       	call   20a0 <printf@plt>
   2197c:	48 8b 05 4d 26 01 00 	mov    0x1264d(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21983:	48 8b 38             	mov    (%rax),%rdi
   21986:	e8 e5 07 fe ff       	call   2170 <fflush@plt>
   2198b:	4b 8b 54 e6 08       	mov    0x8(%r14,%r12,8),%rdx
   21990:	4b 8b 7c e6 20       	mov    0x20(%r14,%r12,8),%rdi
   21995:	31 f6                	xor    %esi,%esi
   21997:	e8 24 07 fe ff       	call   20c0 <memset@plt>
   2199c:	0f 57 c0             	xorps  %xmm0,%xmm0
   2199f:	43 0f 11 44 e6 08    	movups %xmm0,0x8(%r14,%r12,8)
   219a5:	83 3d 7c 27 01 00 06 	cmpl   $0x6,0x1277c(%rip)        # 34128 <dbglvl>
   219ac:	7c a5                	jl     21953 <spec_mem_fopen+0xe3>
   219ae:	48 8d 3d c0 b0 00 00 	lea    0xb0c0(%rip),%rdi        # 2ca75 <uint64_to_nicestr.suffix+0x815>
   219b5:	89 de                	mov    %ebx,%esi
   219b7:	4c 89 f2             	mov    %r14,%rdx
   219ba:	31 c9                	xor    %ecx,%ecx
   219bc:	31 c0                	xor    %eax,%eax
   219be:	e8 dd 06 fe ff       	call   20a0 <printf@plt>
   219c3:	48 8b 05 06 26 01 00 	mov    0x12606(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   219ca:	48 8b 38             	mov    (%rax),%rdi
   219cd:	e8 9e 07 fe ff       	call   2170 <fflush@plt>
   219d2:	e9 7c ff ff ff       	jmp    21953 <spec_mem_fopen+0xe3>
   219d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   219de:	00 00 

00000000000219e0 <spec_mem_open>:
   219e0:	55                   	push   %rbp
   219e1:	41 57                	push   %r15
   219e3:	41 56                	push   %r14
   219e5:	41 54                	push   %r12
   219e7:	53                   	push   %rbx
   219e8:	41 89 cf             	mov    %ecx,%r15d
   219eb:	49 89 d4             	mov    %rdx,%r12
   219ee:	89 f5                	mov    %esi,%ebp
   219f0:	49 89 fe             	mov    %rdi,%r14
   219f3:	48 89 d7             	mov    %rdx,%rdi
   219f6:	31 f6                	xor    %esi,%esi
   219f8:	ba 0a 00 00 00       	mov    $0xa,%edx
   219fd:	e8 3e 07 fe ff       	call   2140 <strtol@plt>
   21a02:	48 89 c3             	mov    %rax,%rbx
   21a05:	85 db                	test   %ebx,%ebx
   21a07:	0f 88 13 01 00 00    	js     21b20 <spec_mem_open+0x140>
   21a0d:	39 eb                	cmp    %ebp,%ebx
   21a0f:	0f 83 0b 01 00 00    	jae    21b20 <spec_mem_open+0x140>
   21a15:	83 3d 0c 27 01 00 05 	cmpl   $0x5,0x1270c(%rip)        # 34128 <dbglvl>
   21a1c:	7c 2b                	jl     21a49 <spec_mem_open+0x69>
   21a1e:	48 8d 3d fb b0 00 00 	lea    0xb0fb(%rip),%rdi        # 2cb20 <uint64_to_nicestr.suffix+0x8c0>
   21a25:	4c 89 f6             	mov    %r14,%rsi
   21a28:	89 ea                	mov    %ebp,%edx
   21a2a:	4c 89 e1             	mov    %r12,%rcx
   21a2d:	45 89 f8             	mov    %r15d,%r8d
   21a30:	41 89 d9             	mov    %ebx,%r9d
   21a33:	31 c0                	xor    %eax,%eax
   21a35:	e8 66 06 fe ff       	call   20a0 <printf@plt>
   21a3a:	48 8b 05 8f 25 01 00 	mov    0x1258f(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21a41:	48 8b 38             	mov    (%rax),%rdi
   21a44:	e8 27 07 fe ff       	call   2170 <fflush@plt>
   21a49:	89 d8                	mov    %ebx,%eax
   21a4b:	4c 8d 24 80          	lea    (%rax,%rax,4),%r12
   21a4f:	43 c7 44 e6 18 01 00 	movl   $0x1,0x18(%r14,%r12,8)
   21a56:	00 00 
   21a58:	41 f6 c7 03          	test   $0x3,%r15b
   21a5c:	0f 84 86 00 00 00    	je     21ae8 <spec_mem_open+0x108>
   21a62:	41 f7 c7 00 02 00 00 	test   $0x200,%r15d
   21a69:	74 74                	je     21adf <spec_mem_open+0xff>
   21a6b:	83 3d b6 26 01 00 05 	cmpl   $0x5,0x126b6(%rip)        # 34128 <dbglvl>
   21a72:	7c 24                	jl     21a98 <spec_mem_open+0xb8>
   21a74:	48 8d 3d d7 af 00 00 	lea    0xafd7(%rip),%rdi        # 2ca52 <uint64_to_nicestr.suffix+0x7f2>
   21a7b:	4c 89 f6             	mov    %r14,%rsi
   21a7e:	89 ea                	mov    %ebp,%edx
   21a80:	89 d9                	mov    %ebx,%ecx
   21a82:	31 c0                	xor    %eax,%eax
   21a84:	e8 17 06 fe ff       	call   20a0 <printf@plt>
   21a89:	48 8b 05 40 25 01 00 	mov    0x12540(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21a90:	48 8b 38             	mov    (%rax),%rdi
   21a93:	e8 d8 06 fe ff       	call   2170 <fflush@plt>
   21a98:	4b 8b 54 e6 08       	mov    0x8(%r14,%r12,8),%rdx
   21a9d:	4b 8b 7c e6 20       	mov    0x20(%r14,%r12,8),%rdi
   21aa2:	31 f6                	xor    %esi,%esi
   21aa4:	e8 17 06 fe ff       	call   20c0 <memset@plt>
   21aa9:	0f 57 c0             	xorps  %xmm0,%xmm0
   21aac:	43 0f 11 44 e6 08    	movups %xmm0,0x8(%r14,%r12,8)
   21ab2:	83 3d 6f 26 01 00 06 	cmpl   $0x6,0x1266f(%rip)        # 34128 <dbglvl>
   21ab9:	7c 24                	jl     21adf <spec_mem_open+0xff>
   21abb:	48 8d 3d b3 af 00 00 	lea    0xafb3(%rip),%rdi        # 2ca75 <uint64_to_nicestr.suffix+0x815>
   21ac2:	89 de                	mov    %ebx,%esi
   21ac4:	4c 89 f2             	mov    %r14,%rdx
   21ac7:	31 c9                	xor    %ecx,%ecx
   21ac9:	31 c0                	xor    %eax,%eax
   21acb:	e8 d0 05 fe ff       	call   20a0 <printf@plt>
   21ad0:	48 8b 05 f9 24 01 00 	mov    0x124f9(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21ad7:	48 8b 38             	mov    (%rax),%rdi
   21ada:	e8 91 06 fe ff       	call   2170 <fflush@plt>
   21adf:	41 f7 c7 00 04 00 00 	test   $0x400,%r15d
   21ae6:	75 4a                	jne    21b32 <spec_mem_open+0x152>
   21ae8:	83 3d 39 26 01 00 05 	cmpl   $0x5,0x12639(%rip)        # 34128 <dbglvl>
   21aef:	7c 24                	jl     21b15 <spec_mem_open+0x135>
   21af1:	48 8d 3d 3a af 00 00 	lea    0xaf3a(%rip),%rdi        # 2ca32 <uint64_to_nicestr.suffix+0x7d2>
   21af8:	4c 89 f6             	mov    %r14,%rsi
   21afb:	89 ea                	mov    %ebp,%edx
   21afd:	89 d9                	mov    %ebx,%ecx
   21aff:	31 c0                	xor    %eax,%eax
   21b01:	e8 9a 05 fe ff       	call   20a0 <printf@plt>
   21b06:	48 8b 05 c3 24 01 00 	mov    0x124c3(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21b0d:	48 8b 38             	mov    (%rax),%rdi
   21b10:	e8 5b 06 fe ff       	call   2170 <fflush@plt>
   21b15:	4c 89 f7             	mov    %r14,%rdi
   21b18:	89 ee                	mov    %ebp,%esi
   21b1a:	89 da                	mov    %ebx,%edx
   21b1c:	31 c9                	xor    %ecx,%ecx
   21b1e:	eb 1e                	jmp    21b3e <spec_mem_open+0x15e>
   21b20:	e8 2b 05 fe ff       	call   2050 <__errno_location@plt>
   21b25:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   21b2b:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
   21b30:	eb 14                	jmp    21b46 <spec_mem_open+0x166>
   21b32:	4b 8b 4c e6 10       	mov    0x10(%r14,%r12,8),%rcx
   21b37:	4c 89 f7             	mov    %r14,%rdi
   21b3a:	89 ee                	mov    %ebp,%esi
   21b3c:	89 da                	mov    %ebx,%edx
   21b3e:	45 31 c0             	xor    %r8d,%r8d
   21b41:	e8 fa f9 ff ff       	call   21540 <spec_mem_lseek>
   21b46:	89 d8                	mov    %ebx,%eax
   21b48:	5b                   	pop    %rbx
   21b49:	41 5c                	pop    %r12
   21b4b:	41 5e                	pop    %r14
   21b4d:	41 5f                	pop    %r15
   21b4f:	5d                   	pop    %rbp
   21b50:	c3                   	ret    
   21b51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   21b58:	0f 1f 84 00 00 00 00 
   21b5f:	00 

0000000000021b60 <spec_mem_write>:
   21b60:	55                   	push   %rbp
   21b61:	41 57                	push   %r15
   21b63:	41 56                	push   %r14
   21b65:	41 55                	push   %r13
   21b67:	41 54                	push   %r12
   21b69:	53                   	push   %rbx
   21b6a:	48 83 ec 18          	sub    $0x18,%rsp
   21b6e:	4c 89 c3             	mov    %r8,%rbx
   21b71:	49 89 cd             	mov    %rcx,%r13
   21b74:	89 d5                	mov    %edx,%ebp
   21b76:	41 89 f4             	mov    %esi,%r12d
   21b79:	49 89 fe             	mov    %rdi,%r14
   21b7c:	83 3d a5 25 01 00 06 	cmpl   $0x6,0x125a5(%rip)        # 34128 <dbglvl>
   21b83:	7c 2b                	jl     21bb0 <spec_mem_write+0x50>
   21b85:	48 8d 3d be af 00 00 	lea    0xafbe(%rip),%rdi        # 2cb4a <uint64_to_nicestr.suffix+0x8ea>
   21b8c:	4c 89 f6             	mov    %r14,%rsi
   21b8f:	44 89 e2             	mov    %r12d,%edx
   21b92:	89 e9                	mov    %ebp,%ecx
   21b94:	4d 89 e8             	mov    %r13,%r8
   21b97:	49 89 d9             	mov    %rbx,%r9
   21b9a:	31 c0                	xor    %eax,%eax
   21b9c:	e8 ff 04 fe ff       	call   20a0 <printf@plt>
   21ba1:	48 8b 05 28 24 01 00 	mov    0x12428(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21ba8:	48 8b 38             	mov    (%rax),%rdi
   21bab:	e8 c0 05 fe ff       	call   2170 <fflush@plt>
   21bb0:	85 ed                	test   %ebp,%ebp
   21bb2:	0f 88 13 01 00 00    	js     21ccb <spec_mem_write+0x16b>
   21bb8:	44 39 e5             	cmp    %r12d,%ebp
   21bbb:	0f 83 0a 01 00 00    	jae    21ccb <spec_mem_write+0x16b>
   21bc1:	89 e8                	mov    %ebp,%eax
   21bc3:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
   21bc7:	43 83 7c fe 18 01    	cmpl   $0x1,0x18(%r14,%r15,8)
   21bcd:	0f 85 bc 00 00 00    	jne    21c8f <spec_mem_write+0x12f>
   21bd3:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   21bd8:	4f 8d 2c fe          	lea    (%r14,%r15,8),%r13
   21bdc:	4b 8b 7c fe 10       	mov    0x10(%r14,%r15,8),%rdi
   21be1:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
   21be5:	49 3b 45 00          	cmp    0x0(%r13),%rax
   21be9:	7e 30                	jle    21c1b <spec_mem_write+0xbb>
   21beb:	4c 8d 25 06 b0 00 00 	lea    0xb006(%rip),%r12        # 2cbf8 <uint64_to_nicestr.suffix+0x998>
   21bf2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   21bf9:	1f 84 00 00 00 00 00 
   21c00:	4c 89 f7             	mov    %r14,%rdi
   21c03:	89 ee                	mov    %ebp,%esi
   21c05:	4c 89 e2             	mov    %r12,%rdx
   21c08:	e8 93 f0 ff ff       	call   20ca0 <fd_grow>
   21c0d:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   21c11:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
   21c15:	49 3b 45 00          	cmp    0x0(%r13),%rax
   21c19:	7f e5                	jg     21c00 <spec_mem_write+0xa0>
   21c1b:	4b 03 7c fe 20       	add    0x20(%r14,%r15,8),%rdi
   21c20:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   21c25:	48 89 da             	mov    %rbx,%rdx
   21c28:	e8 23 05 fe ff       	call   2150 <memcpy@plt>
   21c2d:	49 8b 4d 10          	mov    0x10(%r13),%rcx
   21c31:	48 01 d9             	add    %rbx,%rcx
   21c34:	49 89 4d 10          	mov    %rcx,0x10(%r13)
   21c38:	4b 8b 54 fe 08       	mov    0x8(%r14,%r15,8),%rdx
   21c3d:	48 39 d1             	cmp    %rdx,%rcx
   21c40:	7e 0e                	jle    21c50 <spec_mem_write+0xf0>
   21c42:	4b 8d 04 fe          	lea    (%r14,%r15,8),%rax
   21c46:	48 83 c0 08          	add    $0x8,%rax
   21c4a:	48 89 08             	mov    %rcx,(%rax)
   21c4d:	48 89 ca             	mov    %rcx,%rdx
   21c50:	83 3d d1 24 01 00 06 	cmpl   $0x6,0x124d1(%rip)        # 34128 <dbglvl>
   21c57:	7c 24                	jl     21c7d <spec_mem_write+0x11d>
   21c59:	4d 8b 45 00          	mov    0x0(%r13),%r8
   21c5d:	48 8d 3d a3 af 00 00 	lea    0xafa3(%rip),%rdi        # 2cc07 <uint64_to_nicestr.suffix+0x9a7>
   21c64:	48 89 de             	mov    %rbx,%rsi
   21c67:	31 c0                	xor    %eax,%eax
   21c69:	e8 32 04 fe ff       	call   20a0 <printf@plt>
   21c6e:	48 8b 05 5b 23 01 00 	mov    0x1235b(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21c75:	48 8b 38             	mov    (%rax),%rdi
   21c78:	e8 f3 04 fe ff       	call   2170 <fflush@plt>
   21c7d:	48 89 d8             	mov    %rbx,%rax
   21c80:	48 83 c4 18          	add    $0x18,%rsp
   21c84:	5b                   	pop    %rbx
   21c85:	41 5c                	pop    %r12
   21c87:	41 5d                	pop    %r13
   21c89:	41 5e                	pop    %r14
   21c8b:	41 5f                	pop    %r15
   21c8d:	5d                   	pop    %rbp
   21c8e:	c3                   	ret    
   21c8f:	48 8b 05 62 23 01 00 	mov    0x12362(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21c96:	48 8b 38             	mov    (%rax),%rdi
   21c99:	48 89 1c 24          	mov    %rbx,(%rsp)
   21c9d:	48 8d 35 26 af 00 00 	lea    0xaf26(%rip),%rsi        # 2cbca <uint64_to_nicestr.suffix+0x96a>
   21ca4:	4c 89 f2             	mov    %r14,%rdx
   21ca7:	44 89 e1             	mov    %r12d,%ecx
   21caa:	41 89 e8             	mov    %ebp,%r8d
   21cad:	4d 89 e9             	mov    %r13,%r9
   21cb0:	31 c0                	xor    %eax,%eax
   21cb2:	e8 79 04 fe ff       	call   2130 <fprintf@plt>
   21cb7:	e8 94 03 fe ff       	call   2050 <__errno_location@plt>
   21cbc:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   21cc2:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   21cc9:	eb b2                	jmp    21c7d <spec_mem_write+0x11d>
   21ccb:	48 8b 05 26 23 01 00 	mov    0x12326(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21cd2:	48 8b 38             	mov    (%rax),%rdi
   21cd5:	48 8d 35 b0 ae 00 00 	lea    0xaeb0(%rip),%rsi        # 2cb8c <uint64_to_nicestr.suffix+0x92c>
   21cdc:	89 ea                	mov    %ebp,%edx
   21cde:	4c 89 f1             	mov    %r14,%rcx
   21ce1:	45 89 e0             	mov    %r12d,%r8d
   21ce4:	31 c0                	xor    %eax,%eax
   21ce6:	e8 45 04 fe ff       	call   2130 <fprintf@plt>
   21ceb:	bf 01 00 00 00       	mov    $0x1,%edi
   21cf0:	e8 cb 04 fe ff       	call   21c0 <exit@plt>
   21cf5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   21cfc:	00 00 00 00 

0000000000021d00 <spec_mem_fwrite>:
   21d00:	55                   	push   %rbp
   21d01:	41 57                	push   %r15
   21d03:	41 56                	push   %r14
   21d05:	41 55                	push   %r13
   21d07:	41 54                	push   %r12
   21d09:	53                   	push   %rbx
   21d0a:	48 83 ec 28          	sub    $0x28,%rsp
   21d0e:	45 89 cf             	mov    %r9d,%r15d
   21d11:	44 89 c5             	mov    %r8d,%ebp
   21d14:	49 89 ce             	mov    %rcx,%r14
   21d17:	49 89 d4             	mov    %rdx,%r12
   21d1a:	41 89 f5             	mov    %esi,%r13d
   21d1d:	48 89 fb             	mov    %rdi,%rbx
   21d20:	83 3d 01 24 01 00 06 	cmpl   $0x6,0x12401(%rip)        # 34128 <dbglvl>
   21d27:	7c 30                	jl     21d59 <spec_mem_fwrite+0x59>
   21d29:	44 89 3c 24          	mov    %r15d,(%rsp)
   21d2d:	48 8d 3d 0d af 00 00 	lea    0xaf0d(%rip),%rdi        # 2cc41 <uint64_to_nicestr.suffix+0x9e1>
   21d34:	48 89 de             	mov    %rbx,%rsi
   21d37:	44 89 ea             	mov    %r13d,%edx
   21d3a:	4c 89 e1             	mov    %r12,%rcx
   21d3d:	4d 89 f0             	mov    %r14,%r8
   21d40:	41 89 e9             	mov    %ebp,%r9d
   21d43:	31 c0                	xor    %eax,%eax
   21d45:	e8 56 03 fe ff       	call   20a0 <printf@plt>
   21d4a:	48 8b 05 7f 22 01 00 	mov    0x1227f(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21d51:	48 8b 38             	mov    (%rax),%rdi
   21d54:	e8 17 04 fe ff       	call   2170 <fflush@plt>
   21d59:	45 85 ff             	test   %r15d,%r15d
   21d5c:	0f 88 e4 00 00 00    	js     21e46 <spec_mem_fwrite+0x146>
   21d62:	45 39 ef             	cmp    %r13d,%r15d
   21d65:	0f 83 db 00 00 00    	jae    21e46 <spec_mem_fwrite+0x146>
   21d6b:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   21d70:	44 89 f8             	mov    %r15d,%eax
   21d73:	4c 8d 2c 80          	lea    (%rax,%rax,4),%r13
   21d77:	42 83 7c eb 18 01    	cmpl   $0x1,0x18(%rbx,%r13,8)
   21d7d:	0f 85 ee 00 00 00    	jne    21e71 <spec_mem_fwrite+0x171>
   21d83:	4e 8d 24 eb          	lea    (%rbx,%r13,8),%r12
   21d87:	89 6c 24 14          	mov    %ebp,0x14(%rsp)
   21d8b:	48 63 c5             	movslq %ebp,%rax
   21d8e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   21d93:	4c 0f af f0          	imul   %rax,%r14
   21d97:	4a 8b 7c eb 10       	mov    0x10(%rbx,%r13,8),%rdi
   21d9c:	4a 8d 04 37          	lea    (%rdi,%r14,1),%rax
   21da0:	49 3b 04 24          	cmp    (%r12),%rax
   21da4:	7e 27                	jle    21dcd <spec_mem_fwrite+0xcd>
   21da6:	48 8d 2d 45 af 00 00 	lea    0xaf45(%rip),%rbp        # 2ccf2 <uint64_to_nicestr.suffix+0xa92>
   21dad:	0f 1f 00             	nopl   (%rax)
   21db0:	48 89 df             	mov    %rbx,%rdi
   21db3:	44 89 fe             	mov    %r15d,%esi
   21db6:	48 89 ea             	mov    %rbp,%rdx
   21db9:	e8 e2 ee ff ff       	call   20ca0 <fd_grow>
   21dbe:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   21dc3:	4a 8d 04 37          	lea    (%rdi,%r14,1),%rax
   21dc7:	49 3b 04 24          	cmp    (%r12),%rax
   21dcb:	7f e3                	jg     21db0 <spec_mem_fwrite+0xb0>
   21dcd:	4a 03 7c eb 20       	add    0x20(%rbx,%r13,8),%rdi
   21dd2:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   21dd7:	4c 89 f2             	mov    %r14,%rdx
   21dda:	e8 71 03 fe ff       	call   2150 <memcpy@plt>
   21ddf:	4d 03 74 24 10       	add    0x10(%r12),%r14
   21de4:	4d 89 74 24 10       	mov    %r14,0x10(%r12)
   21de9:	4a 8b 54 eb 08       	mov    0x8(%rbx,%r13,8),%rdx
   21dee:	49 39 d6             	cmp    %rdx,%r14
   21df1:	7e 0e                	jle    21e01 <spec_mem_fwrite+0x101>
   21df3:	4a 8d 04 eb          	lea    (%rbx,%r13,8),%rax
   21df7:	48 83 c0 08          	add    $0x8,%rax
   21dfb:	4c 89 30             	mov    %r14,(%rax)
   21dfe:	4c 89 f2             	mov    %r14,%rdx
   21e01:	83 3d 20 23 01 00 06 	cmpl   $0x6,0x12320(%rip)        # 34128 <dbglvl>
   21e08:	8b 74 24 14          	mov    0x14(%rsp),%esi
   21e0c:	7c 24                	jl     21e32 <spec_mem_fwrite+0x132>
   21e0e:	4d 8b 04 24          	mov    (%r12),%r8
   21e12:	48 8d 3d e9 ae 00 00 	lea    0xaee9(%rip),%rdi        # 2cd02 <uint64_to_nicestr.suffix+0xaa2>
   21e19:	4c 89 f1             	mov    %r14,%rcx
   21e1c:	31 c0                	xor    %eax,%eax
   21e1e:	e8 7d 02 fe ff       	call   20a0 <printf@plt>
   21e23:	48 8b 05 a6 21 01 00 	mov    0x121a6(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21e2a:	48 8b 38             	mov    (%rax),%rdi
   21e2d:	e8 3e 03 fe ff       	call   2170 <fflush@plt>
   21e32:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   21e37:	48 83 c4 28          	add    $0x28,%rsp
   21e3b:	5b                   	pop    %rbx
   21e3c:	41 5c                	pop    %r12
   21e3e:	41 5d                	pop    %r13
   21e40:	41 5e                	pop    %r14
   21e42:	41 5f                	pop    %r15
   21e44:	5d                   	pop    %rbp
   21e45:	c3                   	ret    
   21e46:	48 8b 05 ab 21 01 00 	mov    0x121ab(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21e4d:	48 8b 38             	mov    (%rax),%rdi
   21e50:	48 8d 35 35 ae 00 00 	lea    0xae35(%rip),%rsi        # 2cc8c <uint64_to_nicestr.suffix+0xa2c>
   21e57:	44 89 fa             	mov    %r15d,%edx
   21e5a:	48 89 d9             	mov    %rbx,%rcx
   21e5d:	45 89 e8             	mov    %r13d,%r8d
   21e60:	31 c0                	xor    %eax,%eax
   21e62:	e8 c9 02 fe ff       	call   2130 <fprintf@plt>
   21e67:	bf 01 00 00 00       	mov    $0x1,%edi
   21e6c:	e8 4f 03 fe ff       	call   21c0 <exit@plt>
   21e71:	48 8b 05 80 21 01 00 	mov    0x12180(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21e78:	48 8b 38             	mov    (%rax),%rdi
   21e7b:	48 8d 35 49 ae 00 00 	lea    0xae49(%rip),%rsi        # 2cccb <uint64_to_nicestr.suffix+0xa6b>
   21e82:	44 89 fa             	mov    %r15d,%edx
   21e85:	48 89 d9             	mov    %rbx,%rcx
   21e88:	31 c0                	xor    %eax,%eax
   21e8a:	e8 a1 02 fe ff       	call   2130 <fprintf@plt>
   21e8f:	bf 01 00 00 00       	mov    $0x1,%edi
   21e94:	e8 27 03 fe ff       	call   21c0 <exit@plt>
   21e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021ea0 <spec_mem_putc>:
   21ea0:	55                   	push   %rbp
   21ea1:	41 57                	push   %r15
   21ea3:	41 56                	push   %r14
   21ea5:	41 54                	push   %r12
   21ea7:	53                   	push   %rbx
   21ea8:	89 cd                	mov    %ecx,%ebp
   21eaa:	41 89 d6             	mov    %edx,%r14d
   21ead:	41 89 f7             	mov    %esi,%r15d
   21eb0:	48 89 fb             	mov    %rdi,%rbx
   21eb3:	83 3d 6e 22 01 00 05 	cmpl   $0x5,0x1226e(%rip)        # 34128 <dbglvl>
   21eba:	7c 29                	jl     21ee5 <spec_mem_putc+0x45>
   21ebc:	48 8d 3d 79 ae 00 00 	lea    0xae79(%rip),%rdi        # 2cd3c <uint64_to_nicestr.suffix+0xadc>
   21ec3:	48 89 de             	mov    %rbx,%rsi
   21ec6:	44 89 fa             	mov    %r15d,%edx
   21ec9:	44 89 f1             	mov    %r14d,%ecx
   21ecc:	41 89 e8             	mov    %ebp,%r8d
   21ecf:	31 c0                	xor    %eax,%eax
   21ed1:	e8 ca 01 fe ff       	call   20a0 <printf@plt>
   21ed6:	48 8b 05 f3 20 01 00 	mov    0x120f3(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   21edd:	48 8b 38             	mov    (%rax),%rdi
   21ee0:	e8 8b 02 fe ff       	call   2170 <fflush@plt>
   21ee5:	85 ed                	test   %ebp,%ebp
   21ee7:	0f 88 af 00 00 00    	js     21f9c <spec_mem_putc+0xfc>
   21eed:	44 39 fd             	cmp    %r15d,%ebp
   21ef0:	0f 83 a6 00 00 00    	jae    21f9c <spec_mem_putc+0xfc>
   21ef6:	89 e8                	mov    %ebp,%eax
   21ef8:	4c 8d 3c 80          	lea    (%rax,%rax,4),%r15
   21efc:	42 83 7c fb 18 01    	cmpl   $0x1,0x18(%rbx,%r15,8)
   21f02:	0f 85 be 00 00 00    	jne    21fc6 <spec_mem_putc+0x126>
   21f08:	4a 8b 44 fb 10       	mov    0x10(%rbx,%r15,8),%rax
   21f0d:	4a 8b 4c fb 20       	mov    0x20(%rbx,%r15,8),%rcx
   21f12:	48 8d 50 01          	lea    0x1(%rax),%rdx
   21f16:	4a 89 54 fb 10       	mov    %rdx,0x10(%rbx,%r15,8)
   21f1b:	44 88 34 01          	mov    %r14b,(%rcx,%rax,1)
   21f1f:	4a 8b 44 fb 10       	mov    0x10(%rbx,%r15,8),%rax
   21f24:	4a 3b 44 fb 08       	cmp    0x8(%rbx,%r15,8),%rax
   21f29:	7e 0b                	jle    21f36 <spec_mem_putc+0x96>
   21f2b:	4a 8d 0c fb          	lea    (%rbx,%r15,8),%rcx
   21f2f:	48 83 c1 08          	add    $0x8,%rcx
   21f33:	48 89 01             	mov    %rax,(%rcx)
   21f36:	83 3d eb 21 01 00 05 	cmpl   $0x5,0x121eb(%rip)        # 34128 <dbglvl>
   21f3d:	7c 51                	jl     21f90 <spec_mem_putc+0xf0>
   21f3f:	48 8d 3d 8c ae 00 00 	lea    0xae8c(%rip),%rdi        # 2cdd2 <uint64_to_nicestr.suffix+0xb72>
   21f46:	44 89 f6             	mov    %r14d,%esi
   21f49:	31 c0                	xor    %eax,%eax
   21f4b:	e8 50 01 fe ff       	call   20a0 <printf@plt>
   21f50:	4c 8b 25 79 20 01 00 	mov    0x12079(%rip),%r12        # 33fd0 <stdout@GLIBC_2.2.5>
   21f57:	49 8b 3c 24          	mov    (%r12),%rdi
   21f5b:	e8 10 02 fe ff       	call   2170 <fflush@plt>
   21f60:	83 3d c1 21 01 00 06 	cmpl   $0x6,0x121c1(%rip)        # 34128 <dbglvl>
   21f67:	7c 27                	jl     21f90 <spec_mem_putc+0xf0>
   21f69:	4a 8d 04 fb          	lea    (%rbx,%r15,8),%rax
   21f6d:	48 83 c0 10          	add    $0x10,%rax
   21f71:	48 8b 08             	mov    (%rax),%rcx
   21f74:	48 8d 3d 5b ae 00 00 	lea    0xae5b(%rip),%rdi        # 2cdd6 <uint64_to_nicestr.suffix+0xb76>
   21f7b:	89 ee                	mov    %ebp,%esi
   21f7d:	48 89 da             	mov    %rbx,%rdx
   21f80:	31 c0                	xor    %eax,%eax
   21f82:	e8 19 01 fe ff       	call   20a0 <printf@plt>
   21f87:	49 8b 3c 24          	mov    (%r12),%rdi
   21f8b:	e8 e0 01 fe ff       	call   2170 <fflush@plt>
   21f90:	44 89 f0             	mov    %r14d,%eax
   21f93:	5b                   	pop    %rbx
   21f94:	41 5c                	pop    %r12
   21f96:	41 5e                	pop    %r14
   21f98:	41 5f                	pop    %r15
   21f9a:	5d                   	pop    %rbp
   21f9b:	c3                   	ret    
   21f9c:	48 8b 05 55 20 01 00 	mov    0x12055(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21fa3:	48 8b 38             	mov    (%rax),%rdi
   21fa6:	48 8d 35 c3 ad 00 00 	lea    0xadc3(%rip),%rsi        # 2cd70 <uint64_to_nicestr.suffix+0xb10>
   21fad:	89 ea                	mov    %ebp,%edx
   21faf:	48 89 d9             	mov    %rbx,%rcx
   21fb2:	45 89 f8             	mov    %r15d,%r8d
   21fb5:	31 c0                	xor    %eax,%eax
   21fb7:	e8 74 01 fe ff       	call   2130 <fprintf@plt>
   21fbc:	bf 01 00 00 00       	mov    $0x1,%edi
   21fc1:	e8 fa 01 fe ff       	call   21c0 <exit@plt>
   21fc6:	48 8b 05 2b 20 01 00 	mov    0x1202b(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   21fcd:	48 8b 38             	mov    (%rax),%rdi
   21fd0:	48 8d 35 d6 ad 00 00 	lea    0xadd6(%rip),%rsi        # 2cdad <uint64_to_nicestr.suffix+0xb4d>
   21fd7:	89 ea                	mov    %ebp,%edx
   21fd9:	48 89 d9             	mov    %rbx,%rcx
   21fdc:	31 c0                	xor    %eax,%eax
   21fde:	e8 4d 01 fe ff       	call   2130 <fprintf@plt>
   21fe3:	bf 01 00 00 00       	mov    $0x1,%edi
   21fe8:	e8 d3 01 fe ff       	call   21c0 <exit@plt>
   21fed:	0f 1f 00             	nopl   (%rax)

0000000000021ff0 <spec_mem_feof>:
   21ff0:	41 56                	push   %r14
   21ff2:	53                   	push   %rbx
   21ff3:	50                   	push   %rax
   21ff4:	89 d1                	mov    %edx,%ecx
   21ff6:	89 f0                	mov    %esi,%eax
   21ff8:	48 89 fb             	mov    %rdi,%rbx
   21ffb:	85 d2                	test   %edx,%edx
   21ffd:	78 6a                	js     22069 <spec_mem_feof+0x79>
   21fff:	39 c1                	cmp    %eax,%ecx
   22001:	73 66                	jae    22069 <spec_mem_feof+0x79>
   22003:	83 3d 1e 21 01 00 05 	cmpl   $0x5,0x1211e(%rip)        # 34128 <dbglvl>
   2200a:	89 ca                	mov    %ecx,%edx
   2200c:	4c 8d 34 92          	lea    (%rdx,%rdx,4),%r14
   22010:	7c 40                	jl     22052 <spec_mem_feof+0x62>
   22012:	4e 8b 54 f3 10       	mov    0x10(%rbx,%r14,8),%r10
   22017:	4e 8b 4c f3 08       	mov    0x8(%rbx,%r14,8),%r9
   2201c:	45 31 c0             	xor    %r8d,%r8d
   2201f:	4d 39 ca             	cmp    %r9,%r10
   22022:	41 0f 9d c0          	setge  %r8b
   22026:	48 8d 3d 0e ae 00 00 	lea    0xae0e(%rip),%rdi        # 2ce3b <uint64_to_nicestr.suffix+0xbdb>
   2202d:	48 89 de             	mov    %rbx,%rsi
   22030:	89 c2                	mov    %eax,%edx
   22032:	31 c0                	xor    %eax,%eax
   22034:	42 ff 34 f3          	push   (%rbx,%r14,8)
   22038:	41 52                	push   %r10
   2203a:	e8 61 00 fe ff       	call   20a0 <printf@plt>
   2203f:	48 83 c4 10          	add    $0x10,%rsp
   22043:	48 8b 05 86 1f 01 00 	mov    0x11f86(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2204a:	48 8b 38             	mov    (%rax),%rdi
   2204d:	e8 1e 01 fe ff       	call   2170 <fflush@plt>
   22052:	4a 8b 4c f3 10       	mov    0x10(%rbx,%r14,8),%rcx
   22057:	31 c0                	xor    %eax,%eax
   22059:	4a 3b 4c f3 08       	cmp    0x8(%rbx,%r14,8),%rcx
   2205e:	0f 9d c0             	setge  %al
   22061:	48 83 c4 08          	add    $0x8,%rsp
   22065:	5b                   	pop    %rbx
   22066:	41 5e                	pop    %r14
   22068:	c3                   	ret    
   22069:	48 8b 15 88 1f 01 00 	mov    0x11f88(%rip),%rdx        # 33ff8 <stderr@GLIBC_2.2.5>
   22070:	48 8b 3a             	mov    (%rdx),%rdi
   22073:	48 8d 35 88 ad 00 00 	lea    0xad88(%rip),%rsi        # 2ce02 <uint64_to_nicestr.suffix+0xba2>
   2207a:	89 ca                	mov    %ecx,%edx
   2207c:	48 89 d9             	mov    %rbx,%rcx
   2207f:	41 89 c0             	mov    %eax,%r8d
   22082:	31 c0                	xor    %eax,%eax
   22084:	e8 a7 00 fe ff       	call   2130 <fprintf@plt>
   22089:	bf 01 00 00 00       	mov    $0x1,%edi
   2208e:	e8 2d 01 fe ff       	call   21c0 <exit@plt>
   22093:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   2209a:	84 00 00 00 00 00 

00000000000220a0 <spec_mem_close>:
   220a0:	50                   	push   %rax
   220a1:	85 d2                	test   %edx,%edx
   220a3:	78 58                	js     220fd <spec_mem_close+0x5d>
   220a5:	39 f2                	cmp    %esi,%edx
   220a7:	73 54                	jae    220fd <spec_mem_close+0x5d>
   220a9:	89 d0                	mov    %edx,%eax
   220ab:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   220af:	83 7c c7 18 01       	cmpl   $0x1,0x18(%rdi,%rax,8)
   220b4:	75 12                	jne    220c8 <spec_mem_close+0x28>
   220b6:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
   220ba:	48 83 c0 18          	add    $0x18,%rax
   220be:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   220c4:	31 c0                	xor    %eax,%eax
   220c6:	59                   	pop    %rcx
   220c7:	c3                   	ret    
   220c8:	48 8b 0d 29 1f 01 00 	mov    0x11f29(%rip),%rcx        # 33ff8 <stderr@GLIBC_2.2.5>
   220cf:	48 89 f8             	mov    %rdi,%rax
   220d2:	48 8b 39             	mov    (%rcx),%rdi
   220d5:	89 f1                	mov    %esi,%ecx
   220d7:	48 8d 35 f1 ad 00 00 	lea    0xadf1(%rip),%rsi        # 2cecf <uint64_to_nicestr.suffix+0xc6f>
   220de:	41 89 d0             	mov    %edx,%r8d
   220e1:	48 89 c2             	mov    %rax,%rdx
   220e4:	31 c0                	xor    %eax,%eax
   220e6:	e8 45 00 fe ff       	call   2130 <fprintf@plt>
   220eb:	e8 60 ff fd ff       	call   2050 <__errno_location@plt>
   220f0:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   220f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   220fb:	59                   	pop    %rcx
   220fc:	c3                   	ret    
   220fd:	48 8b 05 f4 1e 01 00 	mov    0x11ef4(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   22104:	48 89 f9             	mov    %rdi,%rcx
   22107:	48 8b 38             	mov    (%rax),%rdi
   2210a:	41 89 f0             	mov    %esi,%r8d
   2210d:	48 8d 35 7d ad 00 00 	lea    0xad7d(%rip),%rsi        # 2ce91 <uint64_to_nicestr.suffix+0xc31>
   22114:	31 c0                	xor    %eax,%eax
   22116:	e8 15 00 fe ff       	call   2130 <fprintf@plt>
   2211b:	bf 01 00 00 00       	mov    $0x1,%edi
   22120:	e8 9b 00 fe ff       	call   21c0 <exit@plt>
   22125:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   2212c:	00 00 00 00 

0000000000022130 <spec_empty>:
   22130:	31 c0                	xor    %eax,%eax
   22132:	c3                   	ret    
   22133:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   2213a:	84 00 00 00 00 00 

0000000000022140 <spec_initbufs>:
   22140:	c3                   	ret    
   22141:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   22148:	0f 1f 84 00 00 00 00 
   2214f:	00 

0000000000022150 <spec_compress>:
   22150:	55                   	push   %rbp
   22151:	41 57                	push   %r15
   22153:	41 56                	push   %r14
   22155:	53                   	push   %rbx
   22156:	50                   	push   %rax
   22157:	48 8b 05 a2 64 01 00 	mov    0x164a2(%rip),%rax        # 38600 <spec_fd>
   2215e:	48 63 ff             	movslq %edi,%rdi
   22161:	48 8d 0c fd 00 00 00 	lea    0x0(,%rdi,8),%rcx
   22168:	00 
   22169:	48 8d 1c 89          	lea    (%rcx,%rcx,4),%rbx
   2216d:	8b 6c 18 18          	mov    0x18(%rax,%rbx,1),%ebp
   22171:	48 63 f6             	movslq %esi,%rsi
   22174:	48 8d 0c f5 00 00 00 	lea    0x0(,%rsi,8),%rcx
   2217b:	00 
   2217c:	4c 8d 34 89          	lea    (%rcx,%rcx,4),%r14
   22180:	46 8b 7c 30 18       	mov    0x18(%rax,%r14,1),%r15d
   22185:	42 c7 44 30 18 01 00 	movl   $0x1,0x18(%rax,%r14,1)
   2218c:	00 00 
   2218e:	48 8b 05 6b 64 01 00 	mov    0x1646b(%rip),%rax        # 38600 <spec_fd>
   22195:	c7 44 18 18 01 00 00 	movl   $0x1,0x18(%rax,%rbx,1)
   2219c:	00 
   2219d:	e8 4e 0a fe ff       	call   2bf0 <compressStream>
   221a2:	48 8b 05 57 64 01 00 	mov    0x16457(%rip),%rax        # 38600 <spec_fd>
   221a9:	89 6c 18 18          	mov    %ebp,0x18(%rax,%rbx,1)
   221ad:	48 8b 05 4c 64 01 00 	mov    0x1644c(%rip),%rax        # 38600 <spec_fd>
   221b4:	46 89 7c 30 18       	mov    %r15d,0x18(%rax,%r14,1)
   221b9:	48 83 c4 08          	add    $0x8,%rsp
   221bd:	5b                   	pop    %rbx
   221be:	41 5e                	pop    %r14
   221c0:	41 5f                	pop    %r15
   221c2:	5d                   	pop    %rbp
   221c3:	c3                   	ret    
   221c4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   221cb:	00 00 00 00 00 

00000000000221d0 <debug_time>:
   221d0:	31 c0                	xor    %eax,%eax
   221d2:	c3                   	ret    
   221d3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   221da:	84 00 00 00 00 00 

00000000000221e0 <sum_str_to_hex>:
   221e0:	55                   	push   %rbp
   221e1:	41 57                	push   %r15
   221e3:	41 56                	push   %r14
   221e5:	41 55                	push   %r13
   221e7:	41 54                	push   %r12
   221e9:	53                   	push   %rbx
   221ea:	50                   	push   %rax
   221eb:	89 f3                	mov    %esi,%ebx
   221ed:	49 89 fe             	mov    %rdi,%r14
   221f0:	48 63 fe             	movslq %esi,%rdi
   221f3:	48 c1 ef 03          	shr    $0x3,%rdi
   221f7:	e8 64 ff fd ff       	call   2160 <malloc@plt>
   221fc:	48 85 c0             	test   %rax,%rax
   221ff:	0f 84 9f 00 00 00    	je     222a4 <sum_str_to_hex+0xc4>
   22205:	49 89 c7             	mov    %rax,%r15
   22208:	83 fb 08             	cmp    $0x8,%ebx
   2220b:	0f 8c 81 00 00 00    	jl     22292 <sum_str_to_hex+0xb2>
   22211:	c1 eb 03             	shr    $0x3,%ebx
   22214:	45 31 e4             	xor    %r12d,%r12d
   22217:	eb 1e                	jmp    22237 <sum_str_to_hex+0x57>
   22219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22220:	40 80 c5 d0          	add    $0xd0,%bpl
   22224:	41 c0 e5 04          	shl    $0x4,%r13b
   22228:	41 08 ed             	or     %bpl,%r13b
   2222b:	47 88 2c 27          	mov    %r13b,(%r15,%r12,1)
   2222f:	49 ff c4             	inc    %r12
   22232:	4c 39 e3             	cmp    %r12,%rbx
   22235:	74 5b                	je     22292 <sum_str_to_hex+0xb2>
   22237:	47 0f b6 2c 66       	movzbl (%r14,%r12,2),%r13d
   2223c:	41 80 fd 3a          	cmp    $0x3a,%r13b
   22240:	7c 2e                	jl     22270 <sum_str_to_hex+0x90>
   22242:	e8 a9 ff fd ff       	call   21f0 <__ctype_tolower_loc@plt>
   22247:	48 8b 00             	mov    (%rax),%rax
   2224a:	46 0f b6 2c a8       	movzbl (%rax,%r13,4),%r13d
   2224f:	41 80 c5 a9          	add    $0xa9,%r13b
   22253:	43 0f b6 6c 66 01    	movzbl 0x1(%r14,%r12,2),%ebp
   22259:	40 80 fd 3a          	cmp    $0x3a,%bpl
   2225d:	7c c1                	jl     22220 <sum_str_to_hex+0x40>
   2225f:	eb 1f                	jmp    22280 <sum_str_to_hex+0xa0>
   22261:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   22268:	0f 1f 84 00 00 00 00 
   2226f:	00 
   22270:	41 80 c5 d0          	add    $0xd0,%r13b
   22274:	43 0f b6 6c 66 01    	movzbl 0x1(%r14,%r12,2),%ebp
   2227a:	40 80 fd 3a          	cmp    $0x3a,%bpl
   2227e:	7c a0                	jl     22220 <sum_str_to_hex+0x40>
   22280:	e8 6b ff fd ff       	call   21f0 <__ctype_tolower_loc@plt>
   22285:	48 8b 00             	mov    (%rax),%rax
   22288:	0f b6 2c a8          	movzbl (%rax,%rbp,4),%ebp
   2228c:	40 80 c5 a9          	add    $0xa9,%bpl
   22290:	eb 92                	jmp    22224 <sum_str_to_hex+0x44>
   22292:	4c 89 f8             	mov    %r15,%rax
   22295:	48 83 c4 08          	add    $0x8,%rsp
   22299:	5b                   	pop    %rbx
   2229a:	41 5c                	pop    %r12
   2229c:	41 5d                	pop    %r13
   2229e:	41 5e                	pop    %r14
   222a0:	41 5f                	pop    %r15
   222a2:	5d                   	pop    %rbp
   222a3:	c3                   	ret    
   222a4:	48 8b 05 4d 1d 01 00 	mov    0x11d4d(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   222ab:	48 8b 38             	mov    (%rax),%rdi
   222ae:	8d 53 07             	lea    0x7(%rbx),%edx
   222b1:	85 db                	test   %ebx,%ebx
   222b3:	0f 49 d3             	cmovns %ebx,%edx
   222b6:	c1 fa 03             	sar    $0x3,%edx
   222b9:	48 8d 35 34 ac 00 00 	lea    0xac34(%rip),%rsi        # 2cef4 <uint64_to_nicestr.suffix+0xc94>
   222c0:	31 c0                	xor    %eax,%eax
   222c2:	e8 69 fe fd ff       	call   2130 <fprintf@plt>
   222c7:	bf 01 00 00 00       	mov    $0x1,%edi
   222cc:	e8 ef fe fd ff       	call   21c0 <exit@plt>
   222d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   222d8:	0f 1f 84 00 00 00 00 
   222df:	00 

00000000000222e0 <spec_mem_alloc_fds>:
   222e0:	53                   	push   %rbx
   222e1:	89 fb                	mov    %edi,%ebx
   222e3:	83 3d 3e 1e 01 00 04 	cmpl   $0x4,0x11e3e(%rip)        # 34128 <dbglvl>
   222ea:	7c 32                	jl     2231e <spec_mem_alloc_fds+0x3e>
   222ec:	83 fb 03             	cmp    $0x3,%ebx
   222ef:	48 8d 05 89 ac 00 00 	lea    0xac89(%rip),%rax        # 2cf7f <uint64_to_nicestr.suffix+0xd1f>
   222f6:	48 8d 35 8e ac 00 00 	lea    0xac8e(%rip),%rsi        # 2cf8b <uint64_to_nicestr.suffix+0xd2b>
   222fd:	48 0f 44 f0          	cmove  %rax,%rsi
   22301:	48 8d 3d 5f ac 00 00 	lea    0xac5f(%rip),%rdi        # 2cf67 <uint64_to_nicestr.suffix+0xd07>
   22308:	31 c0                	xor    %eax,%eax
   2230a:	e8 91 fd fd ff       	call   20a0 <printf@plt>
   2230f:	48 8b 05 ba 1c 01 00 	mov    0x11cba(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   22316:	48 8b 38             	mov    (%rax),%rdi
   22319:	e8 52 fe fd ff       	call   2170 <fflush@plt>
   2231e:	8d 43 01             	lea    0x1(%rbx),%eax
   22321:	48 c1 e0 03          	shl    $0x3,%rax
   22325:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   22329:	bf 01 00 00 00       	mov    $0x1,%edi
   2232e:	e8 cd fd fd ff       	call   2100 <calloc@plt>
   22333:	48 85 c0             	test   %rax,%rax
   22336:	74 33                	je     2236b <spec_mem_alloc_fds+0x8b>
   22338:	83 3d e9 1d 01 00 05 	cmpl   $0x5,0x11de9(%rip)        # 34128 <dbglvl>
   2233f:	7c 28                	jl     22369 <spec_mem_alloc_fds+0x89>
   22341:	48 8d 3d 83 ac 00 00 	lea    0xac83(%rip),%rdi        # 2cfcb <uint64_to_nicestr.suffix+0xd6b>
   22348:	89 de                	mov    %ebx,%esi
   2234a:	48 89 c2             	mov    %rax,%rdx
   2234d:	48 89 c3             	mov    %rax,%rbx
   22350:	31 c0                	xor    %eax,%eax
   22352:	e8 49 fd fd ff       	call   20a0 <printf@plt>
   22357:	48 8b 05 72 1c 01 00 	mov    0x11c72(%rip),%rax        # 33fd0 <stdout@GLIBC_2.2.5>
   2235e:	48 8b 38             	mov    (%rax),%rdi
   22361:	e8 0a fe fd ff       	call   2170 <fflush@plt>
   22366:	48 89 d8             	mov    %rbx,%rax
   22369:	5b                   	pop    %rbx
   2236a:	c3                   	ret    
   2236b:	48 8b 0d 86 1c 01 00 	mov    0x11c86(%rip),%rcx        # 33ff8 <stderr@GLIBC_2.2.5>
   22372:	48 8b 09             	mov    (%rcx),%rcx
   22375:	48 8d 3d 1a ac 00 00 	lea    0xac1a(%rip),%rdi        # 2cf96 <uint64_to_nicestr.suffix+0xd36>
   2237c:	be 34 00 00 00       	mov    $0x34,%esi
   22381:	ba 01 00 00 00       	mov    $0x1,%edx
   22386:	48 89 c3             	mov    %rax,%rbx
   22389:	e8 42 fe fd ff       	call   21d0 <fwrite@plt>
   2238e:	eb d6                	jmp    22366 <spec_mem_alloc_fds+0x86>

0000000000022390 <spec_mem_free_fds>:
   22390:	55                   	push   %rbp
   22391:	41 57                	push   %r15
   22393:	41 56                	push   %r14
   22395:	53                   	push   %rbx
   22396:	50                   	push   %rax
   22397:	89 f5                	mov    %esi,%ebp
   22399:	48 89 fb             	mov    %rdi,%rbx
   2239c:	83 3d 85 1d 01 00 04 	cmpl   $0x4,0x11d85(%rip)        # 34128 <dbglvl>
   223a3:	7c 5a                	jl     223ff <spec_mem_free_fds+0x6f>
   223a5:	48 39 1d 54 62 01 00 	cmp    %rbx,0x16254(%rip)        # 38600 <spec_fd>
   223ac:	48 8d 05 4d ac 00 00 	lea    0xac4d(%rip),%rax        # 2d000 <uint64_to_nicestr.suffix+0xda0>
   223b3:	48 8d 35 d1 ab 00 00 	lea    0xabd1(%rip),%rsi        # 2cf8b <uint64_to_nicestr.suffix+0xd2b>
   223ba:	48 0f 44 f0          	cmove  %rax,%rsi
   223be:	48 8d 3d 24 ac 00 00 	lea    0xac24(%rip),%rdi        # 2cfe9 <uint64_to_nicestr.suffix+0xd89>
   223c5:	31 c0                	xor    %eax,%eax
   223c7:	e8 d4 fc fd ff       	call   20a0 <printf@plt>
   223cc:	4c 8b 35 fd 1b 01 00 	mov    0x11bfd(%rip),%r14        # 33fd0 <stdout@GLIBC_2.2.5>
   223d3:	49 8b 3e             	mov    (%r14),%rdi
   223d6:	e8 95 fd fd ff       	call   2170 <fflush@plt>
   223db:	83 3d 46 1d 01 00 05 	cmpl   $0x5,0x11d46(%rip)        # 34128 <dbglvl>
   223e2:	7c 1b                	jl     223ff <spec_mem_free_fds+0x6f>
   223e4:	48 8d 3d 1d ac 00 00 	lea    0xac1d(%rip),%rdi        # 2d008 <uint64_to_nicestr.suffix+0xda8>
   223eb:	48 89 de             	mov    %rbx,%rsi
   223ee:	89 ea                	mov    %ebp,%edx
   223f0:	31 c0                	xor    %eax,%eax
   223f2:	e8 a9 fc fd ff       	call   20a0 <printf@plt>
   223f7:	49 8b 3e             	mov    (%r14),%rdi
   223fa:	e8 71 fd fd ff       	call   2170 <fflush@plt>
   223ff:	48 85 db             	test   %rbx,%rbx
   22402:	74 3f                	je     22443 <spec_mem_free_fds+0xb3>
   22404:	85 ed                	test   %ebp,%ebp
   22406:	74 3b                	je     22443 <spec_mem_free_fds+0xb3>
   22408:	89 e8                	mov    %ebp,%eax
   2240a:	48 c1 e0 03          	shl    $0x3,%rax
   2240e:	4c 8d 34 80          	lea    (%rax,%rax,4),%r14
   22412:	45 31 ff             	xor    %r15d,%r15d
   22415:	eb 12                	jmp    22429 <spec_mem_free_fds+0x99>
   22417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2241e:	00 00 
   22420:	49 83 c7 28          	add    $0x28,%r15
   22424:	4d 39 fe             	cmp    %r15,%r14
   22427:	74 1a                	je     22443 <spec_mem_free_fds+0xb3>
   22429:	4a 8b 7c 3b 20       	mov    0x20(%rbx,%r15,1),%rdi
   2242e:	48 85 ff             	test   %rdi,%rdi
   22431:	74 ed                	je     22420 <spec_mem_free_fds+0x90>
   22433:	e8 f8 fb fd ff       	call   2030 <free@plt>
   22438:	4a c7 44 3b 20 00 00 	movq   $0x0,0x20(%rbx,%r15,1)
   2243f:	00 00 
   22441:	eb dd                	jmp    22420 <spec_mem_free_fds+0x90>
   22443:	48 89 df             	mov    %rbx,%rdi
   22446:	48 83 c4 08          	add    $0x8,%rsp
   2244a:	5b                   	pop    %rbx
   2244b:	41 5e                	pop    %r14
   2244d:	41 5f                	pop    %r15
   2244f:	5d                   	pop    %rbp
   22450:	e9 db fb fd ff       	jmp    2030 <free@plt>
   22455:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2245c:	00 00 00 
   2245f:	90                   	nop

0000000000022460 <sha_init>:
   22460:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%rdi)
   22467:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2246e:	48 b8 08 c9 bc f3 67 	movabs $0x6a09e667f3bcc908,%rax
   22475:	e6 09 6a 
   22478:	48 89 47 08          	mov    %rax,0x8(%rdi)
   2247c:	48 b8 3b a7 ca 84 85 	movabs $0xbb67ae8584caa73b,%rax
   22483:	ae 67 bb 
   22486:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2248a:	48 b8 2b f8 94 fe 72 	movabs $0x3c6ef372fe94f82b,%rax
   22491:	f3 6e 3c 
   22494:	48 89 47 18          	mov    %rax,0x18(%rdi)
   22498:	48 b8 f1 36 1d 5f 3a 	movabs $0xa54ff53a5f1d36f1,%rax
   2249f:	f5 4f a5 
   224a2:	48 89 47 20          	mov    %rax,0x20(%rdi)
   224a6:	48 b8 d1 82 e6 ad 7f 	movabs $0x510e527fade682d1,%rax
   224ad:	52 0e 51 
   224b0:	48 89 47 28          	mov    %rax,0x28(%rdi)
   224b4:	48 b8 1f 6c 3e 2b 8c 	movabs $0x9b05688c2b3e6c1f,%rax
   224bb:	68 05 9b 
   224be:	48 89 47 30          	mov    %rax,0x30(%rdi)
   224c2:	48 b8 6b bd 41 fb ab 	movabs $0x1f83d9abfb41bd6b,%rax
   224c9:	d9 83 1f 
   224cc:	48 89 47 38          	mov    %rax,0x38(%rdi)
   224d0:	48 b8 79 21 7e 13 19 	movabs $0x5be0cd19137e2179,%rax
   224d7:	cd e0 5b 
   224da:	48 89 47 40          	mov    %rax,0x40(%rdi)
   224de:	c3                   	ret    
   224df:	90                   	nop

00000000000224e0 <sha_process>:
   224e0:	55                   	push   %rbp
   224e1:	41 57                	push   %r15
   224e3:	41 56                	push   %r14
   224e5:	41 55                	push   %r13
   224e7:	41 54                	push   %r12
   224e9:	53                   	push   %rbx
   224ea:	50                   	push   %rax
   224eb:	89 d3                	mov    %edx,%ebx
   224ed:	49 89 f5             	mov    %rsi,%r13
   224f0:	49 89 fe             	mov    %rdi,%r14
   224f3:	4c 63 e2             	movslq %edx,%r12
   224f6:	4c 89 e7             	mov    %r12,%rdi
   224f9:	e8 62 fc fd ff       	call   2160 <malloc@plt>
   224fe:	48 85 c0             	test   %rax,%rax
   22501:	0f 84 b8 00 00 00    	je     225bf <sha_process+0xdf>
   22507:	49 89 c7             	mov    %rax,%r15
   2250a:	48 89 c7             	mov    %rax,%rdi
   2250d:	4c 89 ee             	mov    %r13,%rsi
   22510:	4c 89 e2             	mov    %r12,%rdx
   22513:	e8 38 fc fd ff       	call   2150 <memcpy@plt>
   22518:	45 85 e4             	test   %r12d,%r12d
   2251b:	0f 84 88 00 00 00    	je     225a9 <sha_process+0xc9>
   22521:	4d 8d 66 4c          	lea    0x4c(%r14),%r12
   22525:	4d 89 fd             	mov    %r15,%r13
   22528:	eb 23                	jmp    2254d <sha_process+0x6d>
   2252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22530:	4c 89 f7             	mov    %r14,%rdi
   22533:	4c 89 ee             	mov    %r13,%rsi
   22536:	e8 c5 00 00 00       	call   22600 <sha_compress>
   2253b:	49 81 06 00 04 00 00 	addq   $0x400,(%r14)
   22542:	49 83 ed 80          	sub    $0xffffffffffffff80,%r13
   22546:	83 c3 80             	add    $0xffffff80,%ebx
   22549:	85 db                	test   %ebx,%ebx
   2254b:	74 5c                	je     225a9 <sha_process+0xc9>
   2254d:	41 8b 7e 48          	mov    0x48(%r14),%edi
   22551:	81 fb 80 00 00 00    	cmp    $0x80,%ebx
   22557:	72 04                	jb     2255d <sha_process+0x7d>
   22559:	85 ff                	test   %edi,%edi
   2255b:	74 d3                	je     22530 <sha_process+0x50>
   2255d:	bd 80 00 00 00       	mov    $0x80,%ebp
   22562:	29 fd                	sub    %edi,%ebp
   22564:	39 eb                	cmp    %ebp,%ebx
   22566:	0f 42 eb             	cmovb  %ebx,%ebp
   22569:	4c 01 e7             	add    %r12,%rdi
   2256c:	4c 89 ee             	mov    %r13,%rsi
   2256f:	48 89 ea             	mov    %rbp,%rdx
   22572:	e8 d9 fb fd ff       	call   2150 <memcpy@plt>
   22577:	89 e8                	mov    %ebp,%eax
   22579:	41 03 46 48          	add    0x48(%r14),%eax
   2257d:	29 eb                	sub    %ebp,%ebx
   2257f:	41 89 46 48          	mov    %eax,0x48(%r14)
   22583:	49 01 ed             	add    %rbp,%r13
   22586:	3d 80 00 00 00       	cmp    $0x80,%eax
   2258b:	75 bc                	jne    22549 <sha_process+0x69>
   2258d:	4c 89 f7             	mov    %r14,%rdi
   22590:	4c 89 e6             	mov    %r12,%rsi
   22593:	e8 68 00 00 00       	call   22600 <sha_compress>
   22598:	49 81 06 00 04 00 00 	addq   $0x400,(%r14)
   2259f:	41 c7 46 48 00 00 00 	movl   $0x0,0x48(%r14)
   225a6:	00 
   225a7:	eb a0                	jmp    22549 <sha_process+0x69>
   225a9:	4c 89 ff             	mov    %r15,%rdi
   225ac:	48 83 c4 08          	add    $0x8,%rsp
   225b0:	5b                   	pop    %rbx
   225b1:	41 5c                	pop    %r12
   225b3:	41 5d                	pop    %r13
   225b5:	41 5e                	pop    %r14
   225b7:	41 5f                	pop    %r15
   225b9:	5d                   	pop    %rbp
   225ba:	e9 71 fa fd ff       	jmp    2030 <free@plt>
   225bf:	48 8b 05 32 1a 01 00 	mov    0x11a32(%rip),%rax        # 33ff8 <stderr@GLIBC_2.2.5>
   225c6:	48 8b 38             	mov    (%rax),%rdi
   225c9:	48 8d 35 a5 aa 00 00 	lea    0xaaa5(%rip),%rsi        # 2d075 <uint64_to_nicestr.suffix+0xe15>
   225d0:	48 8d 0d c5 aa 00 00 	lea    0xaac5(%rip),%rcx        # 2d09c <uint64_to_nicestr.suffix+0xe3c>
   225d7:	4c 89 e2             	mov    %r12,%rdx
   225da:	41 b8 81 00 00 00    	mov    $0x81,%r8d
   225e0:	31 c0                	xor    %eax,%eax
   225e2:	e8 49 fb fd ff       	call   2130 <fprintf@plt>
   225e7:	bf 01 00 00 00       	mov    $0x1,%edi
   225ec:	e8 cf fb fd ff       	call   21c0 <exit@plt>
   225f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   225f8:	0f 1f 84 00 00 00 00 
   225ff:	00 

0000000000022600 <sha_compress>:
   22600:	55                   	push   %rbp
   22601:	41 57                	push   %r15
   22603:	41 56                	push   %r14
   22605:	41 55                	push   %r13
   22607:	41 54                	push   %r12
   22609:	53                   	push   %rbx
   2260a:	48 81 ec 08 02 00 00 	sub    $0x208,%rsp
   22611:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
   22615:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   22619:	4c 8b 57 18          	mov    0x18(%rdi),%r10
   2261d:	4c 8b 47 20          	mov    0x20(%rdi),%r8
   22621:	48 8b 47 28          	mov    0x28(%rdi),%rax
   22625:	48 8b 4f 30          	mov    0x30(%rdi),%rcx
   22629:	4c 8b 5f 38          	mov    0x38(%rdi),%r11
   2262d:	48 8b 5f 40          	mov    0x40(%rdi),%rbx
   22631:	45 31 f6             	xor    %r14d,%r14d
   22634:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   2263b:	00 00 00 00 00 
   22640:	4e 8b 3c f6          	mov    (%rsi,%r14,8),%r15
   22644:	49 0f cf             	bswap  %r15
   22647:	4e 89 7c f4 80       	mov    %r15,-0x80(%rsp,%r14,8)
   2264c:	49 ff c6             	inc    %r14
   2264f:	49 83 fe 10          	cmp    $0x10,%r14
   22653:	75 eb                	jne    22640 <sha_compress+0x40>
   22655:	be 10 00 00 00       	mov    $0x10,%esi
   2265a:	4c 8b 74 24 80       	mov    -0x80(%rsp),%r14
   2265f:	90                   	nop
   22660:	4c 8b bc f4 08 ff ff 	mov    -0xf8(%rsp,%rsi,8),%r15
   22667:	ff 
   22668:	4c 8b a4 f4 70 ff ff 	mov    -0x90(%rsp,%rsi,8),%r12
   2266f:	ff 
   22670:	4d 89 e5             	mov    %r12,%r13
   22673:	49 c1 c5 2d          	rol    $0x2d,%r13
   22677:	4c 89 e5             	mov    %r12,%rbp
   2267a:	48 c1 c5 03          	rol    $0x3,%rbp
   2267e:	4c 31 ed             	xor    %r13,%rbp
   22681:	49 c1 ec 06          	shr    $0x6,%r12
   22685:	49 31 ec             	xor    %rbp,%r12
   22688:	4c 03 a4 f4 48 ff ff 	add    -0xb8(%rsp,%rsi,8),%r12
   2268f:	ff 
   22690:	4d 89 fd             	mov    %r15,%r13
   22693:	49 d1 cd             	ror    %r13
   22696:	4c 89 fd             	mov    %r15,%rbp
   22699:	48 c1 c5 38          	rol    $0x38,%rbp
   2269d:	4c 31 ed             	xor    %r13,%rbp
   226a0:	4d 89 fd             	mov    %r15,%r13
   226a3:	49 c1 ed 07          	shr    $0x7,%r13
   226a7:	49 31 ed             	xor    %rbp,%r13
   226aa:	4d 01 f5             	add    %r14,%r13
   226ad:	4d 01 e5             	add    %r12,%r13
   226b0:	4c 89 6c f4 80       	mov    %r13,-0x80(%rsp,%rsi,8)
   226b5:	48 ff c6             	inc    %rsi
   226b8:	4d 89 fe             	mov    %r15,%r14
   226bb:	48 83 fe 50          	cmp    $0x50,%rsi
   226bf:	75 9f                	jne    22660 <sha_compress+0x60>
   226c1:	48 c7 c6 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rsi
   226c8:	4c 8d 35 e1 a9 00 00 	lea    0xa9e1(%rip),%r14        # 2d0b0 <K>
   226cf:	90                   	nop
   226d0:	49 89 c7             	mov    %rax,%r15
   226d3:	49 c1 c7 32          	rol    $0x32,%r15
   226d7:	49 89 c4             	mov    %rax,%r12
   226da:	49 c1 c4 2e          	rol    $0x2e,%r12
   226de:	4d 31 fc             	xor    %r15,%r12
   226e1:	49 89 c7             	mov    %rax,%r15
   226e4:	49 c1 c7 17          	rol    $0x17,%r15
   226e8:	4d 31 e7             	xor    %r12,%r15
   226eb:	49 01 df             	add    %rbx,%r15
   226ee:	4c 89 db             	mov    %r11,%rbx
   226f1:	48 31 cb             	xor    %rcx,%rbx
   226f4:	4d 03 7c f6 40       	add    0x40(%r14,%rsi,8),%r15
   226f9:	4c 03 7c f4 c0       	add    -0x40(%rsp,%rsi,8),%r15
   226fe:	48 21 c3             	and    %rax,%rbx
   22701:	4d 89 cc             	mov    %r9,%r12
   22704:	49 c1 c4 24          	rol    $0x24,%r12
   22708:	4c 31 db             	xor    %r11,%rbx
   2270b:	4d 89 cd             	mov    %r9,%r13
   2270e:	49 c1 c5 1e          	rol    $0x1e,%r13
   22712:	49 01 df             	add    %rbx,%r15
   22715:	4c 89 cd             	mov    %r9,%rbp
   22718:	48 c1 c5 19          	rol    $0x19,%rbp
   2271c:	4d 31 e5             	xor    %r12,%r13
   2271f:	4c 31 ed             	xor    %r13,%rbp
   22722:	49 89 d4             	mov    %rdx,%r12
   22725:	4d 09 cc             	or     %r9,%r12
   22728:	4d 21 d4             	and    %r10,%r12
   2272b:	48 89 d3             	mov    %rdx,%rbx
   2272e:	4c 21 cb             	and    %r9,%rbx
   22731:	4c 09 e3             	or     %r12,%rbx
   22734:	4d 01 f8             	add    %r15,%r8
   22737:	4d 89 c4             	mov    %r8,%r12
   2273a:	49 c1 c4 32          	rol    $0x32,%r12
   2273e:	48 01 eb             	add    %rbp,%rbx
   22741:	4d 89 c5             	mov    %r8,%r13
   22744:	49 c1 c5 2e          	rol    $0x2e,%r13
   22748:	4c 01 fb             	add    %r15,%rbx
   2274b:	4c 89 c5             	mov    %r8,%rbp
   2274e:	48 c1 c5 17          	rol    $0x17,%rbp
   22752:	4d 31 e5             	xor    %r12,%r13
   22755:	49 89 cf             	mov    %rcx,%r15
   22758:	49 31 c7             	xor    %rax,%r15
   2275b:	4d 21 c7             	and    %r8,%r15
   2275e:	49 31 cf             	xor    %rcx,%r15
   22761:	4d 01 df             	add    %r11,%r15
   22764:	4d 03 7c f6 48       	add    0x48(%r14,%rsi,8),%r15
   22769:	4c 31 ed             	xor    %r13,%rbp
   2276c:	49 01 ef             	add    %rbp,%r15
   2276f:	4c 03 7c f4 c8       	add    -0x38(%rsp,%rsi,8),%r15
   22774:	49 89 db             	mov    %rbx,%r11
   22777:	49 c1 c3 24          	rol    $0x24,%r11
   2277b:	49 89 dc             	mov    %rbx,%r12
   2277e:	49 c1 c4 1e          	rol    $0x1e,%r12
   22782:	4d 31 dc             	xor    %r11,%r12
   22785:	49 89 dd             	mov    %rbx,%r13
   22788:	49 c1 c5 19          	rol    $0x19,%r13
   2278c:	4d 31 e5             	xor    %r12,%r13
   2278f:	49 89 dc             	mov    %rbx,%r12
   22792:	4d 09 cc             	or     %r9,%r12
   22795:	49 21 d4             	and    %rdx,%r12
   22798:	49 89 db             	mov    %rbx,%r11
   2279b:	4d 21 cb             	and    %r9,%r11
   2279e:	4d 09 e3             	or     %r12,%r11
   227a1:	4d 01 eb             	add    %r13,%r11
   227a4:	4d 01 fa             	add    %r15,%r10
   227a7:	4d 01 fb             	add    %r15,%r11
   227aa:	4d 89 d7             	mov    %r10,%r15
   227ad:	49 c1 c7 32          	rol    $0x32,%r15
   227b1:	4d 89 d4             	mov    %r10,%r12
   227b4:	49 c1 c4 2e          	rol    $0x2e,%r12
   227b8:	4d 31 fc             	xor    %r15,%r12
   227bb:	4d 89 d7             	mov    %r10,%r15
   227be:	49 c1 c7 17          	rol    $0x17,%r15
   227c2:	4d 31 e7             	xor    %r12,%r15
   227c5:	4d 89 c4             	mov    %r8,%r12
   227c8:	49 31 c4             	xor    %rax,%r12
   227cb:	4d 21 d4             	and    %r10,%r12
   227ce:	49 03 4c f6 50       	add    0x50(%r14,%rsi,8),%rcx
   227d3:	49 31 c4             	xor    %rax,%r12
   227d6:	48 03 4c f4 d0       	add    -0x30(%rsp,%rsi,8),%rcx
   227db:	4c 01 e1             	add    %r12,%rcx
   227de:	4c 01 f9             	add    %r15,%rcx
   227e1:	4d 89 df             	mov    %r11,%r15
   227e4:	49 c1 c7 24          	rol    $0x24,%r15
   227e8:	4d 89 dc             	mov    %r11,%r12
   227eb:	49 c1 c4 1e          	rol    $0x1e,%r12
   227ef:	4d 31 fc             	xor    %r15,%r12
   227f2:	4d 89 df             	mov    %r11,%r15
   227f5:	49 c1 c7 19          	rol    $0x19,%r15
   227f9:	4d 31 e7             	xor    %r12,%r15
   227fc:	4d 89 dc             	mov    %r11,%r12
   227ff:	49 09 dc             	or     %rbx,%r12
   22802:	4d 21 cc             	and    %r9,%r12
   22805:	4d 89 dd             	mov    %r11,%r13
   22808:	49 21 dd             	and    %rbx,%r13
   2280b:	4d 09 e5             	or     %r12,%r13
   2280e:	4d 01 fd             	add    %r15,%r13
   22811:	48 01 ca             	add    %rcx,%rdx
   22814:	4c 01 e9             	add    %r13,%rcx
   22817:	49 89 d7             	mov    %rdx,%r15
   2281a:	49 c1 c7 32          	rol    $0x32,%r15
   2281e:	49 89 d4             	mov    %rdx,%r12
   22821:	49 c1 c4 2e          	rol    $0x2e,%r12
   22825:	4d 31 fc             	xor    %r15,%r12
   22828:	49 89 d7             	mov    %rdx,%r15
   2282b:	49 c1 c7 17          	rol    $0x17,%r15
   2282f:	4d 31 e7             	xor    %r12,%r15
   22832:	4d 89 d4             	mov    %r10,%r12
   22835:	4d 31 c4             	xor    %r8,%r12
   22838:	49 21 d4             	and    %rdx,%r12
   2283b:	4d 31 c4             	xor    %r8,%r12
   2283e:	49 03 44 f6 58       	add    0x58(%r14,%rsi,8),%rax
   22843:	48 03 44 f4 d8       	add    -0x28(%rsp,%rsi,8),%rax
   22848:	4c 01 e0             	add    %r12,%rax
   2284b:	49 89 cc             	mov    %rcx,%r12
   2284e:	49 c1 c4 24          	rol    $0x24,%r12
   22852:	4c 01 f8             	add    %r15,%rax
   22855:	49 89 cf             	mov    %rcx,%r15
   22858:	49 c1 c7 1e          	rol    $0x1e,%r15
   2285c:	4d 31 e7             	xor    %r12,%r15
   2285f:	49 89 cc             	mov    %rcx,%r12
   22862:	49 c1 c4 19          	rol    $0x19,%r12
   22866:	4d 31 fc             	xor    %r15,%r12
   22869:	49 89 cf             	mov    %rcx,%r15
   2286c:	4d 09 df             	or     %r11,%r15
   2286f:	49 21 df             	and    %rbx,%r15
   22872:	49 89 cd             	mov    %rcx,%r13
   22875:	4d 21 dd             	and    %r11,%r13
   22878:	4d 09 fd             	or     %r15,%r13
   2287b:	4d 01 e5             	add    %r12,%r13
   2287e:	49 01 c1             	add    %rax,%r9
   22881:	4d 89 cf             	mov    %r9,%r15
   22884:	49 c1 c7 32          	rol    $0x32,%r15
   22888:	4c 01 e8             	add    %r13,%rax
   2288b:	4d 89 cc             	mov    %r9,%r12
   2288e:	49 c1 c4 2e          	rol    $0x2e,%r12
   22892:	4d 31 fc             	xor    %r15,%r12
   22895:	4d 89 cf             	mov    %r9,%r15
   22898:	49 c1 c7 17          	rol    $0x17,%r15
   2289c:	4d 31 e7             	xor    %r12,%r15
   2289f:	49 89 d4             	mov    %rdx,%r12
   228a2:	4d 31 d4             	xor    %r10,%r12
   228a5:	4d 21 cc             	and    %r9,%r12
   228a8:	4d 03 44 f6 60       	add    0x60(%r14,%rsi,8),%r8
   228ad:	4c 03 44 f4 e0       	add    -0x20(%rsp,%rsi,8),%r8
   228b2:	4d 31 d4             	xor    %r10,%r12
   228b5:	4d 01 e0             	add    %r12,%r8
   228b8:	4d 89 c4             	mov    %r8,%r12
   228bb:	4d 01 fc             	add    %r15,%r12
   228be:	49 89 c0             	mov    %rax,%r8
   228c1:	49 c1 c0 24          	rol    $0x24,%r8
   228c5:	49 89 c7             	mov    %rax,%r15
   228c8:	49 c1 c7 1e          	rol    $0x1e,%r15
   228cc:	4d 31 c7             	xor    %r8,%r15
   228cf:	49 89 c5             	mov    %rax,%r13
   228d2:	49 c1 c5 19          	rol    $0x19,%r13
   228d6:	4d 31 fd             	xor    %r15,%r13
   228d9:	49 89 c7             	mov    %rax,%r15
   228dc:	49 09 cf             	or     %rcx,%r15
   228df:	4d 21 df             	and    %r11,%r15
   228e2:	49 89 c0             	mov    %rax,%r8
   228e5:	49 21 c8             	and    %rcx,%r8
   228e8:	4d 09 f8             	or     %r15,%r8
   228eb:	4d 01 e8             	add    %r13,%r8
   228ee:	4c 01 e3             	add    %r12,%rbx
   228f1:	4d 01 e0             	add    %r12,%r8
   228f4:	49 89 df             	mov    %rbx,%r15
   228f7:	49 c1 c7 32          	rol    $0x32,%r15
   228fb:	49 89 dc             	mov    %rbx,%r12
   228fe:	49 c1 c4 2e          	rol    $0x2e,%r12
   22902:	4d 31 fc             	xor    %r15,%r12
   22905:	49 89 df             	mov    %rbx,%r15
   22908:	49 c1 c7 17          	rol    $0x17,%r15
   2290c:	4d 31 e7             	xor    %r12,%r15
   2290f:	4d 89 cc             	mov    %r9,%r12
   22912:	49 31 d4             	xor    %rdx,%r12
   22915:	49 21 dc             	and    %rbx,%r12
   22918:	4d 03 54 f6 68       	add    0x68(%r14,%rsi,8),%r10
   2291d:	49 31 d4             	xor    %rdx,%r12
   22920:	4c 03 54 f4 e8       	add    -0x18(%rsp,%rsi,8),%r10
   22925:	4d 01 e2             	add    %r12,%r10
   22928:	4d 89 d4             	mov    %r10,%r12
   2292b:	4d 89 c2             	mov    %r8,%r10
   2292e:	49 c1 c2 24          	rol    $0x24,%r10
   22932:	4d 01 fc             	add    %r15,%r12
   22935:	4d 89 c7             	mov    %r8,%r15
   22938:	49 c1 c7 1e          	rol    $0x1e,%r15
   2293c:	4d 31 d7             	xor    %r10,%r15
   2293f:	4d 89 c5             	mov    %r8,%r13
   22942:	49 c1 c5 19          	rol    $0x19,%r13
   22946:	4d 31 fd             	xor    %r15,%r13
   22949:	4d 89 c7             	mov    %r8,%r15
   2294c:	49 09 c7             	or     %rax,%r15
   2294f:	49 21 cf             	and    %rcx,%r15
   22952:	4d 89 c2             	mov    %r8,%r10
   22955:	49 21 c2             	and    %rax,%r10
   22958:	4d 09 fa             	or     %r15,%r10
   2295b:	4d 01 ea             	add    %r13,%r10
   2295e:	4d 01 e3             	add    %r12,%r11
   22961:	4d 89 df             	mov    %r11,%r15
   22964:	49 c1 c7 32          	rol    $0x32,%r15
   22968:	4d 01 e2             	add    %r12,%r10
   2296b:	4d 89 dc             	mov    %r11,%r12
   2296e:	49 c1 c4 2e          	rol    $0x2e,%r12
   22972:	4d 31 fc             	xor    %r15,%r12
   22975:	4d 89 df             	mov    %r11,%r15
   22978:	49 c1 c7 17          	rol    $0x17,%r15
   2297c:	4d 31 e7             	xor    %r12,%r15
   2297f:	49 89 dc             	mov    %rbx,%r12
   22982:	4d 31 cc             	xor    %r9,%r12
   22985:	4d 21 dc             	and    %r11,%r12
   22988:	49 03 54 f6 70       	add    0x70(%r14,%rsi,8),%rdx
   2298d:	48 03 54 f4 f0       	add    -0x10(%rsp,%rsi,8),%rdx
   22992:	4d 31 cc             	xor    %r9,%r12
   22995:	4c 01 e2             	add    %r12,%rdx
   22998:	49 89 d4             	mov    %rdx,%r12
   2299b:	4d 01 fc             	add    %r15,%r12
   2299e:	4c 89 d2             	mov    %r10,%rdx
   229a1:	48 c1 c2 24          	rol    $0x24,%rdx
   229a5:	4d 89 d7             	mov    %r10,%r15
   229a8:	49 c1 c7 1e          	rol    $0x1e,%r15
   229ac:	49 31 d7             	xor    %rdx,%r15
   229af:	4d 89 d5             	mov    %r10,%r13
   229b2:	49 c1 c5 19          	rol    $0x19,%r13
   229b6:	4d 31 fd             	xor    %r15,%r13
   229b9:	4d 89 d7             	mov    %r10,%r15
   229bc:	4d 09 c7             	or     %r8,%r15
   229bf:	49 21 c7             	and    %rax,%r15
   229c2:	4c 89 d2             	mov    %r10,%rdx
   229c5:	4c 21 c2             	and    %r8,%rdx
   229c8:	4c 09 fa             	or     %r15,%rdx
   229cb:	4c 01 ea             	add    %r13,%rdx
   229ce:	4c 01 e1             	add    %r12,%rcx
   229d1:	4c 01 e2             	add    %r12,%rdx
   229d4:	49 89 cf             	mov    %rcx,%r15
   229d7:	49 c1 c7 32          	rol    $0x32,%r15
   229db:	49 89 cc             	mov    %rcx,%r12
   229de:	49 c1 c4 2e          	rol    $0x2e,%r12
   229e2:	4d 31 fc             	xor    %r15,%r12
   229e5:	49 89 cf             	mov    %rcx,%r15
   229e8:	49 c1 c7 17          	rol    $0x17,%r15
   229ec:	4d 31 e7             	xor    %r12,%r15
   229ef:	4d 89 dc             	mov    %r11,%r12
   229f2:	49 31 dc             	xor    %rbx,%r12
   229f5:	49 21 cc             	and    %rcx,%r12
   229f8:	4d 03 4c f6 78       	add    0x78(%r14,%rsi,8),%r9
   229fd:	49 31 dc             	xor    %rbx,%r12
   22a00:	4c 03 4c f4 f8       	add    -0x8(%rsp,%rsi,8),%r9
   22a05:	4d 01 e1             	add    %r12,%r9
   22a08:	4d 89 cc             	mov    %r9,%r12
   22a0b:	49 89 d1             	mov    %rdx,%r9
   22a0e:	49 c1 c1 24          	rol    $0x24,%r9
   22a12:	4d 01 fc             	add    %r15,%r12
   22a15:	49 89 d7             	mov    %rdx,%r15
   22a18:	49 c1 c7 1e          	rol    $0x1e,%r15
   22a1c:	4d 31 cf             	xor    %r9,%r15
   22a1f:	49 89 d5             	mov    %rdx,%r13
   22a22:	49 c1 c5 19          	rol    $0x19,%r13
   22a26:	4d 31 fd             	xor    %r15,%r13
   22a29:	49 89 d7             	mov    %rdx,%r15
   22a2c:	4d 09 d7             	or     %r10,%r15
   22a2f:	4d 21 c7             	and    %r8,%r15
   22a32:	49 89 d1             	mov    %rdx,%r9
   22a35:	4d 21 d1             	and    %r10,%r9
   22a38:	4d 09 f9             	or     %r15,%r9
   22a3b:	4d 01 e9             	add    %r13,%r9
   22a3e:	4c 01 e0             	add    %r12,%rax
   22a41:	4d 01 e1             	add    %r12,%r9
   22a44:	48 83 c6 08          	add    $0x8,%rsi
   22a48:	48 83 fe 48          	cmp    $0x48,%rsi
   22a4c:	0f 82 7e fc ff ff    	jb     226d0 <sha_compress+0xd0>
   22a52:	4c 01 4f 08          	add    %r9,0x8(%rdi)
   22a56:	48 01 57 10          	add    %rdx,0x10(%rdi)
   22a5a:	4c 01 57 18          	add    %r10,0x18(%rdi)
   22a5e:	4c 01 47 20          	add    %r8,0x20(%rdi)
   22a62:	48 01 47 28          	add    %rax,0x28(%rdi)
   22a66:	48 01 4f 30          	add    %rcx,0x30(%rdi)
   22a6a:	4c 01 5f 38          	add    %r11,0x38(%rdi)
   22a6e:	48 01 5f 40          	add    %rbx,0x40(%rdi)
   22a72:	48 81 c4 08 02 00 00 	add    $0x208,%rsp
   22a79:	5b                   	pop    %rbx
   22a7a:	41 5c                	pop    %r12
   22a7c:	41 5d                	pop    %r13
   22a7e:	41 5e                	pop    %r14
   22a80:	41 5f                	pop    %r15
   22a82:	5d                   	pop    %rbp
   22a83:	c3                   	ret    
   22a84:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
   22a8b:	00 00 00 00 00 

0000000000022a90 <sha_done>:
   22a90:	41 57                	push   %r15
   22a92:	41 56                	push   %r14
   22a94:	53                   	push   %rbx
   22a95:	48 89 f3             	mov    %rsi,%rbx
   22a98:	49 89 fe             	mov    %rdi,%r14
   22a9b:	8b 47 48             	mov    0x48(%rdi),%eax
   22a9e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   22aa5:	00 
   22aa6:	48 01 0f             	add    %rcx,(%rdi)
   22aa9:	4c 8d 7f 4c          	lea    0x4c(%rdi),%r15
   22aad:	8d 48 01             	lea    0x1(%rax),%ecx
   22ab0:	89 4f 48             	mov    %ecx,0x48(%rdi)
   22ab3:	c6 44 07 4c 80       	movb   $0x80,0x4c(%rdi,%rax,1)
   22ab8:	83 f9 71             	cmp    $0x71,%ecx
   22abb:	72 33                	jb     22af0 <sha_done+0x60>
   22abd:	83 f9 7f             	cmp    $0x7f,%ecx
   22ac0:	77 21                	ja     22ae3 <sha_done+0x53>
   22ac2:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
   22ac6:	48 83 c7 4d          	add    $0x4d,%rdi
   22aca:	ba 7e 00 00 00       	mov    $0x7e,%edx
   22acf:	29 c2                	sub    %eax,%edx
   22ad1:	48 ff c2             	inc    %rdx
   22ad4:	31 f6                	xor    %esi,%esi
   22ad6:	e8 e5 f5 fd ff       	call   20c0 <memset@plt>
   22adb:	41 c7 46 48 80 00 00 	movl   $0x80,0x48(%r14)
   22ae2:	00 
   22ae3:	4c 89 f7             	mov    %r14,%rdi
   22ae6:	4c 89 fe             	mov    %r15,%rsi
   22ae9:	e8 12 fb ff ff       	call   22600 <sha_compress>
   22aee:	31 c9                	xor    %ecx,%ecx
   22af0:	89 c8                	mov    %ecx,%eax
   22af2:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
   22af6:	48 83 c7 4c          	add    $0x4c,%rdi
   22afa:	ba 77 00 00 00       	mov    $0x77,%edx
   22aff:	29 ca                	sub    %ecx,%edx
   22b01:	48 ff c2             	inc    %rdx
   22b04:	31 f6                	xor    %esi,%esi
   22b06:	e8 b5 f5 fd ff       	call   20c0 <memset@plt>
   22b0b:	41 c7 46 48 78 00 00 	movl   $0x78,0x48(%r14)
   22b12:	00 
   22b13:	49 8b 06             	mov    (%r14),%rax
   22b16:	48 0f c8             	bswap  %rax
   22b19:	49 89 86 c4 00 00 00 	mov    %rax,0xc4(%r14)
   22b20:	4c 89 f7             	mov    %r14,%rdi
   22b23:	4c 89 fe             	mov    %r15,%rsi
   22b26:	e8 d5 fa ff ff       	call   22600 <sha_compress>
   22b2b:	49 8b 46 08          	mov    0x8(%r14),%rax
   22b2f:	48 0f c8             	bswap  %rax
   22b32:	48 89 03             	mov    %rax,(%rbx)
   22b35:	49 8b 46 10          	mov    0x10(%r14),%rax
   22b39:	48 0f c8             	bswap  %rax
   22b3c:	48 89 43 08          	mov    %rax,0x8(%rbx)
   22b40:	49 8b 46 18          	mov    0x18(%r14),%rax
   22b44:	48 0f c8             	bswap  %rax
   22b47:	48 89 43 10          	mov    %rax,0x10(%rbx)
   22b4b:	49 8b 46 20          	mov    0x20(%r14),%rax
   22b4f:	48 0f c8             	bswap  %rax
   22b52:	48 89 43 18          	mov    %rax,0x18(%rbx)
   22b56:	49 8b 46 28          	mov    0x28(%r14),%rax
   22b5a:	48 0f c8             	bswap  %rax
   22b5d:	48 89 43 20          	mov    %rax,0x20(%rbx)
   22b61:	49 8b 46 30          	mov    0x30(%r14),%rax
   22b65:	48 0f c8             	bswap  %rax
   22b68:	48 89 43 28          	mov    %rax,0x28(%rbx)
   22b6c:	49 8b 46 38          	mov    0x38(%r14),%rax
   22b70:	48 0f c8             	bswap  %rax
   22b73:	48 89 43 30          	mov    %rax,0x30(%rbx)
   22b77:	49 8b 46 40          	mov    0x40(%r14),%rax
   22b7b:	48 0f c8             	bswap  %rax
   22b7e:	48 89 43 38          	mov    %rax,0x38(%rbx)
   22b82:	5b                   	pop    %rbx
   22b83:	41 5e                	pop    %r14
   22b85:	41 5f                	pop    %r15
   22b87:	c3                   	ret    

Disassembly of section .fini:

0000000000022b88 <_fini>:
   22b88:	f3 0f 1e fa          	endbr64 
   22b8c:	48 83 ec 08          	sub    $0x8,%rsp
   22b90:	48 83 c4 08          	add    $0x8,%rsp
   22b94:	c3                   	ret    
