
benchspec/CPU/505.mcf_r/exe/mcf_r_base.RapModTest-llvm-m64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d1 8f 00 00 	mov    0x8fd1(%rip),%rax        # 9fe0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 e2 8f 00 00    	push   0x8fe2(%rip)        # a008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 8f 00 00    	jmp    *0x8fe4(%rip)        # a010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 8f 00 00    	jmp    *0x8fe2(%rip)        # a018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <putchar@plt>:
    1040:	ff 25 da 8f 00 00    	jmp    *0x8fda(%rip)        # a020 <putchar@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strcpy@plt>:
    1050:	ff 25 d2 8f 00 00    	jmp    *0x8fd2(%rip)        # a028 <strcpy@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <puts@plt>:
    1060:	ff 25 ca 8f 00 00    	jmp    *0x8fca(%rip)        # a030 <puts@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <fclose@plt>:
    1070:	ff 25 c2 8f 00 00    	jmp    *0x8fc2(%rip)        # a038 <fclose@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <printf@plt>:
    1080:	ff 25 ba 8f 00 00    	jmp    *0x8fba(%rip)        # a040 <printf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <memset@plt>:
    1090:	ff 25 b2 8f 00 00    	jmp    *0x8fb2(%rip)        # a048 <memset@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <fgets@plt>:
    10a0:	ff 25 aa 8f 00 00    	jmp    *0x8faa(%rip)        # a050 <fgets@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 8f 00 00    	jmp    *0x8fa2(%rip)        # a058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 8f 00 00    	jmp    *0x8f9a(%rip)        # a060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <strtol@plt>:
    10d0:	ff 25 92 8f 00 00    	jmp    *0x8f92(%rip)        # a068 <strtol@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 8f 00 00    	jmp    *0x8f8a(%rip)        # a070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fflush@plt>:
    10f0:	ff 25 82 8f 00 00    	jmp    *0x8f82(%rip)        # a078 <fflush@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <__isoc99_sscanf@plt>:
    1100:	ff 25 7a 8f 00 00    	jmp    *0x8f7a(%rip)        # a080 <__isoc99_sscanf@GLIBC_2.7>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <realloc@plt>:
    1110:	ff 25 72 8f 00 00    	jmp    *0x8f72(%rip)        # a088 <realloc@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <fopen@plt>:
    1120:	ff 25 6a 8f 00 00    	jmp    *0x8f6a(%rip)        # a090 <fopen@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <sprintf@plt>:
    1130:	ff 25 62 8f 00 00    	jmp    *0x8f62(%rip)        # a098 <sprintf@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   $0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <exit@plt>:
    1140:	ff 25 5a 8f 00 00    	jmp    *0x8f5a(%rip)        # a0a0 <exit@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   $0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <fwrite@plt>:
    1150:	ff 25 52 8f 00 00    	jmp    *0x8f52(%rip)        # a0a8 <fwrite@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   $0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001160 <__cxa_finalize@plt>:
    1160:	ff 25 8a 8e 00 00    	jmp    *0x8e8a(%rip)        # 9ff0 <__cxa_finalize@GLIBC_2.2.5>
    1166:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001170 <_start>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	31 ed                	xor    %ebp,%ebp
    1176:	49 89 d1             	mov    %rdx,%r9
    1179:	5e                   	pop    %rsi
    117a:	48 89 e2             	mov    %rsp,%rdx
    117d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1181:	50                   	push   %rax
    1182:	54                   	push   %rsp
    1183:	45 31 c0             	xor    %r8d,%r8d
    1186:	31 c9                	xor    %ecx,%ecx
    1188:	48 8d 3d 31 02 00 00 	lea    0x231(%rip),%rdi        # 13c0 <main>
    118f:	ff 15 33 8e 00 00    	call   *0x8e33(%rip)        # 9fc8 <__libc_start_main@GLIBC_2.34>
    1195:	f4                   	hlt    
    1196:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    119d:	00 00 00 

00000000000011a0 <deregister_tm_clones>:
    11a0:	48 8d 3d 19 8f 00 00 	lea    0x8f19(%rip),%rdi        # a0c0 <__TMC_END__>
    11a7:	48 8d 05 12 8f 00 00 	lea    0x8f12(%rip),%rax        # a0c0 <__TMC_END__>
    11ae:	48 39 f8             	cmp    %rdi,%rax
    11b1:	74 15                	je     11c8 <deregister_tm_clones+0x28>
    11b3:	48 8b 05 16 8e 00 00 	mov    0x8e16(%rip),%rax        # 9fd0 <_ITM_deregisterTMCloneTable@Base>
    11ba:	48 85 c0             	test   %rax,%rax
    11bd:	74 09                	je     11c8 <deregister_tm_clones+0x28>
    11bf:	ff e0                	jmp    *%rax
    11c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11c8:	c3                   	ret    
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011d0 <register_tm_clones>:
    11d0:	48 8d 3d e9 8e 00 00 	lea    0x8ee9(%rip),%rdi        # a0c0 <__TMC_END__>
    11d7:	48 8d 35 e2 8e 00 00 	lea    0x8ee2(%rip),%rsi        # a0c0 <__TMC_END__>
    11de:	48 29 fe             	sub    %rdi,%rsi
    11e1:	48 89 f0             	mov    %rsi,%rax
    11e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11e8:	48 c1 f8 03          	sar    $0x3,%rax
    11ec:	48 01 c6             	add    %rax,%rsi
    11ef:	48 d1 fe             	sar    %rsi
    11f2:	74 14                	je     1208 <register_tm_clones+0x38>
    11f4:	48 8b 05 ed 8d 00 00 	mov    0x8ded(%rip),%rax        # 9fe8 <_ITM_registerTMCloneTable@Base>
    11fb:	48 85 c0             	test   %rax,%rax
    11fe:	74 08                	je     1208 <register_tm_clones+0x38>
    1200:	ff e0                	jmp    *%rax
    1202:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1208:	c3                   	ret    
    1209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001210 <__do_global_dtors_aux>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	80 3d a5 8e 00 00 00 	cmpb   $0x0,0x8ea5(%rip)        # a0c0 <__TMC_END__>
    121b:	75 2b                	jne    1248 <__do_global_dtors_aux+0x38>
    121d:	55                   	push   %rbp
    121e:	48 83 3d ca 8d 00 00 	cmpq   $0x0,0x8dca(%rip)        # 9ff0 <__cxa_finalize@GLIBC_2.2.5>
    1225:	00 
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	74 0c                	je     1237 <__do_global_dtors_aux+0x27>
    122b:	48 8b 3d 86 8e 00 00 	mov    0x8e86(%rip),%rdi        # a0b8 <__dso_handle>
    1232:	e8 29 ff ff ff       	call   1160 <__cxa_finalize@plt>
    1237:	e8 64 ff ff ff       	call   11a0 <deregister_tm_clones>
    123c:	c6 05 7d 8e 00 00 01 	movb   $0x1,0x8e7d(%rip)        # a0c0 <__TMC_END__>
    1243:	5d                   	pop    %rbp
    1244:	c3                   	ret    
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	c3                   	ret    
    1249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001250 <frame_dummy>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	e9 77 ff ff ff       	jmp    11d0 <register_tm_clones>
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <global_opt>:
    1260:	55                   	push   %rbp
    1261:	41 57                	push   %r15
    1263:	41 56                	push   %r14
    1265:	41 55                	push   %r13
    1267:	41 54                	push   %r12
    1269:	53                   	push   %rbx
    126a:	50                   	push   %rax
    126b:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    1272:	48 8d 1d 7f 8e 00 00 	lea    0x8e7f(%rip),%rbx        # a0f8 <net>
    1279:	4c 8d 35 90 6d 00 00 	lea    0x6d90(%rip),%r14        # 8010 <_IO_stdin_used+0x10>
    1280:	4c 8d 3d ab 6d 00 00 	lea    0x6dab(%rip),%r15        # 8032 <_IO_stdin_used+0x32>
    1287:	4c 8d 25 c6 6d 00 00 	lea    0x6dc6(%rip),%r12        # 8054 <_IO_stdin_used+0x54>
    128e:	48 8d 2d 05 6e 00 00 	lea    0x6e05(%rip),%rbp        # 809a <_IO_stdin_used+0x9a>
    1295:	eb 12                	jmp    12a9 <global_opt+0x49>
    1297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    129e:	00 00 
    12a0:	4d 85 ed             	test   %r13,%r13
    12a3:	0f 88 f6 00 00 00    	js     139f <global_opt+0x13f>
    12a9:	4d 85 ed             	test   %r13,%r13
    12ac:	0f 84 ba 00 00 00    	je     136c <global_opt+0x10c>
    12b2:	48 8b 35 e7 8f 00 00 	mov    0x8fe7(%rip),%rsi        # a2a0 <net+0x1a8>
    12b9:	4c 89 f7             	mov    %r14,%rdi
    12bc:	31 c0                	xor    %eax,%eax
    12be:	e8 bd fd ff ff       	call   1080 <printf@plt>
    12c3:	48 89 df             	mov    %rbx,%rdi
    12c6:	e8 35 38 00 00       	call   4b00 <primal_net_simplex>
    12cb:	48 8b 35 86 90 00 00 	mov    0x9086(%rip),%rsi        # a358 <net+0x260>
    12d2:	4c 89 ff             	mov    %r15,%rdi
    12d5:	31 c0                	xor    %eax,%eax
    12d7:	e8 a4 fd ff ff       	call   1080 <printf@plt>
    12dc:	48 89 df             	mov    %rbx,%rdi
    12df:	e8 fc 02 00 00       	call   15e0 <flow_cost>
    12e4:	4c 89 e7             	mov    %r12,%rdi
    12e7:	b0 01                	mov    $0x1,%al
    12e9:	e8 92 fd ff ff       	call   1080 <printf@plt>
    12ee:	48 83 3d ba 8f 00 00 	cmpq   $0x0,0x8fba(%rip)        # a2b0 <net+0x1b8>
    12f5:	00 
    12f6:	74 38                	je     1330 <global_opt+0xd0>
    12f8:	48 89 df             	mov    %rbx,%rdi
    12fb:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    1302:	31 d2                	xor    %edx,%edx
    1304:	e8 77 26 00 00       	call   3980 <suspend_impl>
    1309:	48 85 c0             	test   %rax,%rax
    130c:	0f 88 8d 00 00 00    	js     139f <global_opt+0x13f>
    1312:	74 32                	je     1346 <global_opt+0xe6>
    1314:	48 8d 3d 5d 6d 00 00 	lea    0x6d5d(%rip),%rdi        # 8078 <_IO_stdin_used+0x78>
    131b:	48 89 c6             	mov    %rax,%rsi
    131e:	31 c0                	xor    %eax,%eax
    1320:	e8 5b fd ff ff       	call   1080 <printf@plt>
    1325:	eb 1f                	jmp    1346 <global_opt+0xe6>
    1327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    132e:	00 00 
    1330:	48 8b 15 69 8f 00 00 	mov    0x8f69(%rip),%rdx        # a2a0 <net+0x1a8>
    1337:	48 89 df             	mov    %rbx,%rdi
    133a:	48 8d 35 0f 04 00 00 	lea    0x40f(%rip),%rsi        # 1750 <getOriginalArcPosition>
    1341:	e8 ba 0f 00 00       	call   2300 <refreshPositions>
    1346:	48 89 df             	mov    %rbx,%rdi
    1349:	e8 f2 17 00 00       	call   2b40 <price_out_impl>
    134e:	49 89 c5             	mov    %rax,%r13
    1351:	48 85 c0             	test   %rax,%rax
    1354:	0f 84 46 ff ff ff    	je     12a0 <global_opt+0x40>
    135a:	48 89 ef             	mov    %rbp,%rdi
    135d:	4c 89 ee             	mov    %r13,%rsi
    1360:	31 c0                	xor    %eax,%eax
    1362:	e8 19 fd ff ff       	call   1080 <printf@plt>
    1367:	e9 34 ff ff ff       	jmp    12a0 <global_opt+0x40>
    136c:	48 8d 3d 85 8d 00 00 	lea    0x8d85(%rip),%rdi        # a0f8 <net>
    1373:	e8 68 02 00 00       	call   15e0 <flow_cost>
    1378:	f2 0f 11 05 90 8f 00 	movsd  %xmm0,0x8f90(%rip)        # a310 <net+0x218>
    137f:	00 
    1380:	48 8d 3d 35 6d 00 00 	lea    0x6d35(%rip),%rdi        # 80bc <_IO_stdin_used+0xbc>
    1387:	b0 01                	mov    $0x1,%al
    1389:	e8 f2 fc ff ff       	call   1080 <printf@plt>
    138e:	31 c0                	xor    %eax,%eax
    1390:	48 83 c4 08          	add    $0x8,%rsp
    1394:	5b                   	pop    %rbx
    1395:	41 5c                	pop    %r12
    1397:	41 5d                	pop    %r13
    1399:	41 5e                	pop    %r14
    139b:	41 5f                	pop    %r15
    139d:	5d                   	pop    %rbp
    139e:	c3                   	ret    
    139f:	48 8d 3d 67 6d 00 00 	lea    0x6d67(%rip),%rdi        # 810d <_IO_stdin_used+0x10d>
    13a6:	e8 b5 fc ff ff       	call   1060 <puts@plt>
    13ab:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    13b0:	e8 8b fd ff ff       	call   1140 <exit@plt>
    13b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    13bc:	00 00 00 00 

00000000000013c0 <main>:
    13c0:	55                   	push   %rbp
    13c1:	41 57                	push   %r15
    13c3:	41 56                	push   %r14
    13c5:	53                   	push   %rbx
    13c6:	48 83 ec 58          	sub    $0x58,%rsp
    13ca:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    13cf:	83 ff 02             	cmp    $0x2,%edi
    13d2:	0f 8c 41 01 00 00    	jl     1519 <main+0x159>
    13d8:	49 89 f6             	mov    %rsi,%r14
    13db:	89 fd                	mov    %edi,%ebp
    13dd:	48 8d 3d 45 6d 00 00 	lea    0x6d45(%rip),%rdi        # 8129 <_IO_stdin_used+0x129>
    13e4:	e8 77 fc ff ff       	call   1060 <puts@plt>
    13e9:	48 8d 3d 54 6d 00 00 	lea    0x6d54(%rip),%rdi        # 8144 <_IO_stdin_used+0x144>
    13f0:	e8 6b fc ff ff       	call   1060 <puts@plt>
    13f5:	48 8d 3d 7b 6d 00 00 	lea    0x6d7b(%rip),%rdi        # 8177 <_IO_stdin_used+0x177>
    13fc:	e8 5f fc ff ff       	call   1060 <puts@plt>
    1401:	48 8d 3d 9c 6d 00 00 	lea    0x6d9c(%rip),%rdi        # 81a4 <_IO_stdin_used+0x1a4>
    1408:	e8 53 fc ff ff       	call   1060 <puts@plt>
    140d:	48 8d 3d b7 6d 00 00 	lea    0x6db7(%rip),%rdi        # 81cb <_IO_stdin_used+0x1cb>
    1414:	e8 47 fc ff ff       	call   1060 <puts@plt>
    1419:	bf 0a 00 00 00       	mov    $0xa,%edi
    141e:	e8 1d fc ff ff       	call   1040 <putchar@plt>
    1423:	4c 8d 3d ce 8c 00 00 	lea    0x8cce(%rip),%r15        # a0f8 <net>
    142a:	ba 88 02 00 00       	mov    $0x288,%edx
    142f:	4c 89 ff             	mov    %r15,%rdi
    1432:	31 f6                	xor    %esi,%esi
    1434:	e8 57 fc ff ff       	call   1090 <memset@plt>
    1439:	f2 48 0f 2c 05 c6 6b 	cvttsd2si 0x6bc6(%rip),%rax        # 8008 <_IO_stdin_used+0x8>
    1440:	00 00 
    1442:	48 89 05 bf 8e 00 00 	mov    %rax,0x8ebf(%rip)        # a308 <net+0x210>
    1449:	49 8b 76 08          	mov    0x8(%r14),%rsi
    144d:	4c 89 ff             	mov    %r15,%rdi
    1450:	e8 fb fb ff ff       	call   1050 <strcpy@plt>
    1455:	83 fd 03             	cmp    $0x3,%ebp
    1458:	75 4e                	jne    14a8 <main+0xe8>
    145a:	49 8b 7e 10          	mov    0x10(%r14),%rdi
    145e:	31 f6                	xor    %esi,%esi
    1460:	ba 0a 00 00 00       	mov    $0xa,%edx
    1465:	e8 66 fc ff ff       	call   10d0 <strtol@plt>
    146a:	48 8d 35 6f 6c 00 00 	lea    0x6c6f(%rip),%rsi        # 80e0 <_IO_stdin_used+0xe0>
    1471:	48 89 e7             	mov    %rsp,%rdi
    1474:	89 c2                	mov    %eax,%edx
    1476:	31 c0                	xor    %eax,%eax
    1478:	e8 b3 fc ff ff       	call   1130 <sprintf@plt>
    147d:	48 8d 3d 74 8c 00 00 	lea    0x8c74(%rip),%rdi        # a0f8 <net>
    1484:	e8 57 06 00 00       	call   1ae0 <read_min>
    1489:	48 85 c0             	test   %rax,%rax
    148c:	74 39                	je     14c7 <main+0x107>
    148e:	48 8d 3d 80 6d 00 00 	lea    0x6d80(%rip),%rdi        # 8215 <_IO_stdin_used+0x215>
    1495:	e8 c6 fb ff ff       	call   1060 <puts@plt>
    149a:	48 8d 3d 57 8c 00 00 	lea    0x8c57(%rip),%rdi        # a0f8 <net>
    14a1:	e8 ca 05 00 00       	call   1a70 <getfree>
    14a6:	eb 71                	jmp    1519 <main+0x159>
    14a8:	48 b8 6d 63 66 2e 6f 	movabs $0x74756f2e66636d,%rax
    14af:	75 74 00 
    14b2:	48 89 04 24          	mov    %rax,(%rsp)
    14b6:	48 8d 3d 3b 8c 00 00 	lea    0x8c3b(%rip),%rdi        # a0f8 <net>
    14bd:	e8 1e 06 00 00       	call   1ae0 <read_min>
    14c2:	48 85 c0             	test   %rax,%rax
    14c5:	75 c7                	jne    148e <main+0xce>
    14c7:	4c 8d 35 2a 8c 00 00 	lea    0x8c2a(%rip),%r14        # a0f8 <net>
    14ce:	48 8b 35 bb 8d 00 00 	mov    0x8dbb(%rip),%rsi        # a290 <net+0x198>
    14d5:	48 8d 3d 0f 6c 00 00 	lea    0x6c0f(%rip),%rdi        # 80eb <_IO_stdin_used+0xeb>
    14dc:	31 c0                	xor    %eax,%eax
    14de:	e8 9d fb ff ff       	call   1080 <printf@plt>
    14e3:	4c 89 f7             	mov    %r14,%rdi
    14e6:	e8 85 28 00 00       	call   3d70 <primal_start_artificial>
    14eb:	e8 70 fd ff ff       	call   1260 <global_opt>
    14f0:	48 89 e7             	mov    %rsp,%rdi
    14f3:	4c 89 f6             	mov    %r14,%rsi
    14f6:	e8 35 2b 00 00       	call   4030 <write_objective_value>
    14fb:	49 89 c7             	mov    %rax,%r15
    14fe:	4c 89 f7             	mov    %r14,%rdi
    1501:	e8 6a 05 00 00       	call   1a70 <getfree>
    1506:	4d 85 ff             	test   %r15,%r15
    1509:	75 0e                	jne    1519 <main+0x159>
    150b:	48 8d 3d fe 6c 00 00 	lea    0x6cfe(%rip),%rdi        # 8210 <_IO_stdin_used+0x210>
    1512:	e8 49 fb ff ff       	call   1060 <puts@plt>
    1517:	31 db                	xor    %ebx,%ebx
    1519:	89 d8                	mov    %ebx,%eax
    151b:	48 83 c4 58          	add    $0x58,%rsp
    151f:	5b                   	pop    %rbx
    1520:	41 5e                	pop    %r14
    1522:	41 5f                	pop    %r15
    1524:	5d                   	pop    %rbp
    1525:	c3                   	ret    
    1526:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    152d:	00 00 00 

0000000000001530 <refresh_neighbour_lists>:
    1530:	41 57                	push   %r15
    1532:	41 56                	push   %r14
    1534:	41 54                	push   %r12
    1536:	53                   	push   %rbx
    1537:	50                   	push   %rax
    1538:	48 89 f3             	mov    %rsi,%rbx
    153b:	49 89 fe             	mov    %rdi,%r14
    153e:	48 8b 87 28 02 00 00 	mov    0x228(%rdi),%rax
    1545:	48 8b 8f 30 02 00 00 	mov    0x230(%rdi),%rcx
    154c:	48 39 c8             	cmp    %rcx,%rax
    154f:	73 1c                	jae    156d <refresh_neighbour_lists+0x3d>
    1551:	0f 57 c0             	xorps  %xmm0,%xmm0
    1554:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    155b:	00 00 00 00 00 
    1560:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    1564:	48 83 c0 68          	add    $0x68,%rax
    1568:	48 39 c8             	cmp    %rcx,%rax
    156b:	72 f3                	jb     1560 <refresh_neighbour_lists+0x30>
    156d:	49 83 be a8 01 00 00 	cmpq   $0x0,0x1a8(%r14)
    1574:	00 
    1575:	7e 5c                	jle    15d3 <refresh_neighbour_lists+0xa3>
    1577:	49 8b 86 38 02 00 00 	mov    0x238(%r14),%rax
    157e:	45 31 ff             	xor    %r15d,%r15d
    1581:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1588:	0f 1f 84 00 00 00 00 
    158f:	00 
    1590:	48 8b 48 10          	mov    0x10(%rax),%rcx
    1594:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    1598:	48 89 50 28          	mov    %rdx,0x28(%rax)
    159c:	48 89 41 38          	mov    %rax,0x38(%rcx)
    15a0:	48 8b 48 18          	mov    0x18(%rax),%rcx
    15a4:	48 8b 51 40          	mov    0x40(%rcx),%rdx
    15a8:	48 89 50 30          	mov    %rdx,0x30(%rax)
    15ac:	48 89 41 40          	mov    %rax,0x40(%rcx)
    15b0:	49 ff c7             	inc    %r15
    15b3:	4d 8b a6 38 02 00 00 	mov    0x238(%r14),%r12
    15ba:	4c 89 f7             	mov    %r14,%rdi
    15bd:	4c 89 fe             	mov    %r15,%rsi
    15c0:	ff d3                	call   *%rbx
    15c2:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    15c6:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    15ca:	4d 39 be a8 01 00 00 	cmp    %r15,0x1a8(%r14)
    15d1:	7f bd                	jg     1590 <refresh_neighbour_lists+0x60>
    15d3:	48 83 c4 08          	add    $0x8,%rsp
    15d7:	5b                   	pop    %rbx
    15d8:	41 5c                	pop    %r12
    15da:	41 5e                	pop    %r14
    15dc:	41 5f                	pop    %r15
    15de:	c3                   	ret    
    15df:	90                   	nop

00000000000015e0 <flow_cost>:
    15e0:	48 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%rax
    15e7:	48 85 c0             	test   %rax,%rax
    15ea:	7e 34                	jle    1620 <flow_cost+0x40>
    15ec:	48 8b 8f 38 02 00 00 	mov    0x238(%rdi),%rcx
    15f3:	48 83 c1 38          	add    $0x38,%rcx
    15f7:	31 d2                	xor    %edx,%edx
    15f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1600:	31 c0                	xor    %eax,%eax
    1602:	66 83 79 e8 02       	cmpw   $0x2,-0x18(%rcx)
    1607:	0f 94 c0             	sete   %al
    160a:	48 89 01             	mov    %rax,(%rcx)
    160d:	48 ff c2             	inc    %rdx
    1610:	48 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%rax
    1617:	48 83 c1 48          	add    $0x48,%rcx
    161b:	48 39 d0             	cmp    %rdx,%rax
    161e:	7f e0                	jg     1600 <flow_cost+0x20>
    1620:	48 83 bf 90 01 00 00 	cmpq   $0x0,0x190(%rdi)
    1627:	00 
    1628:	7e 38                	jle    1662 <flow_cost+0x82>
    162a:	48 8b 87 28 02 00 00 	mov    0x228(%rdi),%rax
    1631:	48 05 b8 00 00 00    	add    $0xb8,%rax
    1637:	31 c9                	xor    %ecx,%ecx
    1639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1640:	48 8b 50 e0          	mov    -0x20(%rax),%rdx
    1644:	48 8b 30             	mov    (%rax),%rsi
    1647:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    164b:	48 ff c1             	inc    %rcx
    164e:	48 83 c0 68          	add    $0x68,%rax
    1652:	48 39 8f 90 01 00 00 	cmp    %rcx,0x190(%rdi)
    1659:	7f e5                	jg     1640 <flow_cost+0x60>
    165b:	48 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%rax
    1662:	48 85 c0             	test   %rax,%rax
    1665:	7e 56                	jle    16bd <flow_cost+0xdd>
    1667:	48 8b b7 38 02 00 00 	mov    0x238(%rdi),%rsi
    166e:	48 83 c6 08          	add    $0x8,%rsi
    1672:	31 c9                	xor    %ecx,%ecx
    1674:	31 d2                	xor    %edx,%edx
    1676:	eb 14                	jmp    168c <flow_cost+0xac>
    1678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    167f:	00 
    1680:	48 03 0e             	add    (%rsi),%rcx
    1683:	48 83 c6 48          	add    $0x48,%rsi
    1687:	48 ff c8             	dec    %rax
    168a:	74 35                	je     16c1 <flow_cost+0xe1>
    168c:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
    1691:	74 f0                	je     1683 <flow_cost+0xa3>
    1693:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    1697:	41 83 78 60 00       	cmpl   $0x0,0x60(%r8)
    169c:	78 12                	js     16b0 <flow_cost+0xd0>
    169e:	75 e0                	jne    1680 <flow_cost+0xa0>
    16a0:	48 03 0e             	add    (%rsi),%rcx
    16a3:	48 2b 8f 10 02 00 00 	sub    0x210(%rdi),%rcx
    16aa:	48 ff c2             	inc    %rdx
    16ad:	eb d4                	jmp    1683 <flow_cost+0xa3>
    16af:	90                   	nop
    16b0:	4c 8b 46 10          	mov    0x10(%rsi),%r8
    16b4:	41 83 78 60 00       	cmpl   $0x0,0x60(%r8)
    16b9:	7f c8                	jg     1683 <flow_cost+0xa3>
    16bb:	eb c3                	jmp    1680 <flow_cost+0xa0>
    16bd:	31 d2                	xor    %edx,%edx
    16bf:	31 c9                	xor    %ecx,%ecx
    16c1:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    16c6:	f2 48 0f 2a 87 10 02 	cvtsi2sdq 0x210(%rdi),%xmm0
    16cd:	00 00 
    16cf:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
    16d4:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    16d8:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    16dc:	c3                   	ret    
    16dd:	0f 1f 00             	nopl   (%rax)

00000000000016e0 <start>:
    16e0:	31 c0                	xor    %eax,%eax
    16e2:	c3                   	ret    
    16e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    16ea:	84 00 00 00 00 00 

00000000000016f0 <getArcPosition>:
    16f0:	48 89 f0             	mov    %rsi,%rax
    16f3:	48 8b 8f 70 02 00 00 	mov    0x270(%rdi),%rcx
    16fa:	48 89 f2             	mov    %rsi,%rdx
    16fd:	48 09 ca             	or     %rcx,%rdx
    1700:	48 c1 ea 20          	shr    $0x20,%rdx
    1704:	74 07                	je     170d <getArcPosition+0x1d>
    1706:	48 99                	cqto   
    1708:	48 f7 f9             	idiv   %rcx
    170b:	eb 04                	jmp    1711 <getArcPosition+0x21>
    170d:	31 d2                	xor    %edx,%edx
    170f:	f7 f1                	div    %ecx
    1711:	48 8b b7 78 02 00 00 	mov    0x278(%rdi),%rsi
    1718:	48 8b 8f 80 02 00 00 	mov    0x280(%rdi),%rcx
    171f:	48 89 d7             	mov    %rdx,%rdi
    1722:	48 29 f7             	sub    %rsi,%rdi
    1725:	7e 12                	jle    1739 <getArcPosition+0x49>
    1727:	48 0f af f1          	imul   %rcx,%rsi
    172b:	48 ff c9             	dec    %rcx
    172e:	48 0f af cf          	imul   %rdi,%rcx
    1732:	48 01 c8             	add    %rcx,%rax
    1735:	48 01 f0             	add    %rsi,%rax
    1738:	c3                   	ret    
    1739:	48 0f af ca          	imul   %rdx,%rcx
    173d:	48 01 c8             	add    %rcx,%rax
    1740:	c3                   	ret    
    1741:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1748:	0f 1f 84 00 00 00 00 
    174f:	00 

0000000000001750 <getOriginalArcPosition>:
    1750:	48 89 f0             	mov    %rsi,%rax
    1753:	c3                   	ret    
    1754:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    175b:	00 00 00 00 00 

0000000000001760 <flow_org_cost>:
    1760:	41 57                	push   %r15
    1762:	41 56                	push   %r14
    1764:	53                   	push   %rbx
    1765:	48 89 fb             	mov    %rdi,%rbx
    1768:	48 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%rax
    176f:	48 85 c0             	test   %rax,%rax
    1772:	7e 3c                	jle    17b0 <flow_org_cost+0x50>
    1774:	48 8b 8b 38 02 00 00 	mov    0x238(%rbx),%rcx
    177b:	48 83 c1 38          	add    $0x38,%rcx
    177f:	31 d2                	xor    %edx,%edx
    1781:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1788:	0f 1f 84 00 00 00 00 
    178f:	00 
    1790:	31 c0                	xor    %eax,%eax
    1792:	66 83 79 e8 02       	cmpw   $0x2,-0x18(%rcx)
    1797:	0f 94 c0             	sete   %al
    179a:	48 89 01             	mov    %rax,(%rcx)
    179d:	48 ff c2             	inc    %rdx
    17a0:	48 8b 83 a8 01 00 00 	mov    0x1a8(%rbx),%rax
    17a7:	48 83 c1 48          	add    $0x48,%rcx
    17ab:	48 39 d0             	cmp    %rdx,%rax
    17ae:	7f e0                	jg     1790 <flow_org_cost+0x30>
    17b0:	48 83 bb 90 01 00 00 	cmpq   $0x0,0x190(%rbx)
    17b7:	00 
    17b8:	7e 38                	jle    17f2 <flow_org_cost+0x92>
    17ba:	48 8b 83 28 02 00 00 	mov    0x228(%rbx),%rax
    17c1:	48 83 c0 50          	add    $0x50,%rax
    17c5:	31 c9                	xor    %ecx,%ecx
    17c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    17ce:	00 00 
    17d0:	48 8b 50 e0          	mov    -0x20(%rax),%rdx
    17d4:	48 8b 30             	mov    (%rax),%rsi
    17d7:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    17db:	48 ff c1             	inc    %rcx
    17de:	48 83 c0 68          	add    $0x68,%rax
    17e2:	48 39 8b 90 01 00 00 	cmp    %rcx,0x190(%rbx)
    17e9:	7f e5                	jg     17d0 <flow_org_cost+0x70>
    17eb:	48 8b 83 a8 01 00 00 	mov    0x1a8(%rbx),%rax
    17f2:	48 85 c0             	test   %rax,%rax
    17f5:	7e 55                	jle    184c <flow_org_cost+0xec>
    17f7:	48 8b 8b 38 02 00 00 	mov    0x238(%rbx),%rcx
    17fe:	48 83 c1 40          	add    $0x40,%rcx
    1802:	45 31 f6             	xor    %r14d,%r14d
    1805:	45 31 ff             	xor    %r15d,%r15d
    1808:	eb 12                	jmp    181c <flow_org_cost+0xbc>
    180a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1810:	4c 03 31             	add    (%rcx),%r14
    1813:	48 83 c1 48          	add    $0x48,%rcx
    1817:	48 ff c8             	dec    %rax
    181a:	74 36                	je     1852 <flow_org_cost+0xf2>
    181c:	48 83 79 f8 00       	cmpq   $0x0,-0x8(%rcx)
    1821:	74 f0                	je     1813 <flow_org_cost+0xb3>
    1823:	48 8b 51 d0          	mov    -0x30(%rcx),%rdx
    1827:	83 7a 60 00          	cmpl   $0x0,0x60(%rdx)
    182b:	78 13                	js     1840 <flow_org_cost+0xe0>
    182d:	75 e1                	jne    1810 <flow_org_cost+0xb0>
    182f:	4c 03 31             	add    (%rcx),%r14
    1832:	4c 2b b3 10 02 00 00 	sub    0x210(%rbx),%r14
    1839:	49 ff c7             	inc    %r15
    183c:	eb d5                	jmp    1813 <flow_org_cost+0xb3>
    183e:	66 90                	xchg   %ax,%ax
    1840:	48 8b 51 d8          	mov    -0x28(%rcx),%rdx
    1844:	83 7a 60 00          	cmpl   $0x0,0x60(%rdx)
    1848:	7f c9                	jg     1813 <flow_org_cost+0xb3>
    184a:	eb c4                	jmp    1810 <flow_org_cost+0xb0>
    184c:	45 31 ff             	xor    %r15d,%r15d
    184f:	45 31 f6             	xor    %r14d,%r14d
    1852:	f2 49 0f 2a cf       	cvtsi2sd %r15,%xmm1
    1857:	f2 48 0f 2a 83 10 02 	cvtsi2sdq 0x210(%rbx),%xmm0
    185e:	00 00 
    1860:	f2 49 0f 2a d6       	cvtsi2sd %r14,%xmm2
    1865:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    1869:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    186d:	48 8d 3d b2 69 00 00 	lea    0x69b2(%rip),%rdi        # 8226 <_IO_stdin_used+0x226>
    1874:	b0 01                	mov    $0x1,%al
    1876:	e8 05 f8 ff ff       	call   1080 <printf@plt>
    187b:	0f 57 c9             	xorps  %xmm1,%xmm1
    187e:	f2 49 0f 2a cf       	cvtsi2sd %r15,%xmm1
    1883:	0f 57 c0             	xorps  %xmm0,%xmm0
    1886:	f2 48 0f 2a 83 10 02 	cvtsi2sdq 0x210(%rbx),%xmm0
    188d:	00 00 
    188f:	0f 57 d2             	xorps  %xmm2,%xmm2
    1892:	f2 49 0f 2a d6       	cvtsi2sd %r14,%xmm2
    1897:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    189b:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    189f:	5b                   	pop    %rbx
    18a0:	41 5e                	pop    %r14
    18a2:	41 5f                	pop    %r15
    18a4:	c3                   	ret    
    18a5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    18ac:	00 00 00 00 

00000000000018b0 <primal_feasible>:
    18b0:	55                   	push   %rbp
    18b1:	41 57                	push   %r15
    18b3:	41 56                	push   %r14
    18b5:	41 55                	push   %r13
    18b7:	41 54                	push   %r12
    18b9:	53                   	push   %rbx
    18ba:	50                   	push   %rax
    18bb:	48 89 fb             	mov    %rdi,%rbx
    18be:	48 8b af 28 02 00 00 	mov    0x228(%rdi),%rbp
    18c5:	4c 8b bf 30 02 00 00 	mov    0x230(%rdi),%r15
    18cc:	48 83 c5 68          	add    $0x68,%rbp
    18d0:	41 be 01 00 00 00    	mov    $0x1,%r14d
    18d6:	4c 39 fd             	cmp    %r15,%rbp
    18d9:	0f 83 bb 00 00 00    	jae    199a <primal_feasible+0xea>
    18df:	4c 8b a3 50 02 00 00 	mov    0x250(%rbx),%r12
    18e6:	4c 8b b3 58 02 00 00 	mov    0x258(%rbx),%r14
    18ed:	eb 0e                	jmp    18fd <primal_feasible+0x4d>
    18ef:	90                   	nop
    18f0:	48 83 c5 68          	add    $0x68,%rbp
    18f4:	4c 39 fd             	cmp    %r15,%rbp
    18f7:	0f 83 97 00 00 00    	jae    1994 <primal_feasible+0xe4>
    18fd:	48 8b 45 30          	mov    0x30(%rbp),%rax
    1901:	4c 8b 6d 50          	mov    0x50(%rbp),%r13
    1905:	4c 39 e0             	cmp    %r12,%rax
    1908:	72 46                	jb     1950 <primal_feasible+0xa0>
    190a:	4c 39 f0             	cmp    %r14,%rax
    190d:	73 41                	jae    1950 <primal_feasible+0xa0>
    190f:	4c 89 e8             	mov    %r13,%rax
    1912:	48 f7 d8             	neg    %rax
    1915:	49 0f 48 c5          	cmovs  %r13,%rax
    1919:	48 3b 83 00 02 00 00 	cmp    0x200(%rbx),%rax
    1920:	7e ce                	jle    18f0 <primal_feasible+0x40>
    1922:	48 8d 3d 0a 69 00 00 	lea    0x690a(%rip),%rdi        # 8233 <_IO_stdin_used+0x233>
    1929:	31 c0                	xor    %eax,%eax
    192b:	e8 50 f7 ff ff       	call   1080 <printf@plt>
    1930:	8b 75 60             	mov    0x60(%rbp),%esi
    1933:	48 8d 3d 12 69 00 00 	lea    0x6912(%rip),%rdi        # 824c <_IO_stdin_used+0x24c>
    193a:	4c 89 ea             	mov    %r13,%rdx
    193d:	31 c0                	xor    %eax,%eax
    193f:	e8 3c f7 ff ff       	call   1080 <printf@plt>
    1944:	eb aa                	jmp    18f0 <primal_feasible+0x40>
    1946:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    194d:	00 00 00 
    1950:	48 8b 83 00 02 00 00 	mov    0x200(%rbx),%rax
    1957:	48 89 c1             	mov    %rax,%rcx
    195a:	48 f7 d9             	neg    %rcx
    195d:	49 39 cd             	cmp    %rcx,%r13
    1960:	7c 09                	jl     196b <primal_feasible+0xbb>
    1962:	49 8d 4d ff          	lea    -0x1(%r13),%rcx
    1966:	48 39 c1             	cmp    %rax,%rcx
    1969:	7e 85                	jle    18f0 <primal_feasible+0x40>
    196b:	48 8d 3d c1 68 00 00 	lea    0x68c1(%rip),%rdi        # 8233 <_IO_stdin_used+0x233>
    1972:	45 31 f6             	xor    %r14d,%r14d
    1975:	31 c0                	xor    %eax,%eax
    1977:	e8 04 f7 ff ff       	call   1080 <printf@plt>
    197c:	48 8d 3d fa 68 00 00 	lea    0x68fa(%rip),%rdi        # 827d <_IO_stdin_used+0x27d>
    1983:	4c 89 ee             	mov    %r13,%rsi
    1986:	31 c0                	xor    %eax,%eax
    1988:	e8 f3 f6 ff ff       	call   1080 <printf@plt>
    198d:	b8 01 00 00 00       	mov    $0x1,%eax
    1992:	eb 08                	jmp    199c <primal_feasible+0xec>
    1994:	41 be 01 00 00 00    	mov    $0x1,%r14d
    199a:	31 c0                	xor    %eax,%eax
    199c:	4c 89 b3 e8 01 00 00 	mov    %r14,0x1e8(%rbx)
    19a3:	48 83 c4 08          	add    $0x8,%rsp
    19a7:	5b                   	pop    %rbx
    19a8:	41 5c                	pop    %r12
    19aa:	41 5d                	pop    %r13
    19ac:	41 5e                	pop    %r14
    19ae:	41 5f                	pop    %r15
    19b0:	5d                   	pop    %rbp
    19b1:	c3                   	ret    
    19b2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    19b9:	1f 84 00 00 00 00 00 

00000000000019c0 <dual_feasible>:
    19c0:	48 8b 8f 38 02 00 00 	mov    0x238(%rdi),%rcx
    19c7:	48 8b 97 40 02 00 00 	mov    0x240(%rdi),%rdx
    19ce:	48 39 d1             	cmp    %rdx,%rcx
    19d1:	0f 83 89 00 00 00    	jae    1a60 <dual_feasible+0xa0>
    19d7:	53                   	push   %rbx
    19d8:	31 c0                	xor    %eax,%eax
    19da:	eb 1c                	jmp    19f8 <dual_feasible+0x38>
    19dc:	0f 1f 40 00          	nopl   0x0(%rax)
    19e0:	45 31 c0             	xor    %r8d,%r8d
    19e3:	4c 2b 87 00 02 00 00 	sub    0x200(%rdi),%r8
    19ea:	4c 39 c6             	cmp    %r8,%rsi
    19ed:	7c 31                	jl     1a20 <dual_feasible+0x60>
    19ef:	48 83 c1 48          	add    $0x48,%rcx
    19f3:	48 39 d1             	cmp    %rdx,%rcx
    19f6:	73 66                	jae    1a5e <dual_feasible+0x9e>
    19f8:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    19fc:	4c 8b 41 10          	mov    0x10(%rcx),%r8
    1a00:	49 2b 30             	sub    (%r8),%rsi
    1a03:	4c 8b 41 18          	mov    0x18(%rcx),%r8
    1a07:	49 03 30             	add    (%r8),%rsi
    1a0a:	44 0f b7 41 20       	movzwl 0x20(%rcx),%r8d
    1a0f:	41 83 f8 02          	cmp    $0x2,%r8d
    1a13:	72 cb                	jb     19e0 <dual_feasible+0x20>
    1a15:	75 d8                	jne    19ef <dual_feasible+0x2f>
    1a17:	48 3b b7 00 02 00 00 	cmp    0x200(%rdi),%rsi
    1a1e:	7e cf                	jle    19ef <dual_feasible+0x2f>
    1a20:	48 8b 1d d1 85 00 00 	mov    0x85d1(%rip),%rbx        # 9ff8 <stderr@GLIBC_2.2.5>
    1a27:	48 8b 0b             	mov    (%rbx),%rcx
    1a2a:	48 8d 3d 6b 68 00 00 	lea    0x686b(%rip),%rdi        # 829c <_IO_stdin_used+0x29c>
    1a31:	be 16 00 00 00       	mov    $0x16,%esi
    1a36:	ba 01 00 00 00       	mov    $0x1,%edx
    1a3b:	e8 10 f7 ff ff       	call   1150 <fwrite@plt>
    1a40:	48 8b 0b             	mov    (%rbx),%rcx
    1a43:	48 8d 3d 69 68 00 00 	lea    0x6869(%rip),%rdi        # 82b3 <_IO_stdin_used+0x2b3>
    1a4a:	be 16 00 00 00       	mov    $0x16,%esi
    1a4f:	ba 01 00 00 00       	mov    $0x1,%edx
    1a54:	e8 f7 f6 ff ff       	call   1150 <fwrite@plt>
    1a59:	b8 01 00 00 00       	mov    $0x1,%eax
    1a5e:	5b                   	pop    %rbx
    1a5f:	c3                   	ret    
    1a60:	31 c0                	xor    %eax,%eax
    1a62:	c3                   	ret    
    1a63:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1a6a:	84 00 00 00 00 00 

0000000000001a70 <getfree>:
    1a70:	53                   	push   %rbx
    1a71:	48 89 fb             	mov    %rdi,%rbx
    1a74:	48 8b bf 28 02 00 00 	mov    0x228(%rdi),%rdi
    1a7b:	48 85 ff             	test   %rdi,%rdi
    1a7e:	74 05                	je     1a85 <getfree+0x15>
    1a80:	e8 ab f5 ff ff       	call   1030 <free@plt>
    1a85:	48 8b bb 38 02 00 00 	mov    0x238(%rbx),%rdi
    1a8c:	48 85 ff             	test   %rdi,%rdi
    1a8f:	74 05                	je     1a96 <getfree+0x26>
    1a91:	e8 9a f5 ff ff       	call   1030 <free@plt>
    1a96:	48 8b bb 50 02 00 00 	mov    0x250(%rbx),%rdi
    1a9d:	48 85 ff             	test   %rdi,%rdi
    1aa0:	74 05                	je     1aa7 <getfree+0x37>
    1aa2:	e8 89 f5 ff ff       	call   1030 <free@plt>
    1aa7:	48 8b bb 48 02 00 00 	mov    0x248(%rbx),%rdi
    1aae:	48 81 c3 28 02 00 00 	add    $0x228,%rbx
    1ab5:	48 85 ff             	test   %rdi,%rdi
    1ab8:	74 05                	je     1abf <getfree+0x4f>
    1aba:	e8 71 f5 ff ff       	call   1030 <free@plt>
    1abf:	0f 57 c0             	xorps  %xmm0,%xmm0
    1ac2:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
    1ac6:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    1aca:	0f 11 03             	movups %xmm0,(%rbx)
    1acd:	48 c7 43 30 00 00 00 	movq   $0x0,0x30(%rbx)
    1ad4:	00 
    1ad5:	31 c0                	xor    %eax,%eax
    1ad7:	5b                   	pop    %rbx
    1ad8:	c3                   	ret    
    1ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001ae0 <read_min>:
    1ae0:	55                   	push   %rbp
    1ae1:	41 57                	push   %r15
    1ae3:	41 56                	push   %r14
    1ae5:	41 55                	push   %r13
    1ae7:	41 54                	push   %r12
    1ae9:	53                   	push   %rbx
    1aea:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    1af1:	49 89 fe             	mov    %rdi,%r14
    1af4:	48 8d 35 dd 67 00 00 	lea    0x67dd(%rip),%rsi        # 82d8 <_IO_stdin_used+0x2d8>
    1afb:	e8 20 f6 ff ff       	call   1120 <fopen@plt>
    1b00:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    1b07:	48 85 c0             	test   %rax,%rax
    1b0a:	0f 84 61 02 00 00    	je     1d71 <read_min+0x291>
    1b10:	49 89 c7             	mov    %rax,%r15
    1b13:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
    1b18:	48 89 df             	mov    %rbx,%rdi
    1b1b:	be c8 00 00 00       	mov    $0xc8,%esi
    1b20:	48 89 c2             	mov    %rax,%rdx
    1b23:	e8 78 f5 ff ff       	call   10a0 <fgets@plt>
    1b28:	48 8d 35 af 67 00 00 	lea    0x67af(%rip),%rsi        # 82de <_IO_stdin_used+0x2de>
    1b2f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    1b34:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    1b39:	48 89 df             	mov    %rbx,%rdi
    1b3c:	31 c0                	xor    %eax,%eax
    1b3e:	e8 bd f5 ff ff       	call   1100 <__isoc99_sscanf@plt>
    1b43:	83 f8 02             	cmp    $0x2,%eax
    1b46:	0f 85 25 02 00 00    	jne    1d71 <read_min+0x291>
    1b4c:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    1b51:	4d 89 86 98 01 00 00 	mov    %r8,0x198(%r14)
    1b58:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1b5d:	49 89 86 b0 01 00 00 	mov    %rax,0x1b0(%r14)
    1b64:	4e 8d 2c 45 01 00 00 	lea    0x1(,%r8,2),%r13
    1b6b:	00 
    1b6c:	4d 89 ae 90 01 00 00 	mov    %r13,0x190(%r14)
    1b73:	4b 8d 0c 40          	lea    (%r8,%r8,2),%rcx
    1b77:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
    1b7b:	49 89 9e a8 01 00 00 	mov    %rbx,0x1a8(%r14)
    1b82:	48 01 c8             	add    %rcx,%rax
    1b85:	48 ff c8             	dec    %rax
    1b88:	48 be cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rsi
    1b8f:	9b c4 20 
    1b92:	48 f7 ee             	imul   %rsi
    1b95:	49 c7 86 80 02 00 00 	movq   $0xfa0,0x280(%r14)
    1b9c:	a0 0f 00 00 
    1ba0:	48 89 d0             	mov    %rdx,%rax
    1ba3:	48 c1 e8 3f          	shr    $0x3f,%rax
    1ba7:	48 c1 fa 09          	sar    $0x9,%rdx
    1bab:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    1baf:	48 ff c1             	inc    %rcx
    1bb2:	49 89 8e 70 02 00 00 	mov    %rcx,0x270(%r14)
    1bb9:	48 89 d8             	mov    %rbx,%rax
    1bbc:	48 f7 ee             	imul   %rsi
    1bbf:	48 89 d0             	mov    %rdx,%rax
    1bc2:	48 c1 e8 3f          	shr    $0x3f,%rax
    1bc6:	48 c1 fa 09          	sar    $0x9,%rdx
    1bca:	48 01 c2             	add    %rax,%rdx
    1bcd:	48 69 c2 a0 0f 00 00 	imul   $0xfa0,%rdx,%rax
    1bd4:	48 89 da             	mov    %rbx,%rdx
    1bd7:	48 29 c2             	sub    %rax,%rdx
    1bda:	48 8d 82 60 f0 ff ff 	lea    -0xfa0(%rdx),%rax
    1be1:	48 85 d2             	test   %rdx,%rdx
    1be4:	48 0f 44 c2          	cmove  %rdx,%rax
    1be8:	48 01 c8             	add    %rcx,%rax
    1beb:	49 89 86 78 02 00 00 	mov    %rax,0x278(%r14)
    1bf2:	79 22                	jns    1c16 <read_min+0x136>
    1bf4:	ba a0 0f 00 00       	mov    $0xfa0,%edx
    1bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1c00:	48 ff ca             	dec    %rdx
    1c03:	48 01 c8             	add    %rcx,%rax
    1c06:	78 f8                	js     1c00 <read_min+0x120>
    1c08:	49 89 86 78 02 00 00 	mov    %rax,0x278(%r14)
    1c0f:	49 89 96 80 02 00 00 	mov    %rdx,0x280(%r14)
    1c16:	4b 8d 3c 00          	lea    (%r8,%r8,1),%rdi
    1c1a:	49 81 f8 98 3a 00 00 	cmp    $0x3a98,%r8
    1c21:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    1c26:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    1c2b:	7f 22                	jg     1c4f <read_min+0x16f>
    1c2d:	49 89 9e a0 01 00 00 	mov    %rbx,0x1a0(%r14)
    1c34:	49 c7 86 c8 01 00 00 	movq   $0x1e8480,0x1c8(%r14)
    1c3b:	80 84 1e 00 
    1c3f:	49 c7 86 c0 01 00 00 	movq   $0x0,0x1c0(%r14)
    1c46:	00 00 00 00 
    1c4a:	48 89 dd             	mov    %rbx,%rbp
    1c4d:	eb 67                	jmp    1cb6 <read_min+0x1d6>
    1c4f:	48 8d ab 40 4b 4c 00 	lea    0x4c4b40(%rbx),%rbp
    1c56:	f2 48 0f 2a cb       	cvtsi2sd %rbx,%xmm1
    1c5b:	f2 0f 10 05 6d 66 00 	movsd  0x666d(%rip),%xmm0        # 82d0 <_IO_stdin_used+0x2d0>
    1c62:	00 
    1c63:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    1c67:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    1c6c:	0f 57 c9             	xorps  %xmm1,%xmm1
    1c6f:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1c74:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    1c78:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    1c7d:	48 39 c5             	cmp    %rax,%rbp
    1c80:	7f 22                	jg     1ca4 <read_min+0x1c4>
    1c82:	0f 57 c9             	xorps  %xmm1,%xmm1
    1c85:	f2 48 0f 2a cb       	cvtsi2sd %rbx,%xmm1
    1c8a:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    1c8e:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
    1c93:	0f 57 c9             	xorps  %xmm1,%xmm1
    1c96:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1c9b:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    1c9f:	f2 48 0f 2c e9       	cvttsd2si %xmm1,%rbp
    1ca4:	49 89 ae a0 01 00 00 	mov    %rbp,0x1a0(%r14)
    1cab:	49 c7 86 c8 01 00 00 	movq   $0x1b8faa0,0x1c8(%r14)
    1cb2:	a0 fa b8 01 
    1cb6:	48 83 c7 02          	add    $0x2,%rdi
    1cba:	be 68 00 00 00       	mov    $0x68,%esi
    1cbf:	e8 ec f3 ff ff       	call   10b0 <calloc@plt>
    1cc4:	49 89 c4             	mov    %rax,%r12
    1cc7:	49 89 86 28 02 00 00 	mov    %rax,0x228(%r14)
    1cce:	be 48 00 00 00       	mov    $0x48,%esi
    1cd3:	4c 89 ef             	mov    %r13,%rdi
    1cd6:	e8 d5 f3 ff ff       	call   10b0 <calloc@plt>
    1cdb:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
    1ce0:	49 89 c5             	mov    %rax,%r13
    1ce3:	49 89 86 50 02 00 00 	mov    %rax,0x250(%r14)
    1cea:	be 48 00 00 00       	mov    $0x48,%esi
    1cef:	48 89 ef             	mov    %rbp,%rdi
    1cf2:	e8 b9 f3 ff ff       	call   10b0 <calloc@plt>
    1cf7:	49 89 c7             	mov    %rax,%r15
    1cfa:	49 89 86 48 02 00 00 	mov    %rax,0x248(%r14)
    1d01:	be 48 00 00 00       	mov    $0x48,%esi
    1d06:	48 89 ef             	mov    %rbp,%rdi
    1d09:	e8 a2 f3 ff ff       	call   10b0 <calloc@plt>
    1d0e:	48 89 c5             	mov    %rax,%rbp
    1d11:	49 89 86 38 02 00 00 	mov    %rax,0x238(%r14)
    1d18:	66 49 0f 6e c4       	movq   %r12,%xmm0
    1d1d:	66 48 0f 6e c8       	movq   %rax,%xmm1
    1d22:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    1d26:	66 49 0f 6e c5       	movq   %r13,%xmm0
    1d2b:	66 49 0f 6e d7       	movq   %r15,%xmm2
    1d30:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    1d34:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1d38:	66 0f 76 c2          	pcmpeqd %xmm2,%xmm0
    1d3c:	66 0f 76 ca          	pcmpeqd %xmm2,%xmm1
    1d40:	66 0f 6f d1          	movdqa %xmm1,%xmm2
    1d44:	0f c6 d0 dd          	shufps $0xdd,%xmm0,%xmm2
    1d48:	0f c6 c8 88          	shufps $0x88,%xmm0,%xmm1
    1d4c:	0f 54 ca             	andps  %xmm2,%xmm1
    1d4f:	0f 50 c1             	movmskps %xmm1,%eax
    1d52:	85 c0                	test   %eax,%eax
    1d54:	74 30                	je     1d86 <read_min+0x2a6>
    1d56:	48 8d 3d 89 65 00 00 	lea    0x6589(%rip),%rdi        # 82e6 <_IO_stdin_used+0x2e6>
    1d5d:	e8 fe f2 ff ff       	call   1060 <puts@plt>
    1d62:	4c 89 f7             	mov    %r14,%rdi
    1d65:	e8 06 fd ff ff       	call   1a70 <getfree>
    1d6a:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    1d71:	4c 89 e8             	mov    %r13,%rax
    1d74:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    1d7b:	5b                   	pop    %rbx
    1d7c:	41 5c                	pop    %r12
    1d7e:	41 5d                	pop    %r13
    1d80:	41 5e                	pop    %r14
    1d82:	41 5f                	pop    %r15
    1d84:	5d                   	pop    %rbp
    1d85:	c3                   	ret    
    1d86:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    1d8b:	48 6b c2 68          	imul   $0x68,%rdx,%rax
    1d8f:	4c 01 e0             	add    %r12,%rax
    1d92:	48 83 c0 68          	add    $0x68,%rax
    1d96:	49 89 86 30 02 00 00 	mov    %rax,0x230(%r14)
    1d9d:	48 8d 04 db          	lea    (%rbx,%rbx,8),%rax
    1da1:	48 8d 44 c5 00       	lea    0x0(%rbp,%rax,8),%rax
    1da6:	49 89 86 40 02 00 00 	mov    %rax,0x240(%r14)
    1dad:	48 8d 04 d2          	lea    (%rdx,%rdx,8),%rax
    1db1:	48 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%rax
    1db8:	00 
    1db9:	4c 01 e8             	add    %r13,%rax
    1dbc:	49 89 86 58 02 00 00 	mov    %rax,0x258(%r14)
    1dc3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1dc8:	48 85 d2             	test   %rdx,%rdx
    1dcb:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    1dd0:	b8 01 00 00 00       	mov    $0x1,%eax
    1dd5:	0f 8e 82 02 00 00    	jle    205d <read_min+0x57d>
    1ddb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1de0:	41 bf ff ff ff ff    	mov    $0xffffffff,%r15d
    1de6:	4c 89 e3             	mov    %r12,%rbx
    1de9:	45 31 ed             	xor    %r13d,%r13d
    1dec:	e9 8d 00 00 00       	jmp    1e7e <read_min+0x39e>
    1df1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1df8:	0f 1f 84 00 00 00 00 
    1dff:	00 
    1e00:	49 8d 14 c7          	lea    (%r15,%rax,8),%rdx
    1e04:	48 01 c9             	add    %rcx,%rcx
    1e07:	49 89 4c c7 08       	mov    %rcx,0x8(%r15,%rax,8)
    1e0c:	49 89 4c c7 40       	mov    %rcx,0x40(%r15,%rax,8)
    1e11:	48 8b 8b a0 00 00 00 	mov    0xa0(%rbx),%rcx
    1e18:	49 89 4c c7 28       	mov    %rcx,0x28(%r15,%rax,8)
    1e1d:	48 89 93 a0 00 00 00 	mov    %rdx,0xa0(%rbx)
    1e24:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
    1e28:	48 8b 71 40          	mov    0x40(%rcx),%rsi
    1e2c:	49 89 74 c7 30       	mov    %rsi,0x30(%r15,%rax,8)
    1e31:	48 89 51 40          	mov    %rdx,0x40(%rcx)
    1e35:	49 8b 9e 38 02 00 00 	mov    0x238(%r14),%rbx
    1e3c:	49 ff c5             	inc    %r13
    1e3f:	4c 89 f7             	mov    %r14,%rdi
    1e42:	4c 89 ee             	mov    %r13,%rsi
    1e45:	e8 a6 f8 ff ff       	call   16f0 <getArcPosition>
    1e4a:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    1e4e:	48 8d 2c c3          	lea    (%rbx,%rax,8),%rbp
    1e52:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    1e57:	48 8d 41 01          	lea    0x1(%rcx),%rax
    1e5b:	49 8b 96 98 01 00 00 	mov    0x198(%r14),%rdx
    1e62:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
    1e67:	41 ff cf             	dec    %r15d
    1e6a:	4c 89 e3             	mov    %r12,%rbx
    1e6d:	48 39 d1             	cmp    %rdx,%rcx
    1e70:	48 89 c1             	mov    %rax,%rcx
    1e73:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1e78:	0f 8d f5 01 00 00    	jge    2073 <read_min+0x593>
    1e7e:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
    1e83:	4c 89 e7             	mov    %r12,%rdi
    1e86:	be c8 00 00 00       	mov    $0xc8,%esi
    1e8b:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    1e90:	e8 0b f2 ff ff       	call   10a0 <fgets@plt>
    1e95:	4c 89 e7             	mov    %r12,%rdi
    1e98:	48 8d 35 3f 64 00 00 	lea    0x643f(%rip),%rsi        # 82de <_IO_stdin_used+0x2de>
    1e9f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    1ea4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    1ea9:	31 c0                	xor    %eax,%eax
    1eab:	e8 50 f2 ff ff       	call   1100 <__isoc99_sscanf@plt>
    1eb0:	83 f8 02             	cmp    $0x2,%eax
    1eb3:	0f 85 b1 fe ff ff    	jne    1d6a <read_min+0x28a>
    1eb9:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1ebe:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    1ec3:	48 39 c1             	cmp    %rax,%rcx
    1ec6:	0f 8f 9e fe ff ff    	jg     1d6a <read_min+0x28a>
    1ecc:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
    1ed1:	44 89 bb c8 00 00 00 	mov    %r15d,0xc8(%rbx)
    1ed8:	48 c7 83 b8 00 00 00 	movq   $0xffffffffffffffff,0xb8(%rbx)
    1edf:	ff ff ff ff 
    1ee3:	49 6b 96 98 01 00 00 	imul   $0x68,0x198(%r14),%rdx
    1eea:	68 
    1eeb:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
    1eef:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    1ef4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    1ef9:	89 b4 13 c8 00 00 00 	mov    %esi,0xc8(%rbx,%rdx,1)
    1f00:	48 c7 84 13 b8 00 00 	movq   $0x1,0xb8(%rbx,%rdx,1)
    1f07:	00 01 00 00 00 
    1f0c:	89 8b cc 00 00 00    	mov    %ecx,0xcc(%rbx)
    1f12:	89 84 13 cc 00 00 00 	mov    %eax,0xcc(%rbx,%rdx,1)
    1f19:	44 89 6d 00          	mov    %r13d,0x0(%rbp)
    1f1d:	49 6b 86 90 01 00 00 	imul   $0x68,0x190(%r14),%rax
    1f24:	68 
    1f25:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    1f2a:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    1f2e:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
    1f32:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
    1f36:	49 8b 8e 10 02 00 00 	mov    0x210(%r14),%rcx
    1f3d:	48 83 c1 0f          	add    $0xf,%rcx
    1f41:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    1f45:	48 89 4d 40          	mov    %rcx,0x40(%rbp)
    1f49:	49 8b 4c 04 38       	mov    0x38(%r12,%rax,1),%rcx
    1f4e:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    1f52:	49 89 6c 04 38       	mov    %rbp,0x38(%r12,%rax,1)
    1f57:	48 8b 45 18          	mov    0x18(%rbp),%rax
    1f5b:	48 8b 48 40          	mov    0x40(%rax),%rcx
    1f5f:	48 89 4d 30          	mov    %rcx,0x30(%rbp)
    1f63:	48 89 68 40          	mov    %rbp,0x40(%rax)
    1f67:	4c 89 ed             	mov    %r13,%rbp
    1f6a:	4d 8b ae 38 02 00 00 	mov    0x238(%r14),%r13
    1f71:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
    1f75:	4c 89 f7             	mov    %r14,%rdi
    1f78:	4c 89 fe             	mov    %r15,%rsi
    1f7b:	e8 70 f7 ff ff       	call   16f0 <getArcPosition>
    1f80:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    1f84:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1f8b:	00 
    1f8c:	4c 01 e9             	add    %r13,%rcx
    1f8f:	45 89 7c c5 00       	mov    %r15d,0x0(%r13,%rax,8)
    1f94:	49 6b 96 98 01 00 00 	imul   $0x68,0x198(%r14),%rdx
    1f9b:	68 
    1f9c:	48 8d 34 13          	lea    (%rbx,%rdx,1),%rsi
    1fa0:	48 83 c6 68          	add    $0x68,%rsi
    1fa4:	49 89 74 c5 10       	mov    %rsi,0x10(%r13,%rax,8)
    1fa9:	49 6b b6 90 01 00 00 	imul   $0x68,0x190(%r14),%rsi
    1fb0:	68 
    1fb1:	4c 01 e6             	add    %r12,%rsi
    1fb4:	49 89 74 c5 18       	mov    %rsi,0x18(%r13,%rax,8)
    1fb9:	49 c7 44 c5 08 0f 00 	movq   $0xf,0x8(%r13,%rax,8)
    1fc0:	00 00 
    1fc2:	49 c7 44 c5 40 0f 00 	movq   $0xf,0x40(%r13,%rax,8)
    1fc9:	00 00 
    1fcb:	48 8b b4 13 a0 00 00 	mov    0xa0(%rbx,%rdx,1),%rsi
    1fd2:	00 
    1fd3:	49 89 74 c5 28       	mov    %rsi,0x28(%r13,%rax,8)
    1fd8:	48 89 8c 13 a0 00 00 	mov    %rcx,0xa0(%rbx,%rdx,1)
    1fdf:	00 
    1fe0:	49 8b 54 c5 18       	mov    0x18(%r13,%rax,8),%rdx
    1fe5:	48 8b 72 40          	mov    0x40(%rdx),%rsi
    1fe9:	49 89 74 c5 30       	mov    %rsi,0x30(%r13,%rax,8)
    1fee:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    1ff2:	4d 8b be 38 02 00 00 	mov    0x238(%r14),%r15
    1ff9:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
    1ffe:	4c 8d 6d 02          	lea    0x2(%rbp),%r13
    2002:	4c 89 f7             	mov    %r14,%rdi
    2005:	4c 89 ee             	mov    %r13,%rsi
    2008:	e8 e3 f6 ff ff       	call   16f0 <getArcPosition>
    200d:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2011:	45 89 2c c7          	mov    %r13d,(%r15,%rax,8)
    2015:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    201a:	49 89 cc             	mov    %rcx,%r12
    201d:	49 89 4c c7 10       	mov    %rcx,0x10(%r15,%rax,8)
    2022:	49 6b 8e 98 01 00 00 	imul   $0x68,0x198(%r14),%rcx
    2029:	68 
    202a:	48 01 d9             	add    %rbx,%rcx
    202d:	48 83 c1 68          	add    $0x68,%rcx
    2031:	49 89 4c c7 18       	mov    %rcx,0x18(%r15,%rax,8)
    2036:	49 8b 8e 10 02 00 00 	mov    0x210(%r14),%rcx
    203d:	f2 48 0f 2c 15 c2 5f 	cvttsd2si 0x5fc2(%rip),%rdx        # 8008 <_IO_stdin_used+0x8>
    2044:	00 00 
    2046:	48 39 d1             	cmp    %rdx,%rcx
    2049:	0f 8f b1 fd ff ff    	jg     1e00 <read_min+0x320>
    204f:	f2 48 0f 2c 0d b0 5f 	cvttsd2si 0x5fb0(%rip),%rcx        # 8008 <_IO_stdin_used+0x8>
    2056:	00 00 
    2058:	e9 a3 fd ff ff       	jmp    1e00 <read_min+0x320>
    205d:	45 31 ed             	xor    %r13d,%r13d
    2060:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    2065:	48 ff c2             	inc    %rdx
    2068:	48 39 d0             	cmp    %rdx,%rax
    206b:	0f 85 f9 fc ff ff    	jne    1d6a <read_min+0x28a>
    2071:	eb 1a                	jmp    208d <read_min+0x5ad>
    2073:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    2078:	49 83 c5 03          	add    $0x3,%r13
    207c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    2081:	48 ff c2             	inc    %rdx
    2084:	48 39 d0             	cmp    %rdx,%rax
    2087:	0f 85 dd fc ff ff    	jne    1d6a <read_min+0x28a>
    208d:	49 83 be b0 01 00 00 	cmpq   $0x0,0x1b0(%r14)
    2094:	00 
    2095:	0f 8e cc 00 00 00    	jle    2167 <read_min+0x687>
    209b:	31 db                	xor    %ebx,%ebx
    209d:	0f 1f 00             	nopl   (%rax)
    20a0:	4c 8d 7c 24 50       	lea    0x50(%rsp),%r15
    20a5:	4c 89 ff             	mov    %r15,%rdi
    20a8:	be c8 00 00 00       	mov    $0xc8,%esi
    20ad:	4c 89 e2             	mov    %r12,%rdx
    20b0:	e8 eb ef ff ff       	call   10a0 <fgets@plt>
    20b5:	4c 89 ff             	mov    %r15,%rdi
    20b8:	48 8d 35 1b 62 00 00 	lea    0x621b(%rip),%rsi        # 82da <_IO_stdin_used+0x2da>
    20bf:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    20c4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    20c9:	4c 8d 44 24 48       	lea    0x48(%rsp),%r8
    20ce:	31 c0                	xor    %eax,%eax
    20d0:	e8 2b f0 ff ff       	call   1100 <__isoc99_sscanf@plt>
    20d5:	83 f8 03             	cmp    $0x3,%eax
    20d8:	0f 85 8c fc ff ff    	jne    1d6a <read_min+0x28a>
    20de:	4c 89 ee             	mov    %r13,%rsi
    20e1:	89 75 00             	mov    %esi,0x0(%rbp)
    20e4:	48 6b 44 24 18 68    	imul   $0x68,0x18(%rsp),%rax
    20ea:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    20ef:	48 01 f8             	add    %rdi,%rax
    20f2:	49 6b 8e 98 01 00 00 	imul   $0x68,0x198(%r14),%rcx
    20f9:	68 
    20fa:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    20fe:	48 89 55 10          	mov    %rdx,0x10(%rbp)
    2102:	48 6b 54 24 10 68    	imul   $0x68,0x10(%rsp),%rdx
    2108:	48 01 fa             	add    %rdi,%rdx
    210b:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    210f:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    2114:	48 89 55 40          	mov    %rdx,0x40(%rbp)
    2118:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    211c:	48 8b 54 01 38       	mov    0x38(%rcx,%rax,1),%rdx
    2121:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2125:	48 89 6c 01 38       	mov    %rbp,0x38(%rcx,%rax,1)
    212a:	48 8b 45 18          	mov    0x18(%rbp),%rax
    212e:	48 8b 48 40          	mov    0x40(%rax),%rcx
    2132:	48 89 4d 30          	mov    %rcx,0x30(%rbp)
    2136:	48 89 68 40          	mov    %rbp,0x40(%rax)
    213a:	48 ff c3             	inc    %rbx
    213d:	4d 8b be 38 02 00 00 	mov    0x238(%r14),%r15
    2144:	48 ff c6             	inc    %rsi
    2147:	4c 89 f7             	mov    %r14,%rdi
    214a:	49 89 f5             	mov    %rsi,%r13
    214d:	e8 9e f5 ff ff       	call   16f0 <getArcPosition>
    2152:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2156:	49 8d 2c c7          	lea    (%r15,%rax,8),%rbp
    215a:	49 3b 9e b0 01 00 00 	cmp    0x1b0(%r14),%rbx
    2161:	0f 8c 39 ff ff ff    	jl     20a0 <read_min+0x5c0>
    2167:	4c 89 e7             	mov    %r12,%rdi
    216a:	e8 01 ef ff ff       	call   1070 <fclose@plt>
    216f:	41 c6 86 c8 00 00 00 	movb   $0x0,0xc8(%r14)
    2176:	00 
    2177:	49 83 be 98 01 00 00 	cmpq   $0x0,0x198(%r14)
    217e:	00 
    217f:	0f 8e 91 00 00 00    	jle    2216 <read_min+0x736>
    2185:	bb 02 00 00 00       	mov    $0x2,%ebx
    218a:	45 31 ed             	xor    %r13d,%r13d
    218d:	45 31 ff             	xor    %r15d,%r15d
    2190:	eb 2d                	jmp    21bf <read_min+0x6df>
    2192:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2199:	1f 84 00 00 00 00 00 
    21a0:	48 01 c9             	add    %rcx,%rcx
    21a3:	48 f7 d9             	neg    %rcx
    21a6:	49 89 4c c4 40       	mov    %rcx,0x40(%r12,%rax,8)
    21ab:	49 ff c7             	inc    %r15
    21ae:	48 83 c3 03          	add    $0x3,%rbx
    21b2:	4d 3b be 98 01 00 00 	cmp    0x198(%r14),%r15
    21b9:	0f 8d b2 fb ff ff    	jge    1d71 <read_min+0x291>
    21bf:	4d 8b a6 38 02 00 00 	mov    0x238(%r14),%r12
    21c6:	4c 89 f7             	mov    %r14,%rdi
    21c9:	48 89 de             	mov    %rbx,%rsi
    21cc:	e8 1f f5 ff ff       	call   16f0 <getArcPosition>
    21d1:	f2 0f 10 05 2f 5e 00 	movsd  0x5e2f(%rip),%xmm0        # 8008 <_IO_stdin_used+0x8>
    21d8:	00 
    21d9:	49 8b 8e 10 02 00 00 	mov    0x210(%r14),%rcx
    21e0:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
    21e5:	48 39 d1             	cmp    %rdx,%rcx
    21e8:	7f 05                	jg     21ef <read_min+0x70f>
    21ea:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    21ef:	48 01 c9             	add    %rcx,%rcx
    21f2:	48 f7 d9             	neg    %rcx
    21f5:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    21f9:	49 89 4c c4 08       	mov    %rcx,0x8(%r12,%rax,8)
    21fe:	49 8b 8e 10 02 00 00 	mov    0x210(%r14),%rcx
    2205:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
    220a:	48 39 d1             	cmp    %rdx,%rcx
    220d:	7f 91                	jg     21a0 <read_min+0x6c0>
    220f:	f2 48 0f 2c c8       	cvttsd2si %xmm0,%rcx
    2214:	eb 8a                	jmp    21a0 <read_min+0x6c0>
    2216:	45 31 ed             	xor    %r13d,%r13d
    2219:	e9 53 fb ff ff       	jmp    1d71 <read_min+0x291>
    221e:	66 90                	xchg   %ax,%ax

0000000000002220 <refreshArcPointers>:
    2220:	48 83 bf 90 01 00 00 	cmpq   $0x0,0x190(%rdi)
    2227:	00 
    2228:	0f 88 c5 00 00 00    	js     22f3 <refreshArcPointers+0xd3>
    222e:	55                   	push   %rbp
    222f:	41 57                	push   %r15
    2231:	41 56                	push   %r14
    2233:	41 55                	push   %r13
    2235:	41 54                	push   %r12
    2237:	53                   	push   %rbx
    2238:	50                   	push   %rax
    2239:	48 89 d3             	mov    %rdx,%rbx
    223c:	49 89 f6             	mov    %rsi,%r14
    223f:	49 89 ff             	mov    %rdi,%r15
    2242:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    2249:	41 bd 40 00 00 00    	mov    $0x40,%r13d
    224f:	eb 1f                	jmp    2270 <refreshArcPointers+0x50>
    2251:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2258:	0f 1f 84 00 00 00 00 
    225f:	00 
    2260:	49 ff c4             	inc    %r12
    2263:	49 83 c5 68          	add    $0x68,%r13
    2267:	4d 3b a7 90 01 00 00 	cmp    0x190(%r15),%r12
    226e:	7d 75                	jge    22e5 <refreshArcPointers+0xc5>
    2270:	49 8b af 28 02 00 00 	mov    0x228(%r15),%rbp
    2277:	4a 8b 44 2d f0       	mov    -0x10(%rbp,%r13,1),%rax
    227c:	48 85 c0             	test   %rax,%rax
    227f:	74 19                	je     229a <refreshArcPointers+0x7a>
    2281:	8b 30                	mov    (%rax),%esi
    2283:	85 f6                	test   %esi,%esi
    2285:	78 13                	js     229a <refreshArcPointers+0x7a>
    2287:	4c 89 ff             	mov    %r15,%rdi
    228a:	41 ff d6             	call   *%r14
    228d:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2291:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    2295:	4a 89 44 2d f0       	mov    %rax,-0x10(%rbp,%r13,1)
    229a:	4a 8b 44 2d 00       	mov    0x0(%rbp,%r13,1),%rax
    229f:	48 85 c0             	test   %rax,%rax
    22a2:	74 19                	je     22bd <refreshArcPointers+0x9d>
    22a4:	8b 30                	mov    (%rax),%esi
    22a6:	85 f6                	test   %esi,%esi
    22a8:	78 13                	js     22bd <refreshArcPointers+0x9d>
    22aa:	4c 89 ff             	mov    %r15,%rdi
    22ad:	41 ff d6             	call   *%r14
    22b0:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    22b4:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    22b8:	4a 89 44 2d 00       	mov    %rax,0x0(%rbp,%r13,1)
    22bd:	4a 8b 44 2d f8       	mov    -0x8(%rbp,%r13,1),%rax
    22c2:	48 85 c0             	test   %rax,%rax
    22c5:	74 99                	je     2260 <refreshArcPointers+0x40>
    22c7:	8b 30                	mov    (%rax),%esi
    22c9:	85 f6                	test   %esi,%esi
    22cb:	78 93                	js     2260 <refreshArcPointers+0x40>
    22cd:	4c 89 ff             	mov    %r15,%rdi
    22d0:	41 ff d6             	call   *%r14
    22d3:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    22d7:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    22db:	4a 89 44 2d f8       	mov    %rax,-0x8(%rbp,%r13,1)
    22e0:	e9 7b ff ff ff       	jmp    2260 <refreshArcPointers+0x40>
    22e5:	48 83 c4 08          	add    $0x8,%rsp
    22e9:	5b                   	pop    %rbx
    22ea:	41 5c                	pop    %r12
    22ec:	41 5d                	pop    %r13
    22ee:	41 5e                	pop    %r14
    22f0:	41 5f                	pop    %r15
    22f2:	5d                   	pop    %rbp
    22f3:	31 c0                	xor    %eax,%eax
    22f5:	c3                   	ret    
    22f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22fd:	00 00 00 

0000000000002300 <refreshPositions>:
    2300:	55                   	push   %rbp
    2301:	41 57                	push   %r15
    2303:	41 56                	push   %r14
    2305:	41 55                	push   %r13
    2307:	41 54                	push   %r12
    2309:	53                   	push   %rbx
    230a:	50                   	push   %rax
    230b:	48 89 14 24          	mov    %rdx,(%rsp)
    230f:	49 89 f7             	mov    %rsi,%r15
    2312:	48 89 fb             	mov    %rdi,%rbx
    2315:	4c 8b a7 48 02 00 00 	mov    0x248(%rdi),%r12
    231c:	48 83 bf 90 01 00 00 	cmpq   $0x0,0x190(%rdi)
    2323:	00 
    2324:	0f 88 96 00 00 00    	js     23c0 <refreshPositions+0xc0>
    232a:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    2331:	bd 40 00 00 00       	mov    $0x40,%ebp
    2336:	eb 18                	jmp    2350 <refreshPositions+0x50>
    2338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    233f:	00 
    2340:	49 ff c5             	inc    %r13
    2343:	48 83 c5 68          	add    $0x68,%rbp
    2347:	4c 3b ab 90 01 00 00 	cmp    0x190(%rbx),%r13
    234e:	7d 70                	jge    23c0 <refreshPositions+0xc0>
    2350:	4c 8b b3 28 02 00 00 	mov    0x228(%rbx),%r14
    2357:	49 8b 44 2e f0       	mov    -0x10(%r14,%rbp,1),%rax
    235c:	48 85 c0             	test   %rax,%rax
    235f:	74 19                	je     237a <refreshPositions+0x7a>
    2361:	8b 30                	mov    (%rax),%esi
    2363:	85 f6                	test   %esi,%esi
    2365:	78 13                	js     237a <refreshPositions+0x7a>
    2367:	48 89 df             	mov    %rbx,%rdi
    236a:	41 ff d7             	call   *%r15
    236d:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2371:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    2375:	49 89 44 2e f0       	mov    %rax,-0x10(%r14,%rbp,1)
    237a:	49 8b 04 2e          	mov    (%r14,%rbp,1),%rax
    237e:	48 85 c0             	test   %rax,%rax
    2381:	74 18                	je     239b <refreshPositions+0x9b>
    2383:	8b 30                	mov    (%rax),%esi
    2385:	85 f6                	test   %esi,%esi
    2387:	78 12                	js     239b <refreshPositions+0x9b>
    2389:	48 89 df             	mov    %rbx,%rdi
    238c:	41 ff d7             	call   *%r15
    238f:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2393:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    2397:	49 89 04 2e          	mov    %rax,(%r14,%rbp,1)
    239b:	49 8b 44 2e f8       	mov    -0x8(%r14,%rbp,1),%rax
    23a0:	48 85 c0             	test   %rax,%rax
    23a3:	74 9b                	je     2340 <refreshPositions+0x40>
    23a5:	8b 30                	mov    (%rax),%esi
    23a7:	85 f6                	test   %esi,%esi
    23a9:	78 95                	js     2340 <refreshPositions+0x40>
    23ab:	48 89 df             	mov    %rbx,%rdi
    23ae:	41 ff d7             	call   *%r15
    23b1:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    23b5:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    23b9:	49 89 44 2e f8       	mov    %rax,-0x8(%r14,%rbp,1)
    23be:	eb 80                	jmp    2340 <refreshPositions+0x40>
    23c0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    23c5:	7e 61                	jle    2428 <refreshPositions+0x128>
    23c7:	45 31 f6             	xor    %r14d,%r14d
    23ca:	4c 8b 2c 24          	mov    (%rsp),%r13
    23ce:	eb 09                	jmp    23d9 <refreshPositions+0xd9>
    23d0:	49 83 c6 48          	add    $0x48,%r14
    23d4:	49 ff cd             	dec    %r13
    23d7:	74 4f                	je     2428 <refreshPositions+0x128>
    23d9:	48 8b ab 38 02 00 00 	mov    0x238(%rbx),%rbp
    23e0:	42 8b 74 35 00       	mov    0x0(%rbp,%r14,1),%esi
    23e5:	85 f6                	test   %esi,%esi
    23e7:	78 e7                	js     23d0 <refreshPositions+0xd0>
    23e9:	4c 01 f5             	add    %r14,%rbp
    23ec:	48 89 df             	mov    %rbx,%rdi
    23ef:	41 ff d7             	call   *%r15
    23f2:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    23f6:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
    23fa:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
    23fe:	0f 10 55 20          	movups 0x20(%rbp),%xmm2
    2402:	0f 10 5d 30          	movups 0x30(%rbp),%xmm3
    2406:	41 0f 11 04 c4       	movups %xmm0,(%r12,%rax,8)
    240b:	41 0f 11 4c c4 10    	movups %xmm1,0x10(%r12,%rax,8)
    2411:	41 0f 11 54 c4 20    	movups %xmm2,0x20(%r12,%rax,8)
    2417:	41 0f 11 5c c4 30    	movups %xmm3,0x30(%r12,%rax,8)
    241d:	48 8b 4d 40          	mov    0x40(%rbp),%rcx
    2421:	49 89 4c c4 40       	mov    %rcx,0x40(%r12,%rax,8)
    2426:	eb a8                	jmp    23d0 <refreshPositions+0xd0>
    2428:	48 8b 83 38 02 00 00 	mov    0x238(%rbx),%rax
    242f:	4c 89 a3 38 02 00 00 	mov    %r12,0x238(%rbx)
    2436:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
    243d:	48 8b 04 24          	mov    (%rsp),%rax
    2441:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    2445:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    2449:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    2450:	31 c0                	xor    %eax,%eax
    2452:	48 83 c4 08          	add    $0x8,%rsp
    2456:	5b                   	pop    %rbx
    2457:	41 5c                	pop    %r12
    2459:	41 5d                	pop    %r13
    245b:	41 5e                	pop    %r14
    245d:	41 5f                	pop    %r15
    245f:	5d                   	pop    %rbp
    2460:	c3                   	ret    
    2461:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2468:	0f 1f 84 00 00 00 00 
    246f:	00 

0000000000002470 <marc_arcs>:
    2470:	48 81 bf 98 01 00 00 	cmpq   $0x3a99,0x198(%rdi)
    2477:	99 3a 00 00 
    247b:	49 c7 c0 c0 bd f0 ff 	mov    $0xfffffffffff0bdc0,%r8
    2482:	48 c7 c0 00 f7 c2 ff 	mov    $0xffffffffffc2f700,%rax
    2489:	49 0f 4c c0          	cmovl  %r8,%rax
    248d:	48 03 87 c0 01 00 00 	add    0x1c0(%rdi),%rax
    2494:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    249b:	4c 8b 02             	mov    (%rdx),%r8
    249e:	4c 89 06             	mov    %r8,(%rsi)
    24a1:	31 d2                	xor    %edx,%edx
    24a3:	4d 85 c0             	test   %r8,%r8
    24a6:	7e 38                	jle    24e0 <marc_arcs+0x70>
    24a8:	48 85 c0             	test   %rax,%rax
    24ab:	7e 33                	jle    24e0 <marc_arcs+0x70>
    24ad:	48 8b 09             	mov    (%rcx),%rcx
    24b0:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
    24b7:	31 d2                	xor    %edx,%edx
    24b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    24c0:	4c 8b 0c d1          	mov    (%rcx,%rdx,8),%r9
    24c4:	45 8d 14 10          	lea    (%r8,%rdx,1),%r10d
    24c8:	45 89 11             	mov    %r10d,(%r9)
    24cb:	49 c7 41 38 01 00 00 	movq   $0x1,0x38(%r9)
    24d2:	00 
    24d3:	48 ff c2             	inc    %rdx
    24d6:	48 3b 16             	cmp    (%rsi),%rdx
    24d9:	7d 05                	jge    24e0 <marc_arcs+0x70>
    24db:	48 39 c2             	cmp    %rax,%rdx
    24de:	7c e0                	jl     24c0 <marc_arcs+0x50>
    24e0:	48 89 16             	mov    %rdx,(%rsi)
    24e3:	48 c7 87 80 02 00 00 	movq   $0xfa0,0x280(%rdi)
    24ea:	a0 0f 00 00 
    24ee:	48 8b 06             	mov    (%rsi),%rax
    24f1:	48 8b 8f a8 01 00 00 	mov    0x1a8(%rdi),%rcx
    24f8:	48 01 c8             	add    %rcx,%rax
    24fb:	48 ff c8             	dec    %rax
    24fe:	49 b9 cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r9
    2505:	9b c4 20 
    2508:	49 f7 e9             	imul   %r9
    250b:	48 89 d0             	mov    %rdx,%rax
    250e:	48 c1 e8 3f          	shr    $0x3f,%rax
    2512:	48 c1 fa 09          	sar    $0x9,%rdx
    2516:	4c 8d 04 02          	lea    (%rdx,%rax,1),%r8
    251a:	49 ff c0             	inc    %r8
    251d:	4c 89 87 70 02 00 00 	mov    %r8,0x270(%rdi)
    2524:	48 03 0e             	add    (%rsi),%rcx
    2527:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    252b:	48 89 c8             	mov    %rcx,%rax
    252e:	49 f7 e9             	imul   %r9
    2531:	48 89 d0             	mov    %rdx,%rax
    2534:	48 c1 e8 3f          	shr    $0x3f,%rax
    2538:	48 c1 fa 09          	sar    $0x9,%rdx
    253c:	48 01 c2             	add    %rax,%rdx
    253f:	48 69 c2 a0 0f 00 00 	imul   $0xfa0,%rdx,%rax
    2546:	48 29 c1             	sub    %rax,%rcx
    2549:	48 8d 84 31 61 f0 ff 	lea    -0xf9f(%rcx,%rsi,1),%rax
    2550:	ff 
    2551:	49 0f 44 c0          	cmove  %r8,%rax
    2555:	48 89 87 78 02 00 00 	mov    %rax,0x278(%rdi)
    255c:	48 85 c0             	test   %rax,%rax
    255f:	78 01                	js     2562 <marc_arcs+0xf2>
    2561:	c3                   	ret    
    2562:	b9 a0 0f 00 00       	mov    $0xfa0,%ecx
    2567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    256e:	00 00 
    2570:	48 ff c9             	dec    %rcx
    2573:	4c 01 c0             	add    %r8,%rax
    2576:	78 f8                	js     2570 <marc_arcs+0x100>
    2578:	48 89 87 78 02 00 00 	mov    %rax,0x278(%rdi)
    257f:	48 89 8f 80 02 00 00 	mov    %rcx,0x280(%rdi)
    2586:	c3                   	ret    
    2587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    258e:	00 00 

0000000000002590 <arc_compare>:
    2590:	48 8b 17             	mov    (%rdi),%rdx
    2593:	48 8b 0e             	mov    (%rsi),%rcx
    2596:	48 8b 71 38          	mov    0x38(%rcx),%rsi
    259a:	b8 01 00 00 00       	mov    $0x1,%eax
    259f:	48 39 72 38          	cmp    %rsi,0x38(%rdx)
    25a3:	7f 17                	jg     25bc <arc_compare+0x2c>
    25a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    25aa:	7c 10                	jl     25bc <arc_compare+0x2c>
    25ac:	8b 02                	mov    (%rdx),%eax
    25ae:	31 d2                	xor    %edx,%edx
    25b0:	3b 01                	cmp    (%rcx),%eax
    25b2:	0f 9d c2             	setge  %dl
    25b5:	8d 04 55 ff ff ff ff 	lea    -0x1(,%rdx,2),%eax
    25bc:	c3                   	ret    
    25bd:	0f 1f 00             	nopl   (%rax)

00000000000025c0 <resize_prob>:
    25c0:	53                   	push   %rbx
    25c1:	48 89 fb             	mov    %rdi,%rbx
    25c4:	48 8b 87 c8 01 00 00 	mov    0x1c8(%rdi),%rax
    25cb:	48 8b bf 38 02 00 00 	mov    0x238(%rdi),%rdi
    25d2:	48 8b 8b a0 01 00 00 	mov    0x1a0(%rbx),%rcx
    25d9:	48 01 c1             	add    %rax,%rcx
    25dc:	48 89 8b a0 01 00 00 	mov    %rcx,0x1a0(%rbx)
    25e3:	48 01 83 c0 01 00 00 	add    %rax,0x1c0(%rbx)
    25ea:	48 c1 e1 03          	shl    $0x3,%rcx
    25ee:	48 8d 34 c9          	lea    (%rcx,%rcx,8),%rsi
    25f2:	e8 19 eb ff ff       	call   1110 <realloc@plt>
    25f7:	48 85 c0             	test   %rax,%rax
    25fa:	0f 84 8e 00 00 00    	je     268e <resize_prob+0xce>
    2600:	48 8b 8b 38 02 00 00 	mov    0x238(%rbx),%rcx
    2607:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
    260e:	48 8b b3 a8 01 00 00 	mov    0x1a8(%rbx),%rsi
    2615:	48 8b 93 28 02 00 00 	mov    0x228(%rbx),%rdx
    261c:	48 8d 34 f6          	lea    (%rsi,%rsi,8),%rsi
    2620:	48 8d 04 f0          	lea    (%rax,%rsi,8),%rax
    2624:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    262b:	48 8b 83 30 02 00 00 	mov    0x230(%rbx),%rax
    2632:	48 8d 72 68          	lea    0x68(%rdx),%rsi
    2636:	eb 0c                	jmp    2644 <resize_prob+0x84>
    2638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    263f:	00 
    2640:	48 83 c6 68          	add    $0x68,%rsi
    2644:	48 39 c6             	cmp    %rax,%rsi
    2647:	73 1f                	jae    2668 <resize_prob+0xa8>
    2649:	48 8b 7e 30          	mov    0x30(%rsi),%rdi
    264d:	48 85 ff             	test   %rdi,%rdi
    2650:	74 ee                	je     2640 <resize_prob+0x80>
    2652:	48 39 56 18          	cmp    %rdx,0x18(%rsi)
    2656:	74 e8                	je     2640 <resize_prob+0x80>
    2658:	48 29 cf             	sub    %rcx,%rdi
    265b:	48 03 bb 38 02 00 00 	add    0x238(%rbx),%rdi
    2662:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    2666:	eb d8                	jmp    2640 <resize_prob+0x80>
    2668:	48 8b 83 a0 01 00 00 	mov    0x1a0(%rbx),%rax
    266f:	48 8b bb 48 02 00 00 	mov    0x248(%rbx),%rdi
    2676:	48 c1 e0 03          	shl    $0x3,%rax
    267a:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
    267e:	e8 8d ea ff ff       	call   1110 <realloc@plt>
    2683:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
    268a:	31 c0                	xor    %eax,%eax
    268c:	5b                   	pop    %rbx
    268d:	c3                   	ret    
    268e:	48 8d 3d bb 5c 00 00 	lea    0x5cbb(%rip),%rdi        # 8350 <_IO_stdin_used+0x350>
    2695:	48 89 de             	mov    %rbx,%rsi
    2698:	31 c0                	xor    %eax,%eax
    269a:	e8 e1 e9 ff ff       	call   1080 <printf@plt>
    269f:	48 8b 05 32 79 00 00 	mov    0x7932(%rip),%rax        # 9fd8 <stdout@GLIBC_2.2.5>
    26a6:	48 8b 38             	mov    (%rax),%rdi
    26a9:	e8 42 ea ff ff       	call   10f0 <fflush@plt>
    26ae:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    26b5:	5b                   	pop    %rbx
    26b6:	c3                   	ret    
    26b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    26be:	00 00 

00000000000026c0 <insert_new_arc>:
    26c0:	53                   	push   %rbx
    26c1:	8b 44 24 18          	mov    0x18(%rsp),%eax
    26c5:	4c 8d 14 f6          	lea    (%rsi,%rsi,8),%r10
    26c9:	4a 89 54 d7 10       	mov    %rdx,0x10(%rdi,%r10,8)
    26ce:	4a 89 4c d7 18       	mov    %rcx,0x18(%rdi,%r10,8)
    26d3:	4e 89 44 d7 40       	mov    %r8,0x40(%rdi,%r10,8)
    26d8:	4e 89 44 d7 08       	mov    %r8,0x8(%rdi,%r10,8)
    26dd:	4e 89 4c d7 38       	mov    %r9,0x38(%rdi,%r10,8)
    26e2:	42 89 04 d7          	mov    %eax,(%rdi,%r10,8)
    26e6:	48 85 f6             	test   %rsi,%rsi
    26e9:	74 75                	je     2760 <insert_new_arc+0xa0>
    26eb:	4c 8d 56 01          	lea    0x1(%rsi),%r10
    26ef:	90                   	nop
    26f0:	4d 89 d3             	mov    %r10,%r11
    26f3:	49 c1 eb 3f          	shr    $0x3f,%r11
    26f7:	4d 01 da             	add    %r11,%r10
    26fa:	49 d1 fa             	sar    %r10
    26fd:	4f 8d 1c d2          	lea    (%r10,%r10,8),%r11
    2701:	4e 39 4c df f0       	cmp    %r9,-0x10(%rdi,%r11,8)
    2706:	7d 58                	jge    2760 <insert_new_arc+0xa0>
    2708:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    270c:	49 8b 5b c8          	mov    -0x38(%r11),%rbx
    2710:	48 8d 34 f6          	lea    (%rsi,%rsi,8),%rsi
    2714:	48 89 5c f7 10       	mov    %rbx,0x10(%rdi,%rsi,8)
    2719:	49 8b 5b d0          	mov    -0x30(%r11),%rbx
    271d:	48 89 5c f7 18       	mov    %rbx,0x18(%rdi,%rsi,8)
    2722:	49 8b 5b c0          	mov    -0x40(%r11),%rbx
    2726:	48 89 5c f7 08       	mov    %rbx,0x8(%rdi,%rsi,8)
    272b:	48 89 5c f7 40       	mov    %rbx,0x40(%rdi,%rsi,8)
    2730:	49 8b 5b f0          	mov    -0x10(%r11),%rbx
    2734:	48 89 5c f7 38       	mov    %rbx,0x38(%rdi,%rsi,8)
    2739:	41 8b 5b b8          	mov    -0x48(%r11),%ebx
    273d:	89 1c f7             	mov    %ebx,(%rdi,%rsi,8)
    2740:	49 89 53 c8          	mov    %rdx,-0x38(%r11)
    2744:	49 89 4b d0          	mov    %rcx,-0x30(%r11)
    2748:	4d 89 43 c0          	mov    %r8,-0x40(%r11)
    274c:	4d 89 43 f8          	mov    %r8,-0x8(%r11)
    2750:	4d 89 4b f0          	mov    %r9,-0x10(%r11)
    2754:	41 89 43 b8          	mov    %eax,-0x48(%r11)
    2758:	4c 89 d6             	mov    %r10,%rsi
    275b:	48 ff ce             	dec    %rsi
    275e:	75 90                	jne    26f0 <insert_new_arc+0x30>
    2760:	5b                   	pop    %rbx
    2761:	c3                   	ret    
    2762:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2769:	1f 84 00 00 00 00 00 

0000000000002770 <replace_weaker_arc>:
    2770:	55                   	push   %rbp
    2771:	41 57                	push   %r15
    2773:	41 56                	push   %r14
    2775:	41 54                	push   %r12
    2777:	53                   	push   %rbx
    2778:	8b 44 24 30          	mov    0x30(%rsp),%eax
    277c:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    2780:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    2784:	48 89 4f 40          	mov    %rcx,0x40(%rdi)
    2788:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    278c:	4c 89 47 38          	mov    %r8,0x38(%rdi)
    2790:	89 07                	mov    %eax,(%rdi)
    2792:	4c 8b 97 80 00 00 00 	mov    0x80(%rdi),%r10
    2799:	31 db                	xor    %ebx,%ebx
    279b:	4c 3b 97 c8 00 00 00 	cmp    0xc8(%rdi),%r10
    27a2:	0f 9f c3             	setg   %bl
    27a5:	48 83 f3 03          	xor    $0x3,%rbx
    27a9:	4c 39 cb             	cmp    %r9,%rbx
    27ac:	7e 09                	jle    27b7 <replace_weaker_arc+0x47>
    27ae:	5b                   	pop    %rbx
    27af:	41 5c                	pop    %r12
    27b1:	41 5e                	pop    %r14
    27b3:	41 5f                	pop    %r15
    27b5:	5d                   	pop    %rbp
    27b6:	c3                   	ret    
    27b7:	4c 8d 57 f0          	lea    -0x10(%rdi),%r10
    27bb:	41 be 01 00 00 00    	mov    $0x1,%r14d
    27c1:	eb 15                	jmp    27d8 <replace_weaker_arc+0x68>
    27c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    27ca:	84 00 00 00 00 00 
    27d0:	4d 89 de             	mov    %r11,%r14
    27d3:	4c 39 cb             	cmp    %r9,%rbx
    27d6:	7f d6                	jg     27ae <replace_weaker_arc+0x3e>
    27d8:	49 89 db             	mov    %rbx,%r11
    27db:	48 8d 1c db          	lea    (%rbx,%rbx,8),%rbx
    27df:	4c 39 44 df f0       	cmp    %r8,-0x10(%rdi,%rbx,8)
    27e4:	7e c8                	jle    27ae <replace_weaker_arc+0x3e>
    27e6:	48 8d 1c df          	lea    (%rdi,%rbx,8),%rbx
    27ea:	4c 8b 7b c8          	mov    -0x38(%rbx),%r15
    27ee:	4f 8d 34 f6          	lea    (%r14,%r14,8),%r14
    27f2:	4e 89 7c f7 c8       	mov    %r15,-0x38(%rdi,%r14,8)
    27f7:	4c 8b 7b d0          	mov    -0x30(%rbx),%r15
    27fb:	4e 89 7c f7 d0       	mov    %r15,-0x30(%rdi,%r14,8)
    2800:	4c 8b 7b c0          	mov    -0x40(%rbx),%r15
    2804:	4e 89 7c f7 c0       	mov    %r15,-0x40(%rdi,%r14,8)
    2809:	4e 89 7c f7 f8       	mov    %r15,-0x8(%rdi,%r14,8)
    280e:	4c 8b 7b f0          	mov    -0x10(%rbx),%r15
    2812:	4e 89 7c f7 f0       	mov    %r15,-0x10(%rdi,%r14,8)
    2817:	8b 6b b8             	mov    -0x48(%rbx),%ebp
    281a:	42 89 6c f7 b8       	mov    %ebp,-0x48(%rdi,%r14,8)
    281f:	48 89 73 c8          	mov    %rsi,-0x38(%rbx)
    2823:	48 89 53 d0          	mov    %rdx,-0x30(%rbx)
    2827:	48 89 4b c0          	mov    %rcx,-0x40(%rbx)
    282b:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
    282f:	4c 89 43 f0          	mov    %r8,-0x10(%rbx)
    2833:	89 43 b8             	mov    %eax,-0x48(%rbx)
    2836:	4b 8d 1c 1b          	lea    (%r11,%r11,1),%rbx
    283a:	4c 39 cb             	cmp    %r9,%rbx
    283d:	7d 91                	jge    27d0 <replace_weaker_arc+0x60>
    283f:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
    2846:	00 
    2847:	4f 8d 34 f6          	lea    (%r14,%r14,8),%r14
    284b:	4f 8b 3c 32          	mov    (%r10,%r14,1),%r15
    284f:	45 31 e4             	xor    %r12d,%r12d
    2852:	4e 3b 7c 37 38       	cmp    0x38(%rdi,%r14,1),%r15
    2857:	41 0f 9c c4          	setl   %r12b
    285b:	4c 09 e3             	or     %r12,%rbx
    285e:	e9 6d ff ff ff       	jmp    27d0 <replace_weaker_arc+0x60>
    2863:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    286a:	84 00 00 00 00 00 

0000000000002870 <calculate_max_redcost>:
    2870:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    2877:	48 85 c9             	test   %rcx,%rcx
    287a:	7e 22                	jle    289e <calculate_max_redcost+0x2e>
    287c:	48 83 f9 01          	cmp    $0x1,%rcx
    2880:	75 1d                	jne    289f <calculate_max_redcost+0x2f>
    2882:	31 c0                	xor    %eax,%eax
    2884:	31 ff                	xor    %edi,%edi
    2886:	f6 c1 01             	test   $0x1,%cl
    2889:	74 13                	je     289e <calculate_max_redcost+0x2e>
    288b:	48 8b 0c fa          	mov    (%rdx,%rdi,8),%rcx
    288f:	48 8b 09             	mov    (%rcx),%rcx
    2892:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    2896:	48 39 c1             	cmp    %rax,%rcx
    2899:	7e 03                	jle    289e <calculate_max_redcost+0x2e>
    289b:	48 89 0e             	mov    %rcx,(%rsi)
    289e:	c3                   	ret    
    289f:	49 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%r8
    28a6:	ff ff 7f 
    28a9:	49 21 c8             	and    %rcx,%r8
    28ac:	31 c0                	xor    %eax,%eax
    28ae:	31 ff                	xor    %edi,%edi
    28b0:	eb 17                	jmp    28c9 <calculate_max_redcost+0x59>
    28b2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    28b9:	1f 84 00 00 00 00 00 
    28c0:	48 83 c7 02          	add    $0x2,%rdi
    28c4:	49 39 f8             	cmp    %rdi,%r8
    28c7:	74 bd                	je     2886 <calculate_max_redcost+0x16>
    28c9:	4c 8b 0c fa          	mov    (%rdx,%rdi,8),%r9
    28cd:	4d 8b 09             	mov    (%r9),%r9
    28d0:	4d 8b 49 38          	mov    0x38(%r9),%r9
    28d4:	49 39 c1             	cmp    %rax,%r9
    28d7:	7e 06                	jle    28df <calculate_max_redcost+0x6f>
    28d9:	4c 89 0e             	mov    %r9,(%rsi)
    28dc:	4c 89 c8             	mov    %r9,%rax
    28df:	4c 8b 4c fa 08       	mov    0x8(%rdx,%rdi,8),%r9
    28e4:	4d 8b 09             	mov    (%r9),%r9
    28e7:	4d 8b 49 38          	mov    0x38(%r9),%r9
    28eb:	49 39 c1             	cmp    %rax,%r9
    28ee:	7e d0                	jle    28c0 <calculate_max_redcost+0x50>
    28f0:	4c 89 0e             	mov    %r9,(%rsi)
    28f3:	4c 89 c8             	mov    %r9,%rax
    28f6:	eb c8                	jmp    28c0 <calculate_max_redcost+0x50>
    28f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    28ff:	00 

0000000000002900 <switch_arcs>:
    2900:	55                   	push   %rbp
    2901:	41 57                	push   %r15
    2903:	41 56                	push   %r14
    2905:	41 55                	push   %r13
    2907:	41 54                	push   %r12
    2909:	53                   	push   %rbx
    290a:	48 89 74 24 f0       	mov    %rsi,-0x10(%rsp)
    290f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    2914:	48 85 c0             	test   %rax,%rax
    2917:	0f 8e 07 02 00 00    	jle    2b24 <switch_arcs+0x224>
    291d:	48 89 d7             	mov    %rdx,%rdi
    2920:	49 63 c0             	movslq %r8d,%rax
    2923:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
    2927:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    292c:	31 d2                	xor    %edx,%edx
    292e:	31 db                	xor    %ebx,%ebx
    2930:	48 89 7c 24 e0       	mov    %rdi,-0x20(%rsp)
    2935:	eb 50                	jmp    2987 <switch_arcs+0x87>
    2937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    293e:	00 00 
    2940:	48 ff c0             	inc    %rax
    2943:	48 89 c2             	mov    %rax,%rdx
    2946:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    294b:	48 09 f2             	or     %rsi,%rdx
    294e:	48 c1 ea 20          	shr    $0x20,%rdx
    2952:	74 1c                	je     2970 <switch_arcs+0x70>
    2954:	48 99                	cqto   
    2956:	48 f7 fe             	idiv   %rsi
    2959:	48 89 d0             	mov    %rdx,%rax
    295c:	48 8b 54 24 d8       	mov    -0x28(%rsp),%rdx
    2961:	48 ff c2             	inc    %rdx
    2964:	48 39 f2             	cmp    %rsi,%rdx
    2967:	75 1e                	jne    2987 <switch_arcs+0x87>
    2969:	e9 b8 01 00 00       	jmp    2b26 <switch_arcs+0x226>
    296e:	66 90                	xchg   %ax,%ax
    2970:	31 d2                	xor    %edx,%edx
    2972:	f7 f6                	div    %esi
    2974:	89 d0                	mov    %edx,%eax
    2976:	48 8b 54 24 d8       	mov    -0x28(%rsp),%rdx
    297b:	48 ff c2             	inc    %rdx
    297e:	48 39 f2             	cmp    %rsi,%rdx
    2981:	0f 84 9f 01 00 00    	je     2b26 <switch_arcs+0x226>
    2987:	48 89 54 24 d8       	mov    %rdx,-0x28(%rsp)
    298c:	48 8b 54 24 f0       	mov    -0x10(%rsp),%rdx
    2991:	48 8b 14 c2          	mov    (%rdx,%rax,8),%rdx
    2995:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    299a:	48 39 f2             	cmp    %rsi,%rdx
    299d:	48 0f 4d d6          	cmovge %rsi,%rdx
    29a1:	48 85 d2             	test   %rdx,%rdx
    29a4:	7e 9a                	jle    2940 <switch_arcs+0x40>
    29a6:	45 31 ff             	xor    %r15d,%r15d
    29a9:	eb 21                	jmp    29cc <switch_arcs+0xcc>
    29ab:	48 8b 7c 24 e0       	mov    -0x20(%rsp),%rdi
    29b0:	48 8b 5c 24 e8       	mov    -0x18(%rsp),%rbx
    29b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    29bc:	00 00 00 00 
    29c0:	49 ff c7             	inc    %r15
    29c3:	49 39 d7             	cmp    %rdx,%r15
    29c6:	0f 84 74 ff ff ff    	je     2940 <switch_arcs+0x40>
    29cc:	4c 8b 04 c7          	mov    (%rdi,%rax,8),%r8
    29d0:	4f 8d 14 ff          	lea    (%r15,%r15,8),%r10
    29d4:	66 43 83 7c d0 20 00 	cmpw   $0x0,0x20(%r8,%r10,8)
    29db:	75 e3                	jne    29c0 <switch_arcs+0xc0>
    29dd:	4b 8d 34 d0          	lea    (%r8,%r10,8),%rsi
    29e1:	4f 8b 64 d0 38       	mov    0x38(%r8,%r10,8),%r12
    29e6:	4c 3b 61 38          	cmp    0x38(%rcx),%r12
    29ea:	0f 8d 1f 01 00 00    	jge    2b0f <switch_arcs+0x20f>
    29f0:	8b 2e                	mov    (%rsi),%ebp
    29f2:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    29f6:	4c 8b 5e 10          	mov    0x10(%rsi),%r11
    29fa:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    29fe:	48 ff c3             	inc    %rbx
    2a01:	4c 8b 41 40          	mov    0x40(%rcx),%r8
    2a05:	4c 89 46 40          	mov    %r8,0x40(%rsi)
    2a09:	0f 10 01             	movups (%rcx),%xmm0
    2a0c:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    2a10:	0f 10 51 20          	movups 0x20(%rcx),%xmm2
    2a14:	0f 10 59 30          	movups 0x30(%rcx),%xmm3
    2a18:	0f 11 5e 30          	movups %xmm3,0x30(%rsi)
    2a1c:	0f 11 56 20          	movups %xmm2,0x20(%rsi)
    2a20:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    2a24:	0f 11 06             	movups %xmm0,(%rsi)
    2a27:	4c 89 59 10          	mov    %r11,0x10(%rcx)
    2a2b:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    2a2f:	4c 89 69 40          	mov    %r13,0x40(%rcx)
    2a33:	4c 89 69 08          	mov    %r13,0x8(%rcx)
    2a37:	4c 89 61 38          	mov    %r12,0x38(%rcx)
    2a3b:	89 29                	mov    %ebp,(%rcx)
    2a3d:	4c 8b 81 80 00 00 00 	mov    0x80(%rcx),%r8
    2a44:	31 f6                	xor    %esi,%esi
    2a46:	4c 3b 81 c8 00 00 00 	cmp    0xc8(%rcx),%r8
    2a4d:	40 0f 9f c6          	setg   %sil
    2a51:	48 83 f6 03          	xor    $0x3,%rsi
    2a55:	4c 39 ce             	cmp    %r9,%rsi
    2a58:	0f 8f 62 ff ff ff    	jg     29c0 <switch_arcs+0xc0>
    2a5e:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
    2a63:	41 be 01 00 00 00    	mov    $0x1,%r14d
    2a69:	eb 11                	jmp    2a7c <switch_arcs+0x17c>
    2a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a70:	4d 89 c6             	mov    %r8,%r14
    2a73:	4c 39 ce             	cmp    %r9,%rsi
    2a76:	0f 8f 2f ff ff ff    	jg     29ab <switch_arcs+0xab>
    2a7c:	49 89 f0             	mov    %rsi,%r8
    2a7f:	48 8d 34 f6          	lea    (%rsi,%rsi,8),%rsi
    2a83:	4c 39 64 f1 f0       	cmp    %r12,-0x10(%rcx,%rsi,8)
    2a88:	0f 8e 1d ff ff ff    	jle    29ab <switch_arcs+0xab>
    2a8e:	48 8d 34 f1          	lea    (%rcx,%rsi,8),%rsi
    2a92:	48 8b 5e c8          	mov    -0x38(%rsi),%rbx
    2a96:	4f 8d 34 f6          	lea    (%r14,%r14,8),%r14
    2a9a:	4a 89 5c f1 c8       	mov    %rbx,-0x38(%rcx,%r14,8)
    2a9f:	48 8b 5e d0          	mov    -0x30(%rsi),%rbx
    2aa3:	4a 89 5c f1 d0       	mov    %rbx,-0x30(%rcx,%r14,8)
    2aa8:	48 8b 5e c0          	mov    -0x40(%rsi),%rbx
    2aac:	4a 89 5c f1 c0       	mov    %rbx,-0x40(%rcx,%r14,8)
    2ab1:	4a 89 5c f1 f8       	mov    %rbx,-0x8(%rcx,%r14,8)
    2ab6:	48 8b 5e f0          	mov    -0x10(%rsi),%rbx
    2aba:	4a 89 5c f1 f0       	mov    %rbx,-0x10(%rcx,%r14,8)
    2abf:	8b 5e b8             	mov    -0x48(%rsi),%ebx
    2ac2:	42 89 5c f1 b8       	mov    %ebx,-0x48(%rcx,%r14,8)
    2ac7:	4c 89 5e c8          	mov    %r11,-0x38(%rsi)
    2acb:	4c 89 56 d0          	mov    %r10,-0x30(%rsi)
    2acf:	4c 89 6e c0          	mov    %r13,-0x40(%rsi)
    2ad3:	4c 89 6e f8          	mov    %r13,-0x8(%rsi)
    2ad7:	4c 89 66 f0          	mov    %r12,-0x10(%rsi)
    2adb:	89 6e b8             	mov    %ebp,-0x48(%rsi)
    2ade:	4b 8d 34 00          	lea    (%r8,%r8,1),%rsi
    2ae2:	4c 39 ce             	cmp    %r9,%rsi
    2ae5:	7d 89                	jge    2a70 <switch_arcs+0x170>
    2ae7:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
    2aee:	00 
    2aef:	48 8d 1c db          	lea    (%rbx,%rbx,8),%rbx
    2af3:	48 8b 7c 24 f8       	mov    -0x8(%rsp),%rdi
    2af8:	4c 8b 34 1f          	mov    (%rdi,%rbx,1),%r14
    2afc:	31 ff                	xor    %edi,%edi
    2afe:	4c 3b 74 19 38       	cmp    0x38(%rcx,%rbx,1),%r14
    2b03:	40 0f 9c c7          	setl   %dil
    2b07:	48 09 fe             	or     %rdi,%rsi
    2b0a:	e9 61 ff ff ff       	jmp    2a70 <switch_arcs+0x170>
    2b0f:	0f 85 ab fe ff ff    	jne    29c0 <switch_arcs+0xc0>
    2b15:	8b 2e                	mov    (%rsi),%ebp
    2b17:	3b 29                	cmp    (%rcx),%ebp
    2b19:	0f 8d a1 fe ff ff    	jge    29c0 <switch_arcs+0xc0>
    2b1f:	e9 ce fe ff ff       	jmp    29f2 <switch_arcs+0xf2>
    2b24:	31 db                	xor    %ebx,%ebx
    2b26:	48 89 d8             	mov    %rbx,%rax
    2b29:	5b                   	pop    %rbx
    2b2a:	41 5c                	pop    %r12
    2b2c:	41 5d                	pop    %r13
    2b2e:	41 5e                	pop    %r14
    2b30:	41 5f                	pop    %r15
    2b32:	5d                   	pop    %rbp
    2b33:	c3                   	ret    
    2b34:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    2b3b:	00 00 00 00 00 

0000000000002b40 <price_out_impl>:
    2b40:	55                   	push   %rbp
    2b41:	41 57                	push   %r15
    2b43:	41 56                	push   %r14
    2b45:	41 55                	push   %r13
    2b47:	41 54                	push   %r12
    2b49:	53                   	push   %rbx
    2b4a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    2b51:	48 89 fb             	mov    %rdi,%rbx
    2b54:	48 8b 87 10 02 00 00 	mov    0x210(%rdi),%rax
    2b5b:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
    2b62:	00 
    2b63:	bf 08 00 00 00       	mov    $0x8,%edi
    2b68:	e8 73 e5 ff ff       	call   10e0 <malloc@plt>
    2b6d:	49 89 c4             	mov    %rax,%r12
    2b70:	bf 08 00 00 00       	mov    $0x8,%edi
    2b75:	e8 66 e5 ff ff       	call   10e0 <malloc@plt>
    2b7a:	49 89 c6             	mov    %rax,%r14
    2b7d:	bf 08 00 00 00       	mov    $0x8,%edi
    2b82:	e8 59 e5 ff ff       	call   10e0 <malloc@plt>
    2b87:	49 89 c5             	mov    %rax,%r13
    2b8a:	bf 08 00 00 00       	mov    $0x8,%edi
    2b8f:	e8 4c e5 ff ff       	call   10e0 <malloc@plt>
    2b94:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    2b99:	48 8b 8b 98 01 00 00 	mov    0x198(%rbx),%rcx
    2ba0:	48 8b 83 a0 01 00 00 	mov    0x1a0(%rbx),%rax
    2ba7:	48 8b 93 a8 01 00 00 	mov    0x1a8(%rbx),%rdx
    2bae:	48 8b b3 c8 01 00 00 	mov    0x1c8(%rbx),%rsi
    2bb5:	48 01 d6             	add    %rdx,%rsi
    2bb8:	40 b7 01             	mov    $0x1,%dil
    2bbb:	48 81 f9 98 3a 00 00 	cmp    $0x3a98,%rcx
    2bc2:	48 39 c6             	cmp    %rax,%rsi
    2bc5:	7e 44                	jle    2c0b <price_out_impl+0xcb>
    2bc7:	48 0f af c9          	imul   %rcx,%rcx
    2bcb:	48 d1 e9             	shr    %rcx
    2bce:	48 01 ca             	add    %rcx,%rdx
    2bd1:	48 39 c2             	cmp    %rax,%rdx
    2bd4:	7e 35                	jle    2c0b <price_out_impl+0xcb>
    2bd6:	4d 89 e7             	mov    %r12,%r15
    2bd9:	4d 89 f4             	mov    %r14,%r12
    2bdc:	48 89 df             	mov    %rbx,%rdi
    2bdf:	e8 dc f9 ff ff       	call   25c0 <resize_prob>
    2be4:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
    2beb:	48 85 c0             	test   %rax,%rax
    2bee:	0f 85 6b 0d 00 00    	jne    395f <price_out_impl+0xe1f>
    2bf4:	48 8d 35 55 eb ff ff 	lea    -0x14ab(%rip),%rsi        # 1750 <getOriginalArcPosition>
    2bfb:	48 89 df             	mov    %rbx,%rdi
    2bfe:	e8 2d e9 ff ff       	call   1530 <refresh_neighbour_lists>
    2c03:	31 ff                	xor    %edi,%edi
    2c05:	4d 89 e6             	mov    %r12,%r14
    2c08:	4d 89 fc             	mov    %r15,%r12
    2c0b:	48 8b 93 98 01 00 00 	mov    0x198(%rbx),%rdx
    2c12:	48 8b 8b 48 02 00 00 	mov    0x248(%rbx),%rcx
    2c19:	48 81 fa 99 3a 00 00 	cmp    $0x3a99,%rdx
    2c20:	b8 e8 03 00 00       	mov    $0x3e8,%eax
    2c25:	be d0 07 00 00       	mov    $0x7d0,%esi
    2c2a:	48 0f 4c f0          	cmovl  %rax,%rsi
    2c2e:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
    2c33:	48 85 c9             	test   %rcx,%rcx
    2c36:	74 71                	je     2ca9 <price_out_impl+0x169>
    2c38:	89 bc 24 94 00 00 00 	mov    %edi,0x94(%rsp)
    2c3f:	48 8b ab a0 01 00 00 	mov    0x1a0(%rbx),%rbp
    2c46:	4c 8b bb c0 01 00 00 	mov    0x1c0(%rbx),%r15
    2c4d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    2c52:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    2c57:	48 89 08             	mov    %rcx,(%rax)
    2c5a:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    2c61:	4c 89 64 24 70       	mov    %r12,0x70(%rsp)
    2c66:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    2c6d:	00 
    2c6e:	4c 8b a3 40 02 00 00 	mov    0x240(%rbx),%r12
    2c75:	be 08 00 00 00       	mov    $0x8,%esi
    2c7a:	4c 89 ff             	mov    %r15,%rdi
    2c7d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    2c82:	e8 29 e4 ff ff       	call   10b0 <calloc@plt>
    2c87:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    2c8c:	4d 89 f9             	mov    %r15,%r9
    2c8f:	49 89 45 00          	mov    %rax,0x0(%r13)
    2c93:	4d 85 ff             	test   %r15,%r15
    2c96:	0f 8e b4 00 00 00    	jle    2d50 <price_out_impl+0x210>
    2c9c:	49 83 f9 04          	cmp    $0x4,%r9
    2ca0:	73 13                	jae    2cb5 <price_out_impl+0x175>
    2ca2:	31 d2                	xor    %edx,%edx
    2ca4:	e9 8a 00 00 00       	jmp    2d33 <price_out_impl+0x1f3>
    2ca9:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
    2cb0:	e9 aa 0c 00 00       	jmp    395f <price_out_impl+0xe1f>
    2cb5:	48 ba fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rdx
    2cbc:	ff ff 7f 
    2cbf:	4c 21 ca             	and    %r9,%rdx
    2cc2:	66 0f 6f 05 46 56 00 	movdqa 0x5646(%rip),%xmm0        # 8310 <_IO_stdin_used+0x310>
    2cc9:	00 
    2cca:	31 c9                	xor    %ecx,%ecx
    2ccc:	66 0f 6f 0d 4c 56 00 	movdqa 0x564c(%rip),%xmm1        # 8320 <_IO_stdin_used+0x320>
    2cd3:	00 
    2cd4:	66 49 0f 6e d4       	movq   %r12,%xmm2
    2cd9:	66 0f 70 d2 44       	pshufd $0x44,%xmm2,%xmm2
    2cde:	66 0f 6f 1d 4a 56 00 	movdqa 0x564a(%rip),%xmm3        # 8330 <_IO_stdin_used+0x330>
    2ce5:	00 
    2ce6:	66 0f 6f 25 52 56 00 	movdqa 0x5652(%rip),%xmm4        # 8340 <_IO_stdin_used+0x340>
    2ced:	00 
    2cee:	66 90                	xchg   %ax,%ax
    2cf0:	66 0f 6f e8          	movdqa %xmm0,%xmm5
    2cf4:	66 0f f4 e9          	pmuludq %xmm1,%xmm5
    2cf8:	66 0f d4 ea          	paddq  %xmm2,%xmm5
    2cfc:	66 0f 6f f0          	movdqa %xmm0,%xmm6
    2d00:	66 0f 73 d6 20       	psrlq  $0x20,%xmm6
    2d05:	66 0f f4 f1          	pmuludq %xmm1,%xmm6
    2d09:	66 0f 73 f6 20       	psllq  $0x20,%xmm6
    2d0e:	66 0f d4 f5          	paddq  %xmm5,%xmm6
    2d12:	f3 0f 7f 34 c8       	movdqu %xmm6,(%rax,%rcx,8)
    2d17:	66 0f d4 f3          	paddq  %xmm3,%xmm6
    2d1b:	f3 0f 7f 74 c8 10    	movdqu %xmm6,0x10(%rax,%rcx,8)
    2d21:	48 83 c1 04          	add    $0x4,%rcx
    2d25:	66 0f d4 c4          	paddq  %xmm4,%xmm0
    2d29:	48 39 ca             	cmp    %rcx,%rdx
    2d2c:	75 c2                	jne    2cf0 <price_out_impl+0x1b0>
    2d2e:	49 39 d1             	cmp    %rdx,%r9
    2d31:	74 1d                	je     2d50 <price_out_impl+0x210>
    2d33:	48 8d 0c d2          	lea    (%rdx,%rdx,8),%rcx
    2d37:	49 8d 0c cc          	lea    (%r12,%rcx,8),%rcx
    2d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2d40:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
    2d44:	48 ff c2             	inc    %rdx
    2d47:	48 83 c1 48          	add    $0x48,%rcx
    2d4b:	49 39 d1             	cmp    %rdx,%r9
    2d4e:	75 f0                	jne    2d40 <price_out_impl+0x200>
    2d50:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
    2d55:	4c 89 6c 24 50       	mov    %r13,0x50(%rsp)
    2d5a:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    2d5f:	48 8b ab 38 02 00 00 	mov    0x238(%rbx),%rbp
    2d66:	4d 85 db             	test   %r11,%r11
    2d69:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
    2d6e:	7e 28                	jle    2d98 <price_out_impl+0x258>
    2d70:	45 31 ed             	xor    %r13d,%r13d
    2d73:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2d7a:	84 00 00 00 00 00 
    2d80:	66 83 7d 68 ff       	cmpw   $0xffff,0x68(%rbp)
    2d85:	75 14                	jne    2d9b <price_out_impl+0x25b>
    2d87:	49 ff c5             	inc    %r13
    2d8a:	48 81 c5 d8 00 00 00 	add    $0xd8,%rbp
    2d91:	4d 39 eb             	cmp    %r13,%r11
    2d94:	75 ea                	jne    2d80 <price_out_impl+0x240>
    2d96:	eb 79                	jmp    2e11 <price_out_impl+0x2d1>
    2d98:	45 31 ed             	xor    %r13d,%r13d
    2d9b:	4d 39 dd             	cmp    %r11,%r13
    2d9e:	7d 71                	jge    2e11 <price_out_impl+0x2d1>
    2da0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    2da7:	00 
    2da8:	48 83 84 24 a0 00 00 	addq   $0xfffffffffffffff1,0xa0(%rsp)
    2daf:	00 f1 
    2db1:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
    2db6:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    2dbd:	00 
    2dbe:	66 b8 01 00          	mov    $0x1,%ax
    2dc2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    2dc6:	48 c7 84 24 a8 00 00 	movq   $0xffffffffffffffff,0xa8(%rsp)
    2dcd:	00 ff ff ff ff 
    2dd2:	45 31 d2             	xor    %r10d,%r10d
    2dd5:	31 c0                	xor    %eax,%eax
    2dd7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2ddc:	31 c0                	xor    %eax,%eax
    2dde:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    2de5:	00 
    2de6:	45 31 f6             	xor    %r14d,%r14d
    2de9:	66 b8 01 00          	mov    $0x1,%ax
    2ded:	89 44 24 18          	mov    %eax,0x18(%rsp)
    2df1:	31 c0                	xor    %eax,%eax
    2df3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    2df8:	45 31 ff             	xor    %r15d,%r15d
    2dfb:	31 c0                	xor    %eax,%eax
    2dfd:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    2e02:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    2e07:	4c 89 a4 24 88 00 00 	mov    %r12,0x88(%rsp)
    2e0e:	00 
    2e0f:	eb 35                	jmp    2e46 <price_out_impl+0x306>
    2e11:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    2e18:	45 31 ff             	xor    %r15d,%r15d
    2e1b:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    2e20:	e9 0d 06 00 00       	jmp    3432 <price_out_impl+0x8f2>
    2e25:	48 ff c6             	inc    %rsi
    2e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2e2f:	00 
    2e30:	49 89 f6             	mov    %rsi,%r14
    2e33:	49 ff c5             	inc    %r13
    2e36:	48 81 c5 d8 00 00 00 	add    $0xd8,%rbp
    2e3d:	4d 39 dd             	cmp    %r11,%r13
    2e40:	0f 84 a5 05 00 00    	je     33eb <price_out_impl+0x8ab>
    2e46:	66 83 7c 24 1c 00    	cmpw   $0x0,0x1c(%rsp)
    2e4c:	74 22                	je     2e70 <price_out_impl+0x330>
    2e4e:	4c 89 e8             	mov    %r13,%rax
    2e51:	48 c1 e8 20          	shr    $0x20,%rax
    2e55:	74 59                	je     2eb0 <price_out_impl+0x370>
    2e57:	4c 89 e8             	mov    %r13,%rax
    2e5a:	31 d2                	xor    %edx,%edx
    2e5c:	48 f7 74 24 68       	divq   0x68(%rsp)
    2e61:	48 85 d2             	test   %rdx,%rdx
    2e64:	0f 85 f6 00 00 00    	jne    2f60 <price_out_impl+0x420>
    2e6a:	eb 56                	jmp    2ec2 <price_out_impl+0x382>
    2e6c:	0f 1f 40 00          	nopl   0x0(%rax)
    2e70:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    2e77:	00 
    2e78:	48 8b 00             	mov    (%rax),%rax
    2e7b:	48 8b 48 38          	mov    0x38(%rax),%rcx
    2e7f:	48 85 c9             	test   %rcx,%rcx
    2e82:	b8 00 00 00 00       	mov    $0x0,%eax
    2e87:	48 0f 4e c8          	cmovle %rax,%rcx
    2e8b:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    2e90:	4c 89 e8             	mov    %r13,%rax
    2e93:	48 c1 e8 20          	shr    $0x20,%rax
    2e97:	74 4e                	je     2ee7 <price_out_impl+0x3a7>
    2e99:	4c 89 e8             	mov    %r13,%rax
    2e9c:	31 d2                	xor    %edx,%edx
    2e9e:	48 f7 74 24 68       	divq   0x68(%rsp)
    2ea3:	48 85 d2             	test   %rdx,%rdx
    2ea6:	0f 85 b4 00 00 00    	jne    2f60 <price_out_impl+0x420>
    2eac:	eb 47                	jmp    2ef5 <price_out_impl+0x3b5>
    2eae:	66 90                	xchg   %ax,%ax
    2eb0:	44 89 e8             	mov    %r13d,%eax
    2eb3:	31 d2                	xor    %edx,%edx
    2eb5:	f7 74 24 68          	divl   0x68(%rsp)
    2eb9:	48 85 d2             	test   %rdx,%rdx
    2ebc:	0f 85 9e 00 00 00    	jne    2f60 <price_out_impl+0x420>
    2ec2:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    2ec9:	00 
    2eca:	48 8b 00             	mov    (%rax),%rax
    2ecd:	48 8b 48 38          	mov    0x38(%rax),%rcx
    2ed1:	48 85 c9             	test   %rcx,%rcx
    2ed4:	b8 00 00 00 00       	mov    $0x0,%eax
    2ed9:	48 0f 4e c8          	cmovle %rax,%rcx
    2edd:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    2ee2:	e9 79 00 00 00       	jmp    2f60 <price_out_impl+0x420>
    2ee7:	44 89 e8             	mov    %r13d,%eax
    2eea:	31 d2                	xor    %edx,%edx
    2eec:	f7 74 24 68          	divl   0x68(%rsp)
    2ef0:	48 85 d2             	test   %rdx,%rdx
    2ef3:	75 6b                	jne    2f60 <price_out_impl+0x420>
    2ef5:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    2efc:	00 
    2efd:	48 8b 00             	mov    (%rax),%rax
    2f00:	48 8b 48 38          	mov    0x38(%rax),%rcx
    2f04:	48 85 c9             	test   %rcx,%rcx
    2f07:	b8 00 00 00 00       	mov    $0x0,%eax
    2f0c:	48 0f 4e c8          	cmovle %rax,%rcx
    2f10:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    2f15:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    2f1a:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    2f1f:	48 89 03             	mov    %rax,(%rbx)
    2f22:	48 89 de             	mov    %rbx,%rsi
    2f25:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    2f2a:	4c 89 e1             	mov    %r12,%rcx
    2f2d:	45 31 c0             	xor    %r8d,%r8d
    2f30:	6a 01                	push   $0x1
    2f32:	ff b4 24 80 00 00 00 	push   0x80(%rsp)
    2f39:	e8 c2 f9 ff ff       	call   2900 <switch_arcs>
    2f3e:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
    2f43:	48 83 c4 10          	add    $0x10,%rsp
    2f47:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    2f4e:	45 31 d2             	xor    %r10d,%r10d
    2f51:	31 c0                	xor    %eax,%eax
    2f53:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2f58:	31 c0                	xor    %eax,%eax
    2f5a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    2f5f:	90                   	nop
    2f60:	4d 89 d4             	mov    %r10,%r12
    2f63:	66 83 7d 68 ff       	cmpw   $0xffff,0x68(%rbp)
    2f68:	74 2a                	je     2f94 <price_out_impl+0x454>
    2f6a:	48 8d 5d 48          	lea    0x48(%rbp),%rbx
    2f6e:	bf 01 00 00 00       	mov    $0x1,%edi
    2f73:	be 10 00 00 00       	mov    $0x10,%esi
    2f78:	e8 33 e1 ff ff       	call   10b0 <calloc@plt>
    2f7d:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    2f82:	4c 89 78 08          	mov    %r15,0x8(%rax)
    2f86:	48 89 18             	mov    %rbx,(%rax)
    2f89:	48 ff 84 24 a8 00 00 	incq   0xa8(%rsp)
    2f90:	00 
    2f91:	49 89 c7             	mov    %rax,%r15
    2f94:	66 83 7d 20 ff       	cmpw   $0xffff,0x20(%rbp)
    2f99:	0f 84 21 04 00 00    	je     33c0 <price_out_impl+0x880>
    2f9f:	49 8b 47 08          	mov    0x8(%r15),%rax
    2fa3:	48 85 c0             	test   %rax,%rax
    2fa6:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    2fab:	4d 89 e2             	mov    %r12,%r10
    2fae:	0f 84 1c 04 00 00    	je     33d0 <price_out_impl+0x890>
    2fb4:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
    2fb8:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    2fbd:	48 63 71 64          	movslq 0x64(%rcx),%rsi
    2fc1:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    2fc8:	00 
    2fc9:	48 2b 55 40          	sub    0x40(%rbp),%rdx
    2fcd:	48 01 f2             	add    %rsi,%rdx
    2fd0:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
    2fd7:	00 
    2fd8:	4c 89 f6             	mov    %r14,%rsi
    2fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2fe0:	4c 8b 00             	mov    (%rax),%r8
    2fe3:	49 8b 78 10          	mov    0x10(%r8),%rdi
    2fe7:	48 63 4f 64          	movslq 0x64(%rdi),%rcx
    2feb:	49 03 48 40          	add    0x40(%r8),%rcx
    2fef:	48 39 d1             	cmp    %rdx,%rcx
    2ff2:	7e 1c                	jle    3010 <price_out_impl+0x4d0>
    2ff4:	48 ff c6             	inc    %rsi
    2ff7:	48 8b 40 08          	mov    0x8(%rax),%rax
    2ffb:	48 85 c0             	test   %rax,%rax
    2ffe:	75 e0                	jne    2fe0 <price_out_impl+0x4a0>
    3000:	e9 2b fe ff ff       	jmp    2e30 <price_out_impl+0x2f0>
    3005:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    300c:	00 00 00 00 
    3010:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    3015:	4c 8b 01             	mov    (%rcx),%r8
    3018:	4c 2b 07             	sub    (%rdi),%r8
    301b:	49 83 c0 1e          	add    $0x1e,%r8
    301f:	0f 89 8b 02 00 00    	jns    32b0 <price_out_impl+0x770>
    3025:	4c 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14
    302c:	00 
    302d:	4d 39 ce             	cmp    %r9,%r14
    3030:	0f 8d df 00 00 00    	jge    3115 <price_out_impl+0x5d5>
    3036:	4b 8d 0c f6          	lea    (%r14,%r14,8),%rcx
    303a:	49 89 7c cc 10       	mov    %rdi,0x10(%r12,%rcx,8)
    303f:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3044:	49 89 5c cc 18       	mov    %rbx,0x18(%r12,%rcx,8)
    3049:	49 c7 44 cc 40 1e 00 	movq   $0x1e,0x40(%r12,%rcx,8)
    3050:	00 00 
    3052:	49 c7 44 cc 08 1e 00 	movq   $0x1e,0x8(%r12,%rcx,8)
    3059:	00 00 
    305b:	4d 89 44 cc 38       	mov    %r8,0x38(%r12,%rcx,8)
    3060:	41 89 34 cc          	mov    %esi,(%r12,%rcx,8)
    3064:	4d 85 f6             	test   %r14,%r14
    3067:	0f 84 0e 02 00 00    	je     327b <price_out_impl+0x73b>
    306d:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    3072:	4d 8d 56 01          	lea    0x1(%r14),%r10
    3076:	4c 89 d1             	mov    %r10,%rcx
    3079:	4d 89 f1             	mov    %r14,%r9
    307c:	0f 1f 40 00          	nopl   0x0(%rax)
    3080:	4d 89 d3             	mov    %r10,%r11
    3083:	49 c1 eb 3f          	shr    $0x3f,%r11
    3087:	4d 01 da             	add    %r11,%r10
    308a:	49 d1 fa             	sar    %r10
    308d:	4f 8d 1c d2          	lea    (%r10,%r10,8),%r11
    3091:	4f 39 44 dc f0       	cmp    %r8,-0x10(%r12,%r11,8)
    3096:	7d 66                	jge    30fe <price_out_impl+0x5be>
    3098:	4f 8d 1c dc          	lea    (%r12,%r11,8),%r11
    309c:	49 8b 5b c8          	mov    -0x38(%r11),%rbx
    30a0:	4f 8d 34 c9          	lea    (%r9,%r9,8),%r14
    30a4:	4b 89 5c f4 10       	mov    %rbx,0x10(%r12,%r14,8)
    30a9:	49 8b 5b d0          	mov    -0x30(%r11),%rbx
    30ad:	4b 89 5c f4 18       	mov    %rbx,0x18(%r12,%r14,8)
    30b2:	49 8b 5b c0          	mov    -0x40(%r11),%rbx
    30b6:	4b 89 5c f4 08       	mov    %rbx,0x8(%r12,%r14,8)
    30bb:	4b 89 5c f4 40       	mov    %rbx,0x40(%r12,%r14,8)
    30c0:	49 8b 5b f0          	mov    -0x10(%r11),%rbx
    30c4:	4b 89 5c f4 38       	mov    %rbx,0x38(%r12,%r14,8)
    30c9:	41 8b 5b b8          	mov    -0x48(%r11),%ebx
    30cd:	43 89 1c f4          	mov    %ebx,(%r12,%r14,8)
    30d1:	49 89 7b c8          	mov    %rdi,-0x38(%r11)
    30d5:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    30da:	4d 89 4b d0          	mov    %r9,-0x30(%r11)
    30de:	49 c7 43 c0 1e 00 00 	movq   $0x1e,-0x40(%r11)
    30e5:	00 
    30e6:	49 c7 43 f8 1e 00 00 	movq   $0x1e,-0x8(%r11)
    30ed:	00 
    30ee:	4d 89 43 f0          	mov    %r8,-0x10(%r11)
    30f2:	41 89 73 b8          	mov    %esi,-0x48(%r11)
    30f6:	4d 89 d1             	mov    %r10,%r9
    30f9:	49 ff c9             	dec    %r9
    30fc:	75 82                	jne    3080 <price_out_impl+0x540>
    30fe:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    3103:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    3108:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    310d:	48 89 cf             	mov    %rcx,%rdi
    3110:	e9 6b 01 00 00       	jmp    3280 <price_out_impl+0x740>
    3115:	4d 39 44 24 38       	cmp    %r8,0x38(%r12)
    311a:	0f 8e e2 00 00 00    	jle    3202 <price_out_impl+0x6c2>
    3120:	31 c9                	xor    %ecx,%ecx
    3122:	66 83 7c 24 18 00    	cmpw   $0x0,0x18(%rsp)
    3128:	44 8b 54 24 1c       	mov    0x1c(%rsp),%r10d
    312d:	44 0f 45 d1          	cmovne %ecx,%r10d
    3131:	44 89 54 24 1c       	mov    %r10d,0x1c(%rsp)
    3136:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    313b:	4c 8d 1c db          	lea    (%rbx,%rbx,8),%r11
    313f:	4d 8b 54 24 40       	mov    0x40(%r12),%r10
    3144:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3149:	4e 89 54 d9 40       	mov    %r10,0x40(%rcx,%r11,8)
    314e:	f3 41 0f 6f 04 24    	movdqu (%r12),%xmm0
    3154:	f3 41 0f 6f 4c 24 10 	movdqu 0x10(%r12),%xmm1
    315b:	f3 41 0f 6f 54 24 20 	movdqu 0x20(%r12),%xmm2
    3162:	f3 41 0f 6f 5c 24 30 	movdqu 0x30(%r12),%xmm3
    3169:	f3 42 0f 7f 5c d9 30 	movdqu %xmm3,0x30(%rcx,%r11,8)
    3170:	f3 42 0f 7f 54 d9 20 	movdqu %xmm2,0x20(%rcx,%r11,8)
    3177:	f3 42 0f 7f 4c d9 10 	movdqu %xmm1,0x10(%rcx,%r11,8)
    317e:	f3 42 0f 7f 04 d9    	movdqu %xmm0,(%rcx,%r11,8)
    3184:	49 89 db             	mov    %rbx,%r11
    3187:	49 ff c3             	inc    %r11
    318a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    318f:	4c 89 19             	mov    %r11,(%rcx)
    3192:	48 ff 44 24 48       	incq   0x48(%rsp)
    3197:	49 89 7c 24 10       	mov    %rdi,0x10(%r12)
    319c:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    31a1:	49 89 4c 24 18       	mov    %rcx,0x18(%r12)
    31a6:	49 c7 44 24 40 1e 00 	movq   $0x1e,0x40(%r12)
    31ad:	00 00 
    31af:	49 c7 44 24 08 1e 00 	movq   $0x1e,0x8(%r12)
    31b6:	00 00 
    31b8:	4d 89 44 24 38       	mov    %r8,0x38(%r12)
    31bd:	41 89 34 24          	mov    %esi,(%r12)
    31c1:	49 8b 8c 24 80 00 00 	mov    0x80(%r12),%rcx
    31c8:	00 
    31c9:	45 31 d2             	xor    %r10d,%r10d
    31cc:	49 3b 8c 24 c8 00 00 	cmp    0xc8(%r12),%rcx
    31d3:	00 
    31d4:	41 0f 9f c2          	setg   %r10b
    31d8:	49 83 f2 03          	xor    $0x3,%r10
    31dc:	4d 39 ca             	cmp    %r9,%r10
    31df:	0f 8e e1 00 00 00    	jle    32c6 <price_out_impl+0x786>
    31e5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    31ec:	00 
    31ed:	4d 89 da             	mov    %r11,%r10
    31f0:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    31f5:	4c 3b 54 24 78       	cmp    0x78(%rsp),%r10
    31fa:	0f 84 9a 00 00 00    	je     329a <price_out_impl+0x75a>
    3200:	eb 5e                	jmp    3260 <price_out_impl+0x720>
    3202:	4c 3b 44 24 60       	cmp    0x60(%rsp),%r8
    3207:	0f 8d 86 00 00 00    	jge    3293 <price_out_impl+0x753>
    320d:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    3212:	49 8d 5a 01          	lea    0x1(%r10),%rbx
    3216:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    321b:	48 89 19             	mov    %rbx,(%rcx)
    321e:	4b 8d 0c d2          	lea    (%r10,%r10,8),%rcx
    3222:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    3227:	49 89 7c ca 10       	mov    %rdi,0x10(%r10,%rcx,8)
    322c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    3231:	49 89 7c ca 18       	mov    %rdi,0x18(%r10,%rcx,8)
    3236:	49 c7 44 ca 40 1e 00 	movq   $0x1e,0x40(%r10,%rcx,8)
    323d:	00 00 
    323f:	49 c7 44 ca 08 1e 00 	movq   $0x1e,0x8(%r10,%rcx,8)
    3246:	00 00 
    3248:	4d 89 44 ca 38       	mov    %r8,0x38(%r10,%rcx,8)
    324d:	41 89 34 ca          	mov    %esi,(%r10,%rcx,8)
    3251:	49 89 da             	mov    %rbx,%r10
    3254:	48 ff 44 24 48       	incq   0x48(%rsp)
    3259:	4c 3b 54 24 78       	cmp    0x78(%rsp),%r10
    325e:	74 3a                	je     329a <price_out_impl+0x75a>
    3260:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    3265:	4c 8d 76 01          	lea    0x1(%rsi),%r14
    3269:	48 8b 40 08          	mov    0x8(%rax),%rax
    326d:	48 85 c0             	test   %rax,%rax
    3270:	0f 85 62 fd ff ff    	jne    2fd8 <price_out_impl+0x498>
    3276:	e9 aa fb ff ff       	jmp    2e25 <price_out_impl+0x2e5>
    327b:	bf 01 00 00 00       	mov    $0x1,%edi
    3280:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    3285:	48 89 39             	mov    %rdi,(%rcx)
    3288:	48 89 f9             	mov    %rdi,%rcx
    328b:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
    3292:	00 
    3293:	4c 3b 54 24 78       	cmp    0x78(%rsp),%r10
    3298:	75 c6                	jne    3260 <price_out_impl+0x720>
    329a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    329f:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    32a6:	45 31 d2             	xor    %r10d,%r10d
    32a9:	31 c9                	xor    %ecx,%ecx
    32ab:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    32b0:	4c 8d 76 01          	lea    0x1(%rsi),%r14
    32b4:	48 8b 40 08          	mov    0x8(%rax),%rax
    32b8:	48 85 c0             	test   %rax,%rax
    32bb:	0f 85 17 fd ff ff    	jne    2fd8 <price_out_impl+0x498>
    32c1:	e9 5f fb ff ff       	jmp    2e25 <price_out_impl+0x2e5>
    32c6:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    32cb:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    32d1:	eb 1b                	jmp    32ee <price_out_impl+0x7ae>
    32d3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    32da:	84 00 00 00 00 00 
    32e0:	4d 89 cb             	mov    %r9,%r11
    32e3:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
    32e8:	0f 8f aa 00 00 00    	jg     3398 <price_out_impl+0x858>
    32ee:	4d 89 d1             	mov    %r10,%r9
    32f1:	4f 8d 14 d2          	lea    (%r10,%r10,8),%r10
    32f5:	4f 39 44 d4 f0       	cmp    %r8,-0x10(%r12,%r10,8)
    32fa:	0f 8e 98 00 00 00    	jle    3398 <price_out_impl+0x858>
    3300:	4f 8d 14 d4          	lea    (%r12,%r10,8),%r10
    3304:	49 8b 5a c8          	mov    -0x38(%r10),%rbx
    3308:	4f 8d 1c db          	lea    (%r11,%r11,8),%r11
    330c:	4b 89 5c dc c8       	mov    %rbx,-0x38(%r12,%r11,8)
    3311:	49 8b 5a d0          	mov    -0x30(%r10),%rbx
    3315:	4b 89 5c dc d0       	mov    %rbx,-0x30(%r12,%r11,8)
    331a:	49 8b 5a c0          	mov    -0x40(%r10),%rbx
    331e:	4b 89 5c dc c0       	mov    %rbx,-0x40(%r12,%r11,8)
    3323:	4b 89 5c dc f8       	mov    %rbx,-0x8(%r12,%r11,8)
    3328:	49 8b 5a f0          	mov    -0x10(%r10),%rbx
    332c:	4b 89 5c dc f0       	mov    %rbx,-0x10(%r12,%r11,8)
    3331:	41 8b 5a b8          	mov    -0x48(%r10),%ebx
    3335:	43 89 5c dc b8       	mov    %ebx,-0x48(%r12,%r11,8)
    333a:	49 89 7a c8          	mov    %rdi,-0x38(%r10)
    333e:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    3343:	49 89 4a d0          	mov    %rcx,-0x30(%r10)
    3347:	49 c7 42 c0 1e 00 00 	movq   $0x1e,-0x40(%r10)
    334e:	00 
    334f:	49 c7 42 f8 1e 00 00 	movq   $0x1e,-0x8(%r10)
    3356:	00 
    3357:	4d 89 42 f0          	mov    %r8,-0x10(%r10)
    335b:	41 89 72 b8          	mov    %esi,-0x48(%r10)
    335f:	4f 8d 14 09          	lea    (%r9,%r9,1),%r10
    3363:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
    3368:	0f 8d 72 ff ff ff    	jge    32e0 <price_out_impl+0x7a0>
    336e:	4e 8d 1c d5 00 00 00 	lea    0x0(,%r10,8),%r11
    3375:	00 
    3376:	4f 8d 1c db          	lea    (%r11,%r11,8),%r11
    337a:	48 8b 8c 24 b0 00 00 	mov    0xb0(%rsp),%rcx
    3381:	00 
    3382:	4a 8b 1c 19          	mov    (%rcx,%r11,1),%rbx
    3386:	31 c9                	xor    %ecx,%ecx
    3388:	4b 3b 5c 1c 38       	cmp    0x38(%r12,%r11,1),%rbx
    338d:	0f 9c c1             	setl   %cl
    3390:	49 09 ca             	or     %rcx,%r10
    3393:	e9 48 ff ff ff       	jmp    32e0 <price_out_impl+0x7a0>
    3398:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    339f:	00 
    33a0:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    33a5:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    33aa:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    33af:	4c 3b 54 24 78       	cmp    0x78(%rsp),%r10
    33b4:	0f 84 e0 fe ff ff    	je     329a <price_out_impl+0x75a>
    33ba:	e9 a1 fe ff ff       	jmp    3260 <price_out_impl+0x720>
    33bf:	90                   	nop
    33c0:	4c 03 b4 24 a8 00 00 	add    0xa8(%rsp),%r14
    33c7:	00 
    33c8:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    33cd:	4d 89 e2             	mov    %r12,%r10
    33d0:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
    33d7:	00 
    33d8:	49 ff c5             	inc    %r13
    33db:	48 81 c5 d8 00 00 00 	add    $0xd8,%rbp
    33e2:	4d 39 dd             	cmp    %r11,%r13
    33e5:	0f 85 5b fa ff ff    	jne    2e46 <price_out_impl+0x306>
    33eb:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    33f0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    33f5:	49 89 06             	mov    %rax,(%r14)
    33f8:	66 83 7c 24 1c 00    	cmpw   $0x0,0x1c(%rsp)
    33fe:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    3403:	75 2d                	jne    3432 <price_out_impl+0x8f2>
    3405:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
    340a:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    340f:	90                   	nop
    3410:	4c 89 f6             	mov    %r14,%rsi
    3413:	4c 89 ea             	mov    %r13,%rdx
    3416:	4c 89 e1             	mov    %r12,%rcx
    3419:	45 31 c0             	xor    %r8d,%r8d
    341c:	6a 01                	push   $0x1
    341e:	53                   	push   %rbx
    341f:	e8 dc f4 ff ff       	call   2900 <switch_arcs>
    3424:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3429:	48 83 c4 10          	add    $0x10,%rsp
    342d:	48 85 c0             	test   %rax,%rax
    3430:	75 de                	jne    3410 <price_out_impl+0x8d0>
    3432:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    3437:	49 8b 47 08          	mov    0x8(%r15),%rax
    343b:	48 85 c0             	test   %rax,%rax
    343e:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
    3443:	74 24                	je     3469 <price_out_impl+0x929>
    3445:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    344c:	00 00 00 00 
    3450:	49 89 c6             	mov    %rax,%r14
    3453:	4c 89 ff             	mov    %r15,%rdi
    3456:	e8 d5 db ff ff       	call   1030 <free@plt>
    345b:	49 8b 46 08          	mov    0x8(%r14),%rax
    345f:	4d 89 f7             	mov    %r14,%r15
    3462:	48 85 c0             	test   %rax,%rax
    3465:	75 e9                	jne    3450 <price_out_impl+0x910>
    3467:	eb 03                	jmp    346c <price_out_impl+0x92c>
    3469:	4d 89 fe             	mov    %r15,%r14
    346c:	4c 89 f7             	mov    %r14,%rdi
    346f:	e8 bc db ff ff       	call   1030 <free@plt>
    3474:	4c 8b 23             	mov    (%rbx),%r12
    3477:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    347c:	4c 8b 38             	mov    (%rax),%r15
    347f:	48 8d 0d 0a f1 ff ff 	lea    -0xef6(%rip),%rcx        # 2590 <arc_compare>
    3486:	ba 08 00 00 00       	mov    $0x8,%edx
    348b:	4c 89 e7             	mov    %r12,%rdi
    348e:	4c 89 fe             	mov    %r15,%rsi
    3491:	e8 9a 1a 00 00       	call   4f30 <spec_qsort>
    3496:	48 81 bd 98 01 00 00 	cmpq   $0x3a99,0x198(%rbp)
    349d:	99 3a 00 00 
    34a1:	48 c7 c1 c0 bd f0 ff 	mov    $0xfffffffffff0bdc0,%rcx
    34a8:	48 c7 c0 00 f7 c2 ff 	mov    $0xffffffffffc2f700,%rax
    34af:	48 0f 4c c1          	cmovl  %rcx,%rax
    34b3:	45 31 f6             	xor    %r14d,%r14d
    34b6:	4d 85 ff             	test   %r15,%r15
    34b9:	0f 8e ef 00 00 00    	jle    35ae <price_out_impl+0xa6e>
    34bf:	48 03 85 c0 01 00 00 	add    0x1c0(%rbp),%rax
    34c6:	48 85 c0             	test   %rax,%rax
    34c9:	0f 8e df 00 00 00    	jle    35ae <price_out_impl+0xa6e>
    34cf:	49 39 c7             	cmp    %rax,%r15
    34d2:	49 0f 4c c7          	cmovl  %r15,%rax
    34d6:	48 8b 8d a8 01 00 00 	mov    0x1a8(%rbp),%rcx
    34dd:	89 c2                	mov    %eax,%edx
    34df:	83 e2 03             	and    $0x3,%edx
    34e2:	48 83 f8 04          	cmp    $0x4,%rax
    34e6:	73 11                	jae    34f9 <price_out_impl+0x9b9>
    34e8:	4c 89 e6             	mov    %r12,%rsi
    34eb:	48 85 d2             	test   %rdx,%rdx
    34ee:	0f 85 8e 00 00 00    	jne    3582 <price_out_impl+0xa42>
    34f4:	e9 b2 00 00 00       	jmp    35ab <price_out_impl+0xa6b>
    34f9:	48 89 c7             	mov    %rax,%rdi
    34fc:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    3500:	45 31 c0             	xor    %r8d,%r8d
    3503:	4d 89 e1             	mov    %r12,%r9
    3506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    350d:	00 00 00 
    3510:	4c 89 ce             	mov    %r9,%rsi
    3513:	4f 8b 0c c4          	mov    (%r12,%r8,8),%r9
    3517:	46 8d 14 01          	lea    (%rcx,%r8,1),%r10d
    351b:	45 89 11             	mov    %r10d,(%r9)
    351e:	49 c7 41 38 01 00 00 	movq   $0x1,0x38(%r9)
    3525:	00 
    3526:	4f 8b 4c c4 08       	mov    0x8(%r12,%r8,8),%r9
    352b:	46 8d 54 01 01       	lea    0x1(%rcx,%r8,1),%r10d
    3530:	45 89 11             	mov    %r10d,(%r9)
    3533:	49 c7 41 38 01 00 00 	movq   $0x1,0x38(%r9)
    353a:	00 
    353b:	4f 8b 4c c4 10       	mov    0x10(%r12,%r8,8),%r9
    3540:	46 8d 54 01 02       	lea    0x2(%rcx,%r8,1),%r10d
    3545:	45 89 11             	mov    %r10d,(%r9)
    3548:	49 c7 41 38 01 00 00 	movq   $0x1,0x38(%r9)
    354f:	00 
    3550:	4f 8b 4c c4 18       	mov    0x18(%r12,%r8,8),%r9
    3555:	46 8d 54 01 03       	lea    0x3(%rcx,%r8,1),%r10d
    355a:	45 89 11             	mov    %r10d,(%r9)
    355d:	49 c7 41 38 01 00 00 	movq   $0x1,0x38(%r9)
    3564:	00 
    3565:	4f 8d 0c c4          	lea    (%r12,%r8,8),%r9
    3569:	49 83 c1 20          	add    $0x20,%r9
    356d:	49 83 c0 04          	add    $0x4,%r8
    3571:	4c 39 c7             	cmp    %r8,%rdi
    3574:	75 9a                	jne    3510 <price_out_impl+0x9d0>
    3576:	48 83 c6 20          	add    $0x20,%rsi
    357a:	4c 01 c1             	add    %r8,%rcx
    357d:	48 85 d2             	test   %rdx,%rdx
    3580:	74 29                	je     35ab <price_out_impl+0xa6b>
    3582:	31 ff                	xor    %edi,%edi
    3584:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    358b:	00 00 00 00 00 
    3590:	4c 8b 04 fe          	mov    (%rsi,%rdi,8),%r8
    3594:	44 8d 0c 39          	lea    (%rcx,%rdi,1),%r9d
    3598:	45 89 08             	mov    %r9d,(%r8)
    359b:	49 c7 40 38 01 00 00 	movq   $0x1,0x38(%r8)
    35a2:	00 
    35a3:	48 ff c7             	inc    %rdi
    35a6:	48 39 fa             	cmp    %rdi,%rdx
    35a9:	75 e5                	jne    3590 <price_out_impl+0xa50>
    35ab:	49 89 c6             	mov    %rax,%r14
    35ae:	48 c7 85 80 02 00 00 	movq   $0xfa0,0x280(%rbp)
    35b5:	a0 0f 00 00 
    35b9:	48 8b 8d a8 01 00 00 	mov    0x1a8(%rbp),%rcx
    35c0:	4a 8d 04 31          	lea    (%rcx,%r14,1),%rax
    35c4:	48 ff c8             	dec    %rax
    35c7:	4c 01 f1             	add    %r14,%rcx
    35ca:	48 bf cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdi
    35d1:	9b c4 20 
    35d4:	48 f7 ef             	imul   %rdi
    35d7:	48 89 d0             	mov    %rdx,%rax
    35da:	48 c1 e8 3f          	shr    $0x3f,%rax
    35de:	48 c1 fa 09          	sar    $0x9,%rdx
    35e2:	4c 8d 04 02          	lea    (%rdx,%rax,1),%r8
    35e6:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    35ea:	48 ff c6             	inc    %rsi
    35ed:	48 89 b5 70 02 00 00 	mov    %rsi,0x270(%rbp)
    35f4:	48 89 c8             	mov    %rcx,%rax
    35f7:	48 f7 ef             	imul   %rdi
    35fa:	48 89 d0             	mov    %rdx,%rax
    35fd:	48 c1 e8 3f          	shr    $0x3f,%rax
    3601:	48 c1 fa 09          	sar    $0x9,%rdx
    3605:	48 01 c2             	add    %rax,%rdx
    3608:	48 69 c2 a0 0f 00 00 	imul   $0xfa0,%rdx,%rax
    360f:	48 29 c1             	sub    %rax,%rcx
    3612:	4a 8d 84 01 61 f0 ff 	lea    -0xf9f(%rcx,%r8,1),%rax
    3619:	ff 
    361a:	48 0f 44 c6          	cmove  %rsi,%rax
    361e:	48 89 85 78 02 00 00 	mov    %rax,0x278(%rbp)
    3625:	48 85 c0             	test   %rax,%rax
    3628:	79 1c                	jns    3646 <price_out_impl+0xb06>
    362a:	b9 a0 0f 00 00       	mov    $0xfa0,%ecx
    362f:	90                   	nop
    3630:	48 ff c9             	dec    %rcx
    3633:	48 01 f0             	add    %rsi,%rax
    3636:	78 f8                	js     3630 <price_out_impl+0xaf0>
    3638:	48 89 85 78 02 00 00 	mov    %rax,0x278(%rbp)
    363f:	48 89 8d 80 02 00 00 	mov    %rcx,0x280(%rbp)
    3646:	4c 89 e7             	mov    %r12,%rdi
    3649:	e8 e2 d9 ff ff       	call   1030 <free@plt>
    364e:	4d 85 ff             	test   %r15,%r15
    3651:	0f 84 5c 01 00 00    	je     37b3 <price_out_impl+0xc73>
    3657:	48 8b 9d 40 02 00 00 	mov    0x240(%rbp),%rbx
    365e:	80 bc 24 94 00 00 00 	cmpb   $0x0,0x94(%rsp)
    3665:	00 
    3666:	0f 84 a3 00 00 00    	je     370f <price_out_impl+0xbcf>
    366c:	49 c1 e7 03          	shl    $0x3,%r15
    3670:	4f 8d 3c ff          	lea    (%r15,%r15,8),%r15
    3674:	eb 18                	jmp    368e <price_out_impl+0xb4e>
    3676:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    367d:	00 00 00 
    3680:	48 83 c3 48          	add    $0x48,%rbx
    3684:	49 83 c7 b8          	add    $0xffffffffffffffb8,%r15
    3688:	0f 84 25 01 00 00    	je     37b3 <price_out_impl+0xc73>
    368e:	48 83 7b 38 01       	cmpq   $0x1,0x38(%rbx)
    3693:	75 eb                	jne    3680 <price_out_impl+0xb40>
    3695:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    369c:	00 
    369d:	66 c7 43 20 01 00    	movw   $0x1,0x20(%rbx)
    36a3:	48 8b 43 10          	mov    0x10(%rbx),%rax
    36a7:	48 8b 48 38          	mov    0x38(%rax),%rcx
    36ab:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
    36af:	48 89 58 38          	mov    %rbx,0x38(%rax)
    36b3:	48 8b 43 18          	mov    0x18(%rbx),%rax
    36b7:	48 8b 48 40          	mov    0x40(%rax),%rcx
    36bb:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
    36bf:	48 89 58 40          	mov    %rbx,0x40(%rax)
    36c3:	48 63 33             	movslq (%rbx),%rsi
    36c6:	48 89 ef             	mov    %rbp,%rdi
    36c9:	e8 22 e0 ff ff       	call   16f0 <getArcPosition>
    36ce:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    36d2:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
    36d6:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
    36db:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
    36e0:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
    36e5:	f3 41 0f 7f 44 c5 00 	movdqu %xmm0,0x0(%r13,%rax,8)
    36ec:	f3 41 0f 7f 4c c5 10 	movdqu %xmm1,0x10(%r13,%rax,8)
    36f3:	f3 41 0f 7f 54 c5 20 	movdqu %xmm2,0x20(%r13,%rax,8)
    36fa:	f3 41 0f 7f 5c c5 30 	movdqu %xmm3,0x30(%r13,%rax,8)
    3701:	48 8b 4b 40          	mov    0x40(%rbx),%rcx
    3705:	49 89 4c c5 40       	mov    %rcx,0x40(%r13,%rax,8)
    370a:	e9 71 ff ff ff       	jmp    3680 <price_out_impl+0xb40>
    370f:	49 c1 e7 03          	shl    $0x3,%r15
    3713:	4f 8d 3c ff          	lea    (%r15,%r15,8),%r15
    3717:	48 83 c3 38          	add    $0x38,%rbx
    371b:	45 31 e4             	xor    %r12d,%r12d
    371e:	eb 0d                	jmp    372d <price_out_impl+0xbed>
    3720:	49 83 c4 48          	add    $0x48,%r12
    3724:	4d 39 e7             	cmp    %r12,%r15
    3727:	0f 84 86 00 00 00    	je     37b3 <price_out_impl+0xc73>
    372d:	4a 83 3c 23 01       	cmpq   $0x1,(%rbx,%r12,1)
    3732:	75 ec                	jne    3720 <price_out_impl+0xbe0>
    3734:	4e 8d 2c 23          	lea    (%rbx,%r12,1),%r13
    3738:	49 83 c5 c8          	add    $0xffffffffffffffc8,%r13
    373c:	4a c7 04 23 00 00 00 	movq   $0x0,(%rbx,%r12,1)
    3743:	00 
    3744:	66 42 c7 44 23 e8 01 	movw   $0x1,-0x18(%rbx,%r12,1)
    374b:	00 
    374c:	4a 63 74 23 c8       	movslq -0x38(%rbx,%r12,1),%rsi
    3751:	48 89 ef             	mov    %rbp,%rdi
    3754:	e8 97 df ff ff       	call   16f0 <getArcPosition>
    3759:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    375d:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
    3763:	f3 41 0f 6f 4d 10    	movdqu 0x10(%r13),%xmm1
    3769:	f3 41 0f 6f 55 20    	movdqu 0x20(%r13),%xmm2
    376f:	f3 41 0f 6f 5d 30    	movdqu 0x30(%r13),%xmm3
    3775:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    377a:	f3 0f 7f 04 c1       	movdqu %xmm0,(%rcx,%rax,8)
    377f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3784:	f3 0f 7f 4c c1 10    	movdqu %xmm1,0x10(%rcx,%rax,8)
    378a:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    378f:	f3 0f 7f 54 c1 20    	movdqu %xmm2,0x20(%rcx,%rax,8)
    3795:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    379a:	f3 0f 7f 5c c1 30    	movdqu %xmm3,0x30(%rcx,%rax,8)
    37a0:	49 8b 4d 40          	mov    0x40(%r13),%rcx
    37a4:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    37a9:	48 89 4c c2 40       	mov    %rcx,0x40(%rdx,%rax,8)
    37ae:	e9 6d ff ff ff       	jmp    3720 <price_out_impl+0xbe0>
    37b3:	4c 01 b5 b8 01 00 00 	add    %r14,0x1b8(%rbp)
    37ba:	4c 29 b5 c0 01 00 00 	sub    %r14,0x1c0(%rbp)
    37c1:	4c 8b bd a8 01 00 00 	mov    0x1a8(%rbp),%r15
    37c8:	48 8b 9d 48 02 00 00 	mov    0x248(%rbp),%rbx
    37cf:	48 83 bd 90 01 00 00 	cmpq   $0x0,0x190(%rbp)
    37d6:	00 
    37d7:	0f 88 ad 00 00 00    	js     388a <price_out_impl+0xd4a>
    37dd:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    37e4:	41 bd 40 00 00 00    	mov    $0x40,%r13d
    37ea:	eb 1d                	jmp    3809 <price_out_impl+0xcc9>
    37ec:	0f 1f 40 00          	nopl   0x0(%rax)
    37f0:	49 ff c4             	inc    %r12
    37f3:	49 83 c5 68          	add    $0x68,%r13
    37f7:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    37fc:	4c 3b a5 90 01 00 00 	cmp    0x190(%rbp),%r12
    3803:	0f 8d 81 00 00 00    	jge    388a <price_out_impl+0xd4a>
    3809:	48 8b ad 28 02 00 00 	mov    0x228(%rbp),%rbp
    3810:	4a 8b 44 2d f0       	mov    -0x10(%rbp,%r13,1),%rax
    3815:	48 85 c0             	test   %rax,%rax
    3818:	74 1d                	je     3837 <price_out_impl+0xcf7>
    381a:	8b 30                	mov    (%rax),%esi
    381c:	85 f6                	test   %esi,%esi
    381e:	78 17                	js     3837 <price_out_impl+0xcf7>
    3820:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    3825:	e8 c6 de ff ff       	call   16f0 <getArcPosition>
    382a:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    382e:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3832:	4a 89 44 2d f0       	mov    %rax,-0x10(%rbp,%r13,1)
    3837:	4a 8b 44 2d 00       	mov    0x0(%rbp,%r13,1),%rax
    383c:	48 85 c0             	test   %rax,%rax
    383f:	74 1d                	je     385e <price_out_impl+0xd1e>
    3841:	8b 30                	mov    (%rax),%esi
    3843:	85 f6                	test   %esi,%esi
    3845:	78 17                	js     385e <price_out_impl+0xd1e>
    3847:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    384c:	e8 9f de ff ff       	call   16f0 <getArcPosition>
    3851:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3855:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3859:	4a 89 44 2d 00       	mov    %rax,0x0(%rbp,%r13,1)
    385e:	4a 8b 44 2d f8       	mov    -0x8(%rbp,%r13,1),%rax
    3863:	48 85 c0             	test   %rax,%rax
    3866:	74 88                	je     37f0 <price_out_impl+0xcb0>
    3868:	8b 30                	mov    (%rax),%esi
    386a:	85 f6                	test   %esi,%esi
    386c:	78 82                	js     37f0 <price_out_impl+0xcb0>
    386e:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    3873:	e8 78 de ff ff       	call   16f0 <getArcPosition>
    3878:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    387c:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3880:	4a 89 44 2d f8       	mov    %rax,-0x8(%rbp,%r13,1)
    3885:	e9 66 ff ff ff       	jmp    37f0 <price_out_impl+0xcb0>
    388a:	4d 85 ff             	test   %r15,%r15
    388d:	7e 73                	jle    3902 <price_out_impl+0xdc2>
    388f:	45 31 e4             	xor    %r12d,%r12d
    3892:	eb 15                	jmp    38a9 <price_out_impl+0xd69>
    3894:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    389b:	00 00 00 00 00 
    38a0:	49 83 c4 48          	add    $0x48,%r12
    38a4:	49 ff cf             	dec    %r15
    38a7:	74 59                	je     3902 <price_out_impl+0xdc2>
    38a9:	4c 8b ad 38 02 00 00 	mov    0x238(%rbp),%r13
    38b0:	43 8b 74 25 00       	mov    0x0(%r13,%r12,1),%esi
    38b5:	85 f6                	test   %esi,%esi
    38b7:	78 e7                	js     38a0 <price_out_impl+0xd60>
    38b9:	4d 01 e5             	add    %r12,%r13
    38bc:	48 89 ef             	mov    %rbp,%rdi
    38bf:	e8 2c de ff ff       	call   16f0 <getArcPosition>
    38c4:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    38c8:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
    38ce:	f3 41 0f 6f 4d 10    	movdqu 0x10(%r13),%xmm1
    38d4:	f3 41 0f 6f 55 20    	movdqu 0x20(%r13),%xmm2
    38da:	f3 41 0f 6f 5d 30    	movdqu 0x30(%r13),%xmm3
    38e0:	f3 0f 7f 04 c3       	movdqu %xmm0,(%rbx,%rax,8)
    38e5:	f3 0f 7f 4c c3 10    	movdqu %xmm1,0x10(%rbx,%rax,8)
    38eb:	f3 0f 7f 54 c3 20    	movdqu %xmm2,0x20(%rbx,%rax,8)
    38f1:	f3 0f 7f 5c c3 30    	movdqu %xmm3,0x30(%rbx,%rax,8)
    38f7:	49 8b 4d 40          	mov    0x40(%r13),%rcx
    38fb:	48 89 4c c3 40       	mov    %rcx,0x40(%rbx,%rax,8)
    3900:	eb 9e                	jmp    38a0 <price_out_impl+0xd60>
    3902:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    3909:	48 89 9d 38 02 00 00 	mov    %rbx,0x238(%rbp)
    3910:	48 89 85 48 02 00 00 	mov    %rax,0x248(%rbp)
    3917:	48 8b 85 a8 01 00 00 	mov    0x1a8(%rbp),%rax
    391e:	4c 01 f0             	add    %r14,%rax
    3921:	48 89 85 a8 01 00 00 	mov    %rax,0x1a8(%rbp)
    3928:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    392c:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    3930:	48 89 85 40 02 00 00 	mov    %rax,0x240(%rbp)
    3937:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
    393c:	e8 ef d6 ff ff       	call   1030 <free@plt>
    3941:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    3946:	e8 e5 d6 ff ff       	call   1030 <free@plt>
    394b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    3950:	e8 db d6 ff ff       	call   1030 <free@plt>
    3955:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    395a:	e8 d1 d6 ff ff       	call   1030 <free@plt>
    395f:	4c 89 f0             	mov    %r14,%rax
    3962:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    3969:	5b                   	pop    %rbx
    396a:	41 5c                	pop    %r12
    396c:	41 5d                	pop    %r13
    396e:	41 5e                	pop    %r14
    3970:	41 5f                	pop    %r15
    3972:	5d                   	pop    %rbp
    3973:	c3                   	ret    
    3974:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    397b:	00 00 00 00 00 

0000000000003980 <suspend_impl>:
    3980:	55                   	push   %rbp
    3981:	41 57                	push   %r15
    3983:	41 56                	push   %r14
    3985:	41 55                	push   %r13
    3987:	41 54                	push   %r12
    3989:	53                   	push   %rbx
    398a:	50                   	push   %rax
    398b:	48 89 d1             	mov    %rdx,%rcx
    398e:	49 89 f4             	mov    %rsi,%r12
    3991:	48 89 fb             	mov    %rdi,%rbx
    3994:	48 c7 87 80 02 00 00 	movq   $0xfa0,0x280(%rdi)
    399b:	a0 0f 00 00 
    399f:	48 8b bf a8 01 00 00 	mov    0x1a8(%rdi),%rdi
    39a6:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
    39aa:	49 b8 cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r8
    39b1:	9b c4 20 
    39b4:	49 f7 e8             	imul   %r8
    39b7:	48 89 d0             	mov    %rdx,%rax
    39ba:	48 c1 e8 3f          	shr    $0x3f,%rax
    39be:	48 c1 fa 09          	sar    $0x9,%rdx
    39c2:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    39c6:	48 ff c6             	inc    %rsi
    39c9:	48 89 f8             	mov    %rdi,%rax
    39cc:	49 f7 e8             	imul   %r8
    39cf:	48 89 b3 70 02 00 00 	mov    %rsi,0x270(%rbx)
    39d6:	48 89 d0             	mov    %rdx,%rax
    39d9:	48 c1 e8 3f          	shr    $0x3f,%rax
    39dd:	48 c1 fa 09          	sar    $0x9,%rdx
    39e1:	48 01 c2             	add    %rax,%rdx
    39e4:	48 69 d2 a0 0f 00 00 	imul   $0xfa0,%rdx,%rdx
    39eb:	48 89 f8             	mov    %rdi,%rax
    39ee:	48 29 d0             	sub    %rdx,%rax
    39f1:	48 01 f0             	add    %rsi,%rax
    39f4:	48 05 60 f0 ff ff    	add    $0xfffffffffffff060,%rax
    39fa:	48 89 83 78 02 00 00 	mov    %rax,0x278(%rbx)
    3a01:	78 11                	js     3a14 <suspend_impl+0x94>
    3a03:	4c 8b b3 b8 01 00 00 	mov    0x1b8(%rbx),%r14
    3a0a:	48 85 c9             	test   %rcx,%rcx
    3a0d:	75 37                	jne    3a46 <suspend_impl+0xc6>
    3a0f:	e9 67 02 00 00       	jmp    3c7b <suspend_impl+0x2fb>
    3a14:	ba a0 0f 00 00       	mov    $0xfa0,%edx
    3a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3a20:	48 ff ca             	dec    %rdx
    3a23:	48 01 f0             	add    %rsi,%rax
    3a26:	78 f8                	js     3a20 <suspend_impl+0xa0>
    3a28:	48 89 83 78 02 00 00 	mov    %rax,0x278(%rbx)
    3a2f:	48 89 93 80 02 00 00 	mov    %rdx,0x280(%rbx)
    3a36:	4c 8b b3 b8 01 00 00 	mov    0x1b8(%rbx),%r14
    3a3d:	48 85 c9             	test   %rcx,%rcx
    3a40:	0f 84 35 02 00 00    	je     3c7b <suspend_impl+0x2fb>
    3a46:	4d 85 f6             	test   %r14,%r14
    3a49:	0f 84 fe 02 00 00    	je     3d4d <suspend_impl+0x3cd>
    3a4f:	4c 29 b3 b8 01 00 00 	sub    %r14,0x1b8(%rbx)
    3a56:	4c 01 b3 c0 01 00 00 	add    %r14,0x1c0(%rbx)
    3a5d:	48 c7 83 80 02 00 00 	movq   $0xfa0,0x280(%rbx)
    3a64:	a0 0f 00 00 
    3a68:	4c 89 f0             	mov    %r14,%rax
    3a6b:	48 f7 d0             	not    %rax
    3a6e:	48 01 f8             	add    %rdi,%rax
    3a71:	49 b8 cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%r8
    3a78:	9b c4 20 
    3a7b:	49 f7 e8             	imul   %r8
    3a7e:	48 89 d0             	mov    %rdx,%rax
    3a81:	48 c1 e8 3f          	shr    $0x3f,%rax
    3a85:	48 c1 fa 09          	sar    $0x9,%rdx
    3a89:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    3a8d:	48 ff c6             	inc    %rsi
    3a90:	48 89 f9             	mov    %rdi,%rcx
    3a93:	4c 29 f1             	sub    %r14,%rcx
    3a96:	48 89 c8             	mov    %rcx,%rax
    3a99:	49 f7 e8             	imul   %r8
    3a9c:	48 89 b3 70 02 00 00 	mov    %rsi,0x270(%rbx)
    3aa3:	48 89 d0             	mov    %rdx,%rax
    3aa6:	48 c1 e8 3f          	shr    $0x3f,%rax
    3aaa:	48 c1 fa 09          	sar    $0x9,%rdx
    3aae:	48 01 c2             	add    %rax,%rdx
    3ab1:	48 69 c2 a0 0f 00 00 	imul   $0xfa0,%rdx,%rax
    3ab8:	48 89 ca             	mov    %rcx,%rdx
    3abb:	48 29 c2             	sub    %rax,%rdx
    3abe:	48 f7 d8             	neg    %rax
    3ac1:	48 85 d2             	test   %rdx,%rdx
    3ac4:	48 8d 84 01 60 f0 ff 	lea    -0xfa0(%rcx,%rax,1),%rax
    3acb:	ff 
    3acc:	48 0f 44 c2          	cmove  %rdx,%rax
    3ad0:	48 01 f0             	add    %rsi,%rax
    3ad3:	48 89 83 78 02 00 00 	mov    %rax,0x278(%rbx)
    3ada:	79 2a                	jns    3b06 <suspend_impl+0x186>
    3adc:	b9 a0 0f 00 00       	mov    $0xfa0,%ecx
    3ae1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3ae8:	0f 1f 84 00 00 00 00 
    3aef:	00 
    3af0:	48 ff c9             	dec    %rcx
    3af3:	48 01 f0             	add    %rsi,%rax
    3af6:	78 f8                	js     3af0 <suspend_impl+0x170>
    3af8:	48 89 83 78 02 00 00 	mov    %rax,0x278(%rbx)
    3aff:	48 89 8b 80 02 00 00 	mov    %rcx,0x280(%rbx)
    3b06:	48 89 3c 24          	mov    %rdi,(%rsp)
    3b0a:	4c 8b a3 48 02 00 00 	mov    0x248(%rbx),%r12
    3b11:	48 83 bb 90 01 00 00 	cmpq   $0x0,0x190(%rbx)
    3b18:	00 
    3b19:	0f 88 9a 00 00 00    	js     3bb9 <suspend_impl+0x239>
    3b1f:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    3b26:	bd 40 00 00 00       	mov    $0x40,%ebp
    3b2b:	eb 13                	jmp    3b40 <suspend_impl+0x1c0>
    3b2d:	0f 1f 00             	nopl   (%rax)
    3b30:	49 ff c5             	inc    %r13
    3b33:	48 83 c5 68          	add    $0x68,%rbp
    3b37:	4c 3b ab 90 01 00 00 	cmp    0x190(%rbx),%r13
    3b3e:	7d 79                	jge    3bb9 <suspend_impl+0x239>
    3b40:	4c 8b bb 28 02 00 00 	mov    0x228(%rbx),%r15
    3b47:	49 8b 44 2f f0       	mov    -0x10(%r15,%rbp,1),%rax
    3b4c:	48 85 c0             	test   %rax,%rax
    3b4f:	74 1b                	je     3b6c <suspend_impl+0x1ec>
    3b51:	8b 30                	mov    (%rax),%esi
    3b53:	85 f6                	test   %esi,%esi
    3b55:	78 15                	js     3b6c <suspend_impl+0x1ec>
    3b57:	48 89 df             	mov    %rbx,%rdi
    3b5a:	e8 f1 db ff ff       	call   1750 <getOriginalArcPosition>
    3b5f:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3b63:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    3b67:	49 89 44 2f f0       	mov    %rax,-0x10(%r15,%rbp,1)
    3b6c:	49 8b 04 2f          	mov    (%r15,%rbp,1),%rax
    3b70:	48 85 c0             	test   %rax,%rax
    3b73:	74 1a                	je     3b8f <suspend_impl+0x20f>
    3b75:	8b 30                	mov    (%rax),%esi
    3b77:	85 f6                	test   %esi,%esi
    3b79:	78 14                	js     3b8f <suspend_impl+0x20f>
    3b7b:	48 89 df             	mov    %rbx,%rdi
    3b7e:	e8 cd db ff ff       	call   1750 <getOriginalArcPosition>
    3b83:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3b87:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    3b8b:	49 89 04 2f          	mov    %rax,(%r15,%rbp,1)
    3b8f:	49 8b 44 2f f8       	mov    -0x8(%r15,%rbp,1),%rax
    3b94:	48 85 c0             	test   %rax,%rax
    3b97:	74 97                	je     3b30 <suspend_impl+0x1b0>
    3b99:	8b 30                	mov    (%rax),%esi
    3b9b:	85 f6                	test   %esi,%esi
    3b9d:	78 91                	js     3b30 <suspend_impl+0x1b0>
    3b9f:	48 89 df             	mov    %rbx,%rdi
    3ba2:	e8 a9 db ff ff       	call   1750 <getOriginalArcPosition>
    3ba7:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3bab:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    3baf:	49 89 44 2f f8       	mov    %rax,-0x8(%r15,%rbp,1)
    3bb4:	e9 77 ff ff ff       	jmp    3b30 <suspend_impl+0x1b0>
    3bb9:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    3bbe:	7e 6a                	jle    3c2a <suspend_impl+0x2aa>
    3bc0:	45 31 ff             	xor    %r15d,%r15d
    3bc3:	4c 8b 2c 24          	mov    (%rsp),%r13
    3bc7:	eb 10                	jmp    3bd9 <suspend_impl+0x259>
    3bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3bd0:	49 83 c7 48          	add    $0x48,%r15
    3bd4:	49 ff cd             	dec    %r13
    3bd7:	74 51                	je     3c2a <suspend_impl+0x2aa>
    3bd9:	48 8b ab 38 02 00 00 	mov    0x238(%rbx),%rbp
    3be0:	42 8b 74 3d 00       	mov    0x0(%rbp,%r15,1),%esi
    3be5:	85 f6                	test   %esi,%esi
    3be7:	78 e7                	js     3bd0 <suspend_impl+0x250>
    3be9:	4c 01 fd             	add    %r15,%rbp
    3bec:	48 89 df             	mov    %rbx,%rdi
    3bef:	e8 5c db ff ff       	call   1750 <getOriginalArcPosition>
    3bf4:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3bf8:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
    3bfc:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
    3c00:	0f 10 55 20          	movups 0x20(%rbp),%xmm2
    3c04:	0f 10 5d 30          	movups 0x30(%rbp),%xmm3
    3c08:	41 0f 11 04 c4       	movups %xmm0,(%r12,%rax,8)
    3c0d:	41 0f 11 4c c4 10    	movups %xmm1,0x10(%r12,%rax,8)
    3c13:	41 0f 11 54 c4 20    	movups %xmm2,0x20(%r12,%rax,8)
    3c19:	41 0f 11 5c c4 30    	movups %xmm3,0x30(%r12,%rax,8)
    3c1f:	48 8b 4d 40          	mov    0x40(%rbp),%rcx
    3c23:	49 89 4c c4 40       	mov    %rcx,0x40(%r12,%rax,8)
    3c28:	eb a6                	jmp    3bd0 <suspend_impl+0x250>
    3c2a:	48 8b 83 38 02 00 00 	mov    0x238(%rbx),%rax
    3c31:	4c 89 a3 38 02 00 00 	mov    %r12,0x238(%rbx)
    3c38:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
    3c3f:	48 8b 04 24          	mov    (%rsp),%rax
    3c43:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    3c47:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    3c4b:	4c 29 b3 a8 01 00 00 	sub    %r14,0x1a8(%rbx)
    3c52:	4c 89 f1             	mov    %r14,%rcx
    3c55:	48 f7 d9             	neg    %rcx
    3c58:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
    3c5c:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    3c60:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    3c67:	48 8d 35 e2 da ff ff 	lea    -0x251e(%rip),%rsi        # 1750 <getOriginalArcPosition>
    3c6e:	48 89 df             	mov    %rbx,%rdi
    3c71:	e8 ba d8 ff ff       	call   1530 <refresh_neighbour_lists>
    3c76:	e9 d5 00 00 00       	jmp    3d50 <suspend_impl+0x3d0>
    3c7b:	4d 85 f6             	test   %r14,%r14
    3c7e:	0f 8e c9 00 00 00    	jle    3d4d <suspend_impl+0x3cd>
    3c84:	4c 29 f7             	sub    %r14,%rdi
    3c87:	45 31 f6             	xor    %r14d,%r14d
    3c8a:	49 89 ff             	mov    %rdi,%r15
    3c8d:	49 89 fd             	mov    %rdi,%r13
    3c90:	eb 42                	jmp    3cd4 <suspend_impl+0x354>
    3c92:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3c99:	1f 84 00 00 00 00 00 
    3ca0:	31 d2                	xor    %edx,%edx
    3ca2:	31 f6                	xor    %esi,%esi
    3ca4:	4c 39 e1             	cmp    %r12,%rcx
    3ca7:	0f 9e c2             	setle  %dl
    3caa:	40 0f 9f c6          	setg   %sil
    3cae:	44 89 f9             	mov    %r15d,%ecx
    3cb1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    3cb6:	0f 4f cf             	cmovg  %edi,%ecx
    3cb9:	49 01 f6             	add    %rsi,%r14
    3cbc:	49 01 d7             	add    %rdx,%r15
    3cbf:	89 08                	mov    %ecx,(%rax)
    3cc1:	49 ff c5             	inc    %r13
    3cc4:	48 8b bb a8 01 00 00 	mov    0x1a8(%rbx),%rdi
    3ccb:	49 39 fd             	cmp    %rdi,%r13
    3cce:	0f 8d 72 fd ff ff    	jge    3a46 <suspend_impl+0xc6>
    3cd4:	48 8b ab 38 02 00 00 	mov    0x238(%rbx),%rbp
    3cdb:	48 89 df             	mov    %rbx,%rdi
    3cde:	4c 89 ee             	mov    %r13,%rsi
    3ce1:	e8 0a da ff ff       	call   16f0 <getArcPosition>
    3ce6:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    3cea:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    3cf1:	00 
    3cf2:	48 01 e8             	add    %rbp,%rax
    3cf5:	0f b7 74 d5 20       	movzwl 0x20(%rbp,%rdx,8),%esi
    3cfa:	48 c7 c1 fe ff ff ff 	mov    $0xfffffffffffffffe,%rcx
    3d01:	85 f6                	test   %esi,%esi
    3d03:	74 2b                	je     3d30 <suspend_impl+0x3b0>
    3d05:	83 fe 01             	cmp    $0x1,%esi
    3d08:	75 96                	jne    3ca0 <suspend_impl+0x320>
    3d0a:	48 8b 4c d5 08       	mov    0x8(%rbp,%rdx,8),%rcx
    3d0f:	48 8b 74 d5 10       	mov    0x10(%rbp,%rdx,8),%rsi
    3d14:	48 2b 0e             	sub    (%rsi),%rcx
    3d17:	48 8b 54 d5 18       	mov    0x18(%rbp,%rdx,8),%rdx
    3d1c:	48 03 0a             	add    (%rdx),%rcx
    3d1f:	e9 7c ff ff ff       	jmp    3ca0 <suspend_impl+0x320>
    3d24:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    3d2b:	00 00 00 00 00 
    3d30:	48 8b 74 d5 10       	mov    0x10(%rbp,%rdx,8),%rsi
    3d35:	48 39 46 30          	cmp    %rax,0x30(%rsi)
    3d39:	0f 84 61 ff ff ff    	je     3ca0 <suspend_impl+0x320>
    3d3f:	48 8b 54 d5 18       	mov    0x18(%rbp,%rdx,8),%rdx
    3d44:	48 89 42 30          	mov    %rax,0x30(%rdx)
    3d48:	e9 53 ff ff ff       	jmp    3ca0 <suspend_impl+0x320>
    3d4d:	45 31 f6             	xor    %r14d,%r14d
    3d50:	4c 89 f0             	mov    %r14,%rax
    3d53:	48 83 c4 08          	add    $0x8,%rsp
    3d57:	5b                   	pop    %rbx
    3d58:	41 5c                	pop    %r12
    3d5a:	41 5d                	pop    %r13
    3d5c:	41 5e                	pop    %r14
    3d5e:	41 5f                	pop    %r15
    3d60:	5d                   	pop    %rbp
    3d61:	c3                   	ret    
    3d62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3d69:	00 00 00 
    3d6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003d70 <primal_start_artificial>:
    3d70:	48 8b 87 28 02 00 00 	mov    0x228(%rdi),%rax
    3d77:	48 8d 48 68          	lea    0x68(%rax),%rcx
    3d7b:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    3d82:	00 
    3d83:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    3d8a:	00 
    3d8b:	48 89 48 10          	mov    %rcx,0x10(%rax)
    3d8f:	0f 57 c0             	xorps  %xmm0,%xmm0
    3d92:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    3d96:	48 8b 97 90 01 00 00 	mov    0x190(%rdi),%rdx
    3d9d:	48 ff c2             	inc    %rdx
    3da0:	48 89 50 58          	mov    %rdx,0x58(%rax)
    3da4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    3dab:	48 c7 00 00 1f 0a fa 	movq   $0xfffffffffa0a1f00,(%rax)
    3db2:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    3db9:	00 
    3dba:	48 8b 97 a8 01 00 00 	mov    0x1a8(%rdi),%rdx
    3dc1:	48 85 d2             	test   %rdx,%rdx
    3dc4:	7e 3a                	jle    3e00 <primal_start_artificial+0x90>
    3dc6:	48 8b b7 38 02 00 00 	mov    0x238(%rdi),%rsi
    3dcd:	48 83 c6 20          	add    $0x20,%rsi
    3dd1:	45 31 c0             	xor    %r8d,%r8d
    3dd4:	eb 16                	jmp    3dec <primal_start_artificial+0x7c>
    3dd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3ddd:	00 00 00 
    3de0:	49 ff c0             	inc    %r8
    3de3:	48 83 c6 48          	add    $0x48,%rsi
    3de7:	4c 39 c2             	cmp    %r8,%rdx
    3dea:	7e 14                	jle    3e00 <primal_start_artificial+0x90>
    3dec:	66 83 3e ff          	cmpw   $0xffff,(%rsi)
    3df0:	74 ee                	je     3de0 <primal_start_artificial+0x70>
    3df2:	66 c7 06 01 00       	movw   $0x1,(%rsi)
    3df7:	48 8b 97 a8 01 00 00 	mov    0x1a8(%rdi),%rdx
    3dfe:	eb e0                	jmp    3de0 <primal_start_artificial+0x70>
    3e00:	4c 8b 87 90 01 00 00 	mov    0x190(%rdi),%r8
    3e07:	4d 85 c0             	test   %r8,%r8
    3e0a:	0f 8e 80 00 00 00    	jle    3e90 <primal_start_artificial+0x120>
    3e10:	48 8b 97 50 02 00 00 	mov    0x250(%rdi),%rdx
    3e17:	31 f6                	xor    %esi,%esi
    3e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3e20:	48 89 51 30          	mov    %rdx,0x30(%rcx)
    3e24:	48 89 41 18          	mov    %rax,0x18(%rcx)
    3e28:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    3e2f:	00 
    3e30:	48 ff c6             	inc    %rsi
    3e33:	4c 8d 49 68          	lea    0x68(%rcx),%r9
    3e37:	4c 89 49 20          	mov    %r9,0x20(%rcx)
    3e3b:	4c 8d 41 98          	lea    -0x68(%rcx),%r8
    3e3f:	4c 89 41 28          	mov    %r8,0x28(%rcx)
    3e43:	48 c7 41 58 01 00 00 	movq   $0x1,0x58(%rcx)
    3e4a:	00 
    3e4b:	48 c7 42 08 00 e1 f5 	movq   $0x5f5e100,0x8(%rdx)
    3e52:	05 
    3e53:	66 c7 42 20 00 00    	movw   $0x0,0x20(%rdx)
    3e59:	c7 41 08 01 00 00 00 	movl   $0x1,0x8(%rcx)
    3e60:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    3e67:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    3e6b:	48 89 42 18          	mov    %rax,0x18(%rdx)
    3e6f:	c7 02 fe ff ff ff    	movl   $0xfffffffe,(%rdx)
    3e75:	48 c7 41 50 00 00 00 	movq   $0x0,0x50(%rcx)
    3e7c:	00 
    3e7d:	4c 8b 87 90 01 00 00 	mov    0x190(%rdi),%r8
    3e84:	48 83 c2 48          	add    $0x48,%rdx
    3e88:	4c 89 c9             	mov    %r9,%rcx
    3e8b:	49 39 f0             	cmp    %rsi,%r8
    3e8e:	7f 90                	jg     3e20 <primal_start_artificial+0xb0>
    3e90:	49 6b c8 68          	imul   $0x68,%r8,%rcx
    3e94:	48 c7 44 08 20 00 00 	movq   $0x0,0x20(%rax,%rcx,1)
    3e9b:	00 00 
    3e9d:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
    3ea4:	00 00 00 00 
    3ea8:	31 c0                	xor    %eax,%eax
    3eaa:	c3                   	ret    
    3eab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003eb0 <write_circulations>:
    3eb0:	55                   	push   %rbp
    3eb1:	41 57                	push   %r15
    3eb3:	41 56                	push   %r14
    3eb5:	41 55                	push   %r13
    3eb7:	41 54                	push   %r12
    3eb9:	53                   	push   %rbx
    3eba:	50                   	push   %rax
    3ebb:	48 89 f3             	mov    %rsi,%rbx
    3ebe:	31 c0                	xor    %eax,%eax
    3ec0:	48 2b 86 b8 01 00 00 	sub    0x1b8(%rsi),%rax
    3ec7:	4c 8d 3c c0          	lea    (%rax,%rax,8),%r15
    3ecb:	49 c1 e7 03          	shl    $0x3,%r15
    3ecf:	4c 03 be 40 02 00 00 	add    0x240(%rsi),%r15
    3ed6:	48 8d 35 92 44 00 00 	lea    0x4492(%rip),%rsi        # 836f <_IO_stdin_used+0x36f>
    3edd:	e8 3e d2 ff ff       	call   1120 <fopen@plt>
    3ee2:	48 85 c0             	test   %rax,%rax
    3ee5:	0f 84 24 01 00 00    	je     400f <write_circulations+0x15f>
    3eeb:	49 89 c6             	mov    %rax,%r14
    3eee:	48 8d 35 fb d7 ff ff 	lea    -0x2805(%rip),%rsi        # 16f0 <getArcPosition>
    3ef5:	48 89 df             	mov    %rbx,%rdi
    3ef8:	e8 33 d6 ff ff       	call   1530 <refresh_neighbour_lists>
    3efd:	48 8b 83 28 02 00 00 	mov    0x228(%rbx),%rax
    3f04:	48 6b 8b 90 01 00 00 	imul   $0x68,0x190(%rbx),%rcx
    3f0b:	68 
    3f0c:	4c 8b 64 08 38       	mov    0x38(%rax,%rcx,1),%r12
    3f11:	4d 85 e4             	test   %r12,%r12
    3f14:	0f 84 e4 00 00 00    	je     3ffe <write_circulations+0x14e>
    3f1a:	48 8d 2d 59 44 00 00 	lea    0x4459(%rip),%rbp        # 837a <_IO_stdin_used+0x37a>
    3f21:	49 83 7c 24 38 00    	cmpq   $0x0,0x38(%r12)
    3f27:	0f 84 c3 00 00 00    	je     3ff0 <write_circulations+0x140>
    3f2d:	be 03 00 00 00       	mov    $0x3,%esi
    3f32:	ba 01 00 00 00       	mov    $0x1,%edx
    3f37:	48 8d 3d 33 44 00 00 	lea    0x4433(%rip),%rdi        # 8371 <_IO_stdin_used+0x371>
    3f3e:	4c 89 f1             	mov    %r14,%rcx
    3f41:	e8 0a d2 ff ff       	call   1150 <fwrite@plt>
    3f46:	4d 89 e5             	mov    %r12,%r13
    3f49:	4c 89 24 24          	mov    %r12,(%rsp)
    3f4d:	4d 39 fd             	cmp    %r15,%r13
    3f50:	72 19                	jb     3f6b <write_circulations+0xbb>
    3f52:	be 04 00 00 00       	mov    $0x4,%esi
    3f57:	ba 01 00 00 00       	mov    $0x1,%edx
    3f5c:	48 8d 3d 12 44 00 00 	lea    0x4412(%rip),%rdi        # 8375 <_IO_stdin_used+0x375>
    3f63:	4c 89 f1             	mov    %r14,%rcx
    3f66:	e8 e5 d1 ff ff       	call   1150 <fwrite@plt>
    3f6b:	49 8b 45 18          	mov    0x18(%r13),%rax
    3f6f:	31 d2                	xor    %edx,%edx
    3f71:	2b 50 60             	sub    0x60(%rax),%edx
    3f74:	4d 89 f4             	mov    %r14,%r12
    3f77:	4c 89 f7             	mov    %r14,%rdi
    3f7a:	49 89 ee             	mov    %rbp,%r14
    3f7d:	48 89 ee             	mov    %rbp,%rsi
    3f80:	31 c0                	xor    %eax,%eax
    3f82:	e8 39 d1 ff ff       	call   10c0 <fprintf@plt>
    3f87:	48 6b 83 98 01 00 00 	imul   $0x68,0x198(%rbx),%rax
    3f8e:	68 
    3f8f:	49 8b 4d 18          	mov    0x18(%r13),%rcx
    3f93:	4c 8b 6c 01 38       	mov    0x38(%rcx,%rax,1),%r13
    3f98:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    3f9f:	4d 85 ed             	test   %r13,%r13
    3fa2:	74 5e                	je     4002 <write_circulations+0x152>
    3fa4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    3fab:	00 00 00 00 00 
    3fb0:	49 83 7d 38 00       	cmpq   $0x0,0x38(%r13)
    3fb5:	75 19                	jne    3fd0 <write_circulations+0x120>
    3fb7:	4d 8b 6d 28          	mov    0x28(%r13),%r13
    3fbb:	4d 85 ed             	test   %r13,%r13
    3fbe:	75 f0                	jne    3fb0 <write_circulations+0x100>
    3fc0:	eb 40                	jmp    4002 <write_circulations+0x152>
    3fc2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3fc9:	1f 84 00 00 00 00 00 
    3fd0:	49 8b 45 18          	mov    0x18(%r13),%rax
    3fd4:	83 78 60 00          	cmpl   $0x0,0x60(%rax)
    3fd8:	4c 89 f5             	mov    %r14,%rbp
    3fdb:	4d 89 e6             	mov    %r12,%r14
    3fde:	4c 8b 24 24          	mov    (%rsp),%r12
    3fe2:	0f 85 65 ff ff ff    	jne    3f4d <write_circulations+0x9d>
    3fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3fef:	00 
    3ff0:	4d 8b 64 24 28       	mov    0x28(%r12),%r12
    3ff5:	4d 85 e4             	test   %r12,%r12
    3ff8:	0f 85 23 ff ff ff    	jne    3f21 <write_circulations+0x71>
    3ffe:	31 ed                	xor    %ebp,%ebp
    4000:	eb 03                	jmp    4005 <write_circulations+0x155>
    4002:	4d 89 e6             	mov    %r12,%r14
    4005:	4c 89 f7             	mov    %r14,%rdi
    4008:	e8 63 d0 ff ff       	call   1070 <fclose@plt>
    400d:	eb 07                	jmp    4016 <write_circulations+0x166>
    400f:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    4016:	48 89 e8             	mov    %rbp,%rax
    4019:	48 83 c4 08          	add    $0x8,%rsp
    401d:	5b                   	pop    %rbx
    401e:	41 5c                	pop    %r12
    4020:	41 5d                	pop    %r13
    4022:	41 5e                	pop    %r14
    4024:	41 5f                	pop    %r15
    4026:	5d                   	pop    %rbp
    4027:	c3                   	ret    
    4028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    402f:	00 

0000000000004030 <write_objective_value>:
    4030:	41 56                	push   %r14
    4032:	53                   	push   %rbx
    4033:	50                   	push   %rax
    4034:	49 89 f6             	mov    %rsi,%r14
    4037:	48 8d 35 31 43 00 00 	lea    0x4331(%rip),%rsi        # 836f <_IO_stdin_used+0x36f>
    403e:	e8 dd d0 ff ff       	call   1120 <fopen@plt>
    4043:	48 85 c0             	test   %rax,%rax
    4046:	74 2e                	je     4076 <write_objective_value+0x46>
    4048:	48 89 c3             	mov    %rax,%rbx
    404b:	4c 89 f7             	mov    %r14,%rdi
    404e:	e8 8d d5 ff ff       	call   15e0 <flow_cost>
    4053:	48 8d 35 24 43 00 00 	lea    0x4324(%rip),%rsi        # 837e <_IO_stdin_used+0x37e>
    405a:	48 89 df             	mov    %rbx,%rdi
    405d:	b0 01                	mov    $0x1,%al
    405f:	e8 5c d0 ff ff       	call   10c0 <fprintf@plt>
    4064:	48 89 df             	mov    %rbx,%rdi
    4067:	e8 04 d0 ff ff       	call   1070 <fclose@plt>
    406c:	31 c0                	xor    %eax,%eax
    406e:	48 83 c4 08          	add    $0x8,%rsp
    4072:	5b                   	pop    %rbx
    4073:	41 5e                	pop    %r14
    4075:	c3                   	ret    
    4076:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    407d:	48 83 c4 08          	add    $0x8,%rsp
    4081:	5b                   	pop    %rbx
    4082:	41 5e                	pop    %r14
    4084:	c3                   	ret    
    4085:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    408c:	00 00 00 
    408f:	90                   	nop

0000000000004090 <update_tree>:
    4090:	55                   	push   %rbp
    4091:	41 57                	push   %r15
    4093:	41 56                	push   %r14
    4095:	41 55                	push   %r13
    4097:	41 54                	push   %r12
    4099:	53                   	push   %rbx
    409a:	49 89 d6             	mov    %rdx,%r14
    409d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    40a2:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    40a7:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    40ab:	48 85 c0             	test   %rax,%rax
    40ae:	79 05                	jns    40b5 <update_tree+0x25>
    40b0:	4c 39 ca             	cmp    %r9,%rdx
    40b3:	74 0a                	je     40bf <update_tree+0x2f>
    40b5:	48 85 c0             	test   %rax,%rax
    40b8:	7e 11                	jle    40cb <update_tree+0x3b>
    40ba:	4c 39 c2             	cmp    %r8,%rdx
    40bd:	75 0c                	jne    40cb <update_tree+0x3b>
    40bf:	49 89 c2             	mov    %rax,%r10
    40c2:	49 f7 da             	neg    %r10
    40c5:	4c 0f 48 d0          	cmovs  %rax,%r10
    40c9:	eb 0a                	jmp    40d5 <update_tree+0x45>
    40cb:	49 89 c2             	mov    %rax,%r10
    40ce:	49 f7 da             	neg    %r10
    40d1:	4c 0f 49 d0          	cmovns %rax,%r10
    40d5:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
    40da:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
    40df:	4c 89 fa             	mov    %r15,%rdx
    40e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    40e9:	1f 84 00 00 00 00 00 
    40f0:	49 89 d4             	mov    %rdx,%r12
    40f3:	4c 01 12             	add    %r10,(%rdx)
    40f6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    40fa:	48 85 d2             	test   %rdx,%rdx
    40fd:	75 f1                	jne    40f0 <update_tree+0x60>
    40ff:	eb 14                	jmp    4115 <update_tree+0x85>
    4101:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4108:	0f 1f 84 00 00 00 00 
    410f:	00 
    4110:	4d 8b 64 24 18       	mov    0x18(%r12),%r12
    4115:	4d 39 fc             	cmp    %r15,%r12
    4118:	74 0c                	je     4126 <update_tree+0x96>
    411a:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
    411f:	48 85 d2             	test   %rdx,%rdx
    4122:	74 ec                	je     4110 <update_tree+0x80>
    4124:	eb ca                	jmp    40f0 <update_tree+0x60>
    4126:	4d 8b 57 58          	mov    0x58(%r15),%r10
    412a:	4d 39 d8             	cmp    %r11,%r8
    412d:	0f 84 c0 00 00 00    	je     41f3 <update_tree+0x163>
    4133:	4c 89 f0             	mov    %r14,%rax
    4136:	48 f7 d8             	neg    %rax
    4139:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
    413e:	4d 89 d4             	mov    %r10,%r12
    4141:	4c 89 cd             	mov    %r9,%rbp
    4144:	eb 40                	jmp    4186 <update_tree+0xf6>
    4146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    414d:	00 00 00 
    4150:	49 03 50 50          	add    0x50(%r8),%rdx
    4154:	49 8b 40 30          	mov    0x30(%r8),%rax
    4158:	41 89 70 08          	mov    %esi,0x8(%r8)
    415c:	49 89 48 50          	mov    %rcx,0x50(%r8)
    4160:	49 89 58 30          	mov    %rbx,0x30(%r8)
    4164:	4c 89 d1             	mov    %r10,%rcx
    4167:	49 2b 48 58          	sub    0x58(%r8),%rcx
    416b:	4d 89 60 58          	mov    %r12,0x58(%r8)
    416f:	49 89 cc             	mov    %rcx,%r12
    4172:	48 89 ee             	mov    %rbp,%rsi
    4175:	48 89 d1             	mov    %rdx,%rcx
    4178:	4c 89 c5             	mov    %r8,%rbp
    417b:	4d 89 e8             	mov    %r13,%r8
    417e:	48 89 c3             	mov    %rax,%rbx
    4181:	4d 39 dd             	cmp    %r11,%r13
    4184:	74 6d                	je     41f3 <update_tree+0x163>
    4186:	4d 8b 68 18          	mov    0x18(%r8),%r13
    418a:	49 8b 40 20          	mov    0x20(%r8),%rax
    418e:	49 8b 50 28          	mov    0x28(%r8),%rdx
    4192:	48 85 c0             	test   %rax,%rax
    4195:	74 04                	je     419b <update_tree+0x10b>
    4197:	48 89 50 28          	mov    %rdx,0x28(%rax)
    419b:	49 8d 45 10          	lea    0x10(%r13),%rax
    419f:	4c 8d 7a 20          	lea    0x20(%rdx),%r15
    41a3:	48 85 d2             	test   %rdx,%rdx
    41a6:	49 8b 50 20          	mov    0x20(%r8),%rdx
    41aa:	4c 0f 44 f8          	cmove  %rax,%r15
    41ae:	49 89 17             	mov    %rdx,(%r15)
    41b1:	49 89 68 18          	mov    %rbp,0x18(%r8)
    41b5:	48 8b 45 10          	mov    0x10(%rbp),%rax
    41b9:	49 89 40 20          	mov    %rax,0x20(%r8)
    41bd:	48 85 c0             	test   %rax,%rax
    41c0:	74 04                	je     41c6 <update_tree+0x136>
    41c2:	4c 89 40 28          	mov    %r8,0x28(%rax)
    41c6:	4c 89 45 10          	mov    %r8,0x10(%rbp)
    41ca:	49 c7 40 28 00 00 00 	movq   $0x0,0x28(%r8)
    41d1:	00 
    41d2:	31 ed                	xor    %ebp,%ebp
    41d4:	41 83 78 08 00       	cmpl   $0x0,0x8(%r8)
    41d9:	40 0f 94 c5          	sete   %bpl
    41dd:	4c 89 f2             	mov    %r14,%rdx
    41e0:	48 39 fd             	cmp    %rdi,%rbp
    41e3:	0f 84 67 ff ff ff    	je     4150 <update_tree+0xc0>
    41e9:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
    41ee:	e9 5d ff ff ff       	jmp    4150 <update_tree+0xc0>
    41f3:	4c 3b 74 24 60       	cmp    0x60(%rsp),%r14
    41f8:	7e 67                	jle    4261 <update_tree+0x1d1>
    41fa:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    41ff:	49 39 d3             	cmp    %rdx,%r11
    4202:	74 2b                	je     422f <update_tree+0x19f>
    4204:	4c 89 f1             	mov    %r14,%rcx
    4207:	48 f7 d9             	neg    %rcx
    420a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4210:	4d 29 53 58          	sub    %r10,0x58(%r11)
    4214:	49 63 43 08          	movslq 0x8(%r11),%rax
    4218:	48 39 f8             	cmp    %rdi,%rax
    421b:	4c 89 f0             	mov    %r14,%rax
    421e:	48 0f 44 c1          	cmove  %rcx,%rax
    4222:	49 01 43 50          	add    %rax,0x50(%r11)
    4226:	4d 8b 5b 18          	mov    0x18(%r11),%r11
    422a:	49 39 d3             	cmp    %rdx,%r11
    422d:	75 e1                	jne    4210 <update_tree+0x180>
    422f:	49 39 d1             	cmp    %rdx,%r9
    4232:	74 59                	je     428d <update_tree+0x1fd>
    4234:	4c 89 f1             	mov    %r14,%rcx
    4237:	48 f7 d9             	neg    %rcx
    423a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4240:	4d 01 51 58          	add    %r10,0x58(%r9)
    4244:	49 63 41 08          	movslq 0x8(%r9),%rax
    4248:	48 39 f8             	cmp    %rdi,%rax
    424b:	48 89 c8             	mov    %rcx,%rax
    424e:	49 0f 44 c6          	cmove  %r14,%rax
    4252:	49 01 41 50          	add    %rax,0x50(%r9)
    4256:	4d 8b 49 18          	mov    0x18(%r9),%r9
    425a:	49 39 d1             	cmp    %rdx,%r9
    425d:	75 e1                	jne    4240 <update_tree+0x1b0>
    425f:	eb 2c                	jmp    428d <update_tree+0x1fd>
    4261:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    4266:	49 39 c3             	cmp    %rax,%r11
    4269:	74 1d                	je     4288 <update_tree+0x1f8>
    426b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4270:	4d 29 53 58          	sub    %r10,0x58(%r11)
    4274:	4d 8b 5b 18          	mov    0x18(%r11),%r11
    4278:	49 39 c3             	cmp    %rax,%r11
    427b:	75 f3                	jne    4270 <update_tree+0x1e0>
    427d:	eb 09                	jmp    4288 <update_tree+0x1f8>
    427f:	90                   	nop
    4280:	4d 01 51 58          	add    %r10,0x58(%r9)
    4284:	4d 8b 49 18          	mov    0x18(%r9),%r9
    4288:	49 39 c1             	cmp    %rax,%r9
    428b:	75 f3                	jne    4280 <update_tree+0x1f0>
    428d:	5b                   	pop    %rbx
    428e:	41 5c                	pop    %r12
    4290:	41 5d                	pop    %r13
    4292:	41 5e                	pop    %r14
    4294:	41 5f                	pop    %r15
    4296:	5d                   	pop    %rbp
    4297:	c3                   	ret    
    4298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    429f:	00 

00000000000042a0 <primal_iminus>:
    42a0:	31 c0                	xor    %eax,%eax
    42a2:	48 39 ca             	cmp    %rcx,%rdx
    42a5:	0f 84 b6 00 00 00    	je     4361 <primal_iminus+0xc1>
    42ab:	49 89 d1             	mov    %rdx,%r9
    42ae:	48 89 ca             	mov    %rcx,%rdx
    42b1:	eb 1a                	jmp    42cd <primal_iminus+0x2d>
    42b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    42ba:	84 00 00 00 00 00 
    42c0:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    42c4:	49 39 d1             	cmp    %rdx,%r9
    42c7:	0f 84 94 00 00 00    	je     4361 <primal_iminus+0xc1>
    42cd:	49 8b 49 58          	mov    0x58(%r9),%rcx
    42d1:	48 3b 4a 58          	cmp    0x58(%rdx),%rcx
    42d5:	7d 19                	jge    42f0 <primal_iminus+0x50>
    42d7:	41 83 79 08 00       	cmpl   $0x0,0x8(%r9)
    42dc:	74 33                	je     4311 <primal_iminus+0x71>
    42de:	49 8b 49 50          	mov    0x50(%r9),%rcx
    42e2:	48 39 0f             	cmp    %rcx,(%rdi)
    42e5:	7f 43                	jg     432a <primal_iminus+0x8a>
    42e7:	eb 4e                	jmp    4337 <primal_iminus+0x97>
    42e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42f0:	83 7a 08 00          	cmpl   $0x0,0x8(%rdx)
    42f4:	74 4c                	je     4342 <primal_iminus+0xa2>
    42f6:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
    42fa:	48 83 79 18 00       	cmpq   $0x0,0x18(%rcx)
    42ff:	74 bf                	je     42c0 <primal_iminus+0x20>
    4301:	b9 01 00 00 00       	mov    $0x1,%ecx
    4306:	48 2b 4a 50          	sub    0x50(%rdx),%rcx
    430a:	48 39 0f             	cmp    %rcx,(%rdi)
    430d:	7c b1                	jl     42c0 <primal_iminus+0x20>
    430f:	eb 3e                	jmp    434f <primal_iminus+0xaf>
    4311:	49 8b 49 18          	mov    0x18(%r9),%rcx
    4315:	48 83 79 18 00       	cmpq   $0x0,0x18(%rcx)
    431a:	74 1b                	je     4337 <primal_iminus+0x97>
    431c:	b9 01 00 00 00       	mov    $0x1,%ecx
    4321:	49 2b 49 50          	sub    0x50(%r9),%rcx
    4325:	48 39 0f             	cmp    %rcx,(%rdi)
    4328:	7e 0d                	jle    4337 <primal_iminus+0x97>
    432a:	48 89 0f             	mov    %rcx,(%rdi)
    432d:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    4334:	4c 89 c8             	mov    %r9,%rax
    4337:	4d 8b 49 18          	mov    0x18(%r9),%r9
    433b:	49 39 d1             	cmp    %rdx,%r9
    433e:	75 8d                	jne    42cd <primal_iminus+0x2d>
    4340:	eb 1f                	jmp    4361 <primal_iminus+0xc1>
    4342:	48 8b 4a 50          	mov    0x50(%rdx),%rcx
    4346:	48 39 0f             	cmp    %rcx,(%rdi)
    4349:	0f 8c 71 ff ff ff    	jl     42c0 <primal_iminus+0x20>
    434f:	48 89 0f             	mov    %rcx,(%rdi)
    4352:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
    4359:	48 89 d0             	mov    %rdx,%rax
    435c:	e9 5f ff ff ff       	jmp    42c0 <primal_iminus+0x20>
    4361:	49 89 10             	mov    %rdx,(%r8)
    4364:	c3                   	ret    
    4365:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    436c:	00 00 00 
    436f:	90                   	nop

0000000000004370 <primal_update_flow>:
    4370:	48 39 d7             	cmp    %rdx,%rdi
    4373:	74 3c                	je     43b1 <primal_update_flow+0x41>
    4375:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    437c:	00 00 00 00 
    4380:	31 c0                	xor    %eax,%eax
    4382:	83 7f 08 00          	cmpl   $0x0,0x8(%rdi)
    4386:	0f 94 c0             	sete   %al
    4389:	48 89 47 50          	mov    %rax,0x50(%rdi)
    438d:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    4391:	48 39 d7             	cmp    %rdx,%rdi
    4394:	75 ea                	jne    4380 <primal_update_flow+0x10>
    4396:	eb 19                	jmp    43b1 <primal_update_flow+0x41>
    4398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    439f:	00 
    43a0:	31 c0                	xor    %eax,%eax
    43a2:	83 7e 08 00          	cmpl   $0x0,0x8(%rsi)
    43a6:	0f 95 c0             	setne  %al
    43a9:	48 89 46 50          	mov    %rax,0x50(%rsi)
    43ad:	48 8b 76 18          	mov    0x18(%rsi),%rsi
    43b1:	48 39 d6             	cmp    %rdx,%rsi
    43b4:	75 ea                	jne    43a0 <primal_update_flow+0x30>
    43b6:	c3                   	ret    
    43b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    43be:	00 00 

00000000000043c0 <markBaskets>:
    43c0:	55                   	push   %rbp
    43c1:	41 57                	push   %r15
    43c3:	41 56                	push   %r14
    43c5:	41 55                	push   %r13
    43c7:	41 54                	push   %r12
    43c9:	53                   	push   %rbx
    43ca:	48 83 ec 18          	sub    $0x18,%rsp
    43ce:	48 8b 0d f3 5c 00 00 	mov    0x5cf3(%rip),%rcx        # a0c8 <perm_p>
    43d5:	48 83 ff 01          	cmp    $0x1,%rdi
    43d9:	0f 8e c3 00 00 00    	jle    44a2 <markBaskets+0xe2>
    43df:	48 89 fb             	mov    %rdi,%rbx
    43e2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    43e8:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    43ed:	4c 8d 7c 24 08       	lea    0x8(%rsp),%r15
    43f2:	45 31 ed             	xor    %r13d,%r13d
    43f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    43fc:	00 00 00 00 
    4400:	48 8b 01             	mov    (%rcx),%rax
    4403:	48 8b 00             	mov    (%rax),%rax
    4406:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
    440b:	b9 00 00 00 00       	mov    $0x0,%ecx
    4410:	48 0f 48 c1          	cmovs  %rcx,%rax
    4414:	4c 0f 49 e9          	cmovns %rcx,%r13
    4418:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    441d:	48 8b 0d a4 5c 00 00 	mov    0x5ca4(%rip),%rcx        # a0c8 <perm_p>
    4424:	bd 01 00 00 00       	mov    $0x1,%ebp
    4429:	eb 15                	jmp    4440 <markBaskets+0x80>
    442b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4430:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4435:	49 89 ed             	mov    %rbp,%r13
    4438:	48 ff c5             	inc    %rbp
    443b:	48 39 eb             	cmp    %rbp,%rbx
    443e:	74 40                	je     4480 <markBaskets+0xc0>
    4440:	48 8b 04 e9          	mov    (%rcx,%rbp,8),%rax
    4444:	48 8b 00             	mov    (%rax),%rax
    4447:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    444c:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
    4451:	78 e5                	js     4438 <markBaskets+0x78>
    4453:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    4459:	74 d5                	je     4430 <markBaskets+0x70>
    445b:	4c 89 f7             	mov    %r14,%rdi
    445e:	4c 89 fe             	mov    %r15,%rsi
    4461:	e8 ba 07 00 00       	call   4c20 <cost_compare>
    4466:	48 8b 0d 5b 5c 00 00 	mov    0x5c5b(%rip),%rcx        # a0c8 <perm_p>
    446d:	85 c0                	test   %eax,%eax
    446f:	79 c7                	jns    4438 <markBaskets+0x78>
    4471:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4476:	eb b8                	jmp    4430 <markBaskets+0x70>
    4478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    447f:	00 
    4480:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4485:	48 85 c0             	test   %rax,%rax
    4488:	74 6c                	je     44f6 <markBaskets+0x136>
    448a:	4c 89 60 18          	mov    %r12,0x18(%rax)
    448e:	4a 83 04 e9 08       	addq   $0x8,(%rcx,%r13,8)
    4493:	49 ff c4             	inc    %r12
    4496:	49 83 fc 3d          	cmp    $0x3d,%r12
    449a:	0f 85 60 ff ff ff    	jne    4400 <markBaskets+0x40>
    44a0:	eb 54                	jmp    44f6 <markBaskets+0x136>
    44a2:	b8 01 00 00 00       	mov    $0x1,%eax
    44a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    44ae:	00 00 
    44b0:	48 8b 11             	mov    (%rcx),%rdx
    44b3:	48 8b 12             	mov    (%rdx),%rdx
    44b6:	48 83 7a 18 00       	cmpq   $0x0,0x18(%rdx)
    44bb:	78 39                	js     44f6 <markBaskets+0x136>
    44bd:	48 85 d2             	test   %rdx,%rdx
    44c0:	74 34                	je     44f6 <markBaskets+0x136>
    44c2:	48 89 42 18          	mov    %rax,0x18(%rdx)
    44c6:	48 8b 11             	mov    (%rcx),%rdx
    44c9:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    44cd:	48 89 31             	mov    %rsi,(%rcx)
    44d0:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    44d4:	48 83 7a 18 00       	cmpq   $0x0,0x18(%rdx)
    44d9:	78 1b                	js     44f6 <markBaskets+0x136>
    44db:	48 85 d2             	test   %rdx,%rdx
    44de:	74 16                	je     44f6 <markBaskets+0x136>
    44e0:	48 8d 70 01          	lea    0x1(%rax),%rsi
    44e4:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    44e8:	48 83 01 08          	addq   $0x8,(%rcx)
    44ec:	48 83 c0 02          	add    $0x2,%rax
    44f0:	48 83 f8 3d          	cmp    $0x3d,%rax
    44f4:	75 ba                	jne    44b0 <markBaskets+0xf0>
    44f6:	48 83 c4 18          	add    $0x18,%rsp
    44fa:	5b                   	pop    %rbx
    44fb:	41 5c                	pop    %r12
    44fd:	41 5d                	pop    %r13
    44ff:	41 5e                	pop    %r14
    4501:	41 5f                	pop    %r15
    4503:	5d                   	pop    %rbp
    4504:	c3                   	ret    
    4505:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    450c:	00 00 00 00 

0000000000004510 <worker>:
    4510:	55                   	push   %rbp
    4511:	41 57                	push   %r15
    4513:	41 56                	push   %r14
    4515:	41 55                	push   %r13
    4517:	41 54                	push   %r12
    4519:	53                   	push   %rbx
    451a:	48 81 ec f8 7e 00 00 	sub    $0x7ef8,%rsp
    4521:	89 d1                	mov    %edx,%ecx
    4523:	49 89 fe             	mov    %rdi,%r14
    4526:	4c 8b bf a8 01 00 00 	mov    0x1a8(%rdi),%r15
    452d:	4c 8b a7 38 02 00 00 	mov    0x238(%rdi),%r12
    4534:	4c 8b af 40 02 00 00 	mov    0x240(%rdi),%r13
    453b:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    4540:	48 8b 05 89 5b 00 00 	mov    0x5b89(%rip),%rax        # a0d0 <basket_sizes>
    4547:	89 74 24 04          	mov    %esi,0x4(%rsp)
    454b:	48 63 ee             	movslq %esi,%rbp
    454e:	48 c7 04 e8 00 00 00 	movq   $0x0,(%rax,%rbp,8)
    4555:	00 
    4556:	b8 a0 0f 00 00       	mov    $0xfa0,%eax
    455b:	31 d2                	xor    %edx,%edx
    455d:	89 0c 24             	mov    %ecx,(%rsp)
    4560:	f7 f9                	idiv   %ecx
    4562:	83 f8 c5             	cmp    $0xffffffc5,%eax
    4565:	0f 8c c6 00 00 00    	jl     4631 <worker+0x121>
    456b:	8d 88 05 01 00 00    	lea    0x105(%rax),%ecx
    4571:	0f af 4c 24 04       	imul   0x4(%rsp),%ecx
    4576:	ff c1                	inc    %ecx
    4578:	4c 63 c9             	movslq %ecx,%r9
    457b:	48 8b 0d 56 5b 00 00 	mov    0x5b56(%rip),%rcx        # a0d8 <basket>
    4582:	83 c0 3d             	add    $0x3d,%eax
    4585:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
    4589:	ba 01 00 00 00       	mov    $0x1,%edx
    458e:	48 83 ff 04          	cmp    $0x4,%rdi
    4592:	73 05                	jae    4599 <worker+0x89>
    4594:	4c 89 ce             	mov    %r9,%rsi
    4597:	eb 78                	jmp    4611 <worker+0x101>
    4599:	49 89 f8             	mov    %rdi,%r8
    459c:	49 83 e0 fc          	and    $0xfffffffffffffffc,%r8
    45a0:	4b 8d 34 08          	lea    (%r8,%r9,1),%rsi
    45a4:	49 8d 50 01          	lea    0x1(%r8),%rdx
    45a8:	66 49 0f 6e c1       	movq   %r9,%xmm0
    45ad:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
    45b2:	66 0f d4 05 56 3d 00 	paddq  0x3d56(%rip),%xmm0        # 8310 <_IO_stdin_used+0x310>
    45b9:	00 
    45ba:	45 31 c9             	xor    %r9d,%r9d
    45bd:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    45c2:	66 0f 70 c9 44       	pshufd $0x44,%xmm1,%xmm1
    45c7:	66 0f 6f 15 c1 3d 00 	movdqa 0x3dc1(%rip),%xmm2        # 8390 <_IO_stdin_used+0x390>
    45ce:	00 
    45cf:	66 0f 6f 1d 69 3d 00 	movdqa 0x3d69(%rip),%xmm3        # 8340 <_IO_stdin_used+0x340>
    45d6:	00 
    45d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    45de:	00 00 
    45e0:	66 0f 6f e0          	movdqa %xmm0,%xmm4
    45e4:	66 0f 73 f4 05       	psllq  $0x5,%xmm4
    45e9:	66 0f d4 e1          	paddq  %xmm1,%xmm4
    45ed:	f3 42 0f 7f 64 cc 18 	movdqu %xmm4,0x18(%rsp,%r9,8)
    45f4:	66 0f d4 e2          	paddq  %xmm2,%xmm4
    45f8:	f3 42 0f 7f 64 cc 28 	movdqu %xmm4,0x28(%rsp,%r9,8)
    45ff:	49 83 c1 04          	add    $0x4,%r9
    4603:	66 0f d4 c3          	paddq  %xmm3,%xmm0
    4607:	4d 39 c8             	cmp    %r9,%r8
    460a:	75 d4                	jne    45e0 <worker+0xd0>
    460c:	4c 39 c7             	cmp    %r8,%rdi
    460f:	74 20                	je     4631 <worker+0x121>
    4611:	48 c1 e6 05          	shl    $0x5,%rsi
    4615:	48 01 f1             	add    %rsi,%rcx
    4618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    461f:	00 
    4620:	48 89 4c d4 10       	mov    %rcx,0x10(%rsp,%rdx,8)
    4625:	48 ff c2             	inc    %rdx
    4628:	48 83 c1 20          	add    $0x20,%rcx
    462c:	48 39 d0             	cmp    %rdx,%rax
    462f:	75 ef                	jne    4620 <worker+0x110>
    4631:	80 3d a8 5a 00 00 00 	cmpb   $0x0,0x5aa8(%rip)        # a0e0 <opt>
    4638:	74 12                	je     464c <worker+0x13c>
    463a:	48 81 c4 f8 7e 00 00 	add    $0x7ef8,%rsp
    4641:	5b                   	pop    %rbx
    4642:	41 5c                	pop    %r12
    4644:	41 5d                	pop    %r13
    4646:	41 5e                	pop    %r14
    4648:	41 5f                	pop    %r15
    464a:	5d                   	pop    %rbp
    464b:	c3                   	ret    
    464c:	48 63 1c 24          	movslq (%rsp),%rbx
    4650:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
    4655:	0f 85 ef 00 00 00    	jne    474a <worker+0x23a>
    465b:	eb 66                	jmp    46c3 <worker+0x1b3>
    465d:	0f 1f 00             	nopl   (%rax)
    4660:	31 d2                	xor    %edx,%edx
    4662:	f7 34 24             	divl   (%rsp)
    4665:	89 d0                	mov    %edx,%eax
    4667:	4c 89 ff             	mov    %r15,%rdi
    466a:	4c 89 e6             	mov    %r12,%rsi
    466d:	4c 89 ea             	mov    %r13,%rdx
    4670:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    4675:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    467b:	41 ff b6 80 02 00 00 	push   0x280(%r14)
    4682:	53                   	push   %rbx
    4683:	50                   	push   %rax
    4684:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    4689:	50                   	push   %rax
    468a:	e8 d1 05 00 00       	call   4c60 <primal_bea_mpp>
    468f:	48 83 c4 20          	add    $0x20,%rsp
    4693:	48 8b 0d 4e 5a 00 00 	mov    0x5a4e(%rip),%rcx        # a0e8 <opt_basket>
    469a:	48 89 04 e9          	mov    %rax,(%rcx,%rbp,8)
    469e:	48 8b 05 23 5a 00 00 	mov    0x5a23(%rip),%rax        # a0c8 <perm_p>
    46a5:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    46aa:	48 89 0c e8          	mov    %rcx,(%rax,%rbp,8)
    46ae:	48 89 df             	mov    %rbx,%rdi
    46b1:	e8 0a fd ff ff       	call   43c0 <markBaskets>
    46b6:	80 3d 23 5a 00 00 00 	cmpb   $0x0,0x5a23(%rip)        # a0e0 <opt>
    46bd:	0f 85 77 ff ff ff    	jne    463a <worker+0x12a>
    46c3:	48 8b 0d 06 5a 00 00 	mov    0x5a06(%rip),%rcx        # a0d0 <basket_sizes>
    46ca:	49 8b 86 60 02 00 00 	mov    0x260(%r14),%rax
    46d1:	48 01 e8             	add    %rbp,%rax
    46d4:	48 89 c2             	mov    %rax,%rdx
    46d7:	48 09 da             	or     %rbx,%rdx
    46da:	48 c1 ea 20          	shr    $0x20,%rdx
    46de:	74 80                	je     4660 <worker+0x150>
    46e0:	48 99                	cqto   
    46e2:	48 f7 fb             	idiv   %rbx
    46e5:	48 89 d0             	mov    %rdx,%rax
    46e8:	e9 7a ff ff ff       	jmp    4667 <worker+0x157>
    46ed:	0f 1f 00             	nopl   (%rax)
    46f0:	31 d2                	xor    %edx,%edx
    46f2:	f7 34 24             	divl   (%rsp)
    46f5:	89 d0                	mov    %edx,%eax
    46f7:	4c 89 ff             	mov    %r15,%rdi
    46fa:	4c 89 e6             	mov    %r12,%rsi
    46fd:	4c 89 ea             	mov    %r13,%rdx
    4700:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    4705:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    470a:	41 ff b6 80 02 00 00 	push   0x280(%r14)
    4711:	53                   	push   %rbx
    4712:	50                   	push   %rax
    4713:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    4718:	50                   	push   %rax
    4719:	e8 42 05 00 00       	call   4c60 <primal_bea_mpp>
    471e:	48 83 c4 20          	add    $0x20,%rsp
    4722:	48 8b 0d bf 59 00 00 	mov    0x59bf(%rip),%rcx        # a0e8 <opt_basket>
    4729:	48 89 04 e9          	mov    %rax,(%rcx,%rbp,8)
    472d:	48 8b 05 94 59 00 00 	mov    0x5994(%rip),%rax        # a0c8 <perm_p>
    4734:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    4739:	48 89 0c e8          	mov    %rcx,(%rax,%rbp,8)
    473d:	80 3d 9c 59 00 00 01 	cmpb   $0x1,0x599c(%rip)        # a0e0 <opt>
    4744:	0f 84 f0 fe ff ff    	je     463a <worker+0x12a>
    474a:	48 8b 0d 7f 59 00 00 	mov    0x597f(%rip),%rcx        # a0d0 <basket_sizes>
    4751:	49 8b 86 60 02 00 00 	mov    0x260(%r14),%rax
    4758:	48 01 e8             	add    %rbp,%rax
    475b:	48 89 c2             	mov    %rax,%rdx
    475e:	48 09 da             	or     %rbx,%rdx
    4761:	48 c1 ea 20          	shr    $0x20,%rdx
    4765:	74 89                	je     46f0 <worker+0x1e0>
    4767:	48 99                	cqto   
    4769:	48 f7 fb             	idiv   %rbx
    476c:	48 89 d0             	mov    %rdx,%rax
    476f:	eb 86                	jmp    46f7 <worker+0x1e7>
    4771:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4778:	0f 1f 84 00 00 00 00 
    477f:	00 

0000000000004780 <master>:
    4780:	55                   	push   %rbp
    4781:	41 57                	push   %r15
    4783:	41 56                	push   %r14
    4785:	41 55                	push   %r13
    4787:	41 54                	push   %r12
    4789:	53                   	push   %rbx
    478a:	48 81 ec 48 7f 00 00 	sub    $0x7f48,%rsp
    4791:	48 89 fd             	mov    %rdi,%rbp
    4794:	48 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%rax
    479b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    47a0:	48 8b 87 38 02 00 00 	mov    0x238(%rdi),%rax
    47a7:	48 8b 8f 40 02 00 00 	mov    0x240(%rdi),%rcx
    47ae:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    47b3:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    47b8:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    47bd:	48 8b 05 0c 59 00 00 	mov    0x590c(%rip),%rax        # a0d0 <basket_sizes>
    47c4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    47cb:	b8 a0 0f 00 00       	mov    $0xfa0,%eax
    47d0:	31 d2                	xor    %edx,%edx
    47d2:	89 74 24 04          	mov    %esi,0x4(%rsp)
    47d6:	f7 fe                	idiv   %esi
    47d8:	83 f8 c5             	cmp    $0xffffffc5,%eax
    47db:	0f 8c a0 00 00 00    	jl     4881 <master+0x101>
    47e1:	48 8b 0d f0 58 00 00 	mov    0x58f0(%rip),%rcx        # a0d8 <basket>
    47e8:	83 c0 3d             	add    $0x3d,%eax
    47eb:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    47ef:	ba 01 00 00 00       	mov    $0x1,%edx
    47f4:	48 83 fe 04          	cmp    $0x4,%rsi
    47f8:	72 67                	jb     4861 <master+0xe1>
    47fa:	48 89 f7             	mov    %rsi,%rdi
    47fd:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    4801:	48 8d 57 01          	lea    0x1(%rdi),%rdx
    4805:	66 0f 6f 05 93 3b 00 	movdqa 0x3b93(%rip),%xmm0        # 83a0 <_IO_stdin_used+0x3a0>
    480c:	00 
    480d:	45 31 c0             	xor    %r8d,%r8d
    4810:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    4815:	66 0f 70 c9 44       	pshufd $0x44,%xmm1,%xmm1
    481a:	66 0f 6f 15 6e 3b 00 	movdqa 0x3b6e(%rip),%xmm2        # 8390 <_IO_stdin_used+0x390>
    4821:	00 
    4822:	66 0f 6f 1d 16 3b 00 	movdqa 0x3b16(%rip),%xmm3        # 8340 <_IO_stdin_used+0x340>
    4829:	00 
    482a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4830:	66 0f 6f e0          	movdqa %xmm0,%xmm4
    4834:	66 0f 73 f4 05       	psllq  $0x5,%xmm4
    4839:	66 0f d4 e1          	paddq  %xmm1,%xmm4
    483d:	f3 42 0f 7f 64 c4 68 	movdqu %xmm4,0x68(%rsp,%r8,8)
    4844:	66 0f d4 e2          	paddq  %xmm2,%xmm4
    4848:	f3 42 0f 7f 64 c4 78 	movdqu %xmm4,0x78(%rsp,%r8,8)
    484f:	49 83 c0 04          	add    $0x4,%r8
    4853:	66 0f d4 c3          	paddq  %xmm3,%xmm0
    4857:	4c 39 c7             	cmp    %r8,%rdi
    485a:	75 d4                	jne    4830 <master+0xb0>
    485c:	48 39 fe             	cmp    %rdi,%rsi
    485f:	74 20                	je     4881 <master+0x101>
    4861:	48 89 d6             	mov    %rdx,%rsi
    4864:	48 c1 e6 05          	shl    $0x5,%rsi
    4868:	48 01 f1             	add    %rsi,%rcx
    486b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4870:	48 89 4c d4 60       	mov    %rcx,0x60(%rsp,%rdx,8)
    4875:	48 ff c2             	inc    %rdx
    4878:	48 83 c1 20          	add    $0x20,%rcx
    487c:	48 39 d0             	cmp    %rdx,%rax
    487f:	75 ef                	jne    4870 <master+0xf0>
    4881:	80 3d 58 58 00 00 00 	cmpb   $0x0,0x5858(%rip)        # a0e0 <opt>
    4888:	0f 85 53 02 00 00    	jne    4ae1 <master+0x361>
    488e:	4c 63 6c 24 04       	movslq 0x4(%rsp),%r13
    4893:	4c 8d 7c 24 08       	lea    0x8(%rsp),%r15
    4898:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
    489d:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
    48a2:	e9 9e 00 00 00       	jmp    4945 <master+0x1c5>
    48a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    48ae:	00 00 
    48b0:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    48b5:	31 ff                	xor    %edi,%edi
    48b7:	48 85 c9             	test   %rcx,%rcx
    48ba:	40 0f 94 c7          	sete   %dil
    48be:	4d 89 e1             	mov    %r12,%r9
    48c1:	4d 0f 44 cd          	cmove  %r13,%r9
    48c5:	4d 0f 44 ec          	cmove  %r12,%r13
    48c9:	48 63 50 08          	movslq 0x8(%rax),%rdx
    48cd:	45 31 e4             	xor    %r12d,%r12d
    48d0:	48 39 d1             	cmp    %rdx,%rcx
    48d3:	41 0f 94 c4          	sete   %r12b
    48d7:	41 ff c4             	inc    %r12d
    48da:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    48df:	b9 01 00 00 00       	mov    $0x1,%ecx
    48e4:	48 29 d1             	sub    %rdx,%rcx
    48e7:	4d 85 f6             	test   %r14,%r14
    48ea:	48 8b 70 30          	mov    0x30(%rax),%rsi
    48ee:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    48f3:	48 0f 4e ca          	cmovle %rdx,%rcx
    48f7:	31 f6                	xor    %esi,%esi
    48f9:	4c 39 6b 10          	cmp    %r13,0x10(%rbx)
    48fd:	40 0f 94 c6          	sete   %sil
    4901:	4d 89 e8             	mov    %r13,%r8
    4904:	ff b5 00 02 00 00    	push   0x200(%rbp)
    490a:	41 56                	push   %r14
    490c:	53                   	push   %rbx
    490d:	ff 74 24 30          	push   0x30(%rsp)
    4911:	ff 70 18             	push   0x18(%rax)
    4914:	50                   	push   %rax
    4915:	e8 76 f7 ff ff       	call   4090 <update_tree>
    491a:	48 83 c4 30          	add    $0x30,%rsp
    491e:	66 c7 43 20 00 00    	movw   $0x0,0x20(%rbx)
    4924:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    4929:	66 44 89 60 20       	mov    %r12w,0x20(%rax)
    492e:	80 3d ab 57 00 00 01 	cmpb   $0x1,0x57ab(%rip)        # a0e0 <opt>
    4935:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    493a:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
    493f:	0f 84 9c 01 00 00    	je     4ae1 <master+0x361>
    4945:	48 8b 0d 84 57 00 00 	mov    0x5784(%rip),%rcx        # a0d0 <basket_sizes>
    494c:	48 8b 85 60 02 00 00 	mov    0x260(%rbp),%rax
    4953:	48 89 c2             	mov    %rax,%rdx
    4956:	4c 09 ea             	or     %r13,%rdx
    4959:	48 c1 ea 20          	shr    $0x20,%rdx
    495d:	74 11                	je     4970 <master+0x1f0>
    495f:	48 99                	cqto   
    4961:	49 f7 fd             	idiv   %r13
    4964:	48 89 d0             	mov    %rdx,%rax
    4967:	eb 0f                	jmp    4978 <master+0x1f8>
    4969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4970:	31 d2                	xor    %edx,%edx
    4972:	f7 74 24 04          	divl   0x4(%rsp)
    4976:	89 d0                	mov    %edx,%eax
    4978:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    497d:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    4982:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    4987:	4c 8d 44 24 60       	lea    0x60(%rsp),%r8
    498c:	45 31 c9             	xor    %r9d,%r9d
    498f:	ff b5 80 02 00 00    	push   0x280(%rbp)
    4995:	41 55                	push   %r13
    4997:	50                   	push   %rax
    4998:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
    499d:	50                   	push   %rax
    499e:	e8 bd 02 00 00       	call   4c60 <primal_bea_mpp>
    49a3:	48 83 c4 20          	add    $0x20,%rsp
    49a7:	48 8b 3d 3a 57 00 00 	mov    0x573a(%rip),%rdi        # a0e8 <opt_basket>
    49ae:	48 89 07             	mov    %rax,(%rdi)
    49b1:	48 8b 05 10 57 00 00 	mov    0x5710(%rip),%rax        # a0c8 <perm_p>
    49b8:	48 8d 4c 24 68       	lea    0x68(%rsp),%rcx
    49bd:	48 89 08             	mov    %rcx,(%rax)
    49c0:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    49c7:	00 00 
    49c9:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    49ce:	0f 8e 06 01 00 00    	jle    4ada <master+0x35a>
    49d4:	4c 89 eb             	mov    %r13,%rbx
    49d7:	45 31 f6             	xor    %r14d,%r14d
    49da:	31 c0                	xor    %eax,%eax
    49dc:	eb 1a                	jmp    49f8 <master+0x278>
    49de:	66 90                	xchg   %ax,%ax
    49e0:	48 85 c9             	test   %rcx,%rcx
    49e3:	74 05                	je     49ea <master+0x26a>
    49e5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    49ea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    49ef:	49 83 c6 08          	add    $0x8,%r14
    49f3:	48 ff cb             	dec    %rbx
    49f6:	74 38                	je     4a30 <master+0x2b0>
    49f8:	4a 8b 0c 37          	mov    (%rdi,%r14,1),%rcx
    49fc:	48 85 c0             	test   %rax,%rax
    49ff:	74 df                	je     49e0 <master+0x260>
    4a01:	48 85 c9             	test   %rcx,%rcx
    4a04:	74 e4                	je     49ea <master+0x26a>
    4a06:	4c 01 f7             	add    %r14,%rdi
    4a09:	4c 89 fe             	mov    %r15,%rsi
    4a0c:	e8 0f 02 00 00       	call   4c20 <cost_compare>
    4a11:	48 8b 3d d0 56 00 00 	mov    0x56d0(%rip),%rdi        # a0e8 <opt_basket>
    4a18:	85 c0                	test   %eax,%eax
    4a1a:	79 ce                	jns    49ea <master+0x26a>
    4a1c:	4a 8b 0c 37          	mov    (%rdi,%r14,1),%rcx
    4a20:	eb c3                	jmp    49e5 <master+0x265>
    4a22:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4a29:	1f 84 00 00 00 00 00 
    4a30:	48 85 c0             	test   %rax,%rax
    4a33:	0f 84 a1 00 00 00    	je     4ada <master+0x35a>
    4a39:	48 8b 18             	mov    (%rax),%rbx
    4a3c:	4c 8b 70 08          	mov    0x8(%rax),%r14
    4a40:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
    4a45:	75 08                	jne    4a4f <master+0x2cf>
    4a47:	4c 89 ef             	mov    %r13,%rdi
    4a4a:	e8 71 f9 ff ff       	call   43c0 <markBaskets>
    4a4f:	4d 85 f6             	test   %r14,%r14
    4a52:	0f 84 82 00 00 00    	je     4ada <master+0x35a>
    4a58:	48 ff 85 60 02 00 00 	incq   0x260(%rbp)
    4a5f:	31 c0                	xor    %eax,%eax
    4a61:	31 c9                	xor    %ecx,%ecx
    4a63:	4d 85 f6             	test   %r14,%r14
    4a66:	0f 9f c0             	setg   %al
    4a69:	0f 9e c1             	setle  %cl
    4a6c:	4c 8b 64 c3 10       	mov    0x10(%rbx,%rax,8),%r12
    4a71:	4c 8b 6c cb 10       	mov    0x10(%rbx,%rcx,8),%r13
    4a76:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
    4a7d:	00 00 
    4a7f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    4a84:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
    4a89:	4c 89 e2             	mov    %r12,%rdx
    4a8c:	4c 89 e9             	mov    %r13,%rcx
    4a8f:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    4a94:	e8 07 f8 ff ff       	call   42a0 <primal_iminus>
    4a99:	48 85 c0             	test   %rax,%rax
    4a9c:	0f 85 0e fe ff ff    	jne    48b0 <master+0x130>
    4aa2:	48 ff 85 68 02 00 00 	incq   0x268(%rbp)
    4aa9:	31 c0                	xor    %eax,%eax
    4aab:	66 83 7b 20 02       	cmpw   $0x2,0x20(%rbx)
    4ab0:	0f 95 c0             	setne  %al
    4ab3:	ff c0                	inc    %eax
    4ab5:	66 89 43 20          	mov    %ax,0x20(%rbx)
    4ab9:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    4abf:	0f 84 69 fe ff ff    	je     492e <master+0x1ae>
    4ac5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4aca:	4c 89 e7             	mov    %r12,%rdi
    4acd:	4c 89 ee             	mov    %r13,%rsi
    4ad0:	e8 9b f8 ff ff       	call   4370 <primal_update_flow>
    4ad5:	e9 54 fe ff ff       	jmp    492e <master+0x1ae>
    4ada:	c6 05 ff 55 00 00 01 	movb   $0x1,0x55ff(%rip)        # a0e0 <opt>
    4ae1:	48 81 c4 48 7f 00 00 	add    $0x7f48,%rsp
    4ae8:	5b                   	pop    %rbx
    4ae9:	41 5c                	pop    %r12
    4aeb:	41 5d                	pop    %r13
    4aed:	41 5e                	pop    %r14
    4aef:	41 5f                	pop    %r15
    4af1:	5d                   	pop    %rbp
    4af2:	c3                   	ret    
    4af3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4afa:	84 00 00 00 00 00 

0000000000004b00 <primal_net_simplex>:
    4b00:	53                   	push   %rbx
    4b01:	48 89 fb             	mov    %rdi,%rbx
    4b04:	bf 01 00 00 00       	mov    $0x1,%edi
    4b09:	be 08 00 00 00       	mov    $0x8,%esi
    4b0e:	e8 9d c5 ff ff       	call   10b0 <calloc@plt>
    4b13:	48 89 05 ae 55 00 00 	mov    %rax,0x55ae(%rip)        # a0c8 <perm_p>
    4b1a:	bf 01 00 00 00       	mov    $0x1,%edi
    4b1f:	be 08 00 00 00       	mov    $0x8,%esi
    4b24:	e8 87 c5 ff ff       	call   10b0 <calloc@plt>
    4b29:	48 89 05 b8 55 00 00 	mov    %rax,0x55b8(%rip)        # a0e8 <opt_basket>
    4b30:	bf 01 00 00 00       	mov    $0x1,%edi
    4b35:	be 08 00 00 00       	mov    $0x8,%esi
    4b3a:	e8 71 c5 ff ff       	call   10b0 <calloc@plt>
    4b3f:	48 89 05 8a 55 00 00 	mov    %rax,0x558a(%rip)        # a0d0 <basket_sizes>
    4b46:	bf a5 10 00 00       	mov    $0x10a5,%edi
    4b4b:	be 20 00 00 00       	mov    $0x20,%esi
    4b50:	e8 5b c5 ff ff       	call   10b0 <calloc@plt>
    4b55:	48 89 05 7c 55 00 00 	mov    %rax,0x557c(%rip)        # a0d8 <basket>
    4b5c:	48 8b b3 38 02 00 00 	mov    0x238(%rbx),%rsi
    4b63:	48 89 df             	mov    %rbx,%rdi
    4b66:	e8 65 00 00 00       	call   4bd0 <set_static_vars>
    4b6b:	48 89 df             	mov    %rbx,%rdi
    4b6e:	be 01 00 00 00       	mov    $0x1,%esi
    4b73:	e8 08 fc ff ff       	call   4780 <master>
    4b78:	48 89 df             	mov    %rbx,%rdi
    4b7b:	e8 30 cd ff ff       	call   18b0 <primal_feasible>
    4b80:	48 89 df             	mov    %rbx,%rdi
    4b83:	e8 38 ce ff ff       	call   19c0 <dual_feasible>
    4b88:	c6 05 51 55 00 00 00 	movb   $0x0,0x5551(%rip)        # a0e0 <opt>
    4b8f:	48 8b 3d 32 55 00 00 	mov    0x5532(%rip),%rdi        # a0c8 <perm_p>
    4b96:	e8 95 c4 ff ff       	call   1030 <free@plt>
    4b9b:	48 8b 3d 46 55 00 00 	mov    0x5546(%rip),%rdi        # a0e8 <opt_basket>
    4ba2:	e8 89 c4 ff ff       	call   1030 <free@plt>
    4ba7:	48 8b 3d 22 55 00 00 	mov    0x5522(%rip),%rdi        # a0d0 <basket_sizes>
    4bae:	e8 7d c4 ff ff       	call   1030 <free@plt>
    4bb3:	48 8b 3d 1e 55 00 00 	mov    0x551e(%rip),%rdi        # a0d8 <basket>
    4bba:	e8 71 c4 ff ff       	call   1030 <free@plt>
    4bbf:	31 c0                	xor    %eax,%eax
    4bc1:	5b                   	pop    %rbx
    4bc2:	c3                   	ret    
    4bc3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4bca:	00 00 00 
    4bcd:	0f 1f 00             	nopl   (%rax)

0000000000004bd0 <set_static_vars>:
    4bd0:	48 8b 87 80 02 00 00 	mov    0x280(%rdi),%rax
    4bd7:	48 0f af 87 78 02 00 	imul   0x278(%rdi),%rax
    4bde:	00 
    4bdf:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
    4be3:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    4be7:	48 89 05 02 55 00 00 	mov    %rax,0x5502(%rip)        # a0f0 <full_group_end_arc>
    4bee:	c3                   	ret    
    4bef:	90                   	nop

0000000000004bf0 <bea_is_dual_infeasible>:
    4bf0:	48 85 f6             	test   %rsi,%rsi
    4bf3:	78 10                	js     4c05 <bea_is_dual_infeasible+0x15>
    4bf5:	66 b9 02 00          	mov    $0x2,%cx
    4bf9:	74 18                	je     4c13 <bea_is_dual_infeasible+0x23>
    4bfb:	31 c0                	xor    %eax,%eax
    4bfd:	66 39 4f 20          	cmp    %cx,0x20(%rdi)
    4c01:	0f 94 c0             	sete   %al
    4c04:	c3                   	ret    
    4c05:	66 b9 01 00          	mov    $0x1,%cx
    4c09:	31 c0                	xor    %eax,%eax
    4c0b:	66 39 4f 20          	cmp    %cx,0x20(%rdi)
    4c0f:	0f 94 c0             	sete   %al
    4c12:	c3                   	ret    
    4c13:	31 c0                	xor    %eax,%eax
    4c15:	c3                   	ret    
    4c16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4c1d:	00 00 00 

0000000000004c20 <cost_compare>:
    4c20:	48 8b 17             	mov    (%rdi),%rdx
    4c23:	48 8b 0e             	mov    (%rsi),%rcx
    4c26:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    4c2a:	b8 01 00 00 00       	mov    $0x1,%eax
    4c2f:	48 39 72 10          	cmp    %rsi,0x10(%rdx)
    4c33:	7c 1d                	jl     4c52 <cost_compare+0x32>
    4c35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4c3a:	7f 16                	jg     4c52 <cost_compare+0x32>
    4c3c:	48 8b 02             	mov    (%rdx),%rax
    4c3f:	8b 00                	mov    (%rax),%eax
    4c41:	48 8b 09             	mov    (%rcx),%rcx
    4c44:	31 d2                	xor    %edx,%edx
    4c46:	3b 01                	cmp    (%rcx),%eax
    4c48:	0f 9f c2             	setg   %dl
    4c4b:	8d 04 55 ff ff ff ff 	lea    -0x1(,%rdx,2),%eax
    4c52:	c3                   	ret    
    4c53:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4c5a:	84 00 00 00 00 00 

0000000000004c60 <primal_bea_mpp>:
    4c60:	55                   	push   %rbp
    4c61:	41 57                	push   %r15
    4c63:	41 56                	push   %r14
    4c65:	41 55                	push   %r13
    4c67:	41 54                	push   %r12
    4c69:	53                   	push   %rbx
    4c6a:	48 83 ec 18          	sub    $0x18,%rsp
    4c6e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    4c73:	48 89 34 24          	mov    %rsi,(%rsp)
    4c77:	4c 8b 64 24 68       	mov    0x68(%rsp),%r12
    4c7c:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    4c81:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    4c86:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
    4c8b:	49 63 c1             	movslq %r9d,%rax
    4c8e:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    4c94:	45 31 c9             	xor    %r9d,%r9d
    4c97:	eb 44                	jmp    4cdd <primal_bea_mpp+0x7d>
    4c99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4ca0:	4b 8b 74 c8 08       	mov    0x8(%r8,%r9,8),%rsi
    4ca5:	48 89 1e             	mov    %rbx,(%rsi)
    4ca8:	4b 8b 74 c8 08       	mov    0x8(%r8,%r9,8),%rsi
    4cad:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    4cb1:	48 89 d6             	mov    %rdx,%rsi
    4cb4:	48 f7 de             	neg    %rsi
    4cb7:	48 0f 48 f2          	cmovs  %rdx,%rsi
    4cbb:	4b 8b 54 c8 08       	mov    0x8(%r8,%r9,8),%rdx
    4cc0:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    4cc4:	4b 8b 54 c8 08       	mov    0x8(%r8,%r9,8),%rdx
    4cc9:	49 ff c1             	inc    %r9
    4ccc:	48 c7 42 18 00 00 00 	movq   $0x0,0x18(%rdx)
    4cd3:	00 
    4cd4:	49 ff c3             	inc    %r11
    4cd7:	49 83 fb 3d          	cmp    $0x3d,%r11
    4cdb:	74 50                	je     4d2d <primal_bea_mpp+0xcd>
    4cdd:	4c 3b 1c c1          	cmp    (%rcx,%rax,8),%r11
    4ce1:	7f 4a                	jg     4d2d <primal_bea_mpp+0xcd>
    4ce3:	4b 8b 14 d8          	mov    (%r8,%r11,8),%rdx
    4ce7:	48 83 7a 18 00       	cmpq   $0x0,0x18(%rdx)
    4cec:	7e e6                	jle    4cd4 <primal_bea_mpp+0x74>
    4cee:	48 8b 1a             	mov    (%rdx),%rbx
    4cf1:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    4cf5:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    4cf9:	48 2b 16             	sub    (%rsi),%rdx
    4cfc:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    4d00:	48 03 16             	add    (%rsi),%rdx
    4d03:	48 85 d2             	test   %rdx,%rdx
    4d06:	78 18                	js     4d20 <primal_bea_mpp+0xc0>
    4d08:	74 ca                	je     4cd4 <primal_bea_mpp+0x74>
    4d0a:	66 83 7b 20 02       	cmpw   $0x2,0x20(%rbx)
    4d0f:	74 8f                	je     4ca0 <primal_bea_mpp+0x40>
    4d11:	eb c1                	jmp    4cd4 <primal_bea_mpp+0x74>
    4d13:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4d1a:	84 00 00 00 00 00 
    4d20:	66 83 7b 20 01       	cmpw   $0x1,0x20(%rbx)
    4d25:	0f 84 75 ff ff ff    	je     4ca0 <primal_bea_mpp+0x40>
    4d2b:	eb a7                	jmp    4cd4 <primal_bea_mpp+0x74>
    4d2d:	4c 89 0c c1          	mov    %r9,(%rcx,%rax,8)
    4d31:	4d 8b 0a             	mov    (%r10),%r9
    4d34:	48 8b 15 b5 53 00 00 	mov    0x53b5(%rip),%rdx        # a0f0 <full_group_end_arc>
    4d3b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    4d40:	48 bb fc ff ff ff ff 	movabs $0x7ffffffffffffffc,%rbx
    4d47:	ff ff 7f 
    4d4a:	48 21 fb             	and    %rdi,%rbx
    4d4d:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    4d54:	00 
    4d55:	4c 8d 34 d2          	lea    (%rdx,%rdx,8),%r14
    4d59:	4f 8d 3c ff          	lea    (%r15,%r15,8),%r15
    4d5d:	4f 8d 24 e4          	lea    (%r12,%r12,8),%r12
    4d61:	4d 89 cd             	mov    %r9,%r13
    4d64:	eb 17                	jmp    4d7d <primal_bea_mpp+0x11d>
    4d66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4d6d:	00 00 00 
    4d70:	45 31 db             	xor    %r11d,%r11d
    4d73:	49 83 fb 3c          	cmp    $0x3c,%r11
    4d77:	0f 8d 64 01 00 00    	jge    4ee1 <primal_bea_mpp+0x281>
    4d7d:	4a 8d 2c fd 00 00 00 	lea    0x0(,%r15,8),%rbp
    4d84:	00 
    4d85:	4c 01 ed             	add    %r13,%rbp
    4d88:	4c 3b 6c 24 08       	cmp    0x8(%rsp),%r13
    4d8d:	4b 8d 54 e5 00       	lea    0x0(%r13,%r12,8),%rdx
    4d92:	be 00 00 00 00       	mov    $0x0,%esi
    4d97:	48 83 d6 ff          	adc    $0xffffffffffffffff,%rsi
    4d9b:	48 8d 34 f6          	lea    (%rsi,%rsi,8),%rsi
    4d9f:	4c 8d 2c f2          	lea    (%rdx,%rsi,8),%r13
    4da3:	4d 89 2a             	mov    %r13,(%r10)
    4da6:	eb 0b                	jmp    4db3 <primal_bea_mpp+0x153>
    4da8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4daf:	00 
    4db0:	4c 01 f5             	add    %r14,%rbp
    4db3:	4c 39 ed             	cmp    %r13,%rbp
    4db6:	0f 83 94 00 00 00    	jae    4e50 <primal_bea_mpp+0x1f0>
    4dbc:	0f b7 55 20          	movzwl 0x20(%rbp),%edx
    4dc0:	66 85 d2             	test   %dx,%dx
    4dc3:	7e eb                	jle    4db0 <primal_bea_mpp+0x150>
    4dc5:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
    4dc9:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    4dcd:	4c 2b 1e             	sub    (%rsi),%r11
    4dd0:	48 8b 75 18          	mov    0x18(%rbp),%rsi
    4dd4:	4c 03 1e             	add    (%rsi),%r11
    4dd7:	78 17                	js     4df0 <primal_bea_mpp+0x190>
    4dd9:	66 be 02 00          	mov    $0x2,%si
    4ddd:	74 d1                	je     4db0 <primal_bea_mpp+0x150>
    4ddf:	66 39 f2             	cmp    %si,%dx
    4de2:	75 cc                	jne    4db0 <primal_bea_mpp+0x150>
    4de4:	eb 13                	jmp    4df9 <primal_bea_mpp+0x199>
    4de6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4ded:	00 00 00 
    4df0:	66 be 01 00          	mov    $0x1,%si
    4df4:	66 39 f2             	cmp    %si,%dx
    4df7:	75 b7                	jne    4db0 <primal_bea_mpp+0x150>
    4df9:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
    4dfd:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4e01:	48 89 34 c1          	mov    %rsi,(%rcx,%rax,8)
    4e05:	49 8b 54 d0 08       	mov    0x8(%r8,%rdx,8),%rdx
    4e0a:	48 89 2a             	mov    %rbp,(%rdx)
    4e0d:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
    4e11:	49 8b 14 d0          	mov    (%r8,%rdx,8),%rdx
    4e15:	4c 89 de             	mov    %r11,%rsi
    4e18:	48 f7 de             	neg    %rsi
    4e1b:	49 0f 48 f3          	cmovs  %r11,%rsi
    4e1f:	4c 89 5a 08          	mov    %r11,0x8(%rdx)
    4e23:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
    4e27:	49 8b 14 d0          	mov    (%r8,%rdx,8),%rdx
    4e2b:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    4e2f:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
    4e33:	49 8b 14 d0          	mov    (%r8,%rdx,8),%rdx
    4e37:	48 c7 42 18 00 00 00 	movq   $0x0,0x18(%rdx)
    4e3e:	00 
    4e3f:	4d 8b 2a             	mov    (%r10),%r13
    4e42:	e9 69 ff ff ff       	jmp    4db0 <primal_bea_mpp+0x150>
    4e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4e4e:	00 00 
    4e50:	4c 3b 6c 24 10       	cmp    0x10(%rsp),%r13
    4e55:	72 07                	jb     4e5e <primal_bea_mpp+0x1fe>
    4e57:	4c 8b 2c 24          	mov    (%rsp),%r13
    4e5b:	4d 89 2a             	mov    %r13,(%r10)
    4e5e:	4d 39 cd             	cmp    %r9,%r13
    4e61:	74 7e                	je     4ee1 <primal_bea_mpp+0x281>
    4e63:	48 85 ff             	test   %rdi,%rdi
    4e66:	0f 8e 04 ff ff ff    	jle    4d70 <primal_bea_mpp+0x110>
    4e6c:	48 83 ff 04          	cmp    $0x4,%rdi
    4e70:	73 0e                	jae    4e80 <primal_bea_mpp+0x220>
    4e72:	45 31 db             	xor    %r11d,%r11d
    4e75:	31 ed                	xor    %ebp,%ebp
    4e77:	eb 57                	jmp    4ed0 <primal_bea_mpp+0x270>
    4e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4e80:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e84:	31 d2                	xor    %edx,%edx
    4e86:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4e90:	f3 0f 6f 14 d1       	movdqu (%rcx,%rdx,8),%xmm2
    4e95:	66 0f d4 c2          	paddq  %xmm2,%xmm0
    4e99:	f3 0f 6f 54 d1 10    	movdqu 0x10(%rcx,%rdx,8),%xmm2
    4e9f:	66 0f d4 ca          	paddq  %xmm2,%xmm1
    4ea3:	48 83 c2 04          	add    $0x4,%rdx
    4ea7:	48 39 d3             	cmp    %rdx,%rbx
    4eaa:	75 e4                	jne    4e90 <primal_bea_mpp+0x230>
    4eac:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    4eb0:	66 0f 70 c1 ee       	pshufd $0xee,%xmm1,%xmm0
    4eb5:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    4eb9:	66 49 0f 7e c3       	movq   %xmm0,%r11
    4ebe:	48 89 dd             	mov    %rbx,%rbp
    4ec1:	48 39 fb             	cmp    %rdi,%rbx
    4ec4:	0f 84 a9 fe ff ff    	je     4d73 <primal_bea_mpp+0x113>
    4eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4ed0:	4c 03 1c e9          	add    (%rcx,%rbp,8),%r11
    4ed4:	48 ff c5             	inc    %rbp
    4ed7:	48 39 ef             	cmp    %rbp,%rdi
    4eda:	75 f4                	jne    4ed0 <primal_bea_mpp+0x270>
    4edc:	e9 92 fe ff ff       	jmp    4d73 <primal_bea_mpp+0x113>
    4ee1:	48 8b 14 c1          	mov    (%rcx,%rax,8),%rdx
    4ee5:	49 8b 54 d0 08       	mov    0x8(%r8,%rdx,8),%rdx
    4eea:	48 c7 42 18 ff ff ff 	movq   $0xffffffffffffffff,0x18(%rdx)
    4ef1:	ff 
    4ef2:	48 8b 34 c1          	mov    (%rcx,%rax,8),%rsi
    4ef6:	48 85 f6             	test   %rsi,%rsi
    4ef9:	74 1e                	je     4f19 <primal_bea_mpp+0x2b9>
    4efb:	49 8d 78 08          	lea    0x8(%r8),%rdi
    4eff:	48 8d 0d 1a fd ff ff 	lea    -0x2e6(%rip),%rcx        # 4c20 <cost_compare>
    4f06:	ba 08 00 00 00       	mov    $0x8,%edx
    4f0b:	4c 89 c3             	mov    %r8,%rbx
    4f0e:	e8 1d 00 00 00       	call   4f30 <spec_qsort>
    4f13:	48 8b 43 08          	mov    0x8(%rbx),%rax
    4f17:	eb 02                	jmp    4f1b <primal_bea_mpp+0x2bb>
    4f19:	31 c0                	xor    %eax,%eax
    4f1b:	48 83 c4 18          	add    $0x18,%rsp
    4f1f:	5b                   	pop    %rbx
    4f20:	41 5c                	pop    %r12
    4f22:	41 5d                	pop    %r13
    4f24:	41 5e                	pop    %r14
    4f26:	41 5f                	pop    %r15
    4f28:	5d                   	pop    %rbp
    4f29:	c3                   	ret    
    4f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004f30 <spec_qsort>:
    4f30:	55                   	push   %rbp
    4f31:	41 57                	push   %r15
    4f33:	41 56                	push   %r14
    4f35:	41 55                	push   %r13
    4f37:	41 54                	push   %r12
    4f39:	53                   	push   %rbx
    4f3a:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    4f41:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    4f46:	49 89 d4             	mov    %rdx,%r12
    4f49:	49 89 f7             	mov    %rsi,%r15
    4f4c:	49 89 fb             	mov    %rdi,%r11
    4f4f:	48 89 d0             	mov    %rdx,%rax
    4f52:	48 f7 d8             	neg    %rax
    4f55:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    4f5a:	31 c9                	xor    %ecx,%ecx
    4f5c:	48 83 fa 08          	cmp    $0x8,%rdx
    4f60:	0f 95 c1             	setne  %cl
    4f63:	31 d2                	xor    %edx,%edx
    4f65:	49 83 fc 04          	cmp    $0x4,%r12
    4f69:	0f 95 c2             	setne  %dl
    4f6c:	48 89 f8             	mov    %rdi,%rax
    4f6f:	4c 09 e0             	or     %r12,%rax
    4f72:	a8 07                	test   $0x7,%al
    4f74:	0f 94 44 24 40       	sete   0x40(%rsp)
    4f79:	be 02 00 00 00       	mov    $0x2,%esi
    4f7e:	bf 02 00 00 00       	mov    $0x2,%edi
    4f83:	89 8c 24 04 01 00 00 	mov    %ecx,0x104(%rsp)
    4f8a:	0f 44 f9             	cmove  %ecx,%edi
    4f8d:	89 7c 24 58          	mov    %edi,0x58(%rsp)
    4f91:	a8 03                	test   $0x3,%al
    4f93:	0f 94 84 24 80 00 00 	sete   0x80(%rsp)
    4f9a:	00 
    4f9b:	89 94 24 00 01 00 00 	mov    %edx,0x100(%rsp)
    4fa2:	0f 44 f2             	cmove  %edx,%esi
    4fa5:	89 74 24 30          	mov    %esi,0x30(%rsp)
    4fa9:	49 83 ff 07          	cmp    $0x7,%r15
    4fad:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
    4fb2:	0f 83 3f 02 00 00    	jae    51f7 <spec_qsort+0x2c7>
    4fb8:	4c 89 d9             	mov    %r11,%rcx
    4fbb:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    4fc0:	4d 0f af fc          	imul   %r12,%r15
    4fc4:	4d 39 e7             	cmp    %r12,%r15
    4fc7:	0f 8e 2b 2a 00 00    	jle    79f8 <spec_qsort+0x2ac8>
    4fcd:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    4fd2:	4d 01 f7             	add    %r14,%r15
    4fd5:	4c 89 bc 24 b0 00 00 	mov    %r15,0xb0(%rsp)
    4fdc:	00 
    4fdd:	4b 8d 0c 26          	lea    (%r14,%r12,1),%rcx
    4fe1:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    4fe6:	0f 84 0b 1f 00 00    	je     6ef7 <spec_qsort+0x1fc7>
    4fec:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    4ff1:	0f 84 74 1f 00 00    	je     6f6b <spec_qsort+0x203b>
    4ff7:	49 63 d4             	movslq %r12d,%rdx
    4ffa:	80 7c 24 40 00       	cmpb   $0x0,0x40(%rsp)
    4fff:	0f 84 d4 1f 00 00    	je     6fd9 <spec_qsort+0x20a9>
    5005:	48 89 d6             	mov    %rdx,%rsi
    5008:	48 c1 ee 03          	shr    $0x3,%rsi
    500c:	48 89 d7             	mov    %rdx,%rdi
    500f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    5013:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
    5017:	48 83 c0 08          	add    $0x8,%rax
    501b:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    5022:	00 
    5023:	31 c0                	xor    %eax,%eax
    5025:	48 83 fa 08          	cmp    $0x8,%rdx
    5029:	0f 93 c0             	setae  %al
    502c:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
    5033:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    5038:	48 83 c7 08          	add    $0x8,%rdi
    503c:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
    5041:	48 f7 d8             	neg    %rax
    5044:	48 8d 2c 06          	lea    (%rsi,%rax,1),%rbp
    5048:	48 ff c5             	inc    %rbp
    504b:	48 89 eb             	mov    %rbp,%rbx
    504e:	48 83 e3 fc          	and    $0xfffffffffffffffc,%rbx
    5052:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    5059:	00 
    505a:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    505f:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    5064:	48 29 de             	sub    %rbx,%rsi
    5067:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    506c:	49 8d 46 10          	lea    0x10(%r14),%rax
    5070:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    5075:	31 c0                	xor    %eax,%eax
    5077:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    507c:	eb 27                	jmp    50a5 <spec_qsort+0x175>
    507e:	66 90                	xchg   %ax,%ax
    5080:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    5085:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    508a:	48 01 c1             	add    %rax,%rcx
    508d:	48 ff 44 24 40       	incq   0x40(%rsp)
    5092:	48 01 44 24 30       	add    %rax,0x30(%rsp)
    5097:	48 3b 8c 24 b0 00 00 	cmp    0xb0(%rsp),%rcx
    509e:	00 
    509f:	0f 83 53 29 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    50a5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    50aa:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    50af:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    50b4:	76 ca                	jbe    5080 <spec_qsort+0x150>
    50b6:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    50bb:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    50c1:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    50c8:	00 
    50c9:	48 01 d1             	add    %rdx,%rcx
    50cc:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    50d1:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    50d6:	48 89 14 24          	mov    %rdx,(%rsp)
    50da:	48 01 d1             	add    %rdx,%rcx
    50dd:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    50e2:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    50e7:	45 31 f6             	xor    %r14d,%r14d
    50ea:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    50ef:	90                   	nop
    50f0:	4d 8d 3c 04          	lea    (%r12,%rax,1),%r15
    50f4:	4c 89 ff             	mov    %r15,%rdi
    50f7:	4c 89 e6             	mov    %r12,%rsi
    50fa:	ff 54 24 38          	call   *0x38(%rsp)
    50fe:	85 c0                	test   %eax,%eax
    5100:	0f 8e 7a ff ff ff    	jle    5080 <spec_qsort+0x150>
    5106:	48 83 fd 04          	cmp    $0x4,%rbp
    510a:	72 40                	jb     514c <spec_qsort+0x21c>
    510c:	4c 89 f0             	mov    %r14,%rax
    510f:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    5115:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    511a:	48 01 c1             	add    %rax,%rcx
    511d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    5122:	48 29 ca             	sub    %rcx,%rdx
    5125:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    512a:	48 01 f2             	add    %rsi,%rdx
    512d:	49 39 d4             	cmp    %rdx,%r12
    5130:	73 6e                	jae    51a0 <spec_qsort+0x270>
    5132:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    5137:	48 29 ca             	sub    %rcx,%rdx
    513a:	48 01 f2             	add    %rsi,%rdx
    513d:	48 8b 0c 24          	mov    (%rsp),%rcx
    5141:	48 29 c1             	sub    %rax,%rcx
    5144:	48 01 f1             	add    %rsi,%rcx
    5147:	48 39 d1             	cmp    %rdx,%rcx
    514a:	73 54                	jae    51a0 <spec_qsort+0x270>
    514c:	4c 89 f8             	mov    %r15,%rax
    514f:	4c 89 e1             	mov    %r12,%rcx
    5152:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    5157:	48 ff c2             	inc    %rdx
    515a:	31 f6                	xor    %esi,%esi
    515c:	0f 1f 40 00          	nopl   0x0(%rax)
    5160:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    5164:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    5168:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    516c:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    5170:	48 83 c6 08          	add    $0x8,%rsi
    5174:	48 ff ca             	dec    %rdx
    5177:	48 83 fa 01          	cmp    $0x1,%rdx
    517b:	77 e3                	ja     5160 <spec_qsort+0x230>
    517d:	49 ff c6             	inc    %r14
    5180:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    5185:	49 01 c5             	add    %rax,%r13
    5188:	4d 89 fc             	mov    %r15,%r12
    518b:	4c 3b 7c 24 18       	cmp    0x18(%rsp),%r15
    5190:	0f 87 5a ff ff ff    	ja     50f0 <spec_qsort+0x1c0>
    5196:	e9 e5 fe ff ff       	jmp    5080 <spec_qsort+0x150>
    519b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    51a0:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    51a5:	49 8d 04 0f          	lea    (%r15,%rcx,1),%rax
    51a9:	4c 01 e1             	add    %r12,%rcx
    51ac:	31 d2                	xor    %edx,%edx
    51ae:	66 90                	xchg   %ax,%ax
    51b0:	41 0f 10 04 d4       	movups (%r12,%rdx,8),%xmm0
    51b5:	41 0f 10 4c d4 10    	movups 0x10(%r12,%rdx,8),%xmm1
    51bb:	41 0f 10 54 d5 f0    	movups -0x10(%r13,%rdx,8),%xmm2
    51c1:	41 0f 10 5c d5 00    	movups 0x0(%r13,%rdx,8),%xmm3
    51c7:	41 0f 11 14 d4       	movups %xmm2,(%r12,%rdx,8)
    51cc:	41 0f 11 5c d4 10    	movups %xmm3,0x10(%r12,%rdx,8)
    51d2:	41 0f 11 44 d5 f0    	movups %xmm0,-0x10(%r13,%rdx,8)
    51d8:	41 0f 11 4c d5 00    	movups %xmm1,0x0(%r13,%rdx,8)
    51de:	48 83 c2 04          	add    $0x4,%rdx
    51e2:	48 39 d3             	cmp    %rdx,%rbx
    51e5:	75 c9                	jne    51b0 <spec_qsort+0x280>
    51e7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    51ec:	48 39 dd             	cmp    %rbx,%rbp
    51ef:	0f 85 62 ff ff ff    	jne    5157 <spec_qsort+0x227>
    51f5:	eb 86                	jmp    517d <spec_qsort+0x24d>
    51f7:	49 63 c4             	movslq %r12d,%rax
    51fa:	48 89 c2             	mov    %rax,%rdx
    51fd:	48 c1 ea 02          	shr    $0x2,%rdx
    5201:	48 89 c6             	mov    %rax,%rsi
    5204:	48 c1 ee 03          	shr    $0x3,%rsi
    5208:	48 89 c7             	mov    %rax,%rdi
    520b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    520f:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
    5213:	48 83 f8 08          	cmp    $0x8,%rax
    5217:	48 89 bc 24 10 01 00 	mov    %rdi,0x110(%rsp)
    521e:	00 
    521f:	49 89 f9             	mov    %rdi,%r9
    5222:	48 89 8c 24 20 01 00 	mov    %rcx,0x120(%rsp)
    5229:	00 
    522a:	4c 0f 42 c9          	cmovb  %rcx,%r9
    522e:	49 89 f0             	mov    %rsi,%r8
    5231:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
    5235:	49 ff c0             	inc    %r8
    5238:	48 89 c7             	mov    %rax,%rdi
    523b:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    523f:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
    5243:	48 83 f8 04          	cmp    $0x4,%rax
    5247:	48 89 bc 24 08 01 00 	mov    %rdi,0x108(%rsp)
    524e:	00 
    524f:	49 89 fa             	mov    %rdi,%r10
    5252:	48 89 8c 24 18 01 00 	mov    %rcx,0x118(%rsp)
    5259:	00 
    525a:	4c 0f 42 d1          	cmovb  %rcx,%r10
    525e:	48 89 d7             	mov    %rdx,%rdi
    5261:	48 83 d7 ff          	adc    $0xffffffffffffffff,%rdi
    5265:	48 b9 e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%rcx
    526c:	ff ff 7f 
    526f:	48 ff c7             	inc    %rdi
    5272:	48 83 f8 02          	cmp    $0x2,%rax
    5276:	bb 01 00 00 00       	mov    $0x1,%ebx
    527b:	48 0f 4d d8          	cmovge %rax,%rbx
    527f:	49 89 de             	mov    %rbx,%r14
    5282:	49 21 ce             	and    %rcx,%r14
    5285:	48 89 c1             	mov    %rax,%rcx
    5288:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
    528f:	00 
    5290:	4c 29 f1             	sub    %r14,%rcx
    5293:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
    529a:	00 
    529b:	48 89 d9             	mov    %rbx,%rcx
    529e:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    52a3:	81 e3 f8 ff ff 7f    	and    $0x7ffffff8,%ebx
    52a9:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    52ae:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
    52b5:	00 
    52b6:	48 29 d8             	sub    %rbx,%rax
    52b9:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    52c0:	00 
    52c1:	48 89 bc 24 a8 00 00 	mov    %rdi,0xa8(%rsp)
    52c8:	00 
    52c9:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    52cd:	48 89 94 24 a0 00 00 	mov    %rdx,0xa0(%rsp)
    52d4:	00 
    52d5:	48 29 fa             	sub    %rdi,%rdx
    52d8:	48 89 94 24 d8 00 00 	mov    %rdx,0xd8(%rsp)
    52df:	00 
    52e0:	4c 89 84 24 98 00 00 	mov    %r8,0x98(%rsp)
    52e7:	00 
    52e8:	49 83 e0 fc          	and    $0xfffffffffffffffc,%r8
    52ec:	4c 89 84 24 f8 00 00 	mov    %r8,0xf8(%rsp)
    52f3:	00 
    52f4:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
    52f9:	4c 29 c6             	sub    %r8,%rsi
    52fc:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    5303:	00 
    5304:	48 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%rsp)
    530b:	00 
    530c:	48 8d 04 bd 00 00 00 	lea    0x0(,%rdi,4),%rax
    5313:	00 
    5314:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    531b:	00 
    531c:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    5323:	00 
    5324:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    532b:	00 
    532c:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    5331:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    5336:	eb 61                	jmp    5399 <spec_qsort+0x469>
    5338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    533f:	00 
    5340:	48 89 d8             	mov    %rbx,%rax
    5343:	31 d2                	xor    %edx,%edx
    5345:	49 f7 f4             	div    %r12
    5348:	49 89 c7             	mov    %rax,%r15
    534b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    5350:	48 29 d9             	sub    %rbx,%rcx
    5353:	48 89 c8             	mov    %rcx,%rax
    5356:	4c 09 e0             	or     %r12,%rax
    5359:	a8 07                	test   $0x7,%al
    535b:	ba 02 00 00 00       	mov    $0x2,%edx
    5360:	0f 44 94 24 04 01 00 	cmove  0x104(%rsp),%edx
    5367:	00 
    5368:	89 54 24 58          	mov    %edx,0x58(%rsp)
    536c:	0f 94 44 24 40       	sete   0x40(%rsp)
    5371:	a8 03                	test   $0x3,%al
    5373:	0f 94 84 24 80 00 00 	sete   0x80(%rsp)
    537a:	00 
    537b:	b8 02 00 00 00       	mov    $0x2,%eax
    5380:	0f 44 84 24 00 01 00 	cmove  0x100(%rsp),%eax
    5387:	00 
    5388:	89 44 24 30          	mov    %eax,0x30(%rsp)
    538c:	49 89 cb             	mov    %rcx,%r11
    538f:	49 83 ff 07          	cmp    $0x7,%r15
    5393:	0f 82 22 fc ff ff    	jb     4fbb <spec_qsort+0x8b>
    5399:	4c 89 e0             	mov    %r12,%rax
    539c:	4d 89 fc             	mov    %r15,%r12
    539f:	49 d1 ec             	shr    %r12
    53a2:	4c 0f af e0          	imul   %rax,%r12
    53a6:	4d 01 dc             	add    %r11,%r12
    53a9:	49 83 ff 07          	cmp    $0x7,%r15
    53ad:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    53b2:	4c 89 bc 24 b0 00 00 	mov    %r15,0xb0(%rsp)
    53b9:	00 
    53ba:	0f 84 00 02 00 00    	je     55c0 <spec_qsort+0x690>
    53c0:	49 8d 6f ff          	lea    -0x1(%r15),%rbp
    53c4:	48 0f af e8          	imul   %rax,%rbp
    53c8:	4c 01 dd             	add    %r11,%rbp
    53cb:	49 83 ff 29          	cmp    $0x29,%r15
    53cf:	72 5f                	jb     5430 <spec_qsort+0x500>
    53d1:	4d 89 fd             	mov    %r15,%r13
    53d4:	49 c1 ed 03          	shr    $0x3,%r13
    53d8:	4c 0f af e8          	imul   %rax,%r13
    53dc:	4f 8d 3c 2b          	lea    (%r11,%r13,1),%r15
    53e0:	4b 8d 04 6b          	lea    (%r11,%r13,2),%rax
    53e4:	48 89 04 24          	mov    %rax,(%rsp)
    53e8:	4c 89 df             	mov    %r11,%rdi
    53eb:	4c 89 fe             	mov    %r15,%rsi
    53ee:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    53f3:	41 ff d6             	call   *%r14
    53f6:	89 c3                	mov    %eax,%ebx
    53f8:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    53fd:	4c 89 ff             	mov    %r15,%rdi
    5400:	4c 8b 3c 24          	mov    (%rsp),%r15
    5404:	4c 89 fe             	mov    %r15,%rsi
    5407:	41 ff d6             	call   *%r14
    540a:	85 db                	test   %ebx,%ebx
    540c:	78 2a                	js     5438 <spec_qsort+0x508>
    540e:	85 c0                	test   %eax,%eax
    5410:	7f 44                	jg     5456 <spec_qsort+0x526>
    5412:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    5417:	48 89 df             	mov    %rbx,%rdi
    541a:	4c 89 fe             	mov    %r15,%rsi
    541d:	ff 54 24 38          	call   *0x38(%rsp)
    5421:	85 c0                	test   %eax,%eax
    5423:	4c 0f 48 fb          	cmovs  %rbx,%r15
    5427:	eb 28                	jmp    5451 <spec_qsort+0x521>
    5429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5430:	4d 89 dd             	mov    %r11,%r13
    5433:	e9 f4 00 00 00       	jmp    552c <spec_qsort+0x5fc>
    5438:	85 c0                	test   %eax,%eax
    543a:	78 1a                	js     5456 <spec_qsort+0x526>
    543c:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    5441:	48 89 df             	mov    %rbx,%rdi
    5444:	4c 89 fe             	mov    %r15,%rsi
    5447:	ff 54 24 38          	call   *0x38(%rsp)
    544b:	85 c0                	test   %eax,%eax
    544d:	4c 0f 49 fb          	cmovns %rbx,%r15
    5451:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    5456:	4c 89 e3             	mov    %r12,%rbx
    5459:	4c 29 eb             	sub    %r13,%rbx
    545c:	4f 8d 3c 2c          	lea    (%r12,%r13,1),%r15
    5460:	48 89 df             	mov    %rbx,%rdi
    5463:	4c 89 e6             	mov    %r12,%rsi
    5466:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    546b:	41 ff d6             	call   *%r14
    546e:	89 04 24             	mov    %eax,(%rsp)
    5471:	4c 89 e7             	mov    %r12,%rdi
    5474:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
    5479:	4c 89 fe             	mov    %r15,%rsi
    547c:	41 ff d6             	call   *%r14
    547f:	83 3c 24 00          	cmpl   $0x0,(%rsp)
    5483:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
    548a:	00 
    548b:	78 1b                	js     54a8 <spec_qsort+0x578>
    548d:	85 c0                	test   %eax,%eax
    548f:	7f 33                	jg     54c4 <spec_qsort+0x594>
    5491:	48 89 df             	mov    %rbx,%rdi
    5494:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
    5499:	4c 89 e6             	mov    %r12,%rsi
    549c:	ff 54 24 38          	call   *0x38(%rsp)
    54a0:	85 c0                	test   %eax,%eax
    54a2:	4c 0f 48 e3          	cmovs  %rbx,%r12
    54a6:	eb 1c                	jmp    54c4 <spec_qsort+0x594>
    54a8:	85 c0                	test   %eax,%eax
    54aa:	78 18                	js     54c4 <spec_qsort+0x594>
    54ac:	48 89 df             	mov    %rbx,%rdi
    54af:	4c 8b 74 24 70       	mov    0x70(%rsp),%r14
    54b4:	4c 89 f6             	mov    %r14,%rsi
    54b7:	ff 54 24 38          	call   *0x38(%rsp)
    54bb:	85 c0                	test   %eax,%eax
    54bd:	49 0f 48 de          	cmovs  %r14,%rbx
    54c1:	49 89 dc             	mov    %rbx,%r12
    54c4:	4a 8d 04 6d 00 00 00 	lea    0x0(,%r13,2),%rax
    54cb:	00 
    54cc:	49 f7 dd             	neg    %r13
    54cf:	48 89 eb             	mov    %rbp,%rbx
    54d2:	48 29 c3             	sub    %rax,%rbx
    54d5:	49 01 ed             	add    %rbp,%r13
    54d8:	48 89 df             	mov    %rbx,%rdi
    54db:	4c 89 ee             	mov    %r13,%rsi
    54de:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    54e3:	41 ff d6             	call   *%r14
    54e6:	89 04 24             	mov    %eax,(%rsp)
    54e9:	4c 89 ef             	mov    %r13,%rdi
    54ec:	48 89 ee             	mov    %rbp,%rsi
    54ef:	41 ff d6             	call   *%r14
    54f2:	83 3c 24 00          	cmpl   $0x0,(%rsp)
    54f6:	78 16                	js     550e <spec_qsort+0x5de>
    54f8:	85 c0                	test   %eax,%eax
    54fa:	7f 28                	jg     5524 <spec_qsort+0x5f4>
    54fc:	48 89 df             	mov    %rbx,%rdi
    54ff:	48 89 ee             	mov    %rbp,%rsi
    5502:	ff 54 24 38          	call   *0x38(%rsp)
    5506:	85 c0                	test   %eax,%eax
    5508:	48 0f 48 eb          	cmovs  %rbx,%rbp
    550c:	eb 19                	jmp    5527 <spec_qsort+0x5f7>
    550e:	85 c0                	test   %eax,%eax
    5510:	78 12                	js     5524 <spec_qsort+0x5f4>
    5512:	48 89 df             	mov    %rbx,%rdi
    5515:	48 89 ee             	mov    %rbp,%rsi
    5518:	ff 54 24 38          	call   *0x38(%rsp)
    551c:	85 c0                	test   %eax,%eax
    551e:	48 0f 49 eb          	cmovns %rbx,%rbp
    5522:	eb 03                	jmp    5527 <spec_qsort+0x5f7>
    5524:	4c 89 ed             	mov    %r13,%rbp
    5527:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    552c:	4c 89 ef             	mov    %r13,%rdi
    552f:	4c 89 e6             	mov    %r12,%rsi
    5532:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    5537:	41 ff d6             	call   *%r14
    553a:	89 c3                	mov    %eax,%ebx
    553c:	4c 89 e7             	mov    %r12,%rdi
    553f:	48 89 ee             	mov    %rbp,%rsi
    5542:	41 ff d6             	call   *%r14
    5545:	85 db                	test   %ebx,%ebx
    5547:	78 37                	js     5580 <spec_qsort+0x650>
    5549:	85 c0                	test   %eax,%eax
    554b:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5550:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    5555:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    555a:	7f 64                	jg     55c0 <spec_qsort+0x690>
    555c:	4c 89 ef             	mov    %r13,%rdi
    555f:	48 89 ee             	mov    %rbp,%rsi
    5562:	ff 54 24 38          	call   *0x38(%rsp)
    5566:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    556b:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    5570:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5575:	85 c0                	test   %eax,%eax
    5577:	49 0f 48 ed          	cmovs  %r13,%rbp
    557b:	49 89 ec             	mov    %rbp,%r12
    557e:	eb 40                	jmp    55c0 <spec_qsort+0x690>
    5580:	85 c0                	test   %eax,%eax
    5582:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5587:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    558c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5591:	78 2d                	js     55c0 <spec_qsort+0x690>
    5593:	4c 89 ef             	mov    %r13,%rdi
    5596:	48 89 ee             	mov    %rbp,%rsi
    5599:	ff 54 24 38          	call   *0x38(%rsp)
    559d:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    55a2:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    55a7:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    55ac:	85 c0                	test   %eax,%eax
    55ae:	4c 0f 48 ed          	cmovs  %rbp,%r13
    55b2:	4d 89 ec             	mov    %r13,%r12
    55b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    55bc:	00 00 00 00 
    55c0:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    55c5:	0f 84 85 00 00 00    	je     5650 <spec_qsort+0x720>
    55cb:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    55d0:	0f 84 9a 00 00 00    	je     5670 <spec_qsort+0x740>
    55d6:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    55db:	0f 84 a2 00 00 00    	je     5683 <spec_qsort+0x753>
    55e1:	48 83 bc 24 98 00 00 	cmpq   $0x4,0x98(%rsp)
    55e8:	00 04 
    55ea:	72 1a                	jb     5606 <spec_qsort+0x6d6>
    55ec:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
    55f0:	49 39 c3             	cmp    %rax,%r11
    55f3:	0f 83 59 01 00 00    	jae    5752 <spec_qsort+0x822>
    55f9:	4b 8d 04 0b          	lea    (%r11,%r9,1),%rax
    55fd:	49 39 c4             	cmp    %rax,%r12
    5600:	0f 83 4c 01 00 00    	jae    5752 <spec_qsort+0x822>
    5606:	4c 89 e0             	mov    %r12,%rax
    5609:	4c 89 d9             	mov    %r11,%rcx
    560c:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    5611:	48 ff c2             	inc    %rdx
    5614:	31 f6                	xor    %esi,%esi
    5616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    561d:	00 00 00 
    5620:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    5624:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    5628:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    562c:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    5630:	48 83 c6 08          	add    $0x8,%rsi
    5634:	48 ff ca             	dec    %rdx
    5637:	48 83 fa 01          	cmp    $0x1,%rdx
    563b:	77 e3                	ja     5620 <spec_qsort+0x6f0>
    563d:	e9 9e 02 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    5642:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    5649:	1f 84 00 00 00 00 00 
    5650:	49 8b 03             	mov    (%r11),%rax
    5653:	49 8b 0c 24          	mov    (%r12),%rcx
    5657:	49 89 0b             	mov    %rcx,(%r11)
    565a:	49 89 04 24          	mov    %rax,(%r12)
    565e:	e9 7d 02 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    5663:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    566a:	84 00 00 00 00 00 
    5670:	41 8b 03             	mov    (%r11),%eax
    5673:	41 8b 0c 24          	mov    (%r12),%ecx
    5677:	41 89 0b             	mov    %ecx,(%r11)
    567a:	41 89 04 24          	mov    %eax,(%r12)
    567e:	e9 5d 02 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    5683:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    568a:	01 
    568b:	74 63                	je     56f0 <spec_qsort+0x7c0>
    568d:	48 83 bc 24 a8 00 00 	cmpq   $0x8,0xa8(%rsp)
    5694:	00 08 
    5696:	72 1a                	jb     56b2 <spec_qsort+0x782>
    5698:	4b 8d 04 14          	lea    (%r12,%r10,1),%rax
    569c:	49 39 c3             	cmp    %rax,%r11
    569f:	0f 83 1b 01 00 00    	jae    57c0 <spec_qsort+0x890>
    56a5:	4b 8d 04 13          	lea    (%r11,%r10,1),%rax
    56a9:	49 39 c4             	cmp    %rax,%r12
    56ac:	0f 83 0e 01 00 00    	jae    57c0 <spec_qsort+0x890>
    56b2:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    56b9:	00 
    56ba:	4c 89 d8             	mov    %r11,%rax
    56bd:	4c 89 e1             	mov    %r12,%rcx
    56c0:	48 ff c2             	inc    %rdx
    56c3:	31 f6                	xor    %esi,%esi
    56c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    56cc:	00 00 00 00 
    56d0:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    56d3:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    56d7:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    56db:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    56de:	48 ff ca             	dec    %rdx
    56e1:	48 83 c6 04          	add    $0x4,%rsi
    56e5:	48 83 fa 01          	cmp    $0x1,%rdx
    56e9:	77 e5                	ja     56d0 <spec_qsort+0x7a0>
    56eb:	e9 f0 01 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    56f0:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    56f5:	48 83 fa 08          	cmp    $0x8,%rdx
    56f9:	7c 24                	jl     571f <spec_qsort+0x7ef>
    56fb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    5700:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    5704:	49 39 c3             	cmp    %rax,%r11
    5707:	0f 83 23 01 00 00    	jae    5830 <spec_qsort+0x900>
    570d:	49 8d 04 0b          	lea    (%r11,%rcx,1),%rax
    5711:	49 39 c4             	cmp    %rax,%r12
    5714:	0f 83 16 01 00 00    	jae    5830 <spec_qsort+0x900>
    571a:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    571f:	4c 89 d8             	mov    %r11,%rax
    5722:	4c 89 e1             	mov    %r12,%rcx
    5725:	48 ff c2             	inc    %rdx
    5728:	31 f6                	xor    %esi,%esi
    572a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5730:	0f b6 3c 30          	movzbl (%rax,%rsi,1),%edi
    5734:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
    5739:	44 88 04 30          	mov    %r8b,(%rax,%rsi,1)
    573d:	40 88 3c 31          	mov    %dil,(%rcx,%rsi,1)
    5741:	48 ff ca             	dec    %rdx
    5744:	48 ff c6             	inc    %rsi
    5747:	48 83 fa 01          	cmp    $0x1,%rdx
    574b:	7f e3                	jg     5730 <spec_qsort+0x800>
    574d:	e9 8e 01 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    5752:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
    5759:	00 
    575a:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    575e:	4c 01 d9             	add    %r11,%rcx
    5761:	31 d2                	xor    %edx,%edx
    5763:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
    576a:	00 
    576b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5770:	41 0f 10 04 d3       	movups (%r11,%rdx,8),%xmm0
    5775:	41 0f 10 4c d3 10    	movups 0x10(%r11,%rdx,8),%xmm1
    577b:	41 0f 10 14 d4       	movups (%r12,%rdx,8),%xmm2
    5780:	41 0f 10 5c d4 10    	movups 0x10(%r12,%rdx,8),%xmm3
    5786:	41 0f 11 14 d3       	movups %xmm2,(%r11,%rdx,8)
    578b:	41 0f 11 5c d3 10    	movups %xmm3,0x10(%r11,%rdx,8)
    5791:	41 0f 11 04 d4       	movups %xmm0,(%r12,%rdx,8)
    5796:	41 0f 11 4c d4 10    	movups %xmm1,0x10(%r12,%rdx,8)
    579c:	48 83 c2 04          	add    $0x4,%rdx
    57a0:	48 39 d6             	cmp    %rdx,%rsi
    57a3:	75 cb                	jne    5770 <spec_qsort+0x840>
    57a5:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
    57ac:	00 
    57ad:	48 39 b4 24 98 00 00 	cmp    %rsi,0x98(%rsp)
    57b4:	00 
    57b5:	0f 85 56 fe ff ff    	jne    5611 <spec_qsort+0x6e1>
    57bb:	e9 20 01 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    57c0:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
    57c7:	00 
    57c8:	49 8d 04 0b          	lea    (%r11,%rcx,1),%rax
    57cc:	4c 01 e1             	add    %r12,%rcx
    57cf:	31 d2                	xor    %edx,%edx
    57d1:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
    57d8:	00 
    57d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    57e0:	41 0f 10 04 93       	movups (%r11,%rdx,4),%xmm0
    57e5:	41 0f 10 4c 93 10    	movups 0x10(%r11,%rdx,4),%xmm1
    57eb:	41 0f 10 14 94       	movups (%r12,%rdx,4),%xmm2
    57f0:	41 0f 10 5c 94 10    	movups 0x10(%r12,%rdx,4),%xmm3
    57f6:	41 0f 11 14 93       	movups %xmm2,(%r11,%rdx,4)
    57fb:	41 0f 11 5c 93 10    	movups %xmm3,0x10(%r11,%rdx,4)
    5801:	41 0f 11 04 94       	movups %xmm0,(%r12,%rdx,4)
    5806:	41 0f 11 4c 94 10    	movups %xmm1,0x10(%r12,%rdx,4)
    580c:	48 83 c2 08          	add    $0x8,%rdx
    5810:	48 39 d6             	cmp    %rdx,%rsi
    5813:	75 cb                	jne    57e0 <spec_qsort+0x8b0>
    5815:	48 8b 94 24 d8 00 00 	mov    0xd8(%rsp),%rdx
    581c:	00 
    581d:	48 39 b4 24 a8 00 00 	cmp    %rsi,0xa8(%rsp)
    5824:	00 
    5825:	0f 85 95 fe ff ff    	jne    56c0 <spec_qsort+0x790>
    582b:	e9 b0 00 00 00       	jmp    58e0 <spec_qsort+0x9b0>
    5830:	48 83 7c 24 60 20    	cmpq   $0x20,0x60(%rsp)
    5836:	7d 04                	jge    583c <spec_qsort+0x90c>
    5838:	31 d2                	xor    %edx,%edx
    583a:	eb 63                	jmp    589f <spec_qsort+0x96f>
    583c:	31 c0                	xor    %eax,%eax
    583e:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    5845:	00 
    5846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    584d:	00 00 00 
    5850:	41 0f 10 04 03       	movups (%r11,%rax,1),%xmm0
    5855:	41 0f 10 4c 03 10    	movups 0x10(%r11,%rax,1),%xmm1
    585b:	41 0f 10 14 04       	movups (%r12,%rax,1),%xmm2
    5860:	41 0f 10 5c 04 10    	movups 0x10(%r12,%rax,1),%xmm3
    5866:	41 0f 11 14 03       	movups %xmm2,(%r11,%rax,1)
    586b:	41 0f 11 5c 03 10    	movups %xmm3,0x10(%r11,%rax,1)
    5871:	41 0f 11 04 04       	movups %xmm0,(%r12,%rax,1)
    5876:	41 0f 11 4c 04 10    	movups %xmm1,0x10(%r12,%rax,1)
    587c:	48 83 c0 20          	add    $0x20,%rax
    5880:	48 39 c1             	cmp    %rax,%rcx
    5883:	75 cb                	jne    5850 <spec_qsort+0x920>
    5885:	48 39 4c 24 28       	cmp    %rcx,0x28(%rsp)
    588a:	74 54                	je     58e0 <spec_qsort+0x9b0>
    588c:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    5893:	00 
    5894:	f6 44 24 28 18       	testb  $0x18,0x28(%rsp)
    5899:	0f 84 11 14 00 00    	je     6cb0 <spec_qsort+0x1d80>
    589f:	4c 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%r8
    58a6:	00 
    58a7:	4b 8d 04 03          	lea    (%r11,%r8,1),%rax
    58ab:	4b 8d 0c 04          	lea    (%r12,%r8,1),%rcx
    58af:	90                   	nop
    58b0:	49 8b 34 13          	mov    (%r11,%rdx,1),%rsi
    58b4:	49 8b 3c 14          	mov    (%r12,%rdx,1),%rdi
    58b8:	49 89 3c 13          	mov    %rdi,(%r11,%rdx,1)
    58bc:	49 89 34 14          	mov    %rsi,(%r12,%rdx,1)
    58c0:	48 83 c2 08          	add    $0x8,%rdx
    58c4:	49 39 d0             	cmp    %rdx,%r8
    58c7:	75 e7                	jne    58b0 <spec_qsort+0x980>
    58c9:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    58d0:	00 
    58d1:	4c 39 44 24 28       	cmp    %r8,0x28(%rsp)
    58d6:	0f 85 49 fe ff ff    	jne    5725 <spec_qsort+0x7f5>
    58dc:	0f 1f 40 00          	nopl   0x0(%rax)
    58e0:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    58e5:	4b 8d 04 23          	lea    (%r11,%r12,1),%rax
    58e9:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    58ed:	49 0f af cc          	imul   %r12,%rcx
    58f1:	4c 01 d9             	add    %r11,%rcx
    58f4:	c7 44 24 70 00 00 00 	movl   $0x0,0x70(%rsp)
    58fb:	00 
    58fc:	48 89 0c 24          	mov    %rcx,(%rsp)
    5900:	48 89 c5             	mov    %rax,%rbp
    5903:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    590a:	00 
    590b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5910:	48 39 cd             	cmp    %rcx,%rbp
    5913:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    5918:	0f 87 12 04 00 00    	ja     5d30 <spec_qsort+0xe00>
    591e:	45 31 f6             	xor    %r14d,%r14d
    5921:	49 89 ed             	mov    %rbp,%r13
    5924:	eb 32                	jmp    5958 <spec_qsort+0xa28>
    5926:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    592d:	00 00 00 
    5930:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    5935:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    593a:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    593f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5944:	4d 01 e5             	add    %r12,%r13
    5947:	49 ff c6             	inc    %r14
    594a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    594f:	49 39 cd             	cmp    %rcx,%r13
    5952:	0f 87 db 03 00 00    	ja     5d33 <spec_qsort+0xe03>
    5958:	4d 89 f7             	mov    %r14,%r15
    595b:	4d 0f af fc          	imul   %r12,%r15
    595f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5964:	48 8d 1c 28          	lea    (%rax,%rbp,1),%rbx
    5968:	4c 01 fb             	add    %r15,%rbx
    596b:	4d 8d 24 2a          	lea    (%r10,%rbp,1),%r12
    596f:	4d 01 fc             	add    %r15,%r12
    5972:	49 01 ef             	add    %rbp,%r15
    5975:	4d 01 cf             	add    %r9,%r15
    5978:	4c 89 ef             	mov    %r13,%rdi
    597b:	4c 89 de             	mov    %r11,%rsi
    597e:	ff 54 24 38          	call   *0x38(%rsp)
    5982:	85 c0                	test   %eax,%eax
    5984:	0f 8f 86 03 00 00    	jg     5d10 <spec_qsort+0xde0>
    598a:	75 a4                	jne    5930 <spec_qsort+0xa00>
    598c:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    5991:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5996:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    599b:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    59a0:	0f 84 ec 00 00 00    	je     5a92 <spec_qsort+0xb62>
    59a6:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    59ab:	0f 84 f9 00 00 00    	je     5aaa <spec_qsort+0xb7a>
    59b1:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    59b6:	0f 84 04 01 00 00    	je     5ac0 <spec_qsort+0xb90>
    59bc:	4c 89 e8             	mov    %r13,%rax
    59bf:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    59c4:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    59c9:	48 83 bc 24 98 00 00 	cmpq   $0x4,0x98(%rsp)
    59d0:	00 04 
    59d2:	0f 82 91 00 00 00    	jb     5a69 <spec_qsort+0xb39>
    59d8:	4c 39 7c 24 10       	cmp    %r15,0x10(%rsp)
    59dd:	73 16                	jae    59f5 <spec_qsort+0xac5>
    59df:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    59e4:	4a 8d 34 09          	lea    (%rcx,%r9,1),%rsi
    59e8:	4c 89 e8             	mov    %r13,%rax
    59eb:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    59f0:	49 39 f5             	cmp    %rsi,%r13
    59f3:	72 74                	jb     5a69 <spec_qsort+0xb39>
    59f5:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
    59fc:	00 
    59fd:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    5a01:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5a06:	48 01 f9             	add    %rdi,%rcx
    5a09:	31 d2                	xor    %edx,%edx
    5a0b:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
    5a12:	00 
    5a13:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    5a1a:	84 00 00 00 00 00 
    5a20:	0f 10 04 d7          	movups (%rdi,%rdx,8),%xmm0
    5a24:	0f 10 4c d7 10       	movups 0x10(%rdi,%rdx,8),%xmm1
    5a29:	41 0f 10 54 d5 00    	movups 0x0(%r13,%rdx,8),%xmm2
    5a2f:	41 0f 10 5c d5 10    	movups 0x10(%r13,%rdx,8),%xmm3
    5a35:	0f 11 14 d7          	movups %xmm2,(%rdi,%rdx,8)
    5a39:	0f 11 5c d7 10       	movups %xmm3,0x10(%rdi,%rdx,8)
    5a3e:	41 0f 11 44 d5 00    	movups %xmm0,0x0(%r13,%rdx,8)
    5a44:	41 0f 11 4c d5 10    	movups %xmm1,0x10(%r13,%rdx,8)
    5a4a:	48 83 c2 04          	add    $0x4,%rdx
    5a4e:	48 39 d6             	cmp    %rdx,%rsi
    5a51:	75 cd                	jne    5a20 <spec_qsort+0xaf0>
    5a53:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
    5a5a:	00 
    5a5b:	48 39 b4 24 98 00 00 	cmp    %rsi,0x98(%rsp)
    5a62:	00 
    5a63:	0f 84 87 02 00 00    	je     5cf0 <spec_qsort+0xdc0>
    5a69:	48 ff c2             	inc    %rdx
    5a6c:	31 f6                	xor    %esi,%esi
    5a6e:	66 90                	xchg   %ax,%ax
    5a70:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    5a74:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    5a78:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    5a7c:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    5a80:	48 83 c6 08          	add    $0x8,%rsi
    5a84:	48 ff ca             	dec    %rdx
    5a87:	48 83 fa 01          	cmp    $0x1,%rdx
    5a8b:	77 e3                	ja     5a70 <spec_qsort+0xb40>
    5a8d:	e9 5e 02 00 00       	jmp    5cf0 <spec_qsort+0xdc0>
    5a92:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5a97:	48 8b 02             	mov    (%rdx),%rax
    5a9a:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    5a9e:	48 89 0a             	mov    %rcx,(%rdx)
    5aa1:	49 89 45 00          	mov    %rax,0x0(%r13)
    5aa5:	e9 46 02 00 00       	jmp    5cf0 <spec_qsort+0xdc0>
    5aaa:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    5aaf:	8b 02                	mov    (%rdx),%eax
    5ab1:	41 8b 4d 00          	mov    0x0(%r13),%ecx
    5ab5:	89 0a                	mov    %ecx,(%rdx)
    5ab7:	41 89 45 00          	mov    %eax,0x0(%r13)
    5abb:	e9 30 02 00 00       	jmp    5cf0 <spec_qsort+0xdc0>
    5ac0:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    5ac7:	01 
    5ac8:	0f 84 d2 00 00 00    	je     5ba0 <spec_qsort+0xc70>
    5ace:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    5ad5:	00 
    5ad6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5adb:	4c 89 e9             	mov    %r13,%rcx
    5ade:	48 83 bc 24 a8 00 00 	cmpq   $0x8,0xa8(%rsp)
    5ae5:	00 08 
    5ae7:	0f 82 8c 00 00 00    	jb     5b79 <spec_qsort+0xc49>
    5aed:	4c 39 64 24 10       	cmp    %r12,0x10(%rsp)
    5af2:	73 19                	jae    5b0d <spec_qsort+0xbdd>
    5af4:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5af9:	4a 8d 34 10          	lea    (%rax,%r10,1),%rsi
    5afd:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    5b04:	00 
    5b05:	4c 89 e9             	mov    %r13,%rcx
    5b08:	49 39 f5             	cmp    %rsi,%r13
    5b0b:	72 6c                	jb     5b79 <spec_qsort+0xc49>
    5b0d:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
    5b14:	00 
    5b15:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5b1a:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
    5b1e:	4c 01 e9             	add    %r13,%rcx
    5b21:	31 d2                	xor    %edx,%edx
    5b23:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
    5b2a:	00 
    5b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b30:	0f 10 04 97          	movups (%rdi,%rdx,4),%xmm0
    5b34:	0f 10 4c 97 10       	movups 0x10(%rdi,%rdx,4),%xmm1
    5b39:	41 0f 10 54 95 00    	movups 0x0(%r13,%rdx,4),%xmm2
    5b3f:	41 0f 10 5c 95 10    	movups 0x10(%r13,%rdx,4),%xmm3
    5b45:	0f 11 14 97          	movups %xmm2,(%rdi,%rdx,4)
    5b49:	0f 11 5c 97 10       	movups %xmm3,0x10(%rdi,%rdx,4)
    5b4e:	41 0f 11 44 95 00    	movups %xmm0,0x0(%r13,%rdx,4)
    5b54:	41 0f 11 4c 95 10    	movups %xmm1,0x10(%r13,%rdx,4)
    5b5a:	48 83 c2 08          	add    $0x8,%rdx
    5b5e:	48 39 d6             	cmp    %rdx,%rsi
    5b61:	75 cd                	jne    5b30 <spec_qsort+0xc00>
    5b63:	48 8b 94 24 d8 00 00 	mov    0xd8(%rsp),%rdx
    5b6a:	00 
    5b6b:	48 39 b4 24 a8 00 00 	cmp    %rsi,0xa8(%rsp)
    5b72:	00 
    5b73:	0f 84 77 01 00 00    	je     5cf0 <spec_qsort+0xdc0>
    5b79:	48 ff c2             	inc    %rdx
    5b7c:	31 f6                	xor    %esi,%esi
    5b7e:	66 90                	xchg   %ax,%ax
    5b80:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    5b83:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    5b87:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    5b8b:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    5b8e:	48 ff ca             	dec    %rdx
    5b91:	48 83 c6 04          	add    $0x4,%rsi
    5b95:	48 83 fa 01          	cmp    $0x1,%rdx
    5b99:	77 e5                	ja     5b80 <spec_qsort+0xc50>
    5b9b:	e9 50 01 00 00       	jmp    5cf0 <spec_qsort+0xdc0>
    5ba0:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    5ba5:	48 89 f2             	mov    %rsi,%rdx
    5ba8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5bad:	4c 89 e9             	mov    %r13,%rcx
    5bb0:	48 83 fe 08          	cmp    $0x8,%rsi
    5bb4:	0f 8c 07 01 00 00    	jl     5cc1 <spec_qsort+0xd91>
    5bba:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
    5bbf:	73 22                	jae    5be3 <spec_qsort+0xcb3>
    5bc1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5bc6:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    5bcb:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
    5bcf:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    5bd4:	48 89 c8             	mov    %rcx,%rax
    5bd7:	4c 89 e9             	mov    %r13,%rcx
    5bda:	49 39 f5             	cmp    %rsi,%r13
    5bdd:	0f 82 de 00 00 00    	jb     5cc1 <spec_qsort+0xd91>
    5be3:	48 83 7c 24 60 20    	cmpq   $0x20,0x60(%rsp)
    5be9:	7d 0e                	jge    5bf9 <spec_qsort+0xcc9>
    5beb:	31 d2                	xor    %edx,%edx
    5bed:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    5bf2:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    5bf7:	eb 6b                	jmp    5c64 <spec_qsort+0xd34>
    5bf9:	31 c0                	xor    %eax,%eax
    5bfb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    5c00:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    5c07:	00 
    5c08:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    5c0d:	0f 1f 00             	nopl   (%rax)
    5c10:	0f 10 04 06          	movups (%rsi,%rax,1),%xmm0
    5c14:	0f 10 4c 06 10       	movups 0x10(%rsi,%rax,1),%xmm1
    5c19:	41 0f 10 54 05 00    	movups 0x0(%r13,%rax,1),%xmm2
    5c1f:	41 0f 10 5c 05 10    	movups 0x10(%r13,%rax,1),%xmm3
    5c25:	0f 11 14 06          	movups %xmm2,(%rsi,%rax,1)
    5c29:	0f 11 5c 06 10       	movups %xmm3,0x10(%rsi,%rax,1)
    5c2e:	41 0f 11 44 05 00    	movups %xmm0,0x0(%r13,%rax,1)
    5c34:	41 0f 11 4c 05 10    	movups %xmm1,0x10(%r13,%rax,1)
    5c3a:	48 83 c0 20          	add    $0x20,%rax
    5c3e:	48 39 c2             	cmp    %rax,%rdx
    5c41:	75 cd                	jne    5c10 <spec_qsort+0xce0>
    5c43:	48 39 d1             	cmp    %rdx,%rcx
    5c46:	0f 84 a4 00 00 00    	je     5cf0 <spec_qsort+0xdc0>
    5c4c:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    5c53:	00 
    5c54:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    5c59:	41 f6 c0 18          	test   $0x18,%r8b
    5c5d:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    5c62:	74 46                	je     5caa <spec_qsort+0xd7a>
    5c64:	48 8b 9c 24 c8 00 00 	mov    0xc8(%rsp),%rbx
    5c6b:	00 
    5c6c:	49 8d 04 1f          	lea    (%r15,%rbx,1),%rax
    5c70:	4a 8d 0c 2b          	lea    (%rbx,%r13,1),%rcx
    5c74:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    5c7b:	00 00 00 00 00 
    5c80:	49 8b 34 17          	mov    (%r15,%rdx,1),%rsi
    5c84:	49 8b 7c 15 00       	mov    0x0(%r13,%rdx,1),%rdi
    5c89:	49 89 3c 17          	mov    %rdi,(%r15,%rdx,1)
    5c8d:	49 89 74 15 00       	mov    %rsi,0x0(%r13,%rdx,1)
    5c92:	48 83 c2 08          	add    $0x8,%rdx
    5c96:	48 39 d3             	cmp    %rdx,%rbx
    5c99:	75 e5                	jne    5c80 <spec_qsort+0xd50>
    5c9b:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    5ca2:	00 
    5ca3:	49 39 d8             	cmp    %rbx,%r8
    5ca6:	75 19                	jne    5cc1 <spec_qsort+0xd91>
    5ca8:	eb 46                	jmp    5cf0 <spec_qsort+0xdc0>
    5caa:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    5cb1:	00 
    5cb2:	4a 8d 0c 28          	lea    (%rax,%r13,1),%rcx
    5cb6:	4c 01 f8             	add    %r15,%rax
    5cb9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    5cc0:	00 
    5cc1:	48 ff c2             	inc    %rdx
    5cc4:	31 f6                	xor    %esi,%esi
    5cc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ccd:	00 00 00 
    5cd0:	0f b6 3c 30          	movzbl (%rax,%rsi,1),%edi
    5cd4:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
    5cd9:	44 88 04 30          	mov    %r8b,(%rax,%rsi,1)
    5cdd:	40 88 3c 31          	mov    %dil,(%rcx,%rsi,1)
    5ce1:	48 ff ca             	dec    %rdx
    5ce4:	48 ff c6             	inc    %rsi
    5ce7:	48 83 fa 01          	cmp    $0x1,%rdx
    5ceb:	7f e3                	jg     5cd0 <spec_qsort+0xda0>
    5ced:	0f 1f 00             	nopl   (%rax)
    5cf0:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    5cf5:	4c 01 64 24 10       	add    %r12,0x10(%rsp)
    5cfa:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
    5d01:	00 
    5d02:	e9 3d fc ff ff       	jmp    5944 <spec_qsort+0xa14>
    5d07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5d0e:	00 00 
    5d10:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    5d15:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5d1a:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    5d1f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5d24:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    5d29:	eb 08                	jmp    5d33 <spec_qsort+0xe03>
    5d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5d30:	49 89 ed             	mov    %rbp,%r13
    5d33:	49 39 cd             	cmp    %rcx,%r13
    5d36:	0f 87 72 07 00 00    	ja     64ae <spec_qsort+0x157e>
    5d3c:	45 31 f6             	xor    %r14d,%r14d
    5d3f:	48 89 cd             	mov    %rcx,%rbp
    5d42:	eb 39                	jmp    5d7d <spec_qsort+0xe4d>
    5d44:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    5d4b:	00 00 00 00 00 
    5d50:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    5d55:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5d5a:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    5d5f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5d64:	48 01 c5             	add    %rax,%rbp
    5d67:	49 ff c6             	inc    %r14
    5d6a:	49 39 ed             	cmp    %rbp,%r13
    5d6d:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    5d72:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    5d77:	0f 87 43 07 00 00    	ja     64c0 <spec_qsort+0x1590>
    5d7d:	4c 89 f0             	mov    %r14,%rax
    5d80:	49 0f af c4          	imul   %r12,%rax
    5d84:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    5d89:	49 29 c7             	sub    %rax,%r15
    5d8c:	49 01 cf             	add    %rcx,%r15
    5d8f:	4d 89 d4             	mov    %r10,%r12
    5d92:	49 29 c4             	sub    %rax,%r12
    5d95:	49 01 cc             	add    %rcx,%r12
    5d98:	4c 89 cb             	mov    %r9,%rbx
    5d9b:	48 29 c3             	sub    %rax,%rbx
    5d9e:	48 01 cb             	add    %rcx,%rbx
    5da1:	48 89 ef             	mov    %rbp,%rdi
    5da4:	4c 89 de             	mov    %r11,%rsi
    5da7:	ff 54 24 38          	call   *0x38(%rsp)
    5dab:	85 c0                	test   %eax,%eax
    5dad:	0f 88 6d 03 00 00    	js     6120 <spec_qsort+0x11f0>
    5db3:	75 9b                	jne    5d50 <spec_qsort+0xe20>
    5db5:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    5dba:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    5dbf:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    5dc4:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5dc9:	0f 84 e3 00 00 00    	je     5eb2 <spec_qsort+0xf82>
    5dcf:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    5dd4:	0f 84 ef 00 00 00    	je     5ec9 <spec_qsort+0xf99>
    5dda:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    5ddf:	0f 84 f7 00 00 00    	je     5edc <spec_qsort+0xfac>
    5de5:	48 8b 04 24          	mov    (%rsp),%rax
    5de9:	48 89 e9             	mov    %rbp,%rcx
    5dec:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    5df1:	48 83 bc 24 98 00 00 	cmpq   $0x4,0x98(%rsp)
    5df8:	00 04 
    5dfa:	0f 82 85 00 00 00    	jb     5e85 <spec_qsort+0xf55>
    5e00:	48 8b 04 24          	mov    (%rsp),%rax
    5e04:	4c 01 c8             	add    %r9,%rax
    5e07:	48 39 c5             	cmp    %rax,%rbp
    5e0a:	73 14                	jae    5e20 <spec_qsort+0xef0>
    5e0c:	48 8b 34 24          	mov    (%rsp),%rsi
    5e10:	48 89 f0             	mov    %rsi,%rax
    5e13:	48 89 e9             	mov    %rbp,%rcx
    5e16:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    5e1b:	48 39 de             	cmp    %rbx,%rsi
    5e1e:	72 65                	jb     5e85 <spec_qsort+0xf55>
    5e20:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
    5e27:	00 
    5e28:	48 8b 3c 24          	mov    (%rsp),%rdi
    5e2c:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
    5e30:	48 01 e9             	add    %rbp,%rcx
    5e33:	31 d2                	xor    %edx,%edx
    5e35:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
    5e3c:	00 
    5e3d:	0f 1f 00             	nopl   (%rax)
    5e40:	0f 10 44 d5 00       	movups 0x0(%rbp,%rdx,8),%xmm0
    5e45:	0f 10 4c d5 10       	movups 0x10(%rbp,%rdx,8),%xmm1
    5e4a:	0f 10 14 d7          	movups (%rdi,%rdx,8),%xmm2
    5e4e:	0f 10 5c d7 10       	movups 0x10(%rdi,%rdx,8),%xmm3
    5e53:	0f 11 54 d5 00       	movups %xmm2,0x0(%rbp,%rdx,8)
    5e58:	0f 11 5c d5 10       	movups %xmm3,0x10(%rbp,%rdx,8)
    5e5d:	0f 11 04 d7          	movups %xmm0,(%rdi,%rdx,8)
    5e61:	0f 11 4c d7 10       	movups %xmm1,0x10(%rdi,%rdx,8)
    5e66:	48 83 c2 04          	add    $0x4,%rdx
    5e6a:	48 39 d6             	cmp    %rdx,%rsi
    5e6d:	75 d1                	jne    5e40 <spec_qsort+0xf10>
    5e6f:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
    5e76:	00 
    5e77:	48 39 b4 24 98 00 00 	cmp    %rsi,0x98(%rsp)
    5e7e:	00 
    5e7f:	0f 84 7b 02 00 00    	je     6100 <spec_qsort+0x11d0>
    5e85:	48 ff c2             	inc    %rdx
    5e88:	31 f6                	xor    %esi,%esi
    5e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e90:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    5e94:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    5e98:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    5e9c:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    5ea0:	48 83 c6 08          	add    $0x8,%rsi
    5ea4:	48 ff ca             	dec    %rdx
    5ea7:	48 83 fa 01          	cmp    $0x1,%rdx
    5eab:	77 e3                	ja     5e90 <spec_qsort+0xf60>
    5ead:	e9 4e 02 00 00       	jmp    6100 <spec_qsort+0x11d0>
    5eb2:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5eb6:	48 8b 14 24          	mov    (%rsp),%rdx
    5eba:	48 8b 0a             	mov    (%rdx),%rcx
    5ebd:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    5ec1:	48 89 02             	mov    %rax,(%rdx)
    5ec4:	e9 37 02 00 00       	jmp    6100 <spec_qsort+0x11d0>
    5ec9:	8b 45 00             	mov    0x0(%rbp),%eax
    5ecc:	48 8b 14 24          	mov    (%rsp),%rdx
    5ed0:	8b 0a                	mov    (%rdx),%ecx
    5ed2:	89 4d 00             	mov    %ecx,0x0(%rbp)
    5ed5:	89 02                	mov    %eax,(%rdx)
    5ed7:	e9 24 02 00 00       	jmp    6100 <spec_qsort+0x11d0>
    5edc:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    5ee3:	01 
    5ee4:	0f 84 d6 00 00 00    	je     5fc0 <spec_qsort+0x1090>
    5eea:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    5ef1:	00 
    5ef2:	48 89 e8             	mov    %rbp,%rax
    5ef5:	48 8b 0c 24          	mov    (%rsp),%rcx
    5ef9:	48 83 bc 24 a8 00 00 	cmpq   $0x8,0xa8(%rsp)
    5f00:	00 08 
    5f02:	0f 82 8d 00 00 00    	jb     5f95 <spec_qsort+0x1065>
    5f08:	48 8b 04 24          	mov    (%rsp),%rax
    5f0c:	4c 01 d0             	add    %r10,%rax
    5f0f:	48 39 c5             	cmp    %rax,%rbp
    5f12:	73 17                	jae    5f2b <spec_qsort+0xffb>
    5f14:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    5f1b:	00 
    5f1c:	48 89 e8             	mov    %rbp,%rax
    5f1f:	48 8b 34 24          	mov    (%rsp),%rsi
    5f23:	48 89 f1             	mov    %rsi,%rcx
    5f26:	4c 39 e6             	cmp    %r12,%rsi
    5f29:	72 6a                	jb     5f95 <spec_qsort+0x1065>
    5f2b:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
    5f32:	00 
    5f33:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
    5f37:	48 8b 3c 24          	mov    (%rsp),%rdi
    5f3b:	48 01 f9             	add    %rdi,%rcx
    5f3e:	31 d2                	xor    %edx,%edx
    5f40:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
    5f47:	00 
    5f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5f4f:	00 
    5f50:	0f 10 44 95 00       	movups 0x0(%rbp,%rdx,4),%xmm0
    5f55:	0f 10 4c 95 10       	movups 0x10(%rbp,%rdx,4),%xmm1
    5f5a:	0f 10 14 97          	movups (%rdi,%rdx,4),%xmm2
    5f5e:	0f 10 5c 97 10       	movups 0x10(%rdi,%rdx,4),%xmm3
    5f63:	0f 11 54 95 00       	movups %xmm2,0x0(%rbp,%rdx,4)
    5f68:	0f 11 5c 95 10       	movups %xmm3,0x10(%rbp,%rdx,4)
    5f6d:	0f 11 04 97          	movups %xmm0,(%rdi,%rdx,4)
    5f71:	0f 11 4c 97 10       	movups %xmm1,0x10(%rdi,%rdx,4)
    5f76:	48 83 c2 08          	add    $0x8,%rdx
    5f7a:	48 39 d6             	cmp    %rdx,%rsi
    5f7d:	75 d1                	jne    5f50 <spec_qsort+0x1020>
    5f7f:	48 8b 94 24 d8 00 00 	mov    0xd8(%rsp),%rdx
    5f86:	00 
    5f87:	48 39 b4 24 a8 00 00 	cmp    %rsi,0xa8(%rsp)
    5f8e:	00 
    5f8f:	0f 84 6b 01 00 00    	je     6100 <spec_qsort+0x11d0>
    5f95:	48 ff c2             	inc    %rdx
    5f98:	31 f6                	xor    %esi,%esi
    5f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5fa0:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    5fa3:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    5fa7:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    5fab:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    5fae:	48 ff ca             	dec    %rdx
    5fb1:	48 83 c6 04          	add    $0x4,%rsi
    5fb5:	48 83 fa 01          	cmp    $0x1,%rdx
    5fb9:	77 e5                	ja     5fa0 <spec_qsort+0x1070>
    5fbb:	e9 40 01 00 00       	jmp    6100 <spec_qsort+0x11d0>
    5fc0:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    5fc5:	48 89 f2             	mov    %rsi,%rdx
    5fc8:	48 89 e8             	mov    %rbp,%rax
    5fcb:	48 8b 0c 24          	mov    (%rsp),%rcx
    5fcf:	48 83 fe 08          	cmp    $0x8,%rsi
    5fd3:	0f 8c f8 00 00 00    	jl     60d1 <spec_qsort+0x11a1>
    5fd9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5fde:	48 8b 0c 24          	mov    (%rsp),%rcx
    5fe2:	48 01 c8             	add    %rcx,%rax
    5fe5:	48 39 c5             	cmp    %rax,%rbp
    5fe8:	73 18                	jae    6002 <spec_qsort+0x10d2>
    5fea:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    5fef:	48 89 e8             	mov    %rbp,%rax
    5ff2:	48 8b 34 24          	mov    (%rsp),%rsi
    5ff6:	48 89 f1             	mov    %rsi,%rcx
    5ff9:	4c 39 fe             	cmp    %r15,%rsi
    5ffc:	0f 82 cf 00 00 00    	jb     60d1 <spec_qsort+0x11a1>
    6002:	48 83 7c 24 60 20    	cmpq   $0x20,0x60(%rsp)
    6008:	7d 0d                	jge    6017 <spec_qsort+0x10e7>
    600a:	31 d2                	xor    %edx,%edx
    600c:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6011:	4c 8b 3c 24          	mov    (%rsp),%r15
    6015:	eb 68                	jmp    607f <spec_qsort+0x114f>
    6017:	31 c0                	xor    %eax,%eax
    6019:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    601e:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    6025:	00 
    6026:	48 8b 34 24          	mov    (%rsp),%rsi
    602a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6030:	0f 10 44 05 00       	movups 0x0(%rbp,%rax,1),%xmm0
    6035:	0f 10 4c 05 10       	movups 0x10(%rbp,%rax,1),%xmm1
    603a:	0f 10 14 06          	movups (%rsi,%rax,1),%xmm2
    603e:	0f 10 5c 06 10       	movups 0x10(%rsi,%rax,1),%xmm3
    6043:	0f 11 54 05 00       	movups %xmm2,0x0(%rbp,%rax,1)
    6048:	0f 11 5c 05 10       	movups %xmm3,0x10(%rbp,%rax,1)
    604d:	0f 11 04 06          	movups %xmm0,(%rsi,%rax,1)
    6051:	0f 11 4c 06 10       	movups %xmm1,0x10(%rsi,%rax,1)
    6056:	48 83 c0 20          	add    $0x20,%rax
    605a:	48 39 c2             	cmp    %rax,%rdx
    605d:	75 d1                	jne    6030 <spec_qsort+0x1100>
    605f:	48 39 d1             	cmp    %rdx,%rcx
    6062:	0f 84 98 00 00 00    	je     6100 <spec_qsort+0x11d0>
    6068:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    606f:	00 
    6070:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6075:	41 f6 c0 18          	test   $0x18,%r8b
    6079:	4c 8b 3c 24          	mov    (%rsp),%r15
    607d:	74 3b                	je     60ba <spec_qsort+0x118a>
    607f:	48 8b 9c 24 c8 00 00 	mov    0xc8(%rsp),%rbx
    6086:	00 
    6087:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
    608b:	49 8d 0c 1f          	lea    (%r15,%rbx,1),%rcx
    608f:	90                   	nop
    6090:	48 8b 74 15 00       	mov    0x0(%rbp,%rdx,1),%rsi
    6095:	49 8b 3c 17          	mov    (%r15,%rdx,1),%rdi
    6099:	48 89 7c 15 00       	mov    %rdi,0x0(%rbp,%rdx,1)
    609e:	49 89 34 17          	mov    %rsi,(%r15,%rdx,1)
    60a2:	48 83 c2 08          	add    $0x8,%rdx
    60a6:	48 39 d3             	cmp    %rdx,%rbx
    60a9:	75 e5                	jne    6090 <spec_qsort+0x1160>
    60ab:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    60b2:	00 
    60b3:	49 39 d8             	cmp    %rbx,%r8
    60b6:	75 19                	jne    60d1 <spec_qsort+0x11a1>
    60b8:	eb 46                	jmp    6100 <spec_qsort+0x11d0>
    60ba:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    60c1:	00 
    60c2:	49 8d 0c 07          	lea    (%r15,%rax,1),%rcx
    60c6:	48 01 e8             	add    %rbp,%rax
    60c9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    60d0:	00 
    60d1:	48 ff c2             	inc    %rdx
    60d4:	31 f6                	xor    %esi,%esi
    60d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    60dd:	00 00 00 
    60e0:	0f b6 3c 30          	movzbl (%rax,%rsi,1),%edi
    60e4:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
    60e9:	44 88 04 30          	mov    %r8b,(%rax,%rsi,1)
    60ed:	40 88 3c 31          	mov    %dil,(%rcx,%rsi,1)
    60f1:	48 ff ca             	dec    %rdx
    60f4:	48 ff c6             	inc    %rsi
    60f7:	48 83 fa 01          	cmp    $0x1,%rdx
    60fb:	7f e3                	jg     60e0 <spec_qsort+0x11b0>
    60fd:	0f 1f 00             	nopl   (%rax)
    6100:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    6105:	48 01 04 24          	add    %rax,(%rsp)
    6109:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
    6110:	00 
    6111:	e9 4e fc ff ff       	jmp    5d64 <spec_qsort+0xe34>
    6116:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    611d:	00 00 00 
    6120:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    6125:	0f 84 f5 00 00 00    	je     6220 <spec_qsort+0x12f0>
    612b:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    6130:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6135:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    613a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    613f:	0f 84 0b 01 00 00    	je     6250 <spec_qsort+0x1320>
    6145:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    614a:	0f 84 13 01 00 00    	je     6263 <spec_qsort+0x1333>
    6150:	48 89 e8             	mov    %rbp,%rax
    6153:	4c 89 e9             	mov    %r13,%rcx
    6156:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    615b:	48 83 bc 24 98 00 00 	cmpq   $0x6,0x98(%rsp)
    6162:	00 06 
    6164:	0f 82 81 00 00 00    	jb     61eb <spec_qsort+0x12bb>
    616a:	49 39 dd             	cmp    %rbx,%r13
    616d:	73 14                	jae    6183 <spec_qsort+0x1253>
    616f:	4b 8d 34 29          	lea    (%r9,%r13,1),%rsi
    6173:	48 89 e8             	mov    %rbp,%rax
    6176:	4c 89 e9             	mov    %r13,%rcx
    6179:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    617e:	48 39 f5             	cmp    %rsi,%rbp
    6181:	72 68                	jb     61eb <spec_qsort+0x12bb>
    6183:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
    618a:	00 
    618b:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
    618f:	4c 01 e9             	add    %r13,%rcx
    6192:	31 d2                	xor    %edx,%edx
    6194:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
    619b:	00 
    619c:	0f 1f 40 00          	nopl   0x0(%rax)
    61a0:	41 0f 10 44 d5 00    	movups 0x0(%r13,%rdx,8),%xmm0
    61a6:	41 0f 10 4c d5 10    	movups 0x10(%r13,%rdx,8),%xmm1
    61ac:	0f 10 54 d5 00       	movups 0x0(%rbp,%rdx,8),%xmm2
    61b1:	0f 10 5c d5 10       	movups 0x10(%rbp,%rdx,8),%xmm3
    61b6:	41 0f 11 54 d5 00    	movups %xmm2,0x0(%r13,%rdx,8)
    61bc:	41 0f 11 5c d5 10    	movups %xmm3,0x10(%r13,%rdx,8)
    61c2:	0f 11 44 d5 00       	movups %xmm0,0x0(%rbp,%rdx,8)
    61c7:	0f 11 4c d5 10       	movups %xmm1,0x10(%rbp,%rdx,8)
    61cc:	48 83 c2 04          	add    $0x4,%rdx
    61d0:	48 39 d6             	cmp    %rdx,%rsi
    61d3:	75 cb                	jne    61a0 <spec_qsort+0x1270>
    61d5:	48 8b 94 24 f0 00 00 	mov    0xf0(%rsp),%rdx
    61dc:	00 
    61dd:	48 39 b4 24 98 00 00 	cmp    %rsi,0x98(%rsp)
    61e4:	00 
    61e5:	0f 84 95 02 00 00    	je     6480 <spec_qsort+0x1550>
    61eb:	48 ff c2             	inc    %rdx
    61ee:	31 f6                	xor    %esi,%esi
    61f0:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    61f4:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    61f8:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    61fc:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    6200:	48 83 c6 08          	add    $0x8,%rsi
    6204:	48 ff ca             	dec    %rdx
    6207:	48 83 fa 01          	cmp    $0x1,%rdx
    620b:	77 e3                	ja     61f0 <spec_qsort+0x12c0>
    620d:	e9 6e 02 00 00       	jmp    6480 <spec_qsort+0x1550>
    6212:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6219:	1f 84 00 00 00 00 00 
    6220:	49 8b 45 00          	mov    0x0(%r13),%rax
    6224:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    6228:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    622c:	48 89 45 00          	mov    %rax,0x0(%rbp)
    6230:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6235:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    623a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    623f:	e9 3c 02 00 00       	jmp    6480 <spec_qsort+0x1550>
    6244:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    624b:	00 00 00 00 00 
    6250:	41 8b 45 00          	mov    0x0(%r13),%eax
    6254:	8b 4d 00             	mov    0x0(%rbp),%ecx
    6257:	41 89 4d 00          	mov    %ecx,0x0(%r13)
    625b:	89 45 00             	mov    %eax,0x0(%rbp)
    625e:	e9 1d 02 00 00       	jmp    6480 <spec_qsort+0x1550>
    6263:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    626a:	01 
    626b:	0f 84 cf 00 00 00    	je     6340 <spec_qsort+0x1410>
    6271:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    6278:	00 
    6279:	4c 89 e8             	mov    %r13,%rax
    627c:	48 89 e9             	mov    %rbp,%rcx
    627f:	48 83 bc 24 a8 00 00 	cmpq   $0x8,0xa8(%rsp)
    6286:	00 08 
    6288:	0f 82 8d 00 00 00    	jb     631b <spec_qsort+0x13eb>
    628e:	4d 39 e5             	cmp    %r12,%r13
    6291:	73 17                	jae    62aa <spec_qsort+0x137a>
    6293:	4b 8d 34 2a          	lea    (%r10,%r13,1),%rsi
    6297:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    629e:	00 
    629f:	4c 89 e8             	mov    %r13,%rax
    62a2:	48 89 e9             	mov    %rbp,%rcx
    62a5:	48 39 f5             	cmp    %rsi,%rbp
    62a8:	72 71                	jb     631b <spec_qsort+0x13eb>
    62aa:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
    62b1:	00 
    62b2:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    62b6:	48 01 e9             	add    %rbp,%rcx
    62b9:	31 d2                	xor    %edx,%edx
    62bb:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
    62c2:	00 
    62c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    62ca:	84 00 00 00 00 00 
    62d0:	41 0f 10 44 95 00    	movups 0x0(%r13,%rdx,4),%xmm0
    62d6:	41 0f 10 4c 95 10    	movups 0x10(%r13,%rdx,4),%xmm1
    62dc:	0f 10 54 95 00       	movups 0x0(%rbp,%rdx,4),%xmm2
    62e1:	0f 10 5c 95 10       	movups 0x10(%rbp,%rdx,4),%xmm3
    62e6:	41 0f 11 54 95 00    	movups %xmm2,0x0(%r13,%rdx,4)
    62ec:	41 0f 11 5c 95 10    	movups %xmm3,0x10(%r13,%rdx,4)
    62f2:	0f 11 44 95 00       	movups %xmm0,0x0(%rbp,%rdx,4)
    62f7:	0f 11 4c 95 10       	movups %xmm1,0x10(%rbp,%rdx,4)
    62fc:	48 83 c2 08          	add    $0x8,%rdx
    6300:	48 39 d6             	cmp    %rdx,%rsi
    6303:	75 cb                	jne    62d0 <spec_qsort+0x13a0>
    6305:	48 8b 94 24 d8 00 00 	mov    0xd8(%rsp),%rdx
    630c:	00 
    630d:	48 39 b4 24 a8 00 00 	cmp    %rsi,0xa8(%rsp)
    6314:	00 
    6315:	0f 84 65 01 00 00    	je     6480 <spec_qsort+0x1550>
    631b:	48 ff c2             	inc    %rdx
    631e:	31 f6                	xor    %esi,%esi
    6320:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    6323:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    6327:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    632b:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    632e:	48 ff ca             	dec    %rdx
    6331:	48 83 c6 04          	add    $0x4,%rsi
    6335:	48 83 fa 01          	cmp    $0x1,%rdx
    6339:	77 e5                	ja     6320 <spec_qsort+0x13f0>
    633b:	e9 40 01 00 00       	jmp    6480 <spec_qsort+0x1550>
    6340:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    6345:	48 89 f2             	mov    %rsi,%rdx
    6348:	4c 89 e8             	mov    %r13,%rax
    634b:	48 89 e9             	mov    %rbp,%rcx
    634e:	48 83 fe 08          	cmp    $0x8,%rsi
    6352:	0f 8c fb 00 00 00    	jl     6453 <spec_qsort+0x1523>
    6358:	4d 39 fd             	cmp    %r15,%r13
    635b:	73 1d                	jae    637a <spec_qsort+0x144a>
    635d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6362:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    6366:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    636b:	4c 89 e8             	mov    %r13,%rax
    636e:	48 89 e9             	mov    %rbp,%rcx
    6371:	48 39 f5             	cmp    %rsi,%rbp
    6374:	0f 82 d9 00 00 00    	jb     6453 <spec_qsort+0x1523>
    637a:	48 83 7c 24 60 20    	cmpq   $0x20,0x60(%rsp)
    6380:	7d 09                	jge    638b <spec_qsort+0x145b>
    6382:	31 d2                	xor    %edx,%edx
    6384:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    6389:	eb 66                	jmp    63f1 <spec_qsort+0x14c1>
    638b:	31 c0                	xor    %eax,%eax
    638d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    6392:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    6399:	00 
    639a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    63a0:	41 0f 10 44 05 00    	movups 0x0(%r13,%rax,1),%xmm0
    63a6:	41 0f 10 4c 05 10    	movups 0x10(%r13,%rax,1),%xmm1
    63ac:	0f 10 54 05 00       	movups 0x0(%rbp,%rax,1),%xmm2
    63b1:	0f 10 5c 05 10       	movups 0x10(%rbp,%rax,1),%xmm3
    63b6:	41 0f 11 54 05 00    	movups %xmm2,0x0(%r13,%rax,1)
    63bc:	41 0f 11 5c 05 10    	movups %xmm3,0x10(%r13,%rax,1)
    63c2:	0f 11 44 05 00       	movups %xmm0,0x0(%rbp,%rax,1)
    63c7:	0f 11 4c 05 10       	movups %xmm1,0x10(%rbp,%rax,1)
    63cc:	48 83 c0 20          	add    $0x20,%rax
    63d0:	48 39 c2             	cmp    %rax,%rdx
    63d3:	75 cb                	jne    63a0 <spec_qsort+0x1470>
    63d5:	48 39 d1             	cmp    %rdx,%rcx
    63d8:	0f 84 a2 00 00 00    	je     6480 <spec_qsort+0x1550>
    63de:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    63e5:	00 
    63e6:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    63eb:	41 f6 c0 18          	test   $0x18,%r8b
    63ef:	74 4b                	je     643c <spec_qsort+0x150c>
    63f1:	48 8b 9c 24 c8 00 00 	mov    0xc8(%rsp),%rbx
    63f8:	00 
    63f9:	4a 8d 04 2b          	lea    (%rbx,%r13,1),%rax
    63fd:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
    6401:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6408:	0f 1f 84 00 00 00 00 
    640f:	00 
    6410:	49 8b 74 15 00       	mov    0x0(%r13,%rdx,1),%rsi
    6415:	48 8b 7c 15 00       	mov    0x0(%rbp,%rdx,1),%rdi
    641a:	49 89 7c 15 00       	mov    %rdi,0x0(%r13,%rdx,1)
    641f:	48 89 74 15 00       	mov    %rsi,0x0(%rbp,%rdx,1)
    6424:	48 83 c2 08          	add    $0x8,%rdx
    6428:	48 39 d3             	cmp    %rdx,%rbx
    642b:	75 e3                	jne    6410 <spec_qsort+0x14e0>
    642d:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
    6434:	00 
    6435:	49 39 d8             	cmp    %rbx,%r8
    6438:	75 19                	jne    6453 <spec_qsort+0x1523>
    643a:	eb 44                	jmp    6480 <spec_qsort+0x1550>
    643c:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    6443:	00 
    6444:	48 8d 0c 28          	lea    (%rax,%rbp,1),%rcx
    6448:	4c 01 e8             	add    %r13,%rax
    644b:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    6452:	00 
    6453:	48 ff c2             	inc    %rdx
    6456:	31 f6                	xor    %esi,%esi
    6458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    645f:	00 
    6460:	0f b6 3c 30          	movzbl (%rax,%rsi,1),%edi
    6464:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
    6469:	44 88 04 30          	mov    %r8b,(%rax,%rsi,1)
    646d:	40 88 3c 31          	mov    %dil,(%rcx,%rsi,1)
    6471:	48 ff ca             	dec    %rdx
    6474:	48 ff c6             	inc    %rsi
    6477:	48 83 fa 01          	cmp    $0x1,%rdx
    647b:	7f e3                	jg     6460 <spec_qsort+0x1530>
    647d:	0f 1f 00             	nopl   (%rax)
    6480:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    6485:	4d 01 e5             	add    %r12,%r13
    6488:	48 03 6c 24 78       	add    0x78(%rsp),%rbp
    648d:	c7 44 24 70 01 00 00 	movl   $0x1,0x70(%rsp)
    6494:	00 
    6495:	48 89 e9             	mov    %rbp,%rcx
    6498:	4c 89 ed             	mov    %r13,%rbp
    649b:	48 39 cd             	cmp    %rcx,%rbp
    649e:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    64a3:	0f 87 87 f8 ff ff    	ja     5d30 <spec_qsort+0xe00>
    64a9:	e9 70 f4 ff ff       	jmp    591e <spec_qsort+0x9ee>
    64ae:	48 89 cd             	mov    %rcx,%rbp
    64b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    64b8:	0f 1f 84 00 00 00 00 
    64bf:	00 
    64c0:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
    64c7:	00 
    64c8:	4d 0f af fc          	imul   %r12,%r15
    64cc:	4b 8d 04 3b          	lea    (%r11,%r15,1),%rax
    64d0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    64d5:	83 7c 24 70 00       	cmpl   $0x0,0x70(%rsp)
    64da:	0f 84 eb 07 00 00    	je     6ccb <spec_qsort+0x1d9b>
    64e0:	4c 89 e8             	mov    %r13,%rax
    64e3:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    64e8:	48 29 d0             	sub    %rdx,%rax
    64eb:	4c 29 da             	sub    %r11,%rdx
    64ee:	48 39 c2             	cmp    %rax,%rdx
    64f1:	48 0f 4d d0          	cmovge %rax,%rdx
    64f5:	48 85 d2             	test   %rdx,%rdx
    64f8:	0f 84 b2 02 00 00    	je     67b0 <spec_qsort+0x1880>
    64fe:	48 89 d6             	mov    %rdx,%rsi
    6501:	48 f7 de             	neg    %rsi
    6504:	4c 89 e9             	mov    %r13,%rcx
    6507:	48 29 d1             	sub    %rdx,%rcx
    650a:	48 89 d3             	mov    %rdx,%rbx
    650d:	48 63 d2             	movslq %edx,%rdx
    6510:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    6515:	74 29                	je     6540 <spec_qsort+0x1610>
    6517:	48 89 d7             	mov    %rdx,%rdi
    651a:	48 c1 ef 03          	shr    $0x3,%rdi
    651e:	48 83 fa 08          	cmp    $0x8,%rdx
    6522:	49 89 f8             	mov    %rdi,%r8
    6525:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
    6529:	49 ff c0             	inc    %r8
    652c:	49 83 f8 08          	cmp    $0x8,%r8
    6530:	73 3f                	jae    6571 <spec_qsort+0x1641>
    6532:	4c 89 da             	mov    %r11,%rdx
    6535:	e9 56 01 00 00       	jmp    6690 <spec_qsort+0x1760>
    653a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6540:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    6547:	01 
    6548:	74 7a                	je     65c4 <spec_qsort+0x1694>
    654a:	48 89 d7             	mov    %rdx,%rdi
    654d:	48 c1 ef 02          	shr    $0x2,%rdi
    6551:	48 83 fa 04          	cmp    $0x4,%rdx
    6555:	49 89 f8             	mov    %rdi,%r8
    6558:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
    655c:	49 ff c0             	inc    %r8
    655f:	49 83 f8 08          	cmp    $0x8,%r8
    6563:	0f 83 59 01 00 00    	jae    66c2 <spec_qsort+0x1792>
    6569:	4c 89 da             	mov    %r11,%rdx
    656c:	e9 0e 02 00 00       	jmp    677f <spec_qsort+0x184f>
    6571:	49 89 d1             	mov    %rdx,%r9
    6574:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    6578:	45 31 d2             	xor    %r10d,%r10d
    657b:	48 83 fa 08          	cmp    $0x8,%rdx
    657f:	41 0f 93 c2          	setae  %r10b
    6583:	4a 8d 14 d3          	lea    (%rbx,%r10,8),%rdx
    6587:	4d 89 cb             	mov    %r9,%r11
    658a:	49 29 d3             	sub    %rdx,%r11
    658d:	4b 8d 14 2b          	lea    (%r11,%r13,1),%rdx
    6591:	48 83 c2 08          	add    $0x8,%rdx
    6595:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    659a:	49 39 d3             	cmp    %rdx,%r11
    659d:	0f 83 7f 00 00 00    	jae    6622 <spec_qsort+0x16f2>
    65a3:	49 c1 e2 03          	shl    $0x3,%r10
    65a7:	4d 29 d1             	sub    %r10,%r9
    65aa:	4b 8d 14 0b          	lea    (%r11,%r9,1),%rdx
    65ae:	48 83 c2 08          	add    $0x8,%rdx
    65b2:	48 39 d1             	cmp    %rdx,%rcx
    65b5:	73 6b                	jae    6622 <spec_qsort+0x16f2>
    65b7:	4c 89 da             	mov    %r11,%rdx
    65ba:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    65bf:	e9 cc 00 00 00       	jmp    6690 <spec_qsort+0x1760>
    65c4:	48 83 fa 02          	cmp    $0x2,%rdx
    65c8:	bf 01 00 00 00       	mov    $0x1,%edi
    65cd:	48 0f 4d fa          	cmovge %rdx,%rdi
    65d1:	48 83 fa 08          	cmp    $0x8,%rdx
    65d5:	7c 1d                	jl     65f4 <spec_qsort+0x16c4>
    65d7:	4e 8d 04 2a          	lea    (%rdx,%r13,1),%r8
    65db:	49 29 d8             	sub    %rbx,%r8
    65de:	4d 39 c3             	cmp    %r8,%r11
    65e1:	0f 83 27 01 00 00    	jae    670e <spec_qsort+0x17de>
    65e7:	4d 8d 04 13          	lea    (%r11,%rdx,1),%r8
    65eb:	4c 39 c1             	cmp    %r8,%rcx
    65ee:	0f 83 1a 01 00 00    	jae    670e <spec_qsort+0x17de>
    65f4:	4c 89 de             	mov    %r11,%rsi
    65f7:	49 89 c9             	mov    %rcx,%r9
    65fa:	48 ff c2             	inc    %rdx
    65fd:	31 c9                	xor    %ecx,%ecx
    65ff:	90                   	nop
    6600:	0f b6 3c 0e          	movzbl (%rsi,%rcx,1),%edi
    6604:	45 0f b6 04 09       	movzbl (%r9,%rcx,1),%r8d
    6609:	44 88 04 0e          	mov    %r8b,(%rsi,%rcx,1)
    660d:	41 88 3c 09          	mov    %dil,(%r9,%rcx,1)
    6611:	48 ff ca             	dec    %rdx
    6614:	48 ff c1             	inc    %rcx
    6617:	48 83 fa 01          	cmp    $0x1,%rdx
    661b:	7f e3                	jg     6600 <spec_qsort+0x16d0>
    661d:	e9 8e 01 00 00       	jmp    67b0 <spec_qsort+0x1880>
    6622:	4d 89 c1             	mov    %r8,%r9
    6625:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    6629:	4a 8d 0c c9          	lea    (%rcx,%r9,8),%rcx
    662d:	4b 8d 14 cb          	lea    (%r11,%r9,8),%rdx
    6631:	4c 29 cf             	sub    %r9,%rdi
    6634:	4c 01 ee             	add    %r13,%rsi
    6637:	48 83 c6 10          	add    $0x10,%rsi
    663b:	45 31 d2             	xor    %r10d,%r10d
    663e:	66 90                	xchg   %ax,%ax
    6640:	43 0f 10 04 d3       	movups (%r11,%r10,8),%xmm0
    6645:	43 0f 10 4c d3 10    	movups 0x10(%r11,%r10,8),%xmm1
    664b:	42 0f 10 54 d6 f0    	movups -0x10(%rsi,%r10,8),%xmm2
    6651:	42 0f 10 1c d6       	movups (%rsi,%r10,8),%xmm3
    6656:	43 0f 11 14 d3       	movups %xmm2,(%r11,%r10,8)
    665b:	43 0f 11 5c d3 10    	movups %xmm3,0x10(%r11,%r10,8)
    6661:	42 0f 11 44 d6 f0    	movups %xmm0,-0x10(%rsi,%r10,8)
    6667:	42 0f 11 0c d6       	movups %xmm1,(%rsi,%r10,8)
    666c:	49 83 c2 04          	add    $0x4,%r10
    6670:	4d 39 d1             	cmp    %r10,%r9
    6673:	75 cb                	jne    6640 <spec_qsort+0x1710>
    6675:	4d 39 c8             	cmp    %r9,%r8
    6678:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    667d:	0f 84 2d 01 00 00    	je     67b0 <spec_qsort+0x1880>
    6683:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    668a:	84 00 00 00 00 00 
    6690:	48 ff c7             	inc    %rdi
    6693:	31 f6                	xor    %esi,%esi
    6695:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    669c:	00 00 00 00 
    66a0:	4c 8b 04 32          	mov    (%rdx,%rsi,1),%r8
    66a4:	4c 8b 0c 31          	mov    (%rcx,%rsi,1),%r9
    66a8:	4c 89 0c 32          	mov    %r9,(%rdx,%rsi,1)
    66ac:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    66b0:	48 83 c6 08          	add    $0x8,%rsi
    66b4:	48 ff cf             	dec    %rdi
    66b7:	48 83 ff 01          	cmp    $0x1,%rdi
    66bb:	77 e3                	ja     66a0 <spec_qsort+0x1770>
    66bd:	e9 ee 00 00 00       	jmp    67b0 <spec_qsort+0x1880>
    66c2:	49 89 d1             	mov    %rdx,%r9
    66c5:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    66c9:	45 31 d2             	xor    %r10d,%r10d
    66cc:	48 83 fa 04          	cmp    $0x4,%rdx
    66d0:	41 0f 93 c2          	setae  %r10b
    66d4:	4a 8d 14 93          	lea    (%rbx,%r10,4),%rdx
    66d8:	4d 89 cb             	mov    %r9,%r11
    66db:	49 29 d3             	sub    %rdx,%r11
    66de:	4b 8d 14 2b          	lea    (%r11,%r13,1),%rdx
    66e2:	48 83 c2 04          	add    $0x4,%rdx
    66e6:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    66eb:	49 39 d3             	cmp    %rdx,%r11
    66ee:	73 30                	jae    6720 <spec_qsort+0x17f0>
    66f0:	49 c1 e2 02          	shl    $0x2,%r10
    66f4:	4d 29 d1             	sub    %r10,%r9
    66f7:	4b 8d 14 0b          	lea    (%r11,%r9,1),%rdx
    66fb:	48 83 c2 04          	add    $0x4,%rdx
    66ff:	48 39 d1             	cmp    %rdx,%rcx
    6702:	73 1c                	jae    6720 <spec_qsort+0x17f0>
    6704:	4c 89 da             	mov    %r11,%rdx
    6707:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    670c:	eb 71                	jmp    677f <spec_qsort+0x184f>
    670e:	48 83 fa 20          	cmp    $0x20,%rdx
    6712:	0f 8d ea 03 00 00    	jge    6b02 <spec_qsort+0x1bd2>
    6718:	45 31 c0             	xor    %r8d,%r8d
    671b:	e9 48 04 00 00       	jmp    6b68 <spec_qsort+0x1c38>
    6720:	4d 89 c1             	mov    %r8,%r9
    6723:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    6727:	4c 29 cf             	sub    %r9,%rdi
    672a:	4b 8d 14 8b          	lea    (%r11,%r9,4),%rdx
    672e:	4a 8d 0c 89          	lea    (%rcx,%r9,4),%rcx
    6732:	4c 01 ee             	add    %r13,%rsi
    6735:	48 83 c6 10          	add    $0x10,%rsi
    6739:	45 31 d2             	xor    %r10d,%r10d
    673c:	0f 1f 40 00          	nopl   0x0(%rax)
    6740:	43 0f 10 04 93       	movups (%r11,%r10,4),%xmm0
    6745:	43 0f 10 4c 93 10    	movups 0x10(%r11,%r10,4),%xmm1
    674b:	42 0f 10 54 96 f0    	movups -0x10(%rsi,%r10,4),%xmm2
    6751:	42 0f 10 1c 96       	movups (%rsi,%r10,4),%xmm3
    6756:	43 0f 11 14 93       	movups %xmm2,(%r11,%r10,4)
    675b:	43 0f 11 5c 93 10    	movups %xmm3,0x10(%r11,%r10,4)
    6761:	42 0f 11 44 96 f0    	movups %xmm0,-0x10(%rsi,%r10,4)
    6767:	42 0f 11 0c 96       	movups %xmm1,(%rsi,%r10,4)
    676c:	49 83 c2 08          	add    $0x8,%r10
    6770:	4d 39 d1             	cmp    %r10,%r9
    6773:	75 cb                	jne    6740 <spec_qsort+0x1810>
    6775:	4d 39 c8             	cmp    %r9,%r8
    6778:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    677d:	74 31                	je     67b0 <spec_qsort+0x1880>
    677f:	48 ff c7             	inc    %rdi
    6782:	31 f6                	xor    %esi,%esi
    6784:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    678b:	00 00 00 00 00 
    6790:	44 8b 04 32          	mov    (%rdx,%rsi,1),%r8d
    6794:	44 8b 0c 31          	mov    (%rcx,%rsi,1),%r9d
    6798:	44 89 0c 32          	mov    %r9d,(%rdx,%rsi,1)
    679c:	44 89 04 31          	mov    %r8d,(%rcx,%rsi,1)
    67a0:	48 ff cf             	dec    %rdi
    67a3:	48 83 c6 04          	add    $0x4,%rsi
    67a7:	48 83 ff 01          	cmp    $0x1,%rdi
    67ab:	77 e3                	ja     6790 <spec_qsort+0x1860>
    67ad:	0f 1f 00             	nopl   (%rax)
    67b0:	48 8b 0c 24          	mov    (%rsp),%rcx
    67b4:	48 89 cb             	mov    %rcx,%rbx
    67b7:	48 29 eb             	sub    %rbp,%rbx
    67ba:	4c 01 e1             	add    %r12,%rcx
    67bd:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    67c2:	4c 89 c6             	mov    %r8,%rsi
    67c5:	48 29 ce             	sub    %rcx,%rsi
    67c8:	48 39 f3             	cmp    %rsi,%rbx
    67cb:	48 0f 4c f3          	cmovl  %rbx,%rsi
    67cf:	48 85 f6             	test   %rsi,%rsi
    67d2:	0f 84 c8 02 00 00    	je     6aa0 <spec_qsort+0x1b70>
    67d8:	4c 89 c1             	mov    %r8,%rcx
    67db:	48 29 f1             	sub    %rsi,%rcx
    67de:	48 63 d6             	movslq %esi,%rdx
    67e1:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    67e6:	74 28                	je     6810 <spec_qsort+0x18e0>
    67e8:	48 89 d7             	mov    %rdx,%rdi
    67eb:	48 c1 ef 03          	shr    $0x3,%rdi
    67ef:	48 83 fa 08          	cmp    $0x8,%rdx
    67f3:	49 89 f8             	mov    %rdi,%r8
    67f6:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
    67fa:	49 ff c0             	inc    %r8
    67fd:	49 83 f8 0a          	cmp    $0xa,%r8
    6801:	73 3e                	jae    6841 <spec_qsort+0x1911>
    6803:	4c 89 ea             	mov    %r13,%rdx
    6806:	e9 65 01 00 00       	jmp    6970 <spec_qsort+0x1a40>
    680b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6810:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    6817:	01 
    6818:	74 7a                	je     6894 <spec_qsort+0x1964>
    681a:	48 89 d7             	mov    %rdx,%rdi
    681d:	48 c1 ef 02          	shr    $0x2,%rdi
    6821:	48 83 fa 04          	cmp    $0x4,%rdx
    6825:	49 89 f8             	mov    %rdi,%r8
    6828:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
    682c:	49 ff c0             	inc    %r8
    682f:	49 83 f8 0c          	cmp    $0xc,%r8
    6833:	0f 83 69 01 00 00    	jae    69a2 <spec_qsort+0x1a72>
    6839:	4c 89 ea             	mov    %r13,%rdx
    683c:	e9 30 02 00 00       	jmp    6a71 <spec_qsort+0x1b41>
    6841:	49 89 d1             	mov    %rdx,%r9
    6844:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    6848:	45 31 d2             	xor    %r10d,%r10d
    684b:	48 83 fa 08          	cmp    $0x8,%rdx
    684f:	41 0f 93 c2          	setae  %r10b
    6853:	4b 8d 14 0f          	lea    (%r15,%r9,1),%rdx
    6857:	4e 8d 1c d6          	lea    (%rsi,%r10,8),%r11
    685b:	4c 29 da             	sub    %r11,%rdx
    685e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6863:	4c 01 da             	add    %r11,%rdx
    6866:	48 83 c2 08          	add    $0x8,%rdx
    686a:	49 39 d5             	cmp    %rdx,%r13
    686d:	0f 83 7f 00 00 00    	jae    68f2 <spec_qsort+0x19c2>
    6873:	49 c1 e2 03          	shl    $0x3,%r10
    6877:	4d 29 d1             	sub    %r10,%r9
    687a:	4b 8d 14 29          	lea    (%r9,%r13,1),%rdx
    687e:	48 83 c2 08          	add    $0x8,%rdx
    6882:	48 39 d1             	cmp    %rdx,%rcx
    6885:	73 6b                	jae    68f2 <spec_qsort+0x19c2>
    6887:	4c 89 ea             	mov    %r13,%rdx
    688a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    688f:	e9 dc 00 00 00       	jmp    6970 <spec_qsort+0x1a40>
    6894:	48 83 fa 02          	cmp    $0x2,%rdx
    6898:	bf 01 00 00 00       	mov    $0x1,%edi
    689d:	48 0f 4d fa          	cmovge %rdx,%rdi
    68a1:	48 83 fa 08          	cmp    $0x8,%rdx
    68a5:	7c 1c                	jl     68c3 <spec_qsort+0x1993>
    68a7:	49 01 d0             	add    %rdx,%r8
    68aa:	49 29 f0             	sub    %rsi,%r8
    68ad:	4d 39 c5             	cmp    %r8,%r13
    68b0:	0f 83 3b 01 00 00    	jae    69f1 <spec_qsort+0x1ac1>
    68b6:	4e 8d 04 2a          	lea    (%rdx,%r13,1),%r8
    68ba:	4c 39 c1             	cmp    %r8,%rcx
    68bd:	0f 83 2e 01 00 00    	jae    69f1 <spec_qsort+0x1ac1>
    68c3:	4c 89 ee             	mov    %r13,%rsi
    68c6:	49 89 c9             	mov    %rcx,%r9
    68c9:	48 ff c2             	inc    %rdx
    68cc:	31 c9                	xor    %ecx,%ecx
    68ce:	66 90                	xchg   %ax,%ax
    68d0:	0f b6 3c 0e          	movzbl (%rsi,%rcx,1),%edi
    68d4:	45 0f b6 04 09       	movzbl (%r9,%rcx,1),%r8d
    68d9:	44 88 04 0e          	mov    %r8b,(%rsi,%rcx,1)
    68dd:	41 88 3c 09          	mov    %dil,(%r9,%rcx,1)
    68e1:	48 ff ca             	dec    %rdx
    68e4:	48 ff c1             	inc    %rcx
    68e7:	48 83 fa 01          	cmp    $0x1,%rdx
    68eb:	7f e3                	jg     68d0 <spec_qsort+0x19a0>
    68ed:	e9 ae 01 00 00       	jmp    6aa0 <spec_qsort+0x1b70>
    68f2:	4d 89 c1             	mov    %r8,%r9
    68f5:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    68f9:	4a 8d 0c c9          	lea    (%rcx,%r9,8),%rcx
    68fd:	4a 8d 14 cd 00 00 00 	lea    0x0(,%r9,8),%rdx
    6904:	00 
    6905:	4c 01 ea             	add    %r13,%rdx
    6908:	4c 29 cf             	sub    %r9,%rdi
    690b:	49 29 f7             	sub    %rsi,%r15
    690e:	4b 8d 34 3b          	lea    (%r11,%r15,1),%rsi
    6912:	48 83 c6 10          	add    $0x10,%rsi
    6916:	45 31 d2             	xor    %r10d,%r10d
    6919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6920:	43 0f 10 44 d5 00    	movups 0x0(%r13,%r10,8),%xmm0
    6926:	43 0f 10 4c d5 10    	movups 0x10(%r13,%r10,8),%xmm1
    692c:	42 0f 10 54 d6 f0    	movups -0x10(%rsi,%r10,8),%xmm2
    6932:	42 0f 10 1c d6       	movups (%rsi,%r10,8),%xmm3
    6937:	43 0f 11 54 d5 00    	movups %xmm2,0x0(%r13,%r10,8)
    693d:	43 0f 11 5c d5 10    	movups %xmm3,0x10(%r13,%r10,8)
    6943:	42 0f 11 44 d6 f0    	movups %xmm0,-0x10(%rsi,%r10,8)
    6949:	42 0f 11 0c d6       	movups %xmm1,(%rsi,%r10,8)
    694e:	49 83 c2 04          	add    $0x4,%r10
    6952:	4d 39 d1             	cmp    %r10,%r9
    6955:	75 c9                	jne    6920 <spec_qsort+0x19f0>
    6957:	4d 39 c8             	cmp    %r9,%r8
    695a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    695f:	0f 84 3b 01 00 00    	je     6aa0 <spec_qsort+0x1b70>
    6965:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    696c:	00 00 00 00 
    6970:	48 ff c7             	inc    %rdi
    6973:	31 f6                	xor    %esi,%esi
    6975:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    697c:	00 00 00 00 
    6980:	4c 8b 04 32          	mov    (%rdx,%rsi,1),%r8
    6984:	4c 8b 0c 31          	mov    (%rcx,%rsi,1),%r9
    6988:	4c 89 0c 32          	mov    %r9,(%rdx,%rsi,1)
    698c:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    6990:	48 83 c6 08          	add    $0x8,%rsi
    6994:	48 ff cf             	dec    %rdi
    6997:	48 83 ff 01          	cmp    $0x1,%rdi
    699b:	77 e3                	ja     6980 <spec_qsort+0x1a50>
    699d:	e9 fe 00 00 00       	jmp    6aa0 <spec_qsort+0x1b70>
    69a2:	49 89 d1             	mov    %rdx,%r9
    69a5:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    69a9:	45 31 d2             	xor    %r10d,%r10d
    69ac:	48 83 fa 04          	cmp    $0x4,%rdx
    69b0:	41 0f 93 c2          	setae  %r10b
    69b4:	4b 8d 14 0f          	lea    (%r15,%r9,1),%rdx
    69b8:	4e 8d 1c 96          	lea    (%rsi,%r10,4),%r11
    69bc:	4c 29 da             	sub    %r11,%rdx
    69bf:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    69c4:	4c 01 da             	add    %r11,%rdx
    69c7:	48 83 c2 04          	add    $0x4,%rdx
    69cb:	49 39 d5             	cmp    %rdx,%r13
    69ce:	73 33                	jae    6a03 <spec_qsort+0x1ad3>
    69d0:	49 c1 e2 02          	shl    $0x2,%r10
    69d4:	4d 29 d1             	sub    %r10,%r9
    69d7:	4b 8d 14 29          	lea    (%r9,%r13,1),%rdx
    69db:	48 83 c2 04          	add    $0x4,%rdx
    69df:	48 39 d1             	cmp    %rdx,%rcx
    69e2:	73 1f                	jae    6a03 <spec_qsort+0x1ad3>
    69e4:	4c 89 ea             	mov    %r13,%rdx
    69e7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    69ec:	e9 80 00 00 00       	jmp    6a71 <spec_qsort+0x1b41>
    69f1:	48 83 fa 20          	cmp    $0x20,%rdx
    69f5:	0f 8d d0 01 00 00    	jge    6bcb <spec_qsort+0x1c9b>
    69fb:	45 31 c0             	xor    %r8d,%r8d
    69fe:	e9 33 02 00 00       	jmp    6c36 <spec_qsort+0x1d06>
    6a03:	4d 89 c1             	mov    %r8,%r9
    6a06:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    6a0a:	4c 29 cf             	sub    %r9,%rdi
    6a0d:	4a 8d 14 8d 00 00 00 	lea    0x0(,%r9,4),%rdx
    6a14:	00 
    6a15:	4c 01 ea             	add    %r13,%rdx
    6a18:	4a 8d 0c 89          	lea    (%rcx,%r9,4),%rcx
    6a1c:	49 29 f7             	sub    %rsi,%r15
    6a1f:	4b 8d 34 3b          	lea    (%r11,%r15,1),%rsi
    6a23:	48 83 c6 10          	add    $0x10,%rsi
    6a27:	45 31 d2             	xor    %r10d,%r10d
    6a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a30:	43 0f 10 44 95 00    	movups 0x0(%r13,%r10,4),%xmm0
    6a36:	43 0f 10 4c 95 10    	movups 0x10(%r13,%r10,4),%xmm1
    6a3c:	42 0f 10 54 96 f0    	movups -0x10(%rsi,%r10,4),%xmm2
    6a42:	42 0f 10 1c 96       	movups (%rsi,%r10,4),%xmm3
    6a47:	43 0f 11 54 95 00    	movups %xmm2,0x0(%r13,%r10,4)
    6a4d:	43 0f 11 5c 95 10    	movups %xmm3,0x10(%r13,%r10,4)
    6a53:	42 0f 11 44 96 f0    	movups %xmm0,-0x10(%rsi,%r10,4)
    6a59:	42 0f 11 0c 96       	movups %xmm1,(%rsi,%r10,4)
    6a5e:	49 83 c2 08          	add    $0x8,%r10
    6a62:	4d 39 d1             	cmp    %r10,%r9
    6a65:	75 c9                	jne    6a30 <spec_qsort+0x1b00>
    6a67:	4d 39 c8             	cmp    %r9,%r8
    6a6a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    6a6f:	74 2f                	je     6aa0 <spec_qsort+0x1b70>
    6a71:	48 ff c7             	inc    %rdi
    6a74:	31 f6                	xor    %esi,%esi
    6a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a7d:	00 00 00 
    6a80:	44 8b 04 32          	mov    (%rdx,%rsi,1),%r8d
    6a84:	44 8b 0c 31          	mov    (%rcx,%rsi,1),%r9d
    6a88:	44 89 0c 32          	mov    %r9d,(%rdx,%rsi,1)
    6a8c:	44 89 04 31          	mov    %r8d,(%rcx,%rsi,1)
    6a90:	48 ff cf             	dec    %rdi
    6a93:	48 83 c6 04          	add    $0x4,%rsi
    6a97:	48 83 ff 01          	cmp    $0x1,%rdi
    6a9b:	77 e3                	ja     6a80 <spec_qsort+0x1b50>
    6a9d:	0f 1f 00             	nopl   (%rax)
    6aa0:	4c 39 e0             	cmp    %r12,%rax
    6aa3:	76 30                	jbe    6ad5 <spec_qsort+0x1ba5>
    6aa5:	48 89 c1             	mov    %rax,%rcx
    6aa8:	4c 09 e1             	or     %r12,%rcx
    6aab:	48 c1 e9 20          	shr    $0x20,%rcx
    6aaf:	74 07                	je     6ab8 <spec_qsort+0x1b88>
    6ab1:	31 d2                	xor    %edx,%edx
    6ab3:	49 f7 f4             	div    %r12
    6ab6:	eb 05                	jmp    6abd <spec_qsort+0x1b8d>
    6ab8:	31 d2                	xor    %edx,%edx
    6aba:	41 f7 f4             	div    %r12d
    6abd:	4c 89 df             	mov    %r11,%rdi
    6ac0:	48 89 c6             	mov    %rax,%rsi
    6ac3:	4c 89 e2             	mov    %r12,%rdx
    6ac6:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    6acb:	e8 60 e4 ff ff       	call   4f30 <spec_qsort>
    6ad0:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    6ad5:	4c 39 e3             	cmp    %r12,%rbx
    6ad8:	4c 8b 4c 24 48       	mov    0x48(%rsp),%r9
    6add:	0f 86 15 0f 00 00    	jbe    79f8 <spec_qsort+0x2ac8>
    6ae3:	48 89 d8             	mov    %rbx,%rax
    6ae6:	4c 09 e0             	or     %r12,%rax
    6ae9:	48 c1 e8 20          	shr    $0x20,%rax
    6aed:	0f 85 4d e8 ff ff    	jne    5340 <spec_qsort+0x410>
    6af3:	89 d8                	mov    %ebx,%eax
    6af5:	31 d2                	xor    %edx,%edx
    6af7:	41 f7 f4             	div    %r12d
    6afa:	41 89 c7             	mov    %eax,%r15d
    6afd:	e9 49 e8 ff ff       	jmp    534b <spec_qsort+0x41b>
    6b02:	49 89 f8             	mov    %rdi,%r8
    6b05:	49 b9 e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%r9
    6b0c:	ff ff 7f 
    6b0f:	4d 21 c8             	and    %r9,%r8
    6b12:	4c 01 ee             	add    %r13,%rsi
    6b15:	48 83 c6 10          	add    $0x10,%rsi
    6b19:	45 31 c9             	xor    %r9d,%r9d
    6b1c:	0f 1f 40 00          	nopl   0x0(%rax)
    6b20:	43 0f 10 04 0b       	movups (%r11,%r9,1),%xmm0
    6b25:	43 0f 10 4c 0b 10    	movups 0x10(%r11,%r9,1),%xmm1
    6b2b:	42 0f 10 54 0e f0    	movups -0x10(%rsi,%r9,1),%xmm2
    6b31:	42 0f 10 1c 0e       	movups (%rsi,%r9,1),%xmm3
    6b36:	43 0f 11 14 0b       	movups %xmm2,(%r11,%r9,1)
    6b3b:	43 0f 11 5c 0b 10    	movups %xmm3,0x10(%r11,%r9,1)
    6b41:	42 0f 11 44 0e f0    	movups %xmm0,-0x10(%rsi,%r9,1)
    6b47:	42 0f 11 0c 0e       	movups %xmm1,(%rsi,%r9,1)
    6b4c:	49 83 c1 20          	add    $0x20,%r9
    6b50:	4d 39 c8             	cmp    %r9,%r8
    6b53:	75 cb                	jne    6b20 <spec_qsort+0x1bf0>
    6b55:	4c 39 c7             	cmp    %r8,%rdi
    6b58:	0f 84 52 fc ff ff    	je     67b0 <spec_qsort+0x1880>
    6b5e:	40 f6 c7 18          	test   $0x18,%dil
    6b62:	0f 84 2b 01 00 00    	je     6c93 <spec_qsort+0x1d63>
    6b68:	48 be e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%rsi
    6b6f:	ff ff 7f 
    6b72:	4c 8d 56 18          	lea    0x18(%rsi),%r10
    6b76:	49 21 fa             	and    %rdi,%r10
    6b79:	4c 29 d2             	sub    %r10,%rdx
    6b7c:	4b 8d 34 13          	lea    (%r11,%r10,1),%rsi
    6b80:	4e 8d 0c 11          	lea    (%rcx,%r10,1),%r9
    6b84:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    6b8b:	00 00 00 00 00 
    6b90:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6b95:	4f 8b 1c 03          	mov    (%r11,%r8,1),%r11
    6b99:	4a 8b 1c 01          	mov    (%rcx,%r8,1),%rbx
    6b9d:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    6ba2:	4b 89 1c 06          	mov    %rbx,(%r14,%r8,1)
    6ba6:	4e 89 1c 01          	mov    %r11,(%rcx,%r8,1)
    6baa:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6baf:	49 83 c0 08          	add    $0x8,%r8
    6bb3:	4d 39 c2             	cmp    %r8,%r10
    6bb6:	75 d8                	jne    6b90 <spec_qsort+0x1c60>
    6bb8:	4c 39 d7             	cmp    %r10,%rdi
    6bbb:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    6bc0:	0f 85 34 fa ff ff    	jne    65fa <spec_qsort+0x16ca>
    6bc6:	e9 e5 fb ff ff       	jmp    67b0 <spec_qsort+0x1880>
    6bcb:	49 89 f8             	mov    %rdi,%r8
    6bce:	49 b9 e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%r9
    6bd5:	ff ff 7f 
    6bd8:	4d 21 c8             	and    %r9,%r8
    6bdb:	49 29 f7             	sub    %rsi,%r15
    6bde:	4b 8d 34 3b          	lea    (%r11,%r15,1),%rsi
    6be2:	48 83 c6 10          	add    $0x10,%rsi
    6be6:	45 31 c9             	xor    %r9d,%r9d
    6be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6bf0:	43 0f 10 44 0d 00    	movups 0x0(%r13,%r9,1),%xmm0
    6bf6:	43 0f 10 4c 0d 10    	movups 0x10(%r13,%r9,1),%xmm1
    6bfc:	42 0f 10 54 0e f0    	movups -0x10(%rsi,%r9,1),%xmm2
    6c02:	42 0f 10 1c 0e       	movups (%rsi,%r9,1),%xmm3
    6c07:	43 0f 11 54 0d 00    	movups %xmm2,0x0(%r13,%r9,1)
    6c0d:	43 0f 11 5c 0d 10    	movups %xmm3,0x10(%r13,%r9,1)
    6c13:	42 0f 11 44 0e f0    	movups %xmm0,-0x10(%rsi,%r9,1)
    6c19:	42 0f 11 0c 0e       	movups %xmm1,(%rsi,%r9,1)
    6c1e:	49 83 c1 20          	add    $0x20,%r9
    6c22:	4d 39 c8             	cmp    %r9,%r8
    6c25:	75 c9                	jne    6bf0 <spec_qsort+0x1cc0>
    6c27:	4c 39 c7             	cmp    %r8,%rdi
    6c2a:	0f 84 70 fe ff ff    	je     6aa0 <spec_qsort+0x1b70>
    6c30:	40 f6 c7 18          	test   $0x18,%dil
    6c34:	74 6c                	je     6ca2 <spec_qsort+0x1d72>
    6c36:	48 be e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%rsi
    6c3d:	ff ff 7f 
    6c40:	4c 8d 56 18          	lea    0x18(%rsi),%r10
    6c44:	49 21 fa             	and    %rdi,%r10
    6c47:	4c 29 d2             	sub    %r10,%rdx
    6c4a:	4b 8d 34 2a          	lea    (%r10,%r13,1),%rsi
    6c4e:	4e 8d 0c 11          	lea    (%rcx,%r10,1),%r9
    6c52:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6c59:	1f 84 00 00 00 00 00 
    6c60:	4f 8b 5c 05 00       	mov    0x0(%r13,%r8,1),%r11
    6c65:	4e 8b 34 01          	mov    (%rcx,%r8,1),%r14
    6c69:	4f 89 74 05 00       	mov    %r14,0x0(%r13,%r8,1)
    6c6e:	4e 89 1c 01          	mov    %r11,(%rcx,%r8,1)
    6c72:	49 83 c0 08          	add    $0x8,%r8
    6c76:	4d 39 c2             	cmp    %r8,%r10
    6c79:	75 e5                	jne    6c60 <spec_qsort+0x1d30>
    6c7b:	4c 39 d7             	cmp    %r10,%rdi
    6c7e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6c83:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    6c88:	0f 85 3b fc ff ff    	jne    68c9 <spec_qsort+0x1999>
    6c8e:	e9 0d fe ff ff       	jmp    6aa0 <spec_qsort+0x1b70>
    6c93:	4c 01 c1             	add    %r8,%rcx
    6c96:	4b 8d 34 03          	lea    (%r11,%r8,1),%rsi
    6c9a:	4c 29 c2             	sub    %r8,%rdx
    6c9d:	e9 55 f9 ff ff       	jmp    65f7 <spec_qsort+0x16c7>
    6ca2:	4c 01 c1             	add    %r8,%rcx
    6ca5:	4d 01 c5             	add    %r8,%r13
    6ca8:	4c 29 c2             	sub    %r8,%rdx
    6cab:	e9 13 fc ff ff       	jmp    68c3 <spec_qsort+0x1993>
    6cb0:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    6cb7:	00 
    6cb8:	49 01 c4             	add    %rax,%r12
    6cbb:	4c 01 d8             	add    %r11,%rax
    6cbe:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    6cc5:	00 
    6cc6:	e9 57 ea ff ff       	jmp    5722 <spec_qsort+0x7f2>
    6ccb:	4d 39 e7             	cmp    %r12,%r15
    6cce:	48 b9 e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%rcx
    6cd5:	ff ff 7f 
    6cd8:	0f 8e 1a 0d 00 00    	jle    79f8 <spec_qsort+0x2ac8>
    6cde:	83 7c 24 58 00       	cmpl   $0x0,0x58(%rsp)
    6ce3:	0f 84 a3 07 00 00    	je     748c <spec_qsort+0x255c>
    6ce9:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    6cee:	0f 84 fc 07 00 00    	je     74f0 <spec_qsort+0x25c0>
    6cf4:	f6 44 24 40 01       	testb  $0x1,0x40(%rsp)
    6cf9:	0f 84 5f 08 00 00    	je     755e <spec_qsort+0x262e>
    6cff:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
    6d06:	00 
    6d07:	4c 01 e0             	add    %r12,%rax
    6d0a:	48 83 c0 08          	add    $0x8,%rax
    6d0e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    6d13:	31 c0                	xor    %eax,%eax
    6d15:	48 83 7c 24 60 08    	cmpq   $0x8,0x60(%rsp)
    6d1b:	0f 93 c0             	setae  %al
    6d1e:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    6d25:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    6d2a:	48 f7 d8             	neg    %rax
    6d2d:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    6d32:	4c 8d 3c 01          	lea    (%rcx,%rax,1),%r15
    6d36:	49 ff c7             	inc    %r15
    6d39:	4c 89 fd             	mov    %r15,%rbp
    6d3c:	48 83 e5 fc          	and    $0xfffffffffffffffc,%rbp
    6d40:	48 8d 04 ed 00 00 00 	lea    0x0(,%rbp,8),%rax
    6d47:	00 
    6d48:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    6d4d:	48 29 e9             	sub    %rbp,%rcx
    6d50:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    6d55:	49 8d 43 10          	lea    0x10(%r11),%rax
    6d59:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6d5e:	31 c0                	xor    %eax,%eax
    6d60:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    6d65:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    6d6c:	00 
    6d6d:	eb 26                	jmp    6d95 <spec_qsort+0x1e65>
    6d6f:	90                   	nop
    6d70:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    6d75:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    6d7c:	00 
    6d7d:	48 01 c1             	add    %rax,%rcx
    6d80:	48 ff 44 24 30       	incq   0x30(%rsp)
    6d85:	48 01 44 24 10       	add    %rax,0x10(%rsp)
    6d8a:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    6d8f:	0f 83 63 0c 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    6d95:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
    6d9c:	00 
    6d9d:	4c 39 d9             	cmp    %r11,%rcx
    6da0:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    6da5:	76 c9                	jbe    6d70 <spec_qsort+0x1e40>
    6da7:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    6dac:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    6db2:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    6db7:	48 01 d1             	add    %rdx,%rcx
    6dba:	48 89 0c 24          	mov    %rcx,(%rsp)
    6dbe:	48 8b 8c 24 20 01 00 	mov    0x120(%rsp),%rcx
    6dc5:	00 
    6dc6:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    6dcb:	48 01 d1             	add    %rdx,%rcx
    6dce:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    6dd3:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    6dd8:	31 db                	xor    %ebx,%ebx
    6dda:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
    6de1:	00 
    6de2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6de9:	1f 84 00 00 00 00 00 
    6df0:	4e 8d 24 28          	lea    (%rax,%r13,1),%r12
    6df4:	4c 89 e7             	mov    %r12,%rdi
    6df7:	4c 89 ee             	mov    %r13,%rsi
    6dfa:	ff 54 24 38          	call   *0x38(%rsp)
    6dfe:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    6e03:	85 c0                	test   %eax,%eax
    6e05:	0f 8e 65 ff ff ff    	jle    6d70 <spec_qsort+0x1e40>
    6e0b:	49 83 ff 04          	cmp    $0x4,%r15
    6e0f:	72 3b                	jb     6e4c <spec_qsort+0x1f1c>
    6e11:	48 89 d8             	mov    %rbx,%rax
    6e14:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    6e1a:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    6e1f:	48 01 c1             	add    %rax,%rcx
    6e22:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6e27:	48 29 ca             	sub    %rcx,%rdx
    6e2a:	4c 01 da             	add    %r11,%rdx
    6e2d:	49 39 d5             	cmp    %rdx,%r13
    6e30:	73 6e                	jae    6ea0 <spec_qsort+0x1f70>
    6e32:	48 8b 14 24          	mov    (%rsp),%rdx
    6e36:	48 29 ca             	sub    %rcx,%rdx
    6e39:	4c 01 da             	add    %r11,%rdx
    6e3c:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    6e41:	48 29 c1             	sub    %rax,%rcx
    6e44:	4c 01 d9             	add    %r11,%rcx
    6e47:	48 39 d1             	cmp    %rdx,%rcx
    6e4a:	73 54                	jae    6ea0 <spec_qsort+0x1f70>
    6e4c:	4c 89 e0             	mov    %r12,%rax
    6e4f:	4c 89 e9             	mov    %r13,%rcx
    6e52:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    6e57:	48 ff c2             	inc    %rdx
    6e5a:	31 f6                	xor    %esi,%esi
    6e5c:	0f 1f 40 00          	nopl   0x0(%rax)
    6e60:	48 8b 3c 31          	mov    (%rcx,%rsi,1),%rdi
    6e64:	4c 8b 04 30          	mov    (%rax,%rsi,1),%r8
    6e68:	4c 89 04 31          	mov    %r8,(%rcx,%rsi,1)
    6e6c:	48 89 3c 30          	mov    %rdi,(%rax,%rsi,1)
    6e70:	48 83 c6 08          	add    $0x8,%rsi
    6e74:	48 ff ca             	dec    %rdx
    6e77:	48 83 fa 01          	cmp    $0x1,%rdx
    6e7b:	77 e3                	ja     6e60 <spec_qsort+0x1f30>
    6e7d:	48 ff c3             	inc    %rbx
    6e80:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    6e85:	49 01 c6             	add    %rax,%r14
    6e88:	4d 89 e5             	mov    %r12,%r13
    6e8b:	4d 39 dc             	cmp    %r11,%r12
    6e8e:	0f 87 5c ff ff ff    	ja     6df0 <spec_qsort+0x1ec0>
    6e94:	e9 d7 fe ff ff       	jmp    6d70 <spec_qsort+0x1e40>
    6e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ea0:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    6ea5:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    6ea9:	4c 01 e9             	add    %r13,%rcx
    6eac:	31 d2                	xor    %edx,%edx
    6eae:	66 90                	xchg   %ax,%ax
    6eb0:	41 0f 10 44 d5 00    	movups 0x0(%r13,%rdx,8),%xmm0
    6eb6:	41 0f 10 4c d5 10    	movups 0x10(%r13,%rdx,8),%xmm1
    6ebc:	41 0f 10 54 d6 f0    	movups -0x10(%r14,%rdx,8),%xmm2
    6ec2:	41 0f 10 1c d6       	movups (%r14,%rdx,8),%xmm3
    6ec7:	41 0f 11 54 d5 00    	movups %xmm2,0x0(%r13,%rdx,8)
    6ecd:	41 0f 11 5c d5 10    	movups %xmm3,0x10(%r13,%rdx,8)
    6ed3:	41 0f 11 44 d6 f0    	movups %xmm0,-0x10(%r14,%rdx,8)
    6ed9:	41 0f 11 0c d6       	movups %xmm1,(%r14,%rdx,8)
    6ede:	48 83 c2 04          	add    $0x4,%rdx
    6ee2:	48 39 d5             	cmp    %rdx,%rbp
    6ee5:	75 c9                	jne    6eb0 <spec_qsort+0x1f80>
    6ee7:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    6eec:	49 39 ef             	cmp    %rbp,%r15
    6eef:	0f 85 62 ff ff ff    	jne    6e57 <spec_qsort+0x1f27>
    6ef5:	eb 86                	jmp    6e7d <spec_qsort+0x1f4d>
    6ef7:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    6efc:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    6f01:	eb 24                	jmp    6f27 <spec_qsort+0x1ff7>
    6f03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6f0a:	84 00 00 00 00 00 
    6f10:	48 89 e9             	mov    %rbp,%rcx
    6f13:	4c 01 e1             	add    %r12,%rcx
    6f16:	4d 01 e6             	add    %r12,%r14
    6f19:	48 3b 8c 24 b0 00 00 	cmp    0xb0(%rsp),%rcx
    6f20:	00 
    6f21:	0f 83 d1 0a 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    6f27:	4c 89 f3             	mov    %r14,%rbx
    6f2a:	48 89 cd             	mov    %rcx,%rbp
    6f2d:	4c 39 e9             	cmp    %r13,%rcx
    6f30:	76 de                	jbe    6f10 <spec_qsort+0x1fe0>
    6f32:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6f39:	1f 84 00 00 00 00 00 
    6f40:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
    6f44:	48 89 df             	mov    %rbx,%rdi
    6f47:	ff 54 24 38          	call   *0x38(%rsp)
    6f4b:	85 c0                	test   %eax,%eax
    6f4d:	7e c1                	jle    6f10 <spec_qsort+0x1fe0>
    6f4f:	4a 8b 04 23          	mov    (%rbx,%r12,1),%rax
    6f53:	48 8b 0b             	mov    (%rbx),%rcx
    6f56:	4a 89 0c 23          	mov    %rcx,(%rbx,%r12,1)
    6f5a:	48 89 03             	mov    %rax,(%rbx)
    6f5d:	4c 01 fb             	add    %r15,%rbx
    6f60:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    6f64:	4c 39 e8             	cmp    %r13,%rax
    6f67:	77 d7                	ja     6f40 <spec_qsort+0x2010>
    6f69:	eb a5                	jmp    6f10 <spec_qsort+0x1fe0>
    6f6b:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    6f70:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    6f75:	eb 20                	jmp    6f97 <spec_qsort+0x2067>
    6f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6f7e:	00 00 
    6f80:	48 89 e9             	mov    %rbp,%rcx
    6f83:	4c 01 e1             	add    %r12,%rcx
    6f86:	4d 01 e6             	add    %r12,%r14
    6f89:	48 3b 8c 24 b0 00 00 	cmp    0xb0(%rsp),%rcx
    6f90:	00 
    6f91:	0f 83 61 0a 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    6f97:	4c 89 f3             	mov    %r14,%rbx
    6f9a:	48 89 cd             	mov    %rcx,%rbp
    6f9d:	4c 39 e9             	cmp    %r13,%rcx
    6fa0:	76 de                	jbe    6f80 <spec_qsort+0x2050>
    6fa2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6fa9:	1f 84 00 00 00 00 00 
    6fb0:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
    6fb4:	48 89 df             	mov    %rbx,%rdi
    6fb7:	ff 54 24 38          	call   *0x38(%rsp)
    6fbb:	85 c0                	test   %eax,%eax
    6fbd:	7e c1                	jle    6f80 <spec_qsort+0x2050>
    6fbf:	42 8b 04 23          	mov    (%rbx,%r12,1),%eax
    6fc3:	8b 0b                	mov    (%rbx),%ecx
    6fc5:	42 89 0c 23          	mov    %ecx,(%rbx,%r12,1)
    6fc9:	89 03                	mov    %eax,(%rbx)
    6fcb:	4c 01 fb             	add    %r15,%rbx
    6fce:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    6fd2:	4c 39 e8             	cmp    %r13,%rax
    6fd5:	77 d9                	ja     6fb0 <spec_qsort+0x2080>
    6fd7:	eb a7                	jmp    6f80 <spec_qsort+0x2050>
    6fd9:	80 bc 24 80 00 00 00 	cmpb   $0x0,0x80(%rsp)
    6fe0:	00 
    6fe1:	0f 84 0d 02 00 00    	je     71f4 <spec_qsort+0x22c4>
    6fe7:	48 89 d6             	mov    %rdx,%rsi
    6fea:	48 c1 ee 02          	shr    $0x2,%rsi
    6fee:	48 89 d7             	mov    %rdx,%rdi
    6ff1:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
    6ff5:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
    6ff9:	48 83 c0 04          	add    $0x4,%rax
    6ffd:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    7004:	00 
    7005:	31 c0                	xor    %eax,%eax
    7007:	48 83 fa 04          	cmp    $0x4,%rdx
    700b:	0f 93 c0             	setae  %al
    700e:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    7015:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    701a:	48 83 c7 04          	add    $0x4,%rdi
    701e:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
    7023:	48 f7 d8             	neg    %rax
    7026:	48 8d 2c 06          	lea    (%rsi,%rax,1),%rbp
    702a:	48 ff c5             	inc    %rbp
    702d:	49 89 ed             	mov    %rbp,%r13
    7030:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    7034:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    7039:	4c 29 ee             	sub    %r13,%rsi
    703c:	48 89 74 24 70       	mov    %rsi,0x70(%rsp)
    7041:	4a 8d 04 ad 00 00 00 	lea    0x0(,%r13,4),%rax
    7048:	00 
    7049:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    704e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7053:	48 83 c0 10          	add    $0x10,%rax
    7057:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    705c:	31 c0                	xor    %eax,%eax
    705e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    7063:	eb 30                	jmp    7095 <spec_qsort+0x2165>
    7065:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    706c:	00 00 00 00 
    7070:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    7075:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    707a:	48 01 c1             	add    %rax,%rcx
    707d:	48 ff 44 24 40       	incq   0x40(%rsp)
    7082:	48 01 44 24 30       	add    %rax,0x30(%rsp)
    7087:	48 3b 8c 24 b0 00 00 	cmp    0xb0(%rsp),%rcx
    708e:	00 
    708f:	0f 83 63 09 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    7095:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    709a:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    709f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    70a4:	76 ca                	jbe    7070 <spec_qsort+0x2140>
    70a6:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    70ab:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    70b1:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    70b8:	00 
    70b9:	48 01 d1             	add    %rdx,%rcx
    70bc:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    70c1:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    70c6:	48 89 14 24          	mov    %rdx,(%rsp)
    70ca:	48 01 d1             	add    %rdx,%rcx
    70cd:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    70d2:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    70d7:	45 31 f6             	xor    %r14d,%r14d
    70da:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    70df:	90                   	nop
    70e0:	4d 8d 3c 04          	lea    (%r12,%rax,1),%r15
    70e4:	4c 89 ff             	mov    %r15,%rdi
    70e7:	4c 89 e6             	mov    %r12,%rsi
    70ea:	ff 54 24 38          	call   *0x38(%rsp)
    70ee:	85 c0                	test   %eax,%eax
    70f0:	0f 8e 7a ff ff ff    	jle    7070 <spec_qsort+0x2140>
    70f6:	48 83 fd 08          	cmp    $0x8,%rbp
    70fa:	72 40                	jb     713c <spec_qsort+0x220c>
    70fc:	4c 89 f0             	mov    %r14,%rax
    70ff:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    7105:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    710a:	48 01 c1             	add    %rax,%rcx
    710d:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    7112:	48 29 ca             	sub    %rcx,%rdx
    7115:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    711a:	48 01 f2             	add    %rsi,%rdx
    711d:	49 39 d4             	cmp    %rdx,%r12
    7120:	73 6e                	jae    7190 <spec_qsort+0x2260>
    7122:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    7127:	48 29 ca             	sub    %rcx,%rdx
    712a:	48 01 f2             	add    %rsi,%rdx
    712d:	48 8b 0c 24          	mov    (%rsp),%rcx
    7131:	48 29 c1             	sub    %rax,%rcx
    7134:	48 01 f1             	add    %rsi,%rcx
    7137:	48 39 d1             	cmp    %rdx,%rcx
    713a:	73 54                	jae    7190 <spec_qsort+0x2260>
    713c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    7141:	4c 89 e0             	mov    %r12,%rax
    7144:	4c 89 f9             	mov    %r15,%rcx
    7147:	48 ff c2             	inc    %rdx
    714a:	31 f6                	xor    %esi,%esi
    714c:	0f 1f 40 00          	nopl   0x0(%rax)
    7150:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    7153:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    7157:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    715b:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    715e:	48 ff ca             	dec    %rdx
    7161:	48 83 c6 04          	add    $0x4,%rsi
    7165:	48 83 fa 01          	cmp    $0x1,%rdx
    7169:	77 e5                	ja     7150 <spec_qsort+0x2220>
    716b:	49 ff c6             	inc    %r14
    716e:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    7173:	48 01 c3             	add    %rax,%rbx
    7176:	4d 89 fc             	mov    %r15,%r12
    7179:	4c 3b 7c 24 18       	cmp    0x18(%rsp),%r15
    717e:	0f 87 5c ff ff ff    	ja     70e0 <spec_qsort+0x21b0>
    7184:	e9 e7 fe ff ff       	jmp    7070 <spec_qsort+0x2140>
    7189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7190:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7195:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    7199:	4c 01 f9             	add    %r15,%rcx
    719c:	48 89 da             	mov    %rbx,%rdx
    719f:	31 f6                	xor    %esi,%esi
    71a1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    71a8:	0f 1f 84 00 00 00 00 
    71af:	00 
    71b0:	41 0f 10 04 b4       	movups (%r12,%rsi,4),%xmm0
    71b5:	41 0f 10 4c b4 10    	movups 0x10(%r12,%rsi,4),%xmm1
    71bb:	0f 10 52 f0          	movups -0x10(%rdx),%xmm2
    71bf:	0f 10 1a             	movups (%rdx),%xmm3
    71c2:	41 0f 11 14 b4       	movups %xmm2,(%r12,%rsi,4)
    71c7:	41 0f 11 5c b4 10    	movups %xmm3,0x10(%r12,%rsi,4)
    71cd:	0f 11 42 f0          	movups %xmm0,-0x10(%rdx)
    71d1:	0f 11 0a             	movups %xmm1,(%rdx)
    71d4:	48 83 c6 08          	add    $0x8,%rsi
    71d8:	48 83 c2 20          	add    $0x20,%rdx
    71dc:	49 39 f5             	cmp    %rsi,%r13
    71df:	75 cf                	jne    71b0 <spec_qsort+0x2280>
    71e1:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
    71e6:	4c 39 ed             	cmp    %r13,%rbp
    71e9:	0f 85 58 ff ff ff    	jne    7147 <spec_qsort+0x2217>
    71ef:	e9 77 ff ff ff       	jmp    716b <spec_qsort+0x223b>
    71f4:	48 85 d2             	test   %rdx,%rdx
    71f7:	b8 01 00 00 00       	mov    $0x1,%eax
    71fc:	48 0f 4e c2          	cmovle %rdx,%rax
    7200:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    7205:	bd 01 00 00 00       	mov    $0x1,%ebp
    720a:	48 83 fa 02          	cmp    $0x2,%rdx
    720e:	48 0f 4d ea          	cmovge %rdx,%rbp
    7212:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
    7216:	48 ff c0             	inc    %rax
    7219:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    7220:	00 
    7221:	48 b8 e0 ff ff ff ff 	movabs $0x7fffffffffffffe0,%rax
    7228:	ff ff 7f 
    722b:	48 21 e8             	and    %rbp,%rax
    722e:	48 89 d6             	mov    %rdx,%rsi
    7231:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    7236:	48 29 c6             	sub    %rax,%rsi
    7239:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    723e:	48 89 e8             	mov    %rbp,%rax
    7241:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
    7246:	81 e5 f8 ff ff 7f    	and    $0x7ffffff8,%ebp
    724c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    7251:	48 29 ea             	sub    %rbp,%rdx
    7254:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
    725b:	00 
    725c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7261:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7265:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    726a:	31 d2                	xor    %edx,%edx
    726c:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    7271:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    7276:	eb 32                	jmp    72aa <spec_qsort+0x237a>
    7278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    727f:	00 
    7280:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    7285:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    728a:	48 01 c1             	add    %rax,%rcx
    728d:	48 ff 44 24 40       	incq   0x40(%rsp)
    7292:	48 01 44 24 30       	add    %rax,0x30(%rsp)
    7297:	48 01 44 24 68       	add    %rax,0x68(%rsp)
    729c:	48 3b 8c 24 b0 00 00 	cmp    0xb0(%rsp),%rcx
    72a3:	00 
    72a4:	0f 83 4e 07 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    72aa:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    72af:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    72b4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    72b9:	76 c5                	jbe    7280 <spec_qsort+0x2350>
    72bb:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    72c0:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    72c6:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    72cb:	48 01 d1             	add    %rdx,%rcx
    72ce:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    72d3:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    72da:	00 
    72db:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    72e0:	48 01 d1             	add    %rdx,%rcx
    72e3:	48 89 0c 24          	mov    %rcx,(%rsp)
    72e7:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    72ec:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
    72f1:	45 31 f6             	xor    %r14d,%r14d
    72f4:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    72f9:	eb 1e                	jmp    7319 <spec_qsort+0x23e9>
    72fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7300:	49 ff c6             	inc    %r14
    7303:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    7308:	49 01 c5             	add    %rax,%r13
    730b:	48 01 c3             	add    %rax,%rbx
    730e:	4c 3b 7c 24 18       	cmp    0x18(%rsp),%r15
    7313:	0f 86 67 ff ff ff    	jbe    7280 <spec_qsort+0x2350>
    7319:	4d 89 fc             	mov    %r15,%r12
    731c:	49 01 c7             	add    %rax,%r15
    731f:	4c 89 ff             	mov    %r15,%rdi
    7322:	4c 89 e6             	mov    %r12,%rsi
    7325:	ff 54 24 38          	call   *0x38(%rsp)
    7329:	85 c0                	test   %eax,%eax
    732b:	0f 8e 4f ff ff ff    	jle    7280 <spec_qsort+0x2350>
    7331:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7336:	48 83 ff 08          	cmp    $0x8,%rdi
    733a:	7c 40                	jl     737c <spec_qsort+0x244c>
    733c:	4c 89 f0             	mov    %r14,%rax
    733f:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    7345:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    734a:	48 29 c1             	sub    %rax,%rcx
    734d:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    7352:	48 01 f1             	add    %rsi,%rcx
    7355:	49 39 cc             	cmp    %rcx,%r12
    7358:	73 66                	jae    73c0 <spec_qsort+0x2490>
    735a:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    735f:	48 01 c1             	add    %rax,%rcx
    7362:	48 8b 14 24          	mov    (%rsp),%rdx
    7366:	48 29 ca             	sub    %rcx,%rdx
    7369:	48 01 f2             	add    %rsi,%rdx
    736c:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    7371:	48 29 c1             	sub    %rax,%rcx
    7374:	48 01 f1             	add    %rsi,%rcx
    7377:	48 39 d1             	cmp    %rdx,%rcx
    737a:	73 44                	jae    73c0 <spec_qsort+0x2490>
    737c:	48 89 fa             	mov    %rdi,%rdx
    737f:	4c 89 e1             	mov    %r12,%rcx
    7382:	4c 89 f8             	mov    %r15,%rax
    7385:	48 ff c2             	inc    %rdx
    7388:	31 f6                	xor    %esi,%esi
    738a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7390:	0f b6 3c 31          	movzbl (%rcx,%rsi,1),%edi
    7394:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
    7399:	44 88 04 31          	mov    %r8b,(%rcx,%rsi,1)
    739d:	40 88 3c 30          	mov    %dil,(%rax,%rsi,1)
    73a1:	48 ff ca             	dec    %rdx
    73a4:	48 ff c6             	inc    %rsi
    73a7:	48 83 fa 01          	cmp    $0x1,%rdx
    73ab:	7f e3                	jg     7390 <spec_qsort+0x2460>
    73ad:	e9 4e ff ff ff       	jmp    7300 <spec_qsort+0x23d0>
    73b2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    73b9:	1f 84 00 00 00 00 00 
    73c0:	48 83 ff 20          	cmp    $0x20,%rdi
    73c4:	7d 04                	jge    73ca <spec_qsort+0x249a>
    73c6:	31 d2                	xor    %edx,%edx
    73c8:	eb 5e                	jmp    7428 <spec_qsort+0x24f8>
    73ca:	4c 89 e8             	mov    %r13,%rax
    73cd:	31 c9                	xor    %ecx,%ecx
    73cf:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    73d4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    73db:	00 00 00 00 00 
    73e0:	41 0f 10 04 0c       	movups (%r12,%rcx,1),%xmm0
    73e5:	41 0f 10 4c 0c 10    	movups 0x10(%r12,%rcx,1),%xmm1
    73eb:	0f 10 50 f0          	movups -0x10(%rax),%xmm2
    73ef:	0f 10 18             	movups (%rax),%xmm3
    73f2:	41 0f 11 14 0c       	movups %xmm2,(%r12,%rcx,1)
    73f7:	41 0f 11 5c 0c 10    	movups %xmm3,0x10(%r12,%rcx,1)
    73fd:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    7401:	0f 11 08             	movups %xmm1,(%rax)
    7404:	48 83 c1 20          	add    $0x20,%rcx
    7408:	48 83 c0 20          	add    $0x20,%rax
    740c:	48 39 ca             	cmp    %rcx,%rdx
    740f:	75 cf                	jne    73e0 <spec_qsort+0x24b0>
    7411:	48 39 54 24 58       	cmp    %rdx,0x58(%rsp)
    7416:	0f 84 e4 fe ff ff    	je     7300 <spec_qsort+0x23d0>
    741c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7421:	f6 44 24 58 18       	testb  $0x18,0x58(%rsp)
    7426:	74 4b                	je     7473 <spec_qsort+0x2543>
    7428:	49 8d 0c 2c          	lea    (%r12,%rbp,1),%rcx
    742c:	49 8d 04 2f          	lea    (%r15,%rbp,1),%rax
    7430:	48 8d 34 13          	lea    (%rbx,%rdx,1),%rsi
    7434:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    743b:	00 00 00 00 00 
    7440:	49 8b 3c 14          	mov    (%r12,%rdx,1),%rdi
    7444:	4c 8b 06             	mov    (%rsi),%r8
    7447:	4d 89 04 14          	mov    %r8,(%r12,%rdx,1)
    744b:	48 89 3e             	mov    %rdi,(%rsi)
    744e:	48 83 c2 08          	add    $0x8,%rdx
    7452:	48 83 c6 08          	add    $0x8,%rsi
    7456:	48 39 d5             	cmp    %rdx,%rbp
    7459:	75 e5                	jne    7440 <spec_qsort+0x2510>
    745b:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    7462:	00 
    7463:	48 39 6c 24 58       	cmp    %rbp,0x58(%rsp)
    7468:	0f 84 92 fe ff ff    	je     7300 <spec_qsort+0x23d0>
    746e:	e9 12 ff ff ff       	jmp    7385 <spec_qsort+0x2455>
    7473:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7478:	49 8d 04 0f          	lea    (%r15,%rcx,1),%rax
    747c:	49 01 cc             	add    %rcx,%r12
    747f:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    7484:	4c 89 e1             	mov    %r12,%rcx
    7487:	e9 f9 fe ff ff       	jmp    7385 <spec_qsort+0x2455>
    748c:	4d 89 de             	mov    %r11,%r14
    748f:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
    7496:	00 
    7497:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    749c:	eb 13                	jmp    74b1 <spec_qsort+0x2581>
    749e:	66 90                	xchg   %ax,%ax
    74a0:	4d 01 e5             	add    %r12,%r13
    74a3:	4d 01 e6             	add    %r12,%r14
    74a6:	4c 3b 6c 24 18       	cmp    0x18(%rsp),%r13
    74ab:	0f 83 47 05 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    74b1:	4c 89 f3             	mov    %r14,%rbx
    74b4:	4d 39 dd             	cmp    %r11,%r13
    74b7:	76 e7                	jbe    74a0 <spec_qsort+0x2570>
    74b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    74c0:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
    74c4:	48 89 df             	mov    %rbx,%rdi
    74c7:	ff 54 24 38          	call   *0x38(%rsp)
    74cb:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    74d0:	85 c0                	test   %eax,%eax
    74d2:	7e cc                	jle    74a0 <spec_qsort+0x2570>
    74d4:	4a 8b 04 23          	mov    (%rbx,%r12,1),%rax
    74d8:	48 8b 0b             	mov    (%rbx),%rcx
    74db:	4a 89 0c 23          	mov    %rcx,(%rbx,%r12,1)
    74df:	48 89 03             	mov    %rax,(%rbx)
    74e2:	4c 01 fb             	add    %r15,%rbx
    74e5:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    74e9:	4c 39 d8             	cmp    %r11,%rax
    74ec:	77 d2                	ja     74c0 <spec_qsort+0x2590>
    74ee:	eb b0                	jmp    74a0 <spec_qsort+0x2570>
    74f0:	4d 89 de             	mov    %r11,%r14
    74f3:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
    74fa:	00 
    74fb:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    7500:	eb 1f                	jmp    7521 <spec_qsort+0x25f1>
    7502:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7509:	1f 84 00 00 00 00 00 
    7510:	4d 01 e5             	add    %r12,%r13
    7513:	4d 01 e6             	add    %r12,%r14
    7516:	4c 3b 6c 24 18       	cmp    0x18(%rsp),%r13
    751b:	0f 83 d7 04 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    7521:	4c 89 f3             	mov    %r14,%rbx
    7524:	4d 39 dd             	cmp    %r11,%r13
    7527:	76 e7                	jbe    7510 <spec_qsort+0x25e0>
    7529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7530:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
    7534:	48 89 df             	mov    %rbx,%rdi
    7537:	ff 54 24 38          	call   *0x38(%rsp)
    753b:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    7540:	85 c0                	test   %eax,%eax
    7542:	7e cc                	jle    7510 <spec_qsort+0x25e0>
    7544:	42 8b 04 23          	mov    (%rbx,%r12,1),%eax
    7548:	8b 0b                	mov    (%rbx),%ecx
    754a:	42 89 0c 23          	mov    %ecx,(%rbx,%r12,1)
    754e:	89 03                	mov    %eax,(%rbx)
    7550:	4c 01 fb             	add    %r15,%rbx
    7553:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    7557:	4c 39 d8             	cmp    %r11,%rax
    755a:	77 d4                	ja     7530 <spec_qsort+0x2600>
    755c:	eb b2                	jmp    7510 <spec_qsort+0x25e0>
    755e:	f6 84 24 80 00 00 00 	testb  $0x1,0x80(%rsp)
    7565:	01 
    7566:	0f 84 0a 02 00 00    	je     7776 <spec_qsort+0x2846>
    756c:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    7573:	00 
    7574:	4c 01 e0             	add    %r12,%rax
    7577:	48 83 c0 04          	add    $0x4,%rax
    757b:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    7580:	31 c0                	xor    %eax,%eax
    7582:	48 83 7c 24 60 04    	cmpq   $0x4,0x60(%rsp)
    7588:	0f 93 c0             	setae  %al
    758b:	8d 0c 85 00 00 00 00 	lea    0x0(,%rax,4),%ecx
    7592:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    7597:	48 f7 d8             	neg    %rax
    759a:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    75a1:	00 
    75a2:	4c 8d 3c 01          	lea    (%rcx,%rax,1),%r15
    75a6:	49 ff c7             	inc    %r15
    75a9:	4c 89 fd             	mov    %r15,%rbp
    75ac:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    75b0:	48 29 e9             	sub    %rbp,%rcx
    75b3:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    75b8:	48 8d 04 ad 00 00 00 	lea    0x0(,%rbp,4),%rax
    75bf:	00 
    75c0:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    75c5:	49 8d 43 10          	lea    0x10(%r11),%rax
    75c9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    75ce:	31 c0                	xor    %eax,%eax
    75d0:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    75d5:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    75dc:	00 
    75dd:	eb 26                	jmp    7605 <spec_qsort+0x26d5>
    75df:	90                   	nop
    75e0:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    75e5:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    75ec:	00 
    75ed:	48 01 c1             	add    %rax,%rcx
    75f0:	48 ff 44 24 30       	incq   0x30(%rsp)
    75f5:	48 01 44 24 10       	add    %rax,0x10(%rsp)
    75fa:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    75ff:	0f 83 f3 03 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    7605:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
    760c:	00 
    760d:	4c 39 d9             	cmp    %r11,%rcx
    7610:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    7615:	76 c9                	jbe    75e0 <spec_qsort+0x26b0>
    7617:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    761c:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    7622:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    7627:	48 01 d1             	add    %rdx,%rcx
    762a:	48 89 0c 24          	mov    %rcx,(%rsp)
    762e:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
    7635:	00 
    7636:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    763b:	48 01 d1             	add    %rdx,%rcx
    763e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    7643:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    7648:	31 db                	xor    %ebx,%ebx
    764a:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
    7651:	00 
    7652:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7659:	1f 84 00 00 00 00 00 
    7660:	4e 8d 24 28          	lea    (%rax,%r13,1),%r12
    7664:	4c 89 e7             	mov    %r12,%rdi
    7667:	4c 89 ee             	mov    %r13,%rsi
    766a:	ff 54 24 38          	call   *0x38(%rsp)
    766e:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    7673:	85 c0                	test   %eax,%eax
    7675:	0f 8e 65 ff ff ff    	jle    75e0 <spec_qsort+0x26b0>
    767b:	49 83 ff 08          	cmp    $0x8,%r15
    767f:	72 3b                	jb     76bc <spec_qsort+0x278c>
    7681:	48 89 d8             	mov    %rbx,%rax
    7684:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    768a:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    768f:	48 01 c1             	add    %rax,%rcx
    7692:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    7697:	48 29 ca             	sub    %rcx,%rdx
    769a:	4c 01 da             	add    %r11,%rdx
    769d:	49 39 d5             	cmp    %rdx,%r13
    76a0:	73 6e                	jae    7710 <spec_qsort+0x27e0>
    76a2:	48 8b 14 24          	mov    (%rsp),%rdx
    76a6:	48 29 ca             	sub    %rcx,%rdx
    76a9:	4c 01 da             	add    %r11,%rdx
    76ac:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    76b1:	48 29 c1             	sub    %rax,%rcx
    76b4:	4c 01 d9             	add    %r11,%rcx
    76b7:	48 39 d1             	cmp    %rdx,%rcx
    76ba:	73 54                	jae    7710 <spec_qsort+0x27e0>
    76bc:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
    76c3:	00 
    76c4:	4c 89 e8             	mov    %r13,%rax
    76c7:	4c 89 e1             	mov    %r12,%rcx
    76ca:	48 ff c2             	inc    %rdx
    76cd:	31 f6                	xor    %esi,%esi
    76cf:	90                   	nop
    76d0:	8b 3c 30             	mov    (%rax,%rsi,1),%edi
    76d3:	44 8b 04 31          	mov    (%rcx,%rsi,1),%r8d
    76d7:	44 89 04 30          	mov    %r8d,(%rax,%rsi,1)
    76db:	89 3c 31             	mov    %edi,(%rcx,%rsi,1)
    76de:	48 ff ca             	dec    %rdx
    76e1:	48 83 c6 04          	add    $0x4,%rsi
    76e5:	48 83 fa 01          	cmp    $0x1,%rdx
    76e9:	77 e5                	ja     76d0 <spec_qsort+0x27a0>
    76eb:	48 ff c3             	inc    %rbx
    76ee:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    76f3:	49 01 c6             	add    %rax,%r14
    76f6:	4d 89 e5             	mov    %r12,%r13
    76f9:	4d 39 dc             	cmp    %r11,%r12
    76fc:	0f 87 5e ff ff ff    	ja     7660 <spec_qsort+0x2730>
    7702:	e9 d9 fe ff ff       	jmp    75e0 <spec_qsort+0x26b0>
    7707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    770e:	00 00 
    7710:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    7715:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    7719:	4c 01 e1             	add    %r12,%rcx
    771c:	4c 89 f2             	mov    %r14,%rdx
    771f:	31 f6                	xor    %esi,%esi
    7721:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7728:	0f 1f 84 00 00 00 00 
    772f:	00 
    7730:	41 0f 10 44 b5 00    	movups 0x0(%r13,%rsi,4),%xmm0
    7736:	41 0f 10 4c b5 10    	movups 0x10(%r13,%rsi,4),%xmm1
    773c:	0f 10 52 f0          	movups -0x10(%rdx),%xmm2
    7740:	0f 10 1a             	movups (%rdx),%xmm3
    7743:	41 0f 11 54 b5 00    	movups %xmm2,0x0(%r13,%rsi,4)
    7749:	41 0f 11 5c b5 10    	movups %xmm3,0x10(%r13,%rsi,4)
    774f:	0f 11 42 f0          	movups %xmm0,-0x10(%rdx)
    7753:	0f 11 0a             	movups %xmm1,(%rdx)
    7756:	48 83 c6 08          	add    $0x8,%rsi
    775a:	48 83 c2 20          	add    $0x20,%rdx
    775e:	48 39 f5             	cmp    %rsi,%rbp
    7761:	75 cd                	jne    7730 <spec_qsort+0x2800>
    7763:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    7768:	49 39 ef             	cmp    %rbp,%r15
    776b:	0f 85 59 ff ff ff    	jne    76ca <spec_qsort+0x279a>
    7771:	e9 75 ff ff ff       	jmp    76eb <spec_qsort+0x27bb>
    7776:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    777b:	48 85 c0             	test   %rax,%rax
    777e:	ba 01 00 00 00       	mov    $0x1,%edx
    7783:	48 0f 4e d0          	cmovle %rax,%rdx
    7787:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    778c:	ba 01 00 00 00       	mov    $0x1,%edx
    7791:	48 83 f8 02          	cmp    $0x2,%rax
    7795:	48 0f 4d d0          	cmovge %rax,%rdx
    7799:	4a 8d 34 20          	lea    (%rax,%r12,1),%rsi
    779d:	48 ff c6             	inc    %rsi
    77a0:	48 89 b4 24 80 00 00 	mov    %rsi,0x80(%rsp)
    77a7:	00 
    77a8:	89 d5                	mov    %edx,%ebp
    77aa:	21 cd                	and    %ecx,%ebp
    77ac:	48 89 c6             	mov    %rax,%rsi
    77af:	48 29 ee             	sub    %rbp,%rsi
    77b2:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
    77b9:	00 
    77ba:	83 c1 18             	add    $0x18,%ecx
    77bd:	48 89 14 24          	mov    %rdx,(%rsp)
    77c1:	21 d1                	and    %edx,%ecx
    77c3:	48 29 c8             	sub    %rcx,%rax
    77c6:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    77cb:	49 8d 43 10          	lea    0x10(%r11),%rax
    77cf:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    77d4:	31 c0                	xor    %eax,%eax
    77d6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    77db:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
    77e0:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    77e7:	00 
    77e8:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    77ed:	eb 2b                	jmp    781a <spec_qsort+0x28ea>
    77ef:	90                   	nop
    77f0:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    77f5:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    77fc:	00 
    77fd:	48 01 c2             	add    %rax,%rdx
    7800:	48 ff 44 24 10       	incq   0x10(%rsp)
    7805:	48 01 44 24 70       	add    %rax,0x70(%rsp)
    780a:	48 01 44 24 30       	add    %rax,0x30(%rsp)
    780f:	48 3b 54 24 18       	cmp    0x18(%rsp),%rdx
    7814:	0f 83 de 01 00 00    	jae    79f8 <spec_qsort+0x2ac8>
    781a:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
    7821:	00 
    7822:	4c 39 da             	cmp    %r11,%rdx
    7825:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    782a:	76 c4                	jbe    77f0 <spec_qsort+0x28c0>
    782c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7831:	48 0f af 54 24 50    	imul   0x50(%rsp),%rdx
    7837:	48 8b 0c 24          	mov    (%rsp),%rcx
    783b:	48 01 d1             	add    %rdx,%rcx
    783e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    7843:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    784a:	00 
    784b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
    7850:	48 01 d1             	add    %rdx,%rcx
    7853:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    7858:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    785d:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    7862:	45 31 ff             	xor    %r15d,%r15d
    7865:	4c 8b a4 24 88 00 00 	mov    0x88(%rsp),%r12
    786c:	00 
    786d:	eb 18                	jmp    7887 <spec_qsort+0x2957>
    786f:	90                   	nop
    7870:	49 ff c7             	inc    %r15
    7873:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    7878:	48 01 c3             	add    %rax,%rbx
    787b:	49 01 c6             	add    %rax,%r14
    787e:	4d 39 dc             	cmp    %r11,%r12
    7881:	0f 86 69 ff ff ff    	jbe    77f0 <spec_qsort+0x28c0>
    7887:	4d 89 e5             	mov    %r12,%r13
    788a:	49 01 c4             	add    %rax,%r12
    788d:	4c 89 e7             	mov    %r12,%rdi
    7890:	4c 89 ee             	mov    %r13,%rsi
    7893:	ff 54 24 38          	call   *0x38(%rsp)
    7897:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    789c:	85 c0                	test   %eax,%eax
    789e:	0f 8e 4c ff ff ff    	jle    77f0 <spec_qsort+0x28c0>
    78a4:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    78a9:	48 83 fa 08          	cmp    $0x8,%rdx
    78ad:	7c 41                	jl     78f0 <spec_qsort+0x29c0>
    78af:	4c 89 f8             	mov    %r15,%rax
    78b2:	48 0f af 44 24 50    	imul   0x50(%rsp),%rax
    78b8:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    78bd:	48 29 c1             	sub    %rax,%rcx
    78c0:	4c 01 d9             	add    %r11,%rcx
    78c3:	49 39 cd             	cmp    %rcx,%r13
    78c6:	73 68                	jae    7930 <spec_qsort+0x2a00>
    78c8:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    78cd:	48 01 c1             	add    %rax,%rcx
    78d0:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    78d5:	48 29 ca             	sub    %rcx,%rdx
    78d8:	4c 01 da             	add    %r11,%rdx
    78db:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    78e0:	48 29 c1             	sub    %rax,%rcx
    78e3:	4c 01 d9             	add    %r11,%rcx
    78e6:	48 39 d1             	cmp    %rdx,%rcx
    78e9:	73 45                	jae    7930 <spec_qsort+0x2a00>
    78eb:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
    78f0:	4c 89 e9             	mov    %r13,%rcx
    78f3:	4c 89 e0             	mov    %r12,%rax
    78f6:	48 ff c2             	inc    %rdx
    78f9:	31 f6                	xor    %esi,%esi
    78fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7900:	0f b6 3c 31          	movzbl (%rcx,%rsi,1),%edi
    7904:	44 0f b6 04 30       	movzbl (%rax,%rsi,1),%r8d
    7909:	44 88 04 31          	mov    %r8b,(%rcx,%rsi,1)
    790d:	40 88 3c 30          	mov    %dil,(%rax,%rsi,1)
    7911:	48 ff ca             	dec    %rdx
    7914:	48 ff c6             	inc    %rsi
    7917:	48 83 fa 01          	cmp    $0x1,%rdx
    791b:	7f e3                	jg     7900 <spec_qsort+0x29d0>
    791d:	e9 4e ff ff ff       	jmp    7870 <spec_qsort+0x2940>
    7922:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7929:	1f 84 00 00 00 00 00 
    7930:	48 83 7c 24 60 20    	cmpq   $0x20,0x60(%rsp)
    7936:	7d 04                	jge    793c <spec_qsort+0x2a0c>
    7938:	31 d2                	xor    %edx,%edx
    793a:	eb 5a                	jmp    7996 <spec_qsort+0x2a66>
    793c:	48 89 d8             	mov    %rbx,%rax
    793f:	31 c9                	xor    %ecx,%ecx
    7941:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7948:	0f 1f 84 00 00 00 00 
    794f:	00 
    7950:	41 0f 10 44 0d 00    	movups 0x0(%r13,%rcx,1),%xmm0
    7956:	41 0f 10 4c 0d 10    	movups 0x10(%r13,%rcx,1),%xmm1
    795c:	0f 10 50 f0          	movups -0x10(%rax),%xmm2
    7960:	0f 10 18             	movups (%rax),%xmm3
    7963:	41 0f 11 54 0d 00    	movups %xmm2,0x0(%r13,%rcx,1)
    7969:	41 0f 11 5c 0d 10    	movups %xmm3,0x10(%r13,%rcx,1)
    796f:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    7973:	0f 11 08             	movups %xmm1,(%rax)
    7976:	48 83 c1 20          	add    $0x20,%rcx
    797a:	48 83 c0 20          	add    $0x20,%rax
    797e:	48 39 cd             	cmp    %rcx,%rbp
    7981:	75 cd                	jne    7950 <spec_qsort+0x2a20>
    7983:	48 39 2c 24          	cmp    %rbp,(%rsp)
    7987:	0f 84 e3 fe ff ff    	je     7870 <spec_qsort+0x2940>
    798d:	48 89 ea             	mov    %rbp,%rdx
    7990:	f6 04 24 18          	testb  $0x18,(%rsp)
    7994:	74 4b                	je     79e1 <spec_qsort+0x2ab1>
    7996:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    799b:	4b 8d 0c 29          	lea    (%r9,%r13,1),%rcx
    799f:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
    79a3:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    79a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    79ae:	00 00 
    79b0:	49 8b 7c 15 00       	mov    0x0(%r13,%rdx,1),%rdi
    79b5:	4c 8b 06             	mov    (%rsi),%r8
    79b8:	4d 89 44 15 00       	mov    %r8,0x0(%r13,%rdx,1)
    79bd:	48 89 3e             	mov    %rdi,(%rsi)
    79c0:	48 83 c2 08          	add    $0x8,%rdx
    79c4:	48 83 c6 08          	add    $0x8,%rsi
    79c8:	49 39 d1             	cmp    %rdx,%r9
    79cb:	75 e3                	jne    79b0 <spec_qsort+0x2a80>
    79cd:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    79d2:	4c 39 0c 24          	cmp    %r9,(%rsp)
    79d6:	0f 84 94 fe ff ff    	je     7870 <spec_qsort+0x2940>
    79dc:	e9 15 ff ff ff       	jmp    78f6 <spec_qsort+0x29c6>
    79e1:	49 8d 04 2c          	lea    (%r12,%rbp,1),%rax
    79e5:	49 01 ed             	add    %rbp,%r13
    79e8:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    79ef:	00 
    79f0:	4c 89 e9             	mov    %r13,%rcx
    79f3:	e9 fe fe ff ff       	jmp    78f6 <spec_qsort+0x29c6>
    79f8:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    79ff:	5b                   	pop    %rbx
    7a00:	41 5c                	pop    %r12
    7a02:	41 5d                	pop    %r13
    7a04:	41 5e                	pop    %r14
    7a06:	41 5f                	pop    %r15
    7a08:	5d                   	pop    %rbp
    7a09:	c3                   	ret    

Disassembly of section .fini:

0000000000007a0c <_fini>:
    7a0c:	f3 0f 1e fa          	endbr64 
    7a10:	48 83 ec 08          	sub    $0x8,%rsp
    7a14:	48 83 c4 08          	add    $0x8,%rsp
    7a18:	c3                   	ret    
